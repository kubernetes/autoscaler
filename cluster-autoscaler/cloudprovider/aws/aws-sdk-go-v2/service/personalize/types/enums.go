// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type BatchInferenceJobMode string

// Enum values for BatchInferenceJobMode
const (
	BatchInferenceJobModeBatchInference  BatchInferenceJobMode = "BATCH_INFERENCE"
	BatchInferenceJobModeThemeGeneration BatchInferenceJobMode = "THEME_GENERATION"
)

// Values returns all known values for BatchInferenceJobMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchInferenceJobMode) Values() []BatchInferenceJobMode {
	return []BatchInferenceJobMode{
		"BATCH_INFERENCE",
		"THEME_GENERATION",
	}
}

type Domain string

// Enum values for Domain
const (
	DomainEcommerce     Domain = "ECOMMERCE"
	DomainVideoOnDemand Domain = "VIDEO_ON_DEMAND"
)

// Values returns all known values for Domain. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Domain) Values() []Domain {
	return []Domain{
		"ECOMMERCE",
		"VIDEO_ON_DEMAND",
	}
}

type ImportMode string

// Enum values for ImportMode
const (
	ImportModeFull        ImportMode = "FULL"
	ImportModeIncremental ImportMode = "INCREMENTAL"
)

// Values returns all known values for ImportMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportMode) Values() []ImportMode {
	return []ImportMode{
		"FULL",
		"INCREMENTAL",
	}
}

type IngestionMode string

// Enum values for IngestionMode
const (
	IngestionModeBulk IngestionMode = "BULK"
	IngestionModePut  IngestionMode = "PUT"
	IngestionModeAll  IngestionMode = "ALL"
)

// Values returns all known values for IngestionMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngestionMode) Values() []IngestionMode {
	return []IngestionMode{
		"BULK",
		"PUT",
		"ALL",
	}
}

type ObjectiveSensitivity string

// Enum values for ObjectiveSensitivity
const (
	ObjectiveSensitivityLow    ObjectiveSensitivity = "LOW"
	ObjectiveSensitivityMedium ObjectiveSensitivity = "MEDIUM"
	ObjectiveSensitivityHigh   ObjectiveSensitivity = "HIGH"
	ObjectiveSensitivityOff    ObjectiveSensitivity = "OFF"
)

// Values returns all known values for ObjectiveSensitivity. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ObjectiveSensitivity) Values() []ObjectiveSensitivity {
	return []ObjectiveSensitivity{
		"LOW",
		"MEDIUM",
		"HIGH",
		"OFF",
	}
}

type RecipeProvider string

// Enum values for RecipeProvider
const (
	RecipeProviderService RecipeProvider = "SERVICE"
)

// Values returns all known values for RecipeProvider. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecipeProvider) Values() []RecipeProvider {
	return []RecipeProvider{
		"SERVICE",
	}
}

type TrainingMode string

// Enum values for TrainingMode
const (
	TrainingModeFull      TrainingMode = "FULL"
	TrainingModeUpdate    TrainingMode = "UPDATE"
	TrainingModeAutotrain TrainingMode = "AUTOTRAIN"
)

// Values returns all known values for TrainingMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingMode) Values() []TrainingMode {
	return []TrainingMode{
		"FULL",
		"UPDATE",
		"AUTOTRAIN",
	}
}

type TrainingType string

// Enum values for TrainingType
const (
	TrainingTypeAutomatic TrainingType = "AUTOMATIC"
	TrainingTypeManual    TrainingType = "MANUAL"
)

// Values returns all known values for TrainingType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingType) Values() []TrainingType {
	return []TrainingType{
		"AUTOMATIC",
		"MANUAL",
	}
}
