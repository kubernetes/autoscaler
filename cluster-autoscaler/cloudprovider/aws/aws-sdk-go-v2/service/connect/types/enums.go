// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActionType string

// Enum values for ActionType
const (
	ActionTypeCreateTask               ActionType = "CREATE_TASK"
	ActionTypeAssignContactCategory    ActionType = "ASSIGN_CONTACT_CATEGORY"
	ActionTypeGenerateEventbridgeEvent ActionType = "GENERATE_EVENTBRIDGE_EVENT"
	ActionTypeSendNotification         ActionType = "SEND_NOTIFICATION"
	ActionTypeCreateCase               ActionType = "CREATE_CASE"
	ActionTypeUpdateCase               ActionType = "UPDATE_CASE"
	ActionTypeAssignSla                ActionType = "ASSIGN_SLA"
	ActionTypeEndAssociatedTasks       ActionType = "END_ASSOCIATED_TASKS"
	ActionTypeSubmitAutoEvaluation     ActionType = "SUBMIT_AUTO_EVALUATION"
)

// Values returns all known values for ActionType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActionType) Values() []ActionType {
	return []ActionType{
		"CREATE_TASK",
		"ASSIGN_CONTACT_CATEGORY",
		"GENERATE_EVENTBRIDGE_EVENT",
		"SEND_NOTIFICATION",
		"CREATE_CASE",
		"UPDATE_CASE",
		"ASSIGN_SLA",
		"END_ASSOCIATED_TASKS",
		"SUBMIT_AUTO_EVALUATION",
	}
}

type AgentAvailabilityTimer string

// Enum values for AgentAvailabilityTimer
const (
	AgentAvailabilityTimerTimeSinceLastActivity AgentAvailabilityTimer = "TIME_SINCE_LAST_ACTIVITY"
	AgentAvailabilityTimerTimeSinceLastInbound  AgentAvailabilityTimer = "TIME_SINCE_LAST_INBOUND"
)

// Values returns all known values for AgentAvailabilityTimer. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AgentAvailabilityTimer) Values() []AgentAvailabilityTimer {
	return []AgentAvailabilityTimer{
		"TIME_SINCE_LAST_ACTIVITY",
		"TIME_SINCE_LAST_INBOUND",
	}
}

type AgentStatusState string

// Enum values for AgentStatusState
const (
	AgentStatusStateEnabled  AgentStatusState = "ENABLED"
	AgentStatusStateDisabled AgentStatusState = "DISABLED"
)

// Values returns all known values for AgentStatusState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AgentStatusState) Values() []AgentStatusState {
	return []AgentStatusState{
		"ENABLED",
		"DISABLED",
	}
}

type AgentStatusType string

// Enum values for AgentStatusType
const (
	AgentStatusTypeRoutable AgentStatusType = "ROUTABLE"
	AgentStatusTypeCustom   AgentStatusType = "CUSTOM"
	AgentStatusTypeOffline  AgentStatusType = "OFFLINE"
)

// Values returns all known values for AgentStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AgentStatusType) Values() []AgentStatusType {
	return []AgentStatusType{
		"ROUTABLE",
		"CUSTOM",
		"OFFLINE",
	}
}

type AnsweringMachineDetectionStatus string

// Enum values for AnsweringMachineDetectionStatus
const (
	AnsweringMachineDetectionStatusAnswered             AnsweringMachineDetectionStatus = "ANSWERED"
	AnsweringMachineDetectionStatusUndetected           AnsweringMachineDetectionStatus = "UNDETECTED"
	AnsweringMachineDetectionStatusError                AnsweringMachineDetectionStatus = "ERROR"
	AnsweringMachineDetectionStatusHumanAnswered        AnsweringMachineDetectionStatus = "HUMAN_ANSWERED"
	AnsweringMachineDetectionStatusSitToneDetected      AnsweringMachineDetectionStatus = "SIT_TONE_DETECTED"
	AnsweringMachineDetectionStatusSitToneBusy          AnsweringMachineDetectionStatus = "SIT_TONE_BUSY"
	AnsweringMachineDetectionStatusSitToneInvalidNumber AnsweringMachineDetectionStatus = "SIT_TONE_INVALID_NUMBER"
	AnsweringMachineDetectionStatusFaxMachineDetected   AnsweringMachineDetectionStatus = "FAX_MACHINE_DETECTED"
	AnsweringMachineDetectionStatusVoicemailBeep        AnsweringMachineDetectionStatus = "VOICEMAIL_BEEP"
	AnsweringMachineDetectionStatusVoicemailNoBeep      AnsweringMachineDetectionStatus = "VOICEMAIL_NO_BEEP"
	AnsweringMachineDetectionStatusAmdUnresolved        AnsweringMachineDetectionStatus = "AMD_UNRESOLVED"
	AnsweringMachineDetectionStatusAmdUnanswered        AnsweringMachineDetectionStatus = "AMD_UNANSWERED"
	AnsweringMachineDetectionStatusAmdError             AnsweringMachineDetectionStatus = "AMD_ERROR"
	AnsweringMachineDetectionStatusAmdNotApplicable     AnsweringMachineDetectionStatus = "AMD_NOT_APPLICABLE"
)

// Values returns all known values for AnsweringMachineDetectionStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnsweringMachineDetectionStatus) Values() []AnsweringMachineDetectionStatus {
	return []AnsweringMachineDetectionStatus{
		"ANSWERED",
		"UNDETECTED",
		"ERROR",
		"HUMAN_ANSWERED",
		"SIT_TONE_DETECTED",
		"SIT_TONE_BUSY",
		"SIT_TONE_INVALID_NUMBER",
		"FAX_MACHINE_DETECTED",
		"VOICEMAIL_BEEP",
		"VOICEMAIL_NO_BEEP",
		"AMD_UNRESOLVED",
		"AMD_UNANSWERED",
		"AMD_ERROR",
		"AMD_NOT_APPLICABLE",
	}
}

type ArtifactStatus string

// Enum values for ArtifactStatus
const (
	ArtifactStatusApproved   ArtifactStatus = "APPROVED"
	ArtifactStatusRejected   ArtifactStatus = "REJECTED"
	ArtifactStatusInProgress ArtifactStatus = "IN_PROGRESS"
)

// Values returns all known values for ArtifactStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArtifactStatus) Values() []ArtifactStatus {
	return []ArtifactStatus{
		"APPROVED",
		"REJECTED",
		"IN_PROGRESS",
	}
}

type AttachedFileInvalidRequestExceptionReason string

// Enum values for AttachedFileInvalidRequestExceptionReason
const (
	AttachedFileInvalidRequestExceptionReasonInvalidFileSize AttachedFileInvalidRequestExceptionReason = "INVALID_FILE_SIZE"
	AttachedFileInvalidRequestExceptionReasonInvalidFileType AttachedFileInvalidRequestExceptionReason = "INVALID_FILE_TYPE"
	AttachedFileInvalidRequestExceptionReasonInvalidFileName AttachedFileInvalidRequestExceptionReason = "INVALID_FILE_NAME"
)

// Values returns all known values for AttachedFileInvalidRequestExceptionReason.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AttachedFileInvalidRequestExceptionReason) Values() []AttachedFileInvalidRequestExceptionReason {
	return []AttachedFileInvalidRequestExceptionReason{
		"INVALID_FILE_SIZE",
		"INVALID_FILE_TYPE",
		"INVALID_FILE_NAME",
	}
}

type AttachedFileServiceQuotaExceededExceptionReason string

// Enum values for AttachedFileServiceQuotaExceededExceptionReason
const (
	AttachedFileServiceQuotaExceededExceptionReasonTotalFileSizeExceeded  AttachedFileServiceQuotaExceededExceptionReason = "TOTAL_FILE_SIZE_EXCEEDED"
	AttachedFileServiceQuotaExceededExceptionReasonTotalFileCountExceeded AttachedFileServiceQuotaExceededExceptionReason = "TOTAL_FILE_COUNT_EXCEEDED"
)

// Values returns all known values for
// AttachedFileServiceQuotaExceededExceptionReason. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AttachedFileServiceQuotaExceededExceptionReason) Values() []AttachedFileServiceQuotaExceededExceptionReason {
	return []AttachedFileServiceQuotaExceededExceptionReason{
		"TOTAL_FILE_SIZE_EXCEEDED",
		"TOTAL_FILE_COUNT_EXCEEDED",
	}
}

type BehaviorType string

// Enum values for BehaviorType
const (
	BehaviorTypeRouteCurrentChannelOnly BehaviorType = "ROUTE_CURRENT_CHANNEL_ONLY"
	BehaviorTypeRouteAnyChannel         BehaviorType = "ROUTE_ANY_CHANNEL"
)

// Values returns all known values for BehaviorType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BehaviorType) Values() []BehaviorType {
	return []BehaviorType{
		"ROUTE_CURRENT_CHANNEL_ONLY",
		"ROUTE_ANY_CHANNEL",
	}
}

type Channel string

// Enum values for Channel
const (
	ChannelVoice Channel = "VOICE"
	ChannelChat  Channel = "CHAT"
	ChannelTask  Channel = "TASK"
	ChannelEmail Channel = "EMAIL"
)

// Values returns all known values for Channel. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Channel) Values() []Channel {
	return []Channel{
		"VOICE",
		"CHAT",
		"TASK",
		"EMAIL",
	}
}

type ChatEventType string

// Enum values for ChatEventType
const (
	ChatEventTypeDisconnect ChatEventType = "DISCONNECT"
	ChatEventTypeMessage    ChatEventType = "MESSAGE"
	ChatEventTypeEvent      ChatEventType = "EVENT"
)

// Values returns all known values for ChatEventType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChatEventType) Values() []ChatEventType {
	return []ChatEventType{
		"DISCONNECT",
		"MESSAGE",
		"EVENT",
	}
}

type Comparison string

// Enum values for Comparison
const (
	ComparisonLt Comparison = "LT"
)

// Values returns all known values for Comparison. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Comparison) Values() []Comparison {
	return []Comparison{
		"LT",
	}
}

type ContactFlowModuleState string

// Enum values for ContactFlowModuleState
const (
	ContactFlowModuleStateActive   ContactFlowModuleState = "ACTIVE"
	ContactFlowModuleStateArchived ContactFlowModuleState = "ARCHIVED"
)

// Values returns all known values for ContactFlowModuleState. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContactFlowModuleState) Values() []ContactFlowModuleState {
	return []ContactFlowModuleState{
		"ACTIVE",
		"ARCHIVED",
	}
}

type ContactFlowModuleStatus string

// Enum values for ContactFlowModuleStatus
const (
	ContactFlowModuleStatusPublished ContactFlowModuleStatus = "PUBLISHED"
	ContactFlowModuleStatusSaved     ContactFlowModuleStatus = "SAVED"
)

// Values returns all known values for ContactFlowModuleStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContactFlowModuleStatus) Values() []ContactFlowModuleStatus {
	return []ContactFlowModuleStatus{
		"PUBLISHED",
		"SAVED",
	}
}

type ContactFlowState string

// Enum values for ContactFlowState
const (
	ContactFlowStateActive   ContactFlowState = "ACTIVE"
	ContactFlowStateArchived ContactFlowState = "ARCHIVED"
)

// Values returns all known values for ContactFlowState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContactFlowState) Values() []ContactFlowState {
	return []ContactFlowState{
		"ACTIVE",
		"ARCHIVED",
	}
}

type ContactFlowStatus string

// Enum values for ContactFlowStatus
const (
	ContactFlowStatusPublished ContactFlowStatus = "PUBLISHED"
	ContactFlowStatusSaved     ContactFlowStatus = "SAVED"
)

// Values returns all known values for ContactFlowStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContactFlowStatus) Values() []ContactFlowStatus {
	return []ContactFlowStatus{
		"PUBLISHED",
		"SAVED",
	}
}

type ContactFlowType string

// Enum values for ContactFlowType
const (
	ContactFlowTypeContactFlow     ContactFlowType = "CONTACT_FLOW"
	ContactFlowTypeCustomerQueue   ContactFlowType = "CUSTOMER_QUEUE"
	ContactFlowTypeCustomerHold    ContactFlowType = "CUSTOMER_HOLD"
	ContactFlowTypeCustomerWhisper ContactFlowType = "CUSTOMER_WHISPER"
	ContactFlowTypeAgentHold       ContactFlowType = "AGENT_HOLD"
	ContactFlowTypeAgentWhisper    ContactFlowType = "AGENT_WHISPER"
	ContactFlowTypeOutboundWhisper ContactFlowType = "OUTBOUND_WHISPER"
	ContactFlowTypeAgentTransfer   ContactFlowType = "AGENT_TRANSFER"
	ContactFlowTypeQueueTransfer   ContactFlowType = "QUEUE_TRANSFER"
	ContactFlowTypeCampaign        ContactFlowType = "CAMPAIGN"
)

// Values returns all known values for ContactFlowType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContactFlowType) Values() []ContactFlowType {
	return []ContactFlowType{
		"CONTACT_FLOW",
		"CUSTOMER_QUEUE",
		"CUSTOMER_HOLD",
		"CUSTOMER_WHISPER",
		"AGENT_HOLD",
		"AGENT_WHISPER",
		"OUTBOUND_WHISPER",
		"AGENT_TRANSFER",
		"QUEUE_TRANSFER",
		"CAMPAIGN",
	}
}

type ContactInitiationMethod string

// Enum values for ContactInitiationMethod
const (
	ContactInitiationMethodInbound          ContactInitiationMethod = "INBOUND"
	ContactInitiationMethodOutbound         ContactInitiationMethod = "OUTBOUND"
	ContactInitiationMethodTransfer         ContactInitiationMethod = "TRANSFER"
	ContactInitiationMethodQueueTransfer    ContactInitiationMethod = "QUEUE_TRANSFER"
	ContactInitiationMethodCallback         ContactInitiationMethod = "CALLBACK"
	ContactInitiationMethodApi              ContactInitiationMethod = "API"
	ContactInitiationMethodDisconnect       ContactInitiationMethod = "DISCONNECT"
	ContactInitiationMethodMonitor          ContactInitiationMethod = "MONITOR"
	ContactInitiationMethodExternalOutbound ContactInitiationMethod = "EXTERNAL_OUTBOUND"
	ContactInitiationMethodWebrtcApi        ContactInitiationMethod = "WEBRTC_API"
	ContactInitiationMethodAgentReply       ContactInitiationMethod = "AGENT_REPLY"
	ContactInitiationMethodFlow             ContactInitiationMethod = "FLOW"
)

// Values returns all known values for ContactInitiationMethod. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContactInitiationMethod) Values() []ContactInitiationMethod {
	return []ContactInitiationMethod{
		"INBOUND",
		"OUTBOUND",
		"TRANSFER",
		"QUEUE_TRANSFER",
		"CALLBACK",
		"API",
		"DISCONNECT",
		"MONITOR",
		"EXTERNAL_OUTBOUND",
		"WEBRTC_API",
		"AGENT_REPLY",
		"FLOW",
	}
}

type ContactRecordingType string

// Enum values for ContactRecordingType
const (
	ContactRecordingTypeAgent  ContactRecordingType = "AGENT"
	ContactRecordingTypeIvr    ContactRecordingType = "IVR"
	ContactRecordingTypeScreen ContactRecordingType = "SCREEN"
)

// Values returns all known values for ContactRecordingType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContactRecordingType) Values() []ContactRecordingType {
	return []ContactRecordingType{
		"AGENT",
		"IVR",
		"SCREEN",
	}
}

type ContactState string

// Enum values for ContactState
const (
	ContactStateIncoming        ContactState = "INCOMING"
	ContactStatePending         ContactState = "PENDING"
	ContactStateConnecting      ContactState = "CONNECTING"
	ContactStateConnected       ContactState = "CONNECTED"
	ContactStateConnectedOnhold ContactState = "CONNECTED_ONHOLD"
	ContactStateMissed          ContactState = "MISSED"
	ContactStateError           ContactState = "ERROR"
	ContactStateEnded           ContactState = "ENDED"
	ContactStateRejected        ContactState = "REJECTED"
)

// Values returns all known values for ContactState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContactState) Values() []ContactState {
	return []ContactState{
		"INCOMING",
		"PENDING",
		"CONNECTING",
		"CONNECTED",
		"CONNECTED_ONHOLD",
		"MISSED",
		"ERROR",
		"ENDED",
		"REJECTED",
	}
}

type CurrentMetricName string

// Enum values for CurrentMetricName
const (
	CurrentMetricNameAgentsOnline           CurrentMetricName = "AGENTS_ONLINE"
	CurrentMetricNameAgentsAvailable        CurrentMetricName = "AGENTS_AVAILABLE"
	CurrentMetricNameAgentsOnCall           CurrentMetricName = "AGENTS_ON_CALL"
	CurrentMetricNameAgentsNonProductive    CurrentMetricName = "AGENTS_NON_PRODUCTIVE"
	CurrentMetricNameAgentsAfterContactWork CurrentMetricName = "AGENTS_AFTER_CONTACT_WORK"
	CurrentMetricNameAgentsError            CurrentMetricName = "AGENTS_ERROR"
	CurrentMetricNameAgentsStaffed          CurrentMetricName = "AGENTS_STAFFED"
	CurrentMetricNameContactsInQueue        CurrentMetricName = "CONTACTS_IN_QUEUE"
	CurrentMetricNameOldestContactAge       CurrentMetricName = "OLDEST_CONTACT_AGE"
	CurrentMetricNameContactsScheduled      CurrentMetricName = "CONTACTS_SCHEDULED"
	CurrentMetricNameAgentsOnContact        CurrentMetricName = "AGENTS_ON_CONTACT"
	CurrentMetricNameSlotsActive            CurrentMetricName = "SLOTS_ACTIVE"
	CurrentMetricNameSlotsAvailable         CurrentMetricName = "SLOTS_AVAILABLE"
)

// Values returns all known values for CurrentMetricName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CurrentMetricName) Values() []CurrentMetricName {
	return []CurrentMetricName{
		"AGENTS_ONLINE",
		"AGENTS_AVAILABLE",
		"AGENTS_ON_CALL",
		"AGENTS_NON_PRODUCTIVE",
		"AGENTS_AFTER_CONTACT_WORK",
		"AGENTS_ERROR",
		"AGENTS_STAFFED",
		"CONTACTS_IN_QUEUE",
		"OLDEST_CONTACT_AGE",
		"CONTACTS_SCHEDULED",
		"AGENTS_ON_CONTACT",
		"SLOTS_ACTIVE",
		"SLOTS_AVAILABLE",
	}
}

type DateComparisonType string

// Enum values for DateComparisonType
const (
	DateComparisonTypeGreaterThan          DateComparisonType = "GREATER_THAN"
	DateComparisonTypeLessThan             DateComparisonType = "LESS_THAN"
	DateComparisonTypeGreaterThanOrEqualTo DateComparisonType = "GREATER_THAN_OR_EQUAL_TO"
	DateComparisonTypeLessThanOrEqualTo    DateComparisonType = "LESS_THAN_OR_EQUAL_TO"
	DateComparisonTypeEqualTo              DateComparisonType = "EQUAL_TO"
)

// Values returns all known values for DateComparisonType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DateComparisonType) Values() []DateComparisonType {
	return []DateComparisonType{
		"GREATER_THAN",
		"LESS_THAN",
		"GREATER_THAN_OR_EQUAL_TO",
		"LESS_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
	}
}

type DeviceType string

// Enum values for DeviceType
const (
	DeviceTypeGcm         DeviceType = "GCM"
	DeviceTypeApns        DeviceType = "APNS"
	DeviceTypeApnsSandbox DeviceType = "APNS_SANDBOX"
)

// Values returns all known values for DeviceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceType) Values() []DeviceType {
	return []DeviceType{
		"GCM",
		"APNS",
		"APNS_SANDBOX",
	}
}

type DirectoryType string

// Enum values for DirectoryType
const (
	DirectoryTypeSaml              DirectoryType = "SAML"
	DirectoryTypeConnectManaged    DirectoryType = "CONNECT_MANAGED"
	DirectoryTypeExistingDirectory DirectoryType = "EXISTING_DIRECTORY"
)

// Values returns all known values for DirectoryType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DirectoryType) Values() []DirectoryType {
	return []DirectoryType{
		"SAML",
		"CONNECT_MANAGED",
		"EXISTING_DIRECTORY",
	}
}

type EmailHeaderType string

// Enum values for EmailHeaderType
const (
	EmailHeaderTypeReferences       EmailHeaderType = "REFERENCES"
	EmailHeaderTypeMessageId        EmailHeaderType = "MESSAGE_ID"
	EmailHeaderTypeInReplyTo        EmailHeaderType = "IN_REPLY_TO"
	EmailHeaderTypeXSesSpamVerdict  EmailHeaderType = "X_SES_SPAM_VERDICT"
	EmailHeaderTypeXSesVirusVerdict EmailHeaderType = "X_SES_VIRUS_VERDICT"
)

// Values returns all known values for EmailHeaderType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EmailHeaderType) Values() []EmailHeaderType {
	return []EmailHeaderType{
		"REFERENCES",
		"MESSAGE_ID",
		"IN_REPLY_TO",
		"X_SES_SPAM_VERDICT",
		"X_SES_VIRUS_VERDICT",
	}
}

type EncryptionType string

// Enum values for EncryptionType
const (
	EncryptionTypeKms EncryptionType = "KMS"
)

// Values returns all known values for EncryptionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EncryptionType) Values() []EncryptionType {
	return []EncryptionType{
		"KMS",
	}
}

type EndpointType string

// Enum values for EndpointType
const (
	EndpointTypeTelephoneNumber       EndpointType = "TELEPHONE_NUMBER"
	EndpointTypeVoip                  EndpointType = "VOIP"
	EndpointTypeContactFlow           EndpointType = "CONTACT_FLOW"
	EndpointTypeConnectPhonenumberArn EndpointType = "CONNECT_PHONENUMBER_ARN"
	EndpointTypeEmailAddress          EndpointType = "EMAIL_ADDRESS"
)

// Values returns all known values for EndpointType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EndpointType) Values() []EndpointType {
	return []EndpointType{
		"TELEPHONE_NUMBER",
		"VOIP",
		"CONTACT_FLOW",
		"CONNECT_PHONENUMBER_ARN",
		"EMAIL_ADDRESS",
	}
}

type EvaluationFormQuestionType string

// Enum values for EvaluationFormQuestionType
const (
	EvaluationFormQuestionTypeText         EvaluationFormQuestionType = "TEXT"
	EvaluationFormQuestionTypeSingleselect EvaluationFormQuestionType = "SINGLESELECT"
	EvaluationFormQuestionTypeNumeric      EvaluationFormQuestionType = "NUMERIC"
)

// Values returns all known values for EvaluationFormQuestionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EvaluationFormQuestionType) Values() []EvaluationFormQuestionType {
	return []EvaluationFormQuestionType{
		"TEXT",
		"SINGLESELECT",
		"NUMERIC",
	}
}

type EvaluationFormScoringMode string

// Enum values for EvaluationFormScoringMode
const (
	EvaluationFormScoringModeQuestionOnly EvaluationFormScoringMode = "QUESTION_ONLY"
	EvaluationFormScoringModeSectionOnly  EvaluationFormScoringMode = "SECTION_ONLY"
)

// Values returns all known values for EvaluationFormScoringMode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EvaluationFormScoringMode) Values() []EvaluationFormScoringMode {
	return []EvaluationFormScoringMode{
		"QUESTION_ONLY",
		"SECTION_ONLY",
	}
}

type EvaluationFormScoringStatus string

// Enum values for EvaluationFormScoringStatus
const (
	EvaluationFormScoringStatusEnabled  EvaluationFormScoringStatus = "ENABLED"
	EvaluationFormScoringStatusDisabled EvaluationFormScoringStatus = "DISABLED"
)

// Values returns all known values for EvaluationFormScoringStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EvaluationFormScoringStatus) Values() []EvaluationFormScoringStatus {
	return []EvaluationFormScoringStatus{
		"ENABLED",
		"DISABLED",
	}
}

type EvaluationFormSingleSelectQuestionDisplayMode string

// Enum values for EvaluationFormSingleSelectQuestionDisplayMode
const (
	EvaluationFormSingleSelectQuestionDisplayModeDropdown EvaluationFormSingleSelectQuestionDisplayMode = "DROPDOWN"
	EvaluationFormSingleSelectQuestionDisplayModeRadio    EvaluationFormSingleSelectQuestionDisplayMode = "RADIO"
)

// Values returns all known values for
// EvaluationFormSingleSelectQuestionDisplayMode. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EvaluationFormSingleSelectQuestionDisplayMode) Values() []EvaluationFormSingleSelectQuestionDisplayMode {
	return []EvaluationFormSingleSelectQuestionDisplayMode{
		"DROPDOWN",
		"RADIO",
	}
}

type EvaluationFormVersionStatus string

// Enum values for EvaluationFormVersionStatus
const (
	EvaluationFormVersionStatusDraft  EvaluationFormVersionStatus = "DRAFT"
	EvaluationFormVersionStatusActive EvaluationFormVersionStatus = "ACTIVE"
)

// Values returns all known values for EvaluationFormVersionStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EvaluationFormVersionStatus) Values() []EvaluationFormVersionStatus {
	return []EvaluationFormVersionStatus{
		"DRAFT",
		"ACTIVE",
	}
}

type EvaluationStatus string

// Enum values for EvaluationStatus
const (
	EvaluationStatusDraft     EvaluationStatus = "DRAFT"
	EvaluationStatusSubmitted EvaluationStatus = "SUBMITTED"
)

// Values returns all known values for EvaluationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EvaluationStatus) Values() []EvaluationStatus {
	return []EvaluationStatus{
		"DRAFT",
		"SUBMITTED",
	}
}

type EventSourceName string

// Enum values for EventSourceName
const (
	EventSourceNameOnPostCallAnalysisAvailable     EventSourceName = "OnPostCallAnalysisAvailable"
	EventSourceNameOnRealTimeCallAnalysisAvailable EventSourceName = "OnRealTimeCallAnalysisAvailable"
	EventSourceNameOnRealTimeChatAnalysisAvailable EventSourceName = "OnRealTimeChatAnalysisAvailable"
	EventSourceNameOnPostChatAnalysisAvailable     EventSourceName = "OnPostChatAnalysisAvailable"
	EventSourceNameOnZendeskTicketCreate           EventSourceName = "OnZendeskTicketCreate"
	EventSourceNameOnZendeskTicketStatusUpdate     EventSourceName = "OnZendeskTicketStatusUpdate"
	EventSourceNameOnSalesforceCaseCreate          EventSourceName = "OnSalesforceCaseCreate"
	EventSourceNameOnContactEvaluationSubmit       EventSourceName = "OnContactEvaluationSubmit"
	EventSourceNameOnMetricDataUpdate              EventSourceName = "OnMetricDataUpdate"
	EventSourceNameOnCaseCreate                    EventSourceName = "OnCaseCreate"
	EventSourceNameOnCaseUpdate                    EventSourceName = "OnCaseUpdate"
	EventSourceNameOnSlaBreach                     EventSourceName = "OnSlaBreach"
)

// Values returns all known values for EventSourceName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventSourceName) Values() []EventSourceName {
	return []EventSourceName{
		"OnPostCallAnalysisAvailable",
		"OnRealTimeCallAnalysisAvailable",
		"OnRealTimeChatAnalysisAvailable",
		"OnPostChatAnalysisAvailable",
		"OnZendeskTicketCreate",
		"OnZendeskTicketStatusUpdate",
		"OnSalesforceCaseCreate",
		"OnContactEvaluationSubmit",
		"OnMetricDataUpdate",
		"OnCaseCreate",
		"OnCaseUpdate",
		"OnSlaBreach",
	}
}

type FailureReasonCode string

// Enum values for FailureReasonCode
const (
	FailureReasonCodeInvalidAttributeKey             FailureReasonCode = "INVALID_ATTRIBUTE_KEY"
	FailureReasonCodeInvalidCustomerEndpoint         FailureReasonCode = "INVALID_CUSTOMER_ENDPOINT"
	FailureReasonCodeInvalidSystemEndpoint           FailureReasonCode = "INVALID_SYSTEM_ENDPOINT"
	FailureReasonCodeInvalidQueue                    FailureReasonCode = "INVALID_QUEUE"
	FailureReasonCodeMissingCampaign                 FailureReasonCode = "MISSING_CAMPAIGN"
	FailureReasonCodeMissingCustomerEndpoint         FailureReasonCode = "MISSING_CUSTOMER_ENDPOINT"
	FailureReasonCodeMissingQueueIdAndSystemEndpoint FailureReasonCode = "MISSING_QUEUE_ID_AND_SYSTEM_ENDPOINT"
	FailureReasonCodeRequestThrottled                FailureReasonCode = "REQUEST_THROTTLED"
	FailureReasonCodeIdempotencyException            FailureReasonCode = "IDEMPOTENCY_EXCEPTION"
	FailureReasonCodeInternalError                   FailureReasonCode = "INTERNAL_ERROR"
)

// Values returns all known values for FailureReasonCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FailureReasonCode) Values() []FailureReasonCode {
	return []FailureReasonCode{
		"INVALID_ATTRIBUTE_KEY",
		"INVALID_CUSTOMER_ENDPOINT",
		"INVALID_SYSTEM_ENDPOINT",
		"INVALID_QUEUE",
		"MISSING_CAMPAIGN",
		"MISSING_CUSTOMER_ENDPOINT",
		"MISSING_QUEUE_ID_AND_SYSTEM_ENDPOINT",
		"REQUEST_THROTTLED",
		"IDEMPOTENCY_EXCEPTION",
		"INTERNAL_ERROR",
	}
}

type FileStatusType string

// Enum values for FileStatusType
const (
	FileStatusTypeApproved   FileStatusType = "APPROVED"
	FileStatusTypeRejected   FileStatusType = "REJECTED"
	FileStatusTypeProcessing FileStatusType = "PROCESSING"
	FileStatusTypeFailed     FileStatusType = "FAILED"
)

// Values returns all known values for FileStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FileStatusType) Values() []FileStatusType {
	return []FileStatusType{
		"APPROVED",
		"REJECTED",
		"PROCESSING",
		"FAILED",
	}
}

type FileUseCaseType string

// Enum values for FileUseCaseType
const (
	FileUseCaseTypeEmailMessage FileUseCaseType = "EMAIL_MESSAGE"
	FileUseCaseTypeAttachment   FileUseCaseType = "ATTACHMENT"
)

// Values returns all known values for FileUseCaseType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FileUseCaseType) Values() []FileUseCaseType {
	return []FileUseCaseType{
		"EMAIL_MESSAGE",
		"ATTACHMENT",
	}
}

type FlowAssociationResourceType string

// Enum values for FlowAssociationResourceType
const (
	FlowAssociationResourceTypeSmsPhoneNumber               FlowAssociationResourceType = "SMS_PHONE_NUMBER"
	FlowAssociationResourceTypeInboundEmail                 FlowAssociationResourceType = "INBOUND_EMAIL"
	FlowAssociationResourceTypeOutboundEmail                FlowAssociationResourceType = "OUTBOUND_EMAIL"
	FlowAssociationResourceTypeAnalyticsConnector           FlowAssociationResourceType = "ANALYTICS_CONNECTOR"
	FlowAssociationResourceTypeWhatsappMessagingPhoneNumber FlowAssociationResourceType = "WHATSAPP_MESSAGING_PHONE_NUMBER"
)

// Values returns all known values for FlowAssociationResourceType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FlowAssociationResourceType) Values() []FlowAssociationResourceType {
	return []FlowAssociationResourceType{
		"SMS_PHONE_NUMBER",
		"INBOUND_EMAIL",
		"OUTBOUND_EMAIL",
		"ANALYTICS_CONNECTOR",
		"WHATSAPP_MESSAGING_PHONE_NUMBER",
	}
}

type Grouping string

// Enum values for Grouping
const (
	GroupingQueue                 Grouping = "QUEUE"
	GroupingChannel               Grouping = "CHANNEL"
	GroupingRoutingProfile        Grouping = "ROUTING_PROFILE"
	GroupingRoutingStepExpression Grouping = "ROUTING_STEP_EXPRESSION"
)

// Values returns all known values for Grouping. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Grouping) Values() []Grouping {
	return []Grouping{
		"QUEUE",
		"CHANNEL",
		"ROUTING_PROFILE",
		"ROUTING_STEP_EXPRESSION",
	}
}

type HierarchyGroupMatchType string

// Enum values for HierarchyGroupMatchType
const (
	HierarchyGroupMatchTypeExact           HierarchyGroupMatchType = "EXACT"
	HierarchyGroupMatchTypeWithChildGroups HierarchyGroupMatchType = "WITH_CHILD_GROUPS"
)

// Values returns all known values for HierarchyGroupMatchType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HierarchyGroupMatchType) Values() []HierarchyGroupMatchType {
	return []HierarchyGroupMatchType{
		"EXACT",
		"WITH_CHILD_GROUPS",
	}
}

type HistoricalMetricName string

// Enum values for HistoricalMetricName
const (
	HistoricalMetricNameContactsQueued                  HistoricalMetricName = "CONTACTS_QUEUED"
	HistoricalMetricNameContactsHandled                 HistoricalMetricName = "CONTACTS_HANDLED"
	HistoricalMetricNameContactsAbandoned               HistoricalMetricName = "CONTACTS_ABANDONED"
	HistoricalMetricNameContactsConsulted               HistoricalMetricName = "CONTACTS_CONSULTED"
	HistoricalMetricNameContactsAgentHungUpFirst        HistoricalMetricName = "CONTACTS_AGENT_HUNG_UP_FIRST"
	HistoricalMetricNameContactsHandledIncoming         HistoricalMetricName = "CONTACTS_HANDLED_INCOMING"
	HistoricalMetricNameContactsHandledOutbound         HistoricalMetricName = "CONTACTS_HANDLED_OUTBOUND"
	HistoricalMetricNameContactsHoldAbandons            HistoricalMetricName = "CONTACTS_HOLD_ABANDONS"
	HistoricalMetricNameContactsTransferredIn           HistoricalMetricName = "CONTACTS_TRANSFERRED_IN"
	HistoricalMetricNameContactsTransferredOut          HistoricalMetricName = "CONTACTS_TRANSFERRED_OUT"
	HistoricalMetricNameContactsTransferredInFromQueue  HistoricalMetricName = "CONTACTS_TRANSFERRED_IN_FROM_QUEUE"
	HistoricalMetricNameContactsTransferredOutFromQueue HistoricalMetricName = "CONTACTS_TRANSFERRED_OUT_FROM_QUEUE"
	HistoricalMetricNameContactsMissed                  HistoricalMetricName = "CONTACTS_MISSED"
	HistoricalMetricNameCallbackContactsHandled         HistoricalMetricName = "CALLBACK_CONTACTS_HANDLED"
	HistoricalMetricNameApiContactsHandled              HistoricalMetricName = "API_CONTACTS_HANDLED"
	HistoricalMetricNameOccupancy                       HistoricalMetricName = "OCCUPANCY"
	HistoricalMetricNameHandleTime                      HistoricalMetricName = "HANDLE_TIME"
	HistoricalMetricNameAfterContactWorkTime            HistoricalMetricName = "AFTER_CONTACT_WORK_TIME"
	HistoricalMetricNameQueuedTime                      HistoricalMetricName = "QUEUED_TIME"
	HistoricalMetricNameAbandonTime                     HistoricalMetricName = "ABANDON_TIME"
	HistoricalMetricNameQueueAnswerTime                 HistoricalMetricName = "QUEUE_ANSWER_TIME"
	HistoricalMetricNameHoldTime                        HistoricalMetricName = "HOLD_TIME"
	HistoricalMetricNameInteractionTime                 HistoricalMetricName = "INTERACTION_TIME"
	HistoricalMetricNameInteractionAndHoldTime          HistoricalMetricName = "INTERACTION_AND_HOLD_TIME"
	HistoricalMetricNameServiceLevel                    HistoricalMetricName = "SERVICE_LEVEL"
)

// Values returns all known values for HistoricalMetricName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HistoricalMetricName) Values() []HistoricalMetricName {
	return []HistoricalMetricName{
		"CONTACTS_QUEUED",
		"CONTACTS_HANDLED",
		"CONTACTS_ABANDONED",
		"CONTACTS_CONSULTED",
		"CONTACTS_AGENT_HUNG_UP_FIRST",
		"CONTACTS_HANDLED_INCOMING",
		"CONTACTS_HANDLED_OUTBOUND",
		"CONTACTS_HOLD_ABANDONS",
		"CONTACTS_TRANSFERRED_IN",
		"CONTACTS_TRANSFERRED_OUT",
		"CONTACTS_TRANSFERRED_IN_FROM_QUEUE",
		"CONTACTS_TRANSFERRED_OUT_FROM_QUEUE",
		"CONTACTS_MISSED",
		"CALLBACK_CONTACTS_HANDLED",
		"API_CONTACTS_HANDLED",
		"OCCUPANCY",
		"HANDLE_TIME",
		"AFTER_CONTACT_WORK_TIME",
		"QUEUED_TIME",
		"ABANDON_TIME",
		"QUEUE_ANSWER_TIME",
		"HOLD_TIME",
		"INTERACTION_TIME",
		"INTERACTION_AND_HOLD_TIME",
		"SERVICE_LEVEL",
	}
}

type HoursOfOperationDays string

// Enum values for HoursOfOperationDays
const (
	HoursOfOperationDaysSunday    HoursOfOperationDays = "SUNDAY"
	HoursOfOperationDaysMonday    HoursOfOperationDays = "MONDAY"
	HoursOfOperationDaysTuesday   HoursOfOperationDays = "TUESDAY"
	HoursOfOperationDaysWednesday HoursOfOperationDays = "WEDNESDAY"
	HoursOfOperationDaysThursday  HoursOfOperationDays = "THURSDAY"
	HoursOfOperationDaysFriday    HoursOfOperationDays = "FRIDAY"
	HoursOfOperationDaysSaturday  HoursOfOperationDays = "SATURDAY"
)

// Values returns all known values for HoursOfOperationDays. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HoursOfOperationDays) Values() []HoursOfOperationDays {
	return []HoursOfOperationDays{
		"SUNDAY",
		"MONDAY",
		"TUESDAY",
		"WEDNESDAY",
		"THURSDAY",
		"FRIDAY",
		"SATURDAY",
	}
}

type InboundMessageSourceType string

// Enum values for InboundMessageSourceType
const (
	InboundMessageSourceTypeRaw InboundMessageSourceType = "RAW"
)

// Values returns all known values for InboundMessageSourceType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InboundMessageSourceType) Values() []InboundMessageSourceType {
	return []InboundMessageSourceType{
		"RAW",
	}
}

type InitiateAs string

// Enum values for InitiateAs
const (
	InitiateAsConnectedToUser InitiateAs = "CONNECTED_TO_USER"
)

// Values returns all known values for InitiateAs. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InitiateAs) Values() []InitiateAs {
	return []InitiateAs{
		"CONNECTED_TO_USER",
	}
}

type InstanceAttributeType string

// Enum values for InstanceAttributeType
const (
	InstanceAttributeTypeInboundCalls              InstanceAttributeType = "INBOUND_CALLS"
	InstanceAttributeTypeOutboundCalls             InstanceAttributeType = "OUTBOUND_CALLS"
	InstanceAttributeTypeContactflowLogs           InstanceAttributeType = "CONTACTFLOW_LOGS"
	InstanceAttributeTypeContactLens               InstanceAttributeType = "CONTACT_LENS"
	InstanceAttributeTypeAutoResolveBestVoices     InstanceAttributeType = "AUTO_RESOLVE_BEST_VOICES"
	InstanceAttributeTypeUseCustomTtsVoices        InstanceAttributeType = "USE_CUSTOM_TTS_VOICES"
	InstanceAttributeTypeEarlyMedia                InstanceAttributeType = "EARLY_MEDIA"
	InstanceAttributeTypeMultiPartyConference      InstanceAttributeType = "MULTI_PARTY_CONFERENCE"
	InstanceAttributeTypeHighVolumeOutbound        InstanceAttributeType = "HIGH_VOLUME_OUTBOUND"
	InstanceAttributeTypeEnhancedContactMonitoring InstanceAttributeType = "ENHANCED_CONTACT_MONITORING"
	InstanceAttributeTypeEnhancedChatMonitoring    InstanceAttributeType = "ENHANCED_CHAT_MONITORING"
	InstanceAttributeTypeMultiPartyChatConference  InstanceAttributeType = "MULTI_PARTY_CHAT_CONFERENCE"
)

// Values returns all known values for InstanceAttributeType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstanceAttributeType) Values() []InstanceAttributeType {
	return []InstanceAttributeType{
		"INBOUND_CALLS",
		"OUTBOUND_CALLS",
		"CONTACTFLOW_LOGS",
		"CONTACT_LENS",
		"AUTO_RESOLVE_BEST_VOICES",
		"USE_CUSTOM_TTS_VOICES",
		"EARLY_MEDIA",
		"MULTI_PARTY_CONFERENCE",
		"HIGH_VOLUME_OUTBOUND",
		"ENHANCED_CONTACT_MONITORING",
		"ENHANCED_CHAT_MONITORING",
		"MULTI_PARTY_CHAT_CONFERENCE",
	}
}

type InstanceReplicationStatus string

// Enum values for InstanceReplicationStatus
const (
	InstanceReplicationStatusInstanceReplicationComplete       InstanceReplicationStatus = "INSTANCE_REPLICATION_COMPLETE"
	InstanceReplicationStatusInstanceReplicationInProgress     InstanceReplicationStatus = "INSTANCE_REPLICATION_IN_PROGRESS"
	InstanceReplicationStatusInstanceReplicationFailed         InstanceReplicationStatus = "INSTANCE_REPLICATION_FAILED"
	InstanceReplicationStatusInstanceReplicaDeleting           InstanceReplicationStatus = "INSTANCE_REPLICA_DELETING"
	InstanceReplicationStatusInstanceReplicationDeletionFailed InstanceReplicationStatus = "INSTANCE_REPLICATION_DELETION_FAILED"
	InstanceReplicationStatusResourceReplicationNotStarted     InstanceReplicationStatus = "RESOURCE_REPLICATION_NOT_STARTED"
)

// Values returns all known values for InstanceReplicationStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstanceReplicationStatus) Values() []InstanceReplicationStatus {
	return []InstanceReplicationStatus{
		"INSTANCE_REPLICATION_COMPLETE",
		"INSTANCE_REPLICATION_IN_PROGRESS",
		"INSTANCE_REPLICATION_FAILED",
		"INSTANCE_REPLICA_DELETING",
		"INSTANCE_REPLICATION_DELETION_FAILED",
		"RESOURCE_REPLICATION_NOT_STARTED",
	}
}

type InstanceStatus string

// Enum values for InstanceStatus
const (
	InstanceStatusCreationInProgress InstanceStatus = "CREATION_IN_PROGRESS"
	InstanceStatusActive             InstanceStatus = "ACTIVE"
	InstanceStatusCreationFailed     InstanceStatus = "CREATION_FAILED"
)

// Values returns all known values for InstanceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstanceStatus) Values() []InstanceStatus {
	return []InstanceStatus{
		"CREATION_IN_PROGRESS",
		"ACTIVE",
		"CREATION_FAILED",
	}
}

type InstanceStorageResourceType string

// Enum values for InstanceStorageResourceType
const (
	InstanceStorageResourceTypeChatTranscripts                      InstanceStorageResourceType = "CHAT_TRANSCRIPTS"
	InstanceStorageResourceTypeCallRecordings                       InstanceStorageResourceType = "CALL_RECORDINGS"
	InstanceStorageResourceTypeScheduledReports                     InstanceStorageResourceType = "SCHEDULED_REPORTS"
	InstanceStorageResourceTypeMediaStreams                         InstanceStorageResourceType = "MEDIA_STREAMS"
	InstanceStorageResourceTypeContactTraceRecords                  InstanceStorageResourceType = "CONTACT_TRACE_RECORDS"
	InstanceStorageResourceTypeAgentEvents                          InstanceStorageResourceType = "AGENT_EVENTS"
	InstanceStorageResourceTypeRealTimeContactAnalysisSegments      InstanceStorageResourceType = "REAL_TIME_CONTACT_ANALYSIS_SEGMENTS"
	InstanceStorageResourceTypeAttachments                          InstanceStorageResourceType = "ATTACHMENTS"
	InstanceStorageResourceTypeContactEvaluations                   InstanceStorageResourceType = "CONTACT_EVALUATIONS"
	InstanceStorageResourceTypeScreenRecordings                     InstanceStorageResourceType = "SCREEN_RECORDINGS"
	InstanceStorageResourceTypeRealTimeContactAnalysisChatSegments  InstanceStorageResourceType = "REAL_TIME_CONTACT_ANALYSIS_CHAT_SEGMENTS"
	InstanceStorageResourceTypeRealTimeContactAnalysisVoiceSegments InstanceStorageResourceType = "REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS"
	InstanceStorageResourceTypeEmailMessages                        InstanceStorageResourceType = "EMAIL_MESSAGES"
)

// Values returns all known values for InstanceStorageResourceType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstanceStorageResourceType) Values() []InstanceStorageResourceType {
	return []InstanceStorageResourceType{
		"CHAT_TRANSCRIPTS",
		"CALL_RECORDINGS",
		"SCHEDULED_REPORTS",
		"MEDIA_STREAMS",
		"CONTACT_TRACE_RECORDS",
		"AGENT_EVENTS",
		"REAL_TIME_CONTACT_ANALYSIS_SEGMENTS",
		"ATTACHMENTS",
		"CONTACT_EVALUATIONS",
		"SCREEN_RECORDINGS",
		"REAL_TIME_CONTACT_ANALYSIS_CHAT_SEGMENTS",
		"REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS",
		"EMAIL_MESSAGES",
	}
}

type IntegrationType string

// Enum values for IntegrationType
const (
	IntegrationTypeEvent                 IntegrationType = "EVENT"
	IntegrationTypeVoiceId               IntegrationType = "VOICE_ID"
	IntegrationTypePinpointApp           IntegrationType = "PINPOINT_APP"
	IntegrationTypeWisdomAssistant       IntegrationType = "WISDOM_ASSISTANT"
	IntegrationTypeWisdomKnowledgeBase   IntegrationType = "WISDOM_KNOWLEDGE_BASE"
	IntegrationTypeWisdomQuickResponses  IntegrationType = "WISDOM_QUICK_RESPONSES"
	IntegrationTypeQMessageTemplates     IntegrationType = "Q_MESSAGE_TEMPLATES"
	IntegrationTypeCasesDomain           IntegrationType = "CASES_DOMAIN"
	IntegrationTypeApplication           IntegrationType = "APPLICATION"
	IntegrationTypeFileScanner           IntegrationType = "FILE_SCANNER"
	IntegrationTypeSesIdentity           IntegrationType = "SES_IDENTITY"
	IntegrationTypeAnalyticsConnector    IntegrationType = "ANALYTICS_CONNECTOR"
	IntegrationTypeCallTransferConnector IntegrationType = "CALL_TRANSFER_CONNECTOR"
	IntegrationTypeCognitoUserPool       IntegrationType = "COGNITO_USER_POOL"
)

// Values returns all known values for IntegrationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IntegrationType) Values() []IntegrationType {
	return []IntegrationType{
		"EVENT",
		"VOICE_ID",
		"PINPOINT_APP",
		"WISDOM_ASSISTANT",
		"WISDOM_KNOWLEDGE_BASE",
		"WISDOM_QUICK_RESPONSES",
		"Q_MESSAGE_TEMPLATES",
		"CASES_DOMAIN",
		"APPLICATION",
		"FILE_SCANNER",
		"SES_IDENTITY",
		"ANALYTICS_CONNECTOR",
		"CALL_TRANSFER_CONNECTOR",
		"COGNITO_USER_POOL",
	}
}

type IntervalPeriod string

// Enum values for IntervalPeriod
const (
	IntervalPeriodFifteenMin IntervalPeriod = "FIFTEEN_MIN"
	IntervalPeriodThirtyMin  IntervalPeriod = "THIRTY_MIN"
	IntervalPeriodHour       IntervalPeriod = "HOUR"
	IntervalPeriodDay        IntervalPeriod = "DAY"
	IntervalPeriodWeek       IntervalPeriod = "WEEK"
	IntervalPeriodTotal      IntervalPeriod = "TOTAL"
)

// Values returns all known values for IntervalPeriod. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IntervalPeriod) Values() []IntervalPeriod {
	return []IntervalPeriod{
		"FIFTEEN_MIN",
		"THIRTY_MIN",
		"HOUR",
		"DAY",
		"WEEK",
		"TOTAL",
	}
}

type IvrRecordingTrack string

// Enum values for IvrRecordingTrack
const (
	IvrRecordingTrackAll IvrRecordingTrack = "ALL"
)

// Values returns all known values for IvrRecordingTrack. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IvrRecordingTrack) Values() []IvrRecordingTrack {
	return []IvrRecordingTrack{
		"ALL",
	}
}

type LexVersion string

// Enum values for LexVersion
const (
	LexVersionV1 LexVersion = "V1"
	LexVersionV2 LexVersion = "V2"
)

// Values returns all known values for LexVersion. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LexVersion) Values() []LexVersion {
	return []LexVersion{
		"V1",
		"V2",
	}
}

type ListFlowAssociationResourceType string

// Enum values for ListFlowAssociationResourceType
const (
	ListFlowAssociationResourceTypeWhatsappMessagingPhoneNumber ListFlowAssociationResourceType = "WHATSAPP_MESSAGING_PHONE_NUMBER"
	ListFlowAssociationResourceTypeVoicePhoneNumber             ListFlowAssociationResourceType = "VOICE_PHONE_NUMBER"
	ListFlowAssociationResourceTypeInboundEmail                 ListFlowAssociationResourceType = "INBOUND_EMAIL"
	ListFlowAssociationResourceTypeOutboundEmail                ListFlowAssociationResourceType = "OUTBOUND_EMAIL"
	ListFlowAssociationResourceTypeAnalyticsConnector           ListFlowAssociationResourceType = "ANALYTICS_CONNECTOR"
)

// Values returns all known values for ListFlowAssociationResourceType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListFlowAssociationResourceType) Values() []ListFlowAssociationResourceType {
	return []ListFlowAssociationResourceType{
		"WHATSAPP_MESSAGING_PHONE_NUMBER",
		"VOICE_PHONE_NUMBER",
		"INBOUND_EMAIL",
		"OUTBOUND_EMAIL",
		"ANALYTICS_CONNECTOR",
	}
}

type MediaStreamType string

// Enum values for MediaStreamType
const (
	MediaStreamTypeAudio MediaStreamType = "AUDIO"
	MediaStreamTypeVideo MediaStreamType = "VIDEO"
)

// Values returns all known values for MediaStreamType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaStreamType) Values() []MediaStreamType {
	return []MediaStreamType{
		"AUDIO",
		"VIDEO",
	}
}

type MeetingFeatureStatus string

// Enum values for MeetingFeatureStatus
const (
	MeetingFeatureStatusAvailable   MeetingFeatureStatus = "AVAILABLE"
	MeetingFeatureStatusUnavailable MeetingFeatureStatus = "UNAVAILABLE"
)

// Values returns all known values for MeetingFeatureStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MeetingFeatureStatus) Values() []MeetingFeatureStatus {
	return []MeetingFeatureStatus{
		"AVAILABLE",
		"UNAVAILABLE",
	}
}

type MonitorCapability string

// Enum values for MonitorCapability
const (
	MonitorCapabilitySilentMonitor MonitorCapability = "SILENT_MONITOR"
	MonitorCapabilityBarge         MonitorCapability = "BARGE"
)

// Values returns all known values for MonitorCapability. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitorCapability) Values() []MonitorCapability {
	return []MonitorCapability{
		"SILENT_MONITOR",
		"BARGE",
	}
}

type NotificationContentType string

// Enum values for NotificationContentType
const (
	NotificationContentTypePlainText NotificationContentType = "PLAIN_TEXT"
)

// Values returns all known values for NotificationContentType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotificationContentType) Values() []NotificationContentType {
	return []NotificationContentType{
		"PLAIN_TEXT",
	}
}

type NotificationDeliveryType string

// Enum values for NotificationDeliveryType
const (
	NotificationDeliveryTypeEmail NotificationDeliveryType = "EMAIL"
)

// Values returns all known values for NotificationDeliveryType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotificationDeliveryType) Values() []NotificationDeliveryType {
	return []NotificationDeliveryType{
		"EMAIL",
	}
}

type NumberComparisonType string

// Enum values for NumberComparisonType
const (
	NumberComparisonTypeGreaterOrEqual NumberComparisonType = "GREATER_OR_EQUAL"
	NumberComparisonTypeGreater        NumberComparisonType = "GREATER"
	NumberComparisonTypeLesserOrEqual  NumberComparisonType = "LESSER_OR_EQUAL"
	NumberComparisonTypeLesser         NumberComparisonType = "LESSER"
	NumberComparisonTypeEqual          NumberComparisonType = "EQUAL"
	NumberComparisonTypeNotEqual       NumberComparisonType = "NOT_EQUAL"
	NumberComparisonTypeRange          NumberComparisonType = "RANGE"
)

// Values returns all known values for NumberComparisonType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NumberComparisonType) Values() []NumberComparisonType {
	return []NumberComparisonType{
		"GREATER_OR_EQUAL",
		"GREATER",
		"LESSER_OR_EQUAL",
		"LESSER",
		"EQUAL",
		"NOT_EQUAL",
		"RANGE",
	}
}

type NumericQuestionPropertyAutomationLabel string

// Enum values for NumericQuestionPropertyAutomationLabel
const (
	NumericQuestionPropertyAutomationLabelOverallCustomerSentimentScore NumericQuestionPropertyAutomationLabel = "OVERALL_CUSTOMER_SENTIMENT_SCORE"
	NumericQuestionPropertyAutomationLabelOverallAgentSentimentScore    NumericQuestionPropertyAutomationLabel = "OVERALL_AGENT_SENTIMENT_SCORE"
	NumericQuestionPropertyAutomationLabelNonTalkTime                   NumericQuestionPropertyAutomationLabel = "NON_TALK_TIME"
	NumericQuestionPropertyAutomationLabelNonTalkTimePercentage         NumericQuestionPropertyAutomationLabel = "NON_TALK_TIME_PERCENTAGE"
	NumericQuestionPropertyAutomationLabelNumberOfInterruptions         NumericQuestionPropertyAutomationLabel = "NUMBER_OF_INTERRUPTIONS"
	NumericQuestionPropertyAutomationLabelContactDuration               NumericQuestionPropertyAutomationLabel = "CONTACT_DURATION"
	NumericQuestionPropertyAutomationLabelAgentInteractionDuration      NumericQuestionPropertyAutomationLabel = "AGENT_INTERACTION_DURATION"
	NumericQuestionPropertyAutomationLabelCustomerHoldTime              NumericQuestionPropertyAutomationLabel = "CUSTOMER_HOLD_TIME"
)

// Values returns all known values for NumericQuestionPropertyAutomationLabel.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NumericQuestionPropertyAutomationLabel) Values() []NumericQuestionPropertyAutomationLabel {
	return []NumericQuestionPropertyAutomationLabel{
		"OVERALL_CUSTOMER_SENTIMENT_SCORE",
		"OVERALL_AGENT_SENTIMENT_SCORE",
		"NON_TALK_TIME",
		"NON_TALK_TIME_PERCENTAGE",
		"NUMBER_OF_INTERRUPTIONS",
		"CONTACT_DURATION",
		"AGENT_INTERACTION_DURATION",
		"CUSTOMER_HOLD_TIME",
	}
}

type OutboundMessageSourceType string

// Enum values for OutboundMessageSourceType
const (
	OutboundMessageSourceTypeTemplate OutboundMessageSourceType = "TEMPLATE"
	OutboundMessageSourceTypeRaw      OutboundMessageSourceType = "RAW"
)

// Values returns all known values for OutboundMessageSourceType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OutboundMessageSourceType) Values() []OutboundMessageSourceType {
	return []OutboundMessageSourceType{
		"TEMPLATE",
		"RAW",
	}
}

type OverrideDays string

// Enum values for OverrideDays
const (
	OverrideDaysSunday    OverrideDays = "SUNDAY"
	OverrideDaysMonday    OverrideDays = "MONDAY"
	OverrideDaysTuesday   OverrideDays = "TUESDAY"
	OverrideDaysWednesday OverrideDays = "WEDNESDAY"
	OverrideDaysThursday  OverrideDays = "THURSDAY"
	OverrideDaysFriday    OverrideDays = "FRIDAY"
	OverrideDaysSaturday  OverrideDays = "SATURDAY"
)

// Values returns all known values for OverrideDays. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OverrideDays) Values() []OverrideDays {
	return []OverrideDays{
		"SUNDAY",
		"MONDAY",
		"TUESDAY",
		"WEDNESDAY",
		"THURSDAY",
		"FRIDAY",
		"SATURDAY",
	}
}

type ParticipantRole string

// Enum values for ParticipantRole
const (
	ParticipantRoleAgent      ParticipantRole = "AGENT"
	ParticipantRoleCustomer   ParticipantRole = "CUSTOMER"
	ParticipantRoleSystem     ParticipantRole = "SYSTEM"
	ParticipantRoleCustomBot  ParticipantRole = "CUSTOM_BOT"
	ParticipantRoleSupervisor ParticipantRole = "SUPERVISOR"
)

// Values returns all known values for ParticipantRole. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParticipantRole) Values() []ParticipantRole {
	return []ParticipantRole{
		"AGENT",
		"CUSTOMER",
		"SYSTEM",
		"CUSTOM_BOT",
		"SUPERVISOR",
	}
}

type ParticipantState string

// Enum values for ParticipantState
const (
	ParticipantStateInitial      ParticipantState = "INITIAL"
	ParticipantStateConnected    ParticipantState = "CONNECTED"
	ParticipantStateDisconnected ParticipantState = "DISCONNECTED"
	ParticipantStateMissed       ParticipantState = "MISSED"
)

// Values returns all known values for ParticipantState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParticipantState) Values() []ParticipantState {
	return []ParticipantState{
		"INITIAL",
		"CONNECTED",
		"DISCONNECTED",
		"MISSED",
	}
}

type ParticipantTimerAction string

// Enum values for ParticipantTimerAction
const (
	ParticipantTimerActionUnset ParticipantTimerAction = "Unset"
)

// Values returns all known values for ParticipantTimerAction. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParticipantTimerAction) Values() []ParticipantTimerAction {
	return []ParticipantTimerAction{
		"Unset",
	}
}

type ParticipantTimerType string

// Enum values for ParticipantTimerType
const (
	ParticipantTimerTypeIdle                  ParticipantTimerType = "IDLE"
	ParticipantTimerTypeDisconnectNoncustomer ParticipantTimerType = "DISCONNECT_NONCUSTOMER"
)

// Values returns all known values for ParticipantTimerType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParticipantTimerType) Values() []ParticipantTimerType {
	return []ParticipantTimerType{
		"IDLE",
		"DISCONNECT_NONCUSTOMER",
	}
}

type ParticipantType string

// Enum values for ParticipantType
const (
	ParticipantTypeAll        ParticipantType = "ALL"
	ParticipantTypeManager    ParticipantType = "MANAGER"
	ParticipantTypeAgent      ParticipantType = "AGENT"
	ParticipantTypeCustomer   ParticipantType = "CUSTOMER"
	ParticipantTypeThirdparty ParticipantType = "THIRDPARTY"
)

// Values returns all known values for ParticipantType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParticipantType) Values() []ParticipantType {
	return []ParticipantType{
		"ALL",
		"MANAGER",
		"AGENT",
		"CUSTOMER",
		"THIRDPARTY",
	}
}

type PhoneNumberCountryCode string

// Enum values for PhoneNumberCountryCode
const (
	PhoneNumberCountryCodeAf PhoneNumberCountryCode = "AF"
	PhoneNumberCountryCodeAl PhoneNumberCountryCode = "AL"
	PhoneNumberCountryCodeDz PhoneNumberCountryCode = "DZ"
	PhoneNumberCountryCodeAs PhoneNumberCountryCode = "AS"
	PhoneNumberCountryCodeAd PhoneNumberCountryCode = "AD"
	PhoneNumberCountryCodeAo PhoneNumberCountryCode = "AO"
	PhoneNumberCountryCodeAi PhoneNumberCountryCode = "AI"
	PhoneNumberCountryCodeAq PhoneNumberCountryCode = "AQ"
	PhoneNumberCountryCodeAg PhoneNumberCountryCode = "AG"
	PhoneNumberCountryCodeAr PhoneNumberCountryCode = "AR"
	PhoneNumberCountryCodeAm PhoneNumberCountryCode = "AM"
	PhoneNumberCountryCodeAw PhoneNumberCountryCode = "AW"
	PhoneNumberCountryCodeAu PhoneNumberCountryCode = "AU"
	PhoneNumberCountryCodeAt PhoneNumberCountryCode = "AT"
	PhoneNumberCountryCodeAz PhoneNumberCountryCode = "AZ"
	PhoneNumberCountryCodeBs PhoneNumberCountryCode = "BS"
	PhoneNumberCountryCodeBh PhoneNumberCountryCode = "BH"
	PhoneNumberCountryCodeBd PhoneNumberCountryCode = "BD"
	PhoneNumberCountryCodeBb PhoneNumberCountryCode = "BB"
	PhoneNumberCountryCodeBy PhoneNumberCountryCode = "BY"
	PhoneNumberCountryCodeBe PhoneNumberCountryCode = "BE"
	PhoneNumberCountryCodeBz PhoneNumberCountryCode = "BZ"
	PhoneNumberCountryCodeBj PhoneNumberCountryCode = "BJ"
	PhoneNumberCountryCodeBm PhoneNumberCountryCode = "BM"
	PhoneNumberCountryCodeBt PhoneNumberCountryCode = "BT"
	PhoneNumberCountryCodeBo PhoneNumberCountryCode = "BO"
	PhoneNumberCountryCodeBa PhoneNumberCountryCode = "BA"
	PhoneNumberCountryCodeBw PhoneNumberCountryCode = "BW"
	PhoneNumberCountryCodeBr PhoneNumberCountryCode = "BR"
	PhoneNumberCountryCodeIo PhoneNumberCountryCode = "IO"
	PhoneNumberCountryCodeVg PhoneNumberCountryCode = "VG"
	PhoneNumberCountryCodeBn PhoneNumberCountryCode = "BN"
	PhoneNumberCountryCodeBg PhoneNumberCountryCode = "BG"
	PhoneNumberCountryCodeBf PhoneNumberCountryCode = "BF"
	PhoneNumberCountryCodeBi PhoneNumberCountryCode = "BI"
	PhoneNumberCountryCodeKh PhoneNumberCountryCode = "KH"
	PhoneNumberCountryCodeCm PhoneNumberCountryCode = "CM"
	PhoneNumberCountryCodeCa PhoneNumberCountryCode = "CA"
	PhoneNumberCountryCodeCv PhoneNumberCountryCode = "CV"
	PhoneNumberCountryCodeKy PhoneNumberCountryCode = "KY"
	PhoneNumberCountryCodeCf PhoneNumberCountryCode = "CF"
	PhoneNumberCountryCodeTd PhoneNumberCountryCode = "TD"
	PhoneNumberCountryCodeCl PhoneNumberCountryCode = "CL"
	PhoneNumberCountryCodeCn PhoneNumberCountryCode = "CN"
	PhoneNumberCountryCodeCx PhoneNumberCountryCode = "CX"
	PhoneNumberCountryCodeCc PhoneNumberCountryCode = "CC"
	PhoneNumberCountryCodeCo PhoneNumberCountryCode = "CO"
	PhoneNumberCountryCodeKm PhoneNumberCountryCode = "KM"
	PhoneNumberCountryCodeCk PhoneNumberCountryCode = "CK"
	PhoneNumberCountryCodeCr PhoneNumberCountryCode = "CR"
	PhoneNumberCountryCodeHr PhoneNumberCountryCode = "HR"
	PhoneNumberCountryCodeCu PhoneNumberCountryCode = "CU"
	PhoneNumberCountryCodeCw PhoneNumberCountryCode = "CW"
	PhoneNumberCountryCodeCy PhoneNumberCountryCode = "CY"
	PhoneNumberCountryCodeCz PhoneNumberCountryCode = "CZ"
	PhoneNumberCountryCodeCd PhoneNumberCountryCode = "CD"
	PhoneNumberCountryCodeDk PhoneNumberCountryCode = "DK"
	PhoneNumberCountryCodeDj PhoneNumberCountryCode = "DJ"
	PhoneNumberCountryCodeDm PhoneNumberCountryCode = "DM"
	PhoneNumberCountryCodeDo PhoneNumberCountryCode = "DO"
	PhoneNumberCountryCodeTl PhoneNumberCountryCode = "TL"
	PhoneNumberCountryCodeEc PhoneNumberCountryCode = "EC"
	PhoneNumberCountryCodeEg PhoneNumberCountryCode = "EG"
	PhoneNumberCountryCodeSv PhoneNumberCountryCode = "SV"
	PhoneNumberCountryCodeGq PhoneNumberCountryCode = "GQ"
	PhoneNumberCountryCodeEr PhoneNumberCountryCode = "ER"
	PhoneNumberCountryCodeEe PhoneNumberCountryCode = "EE"
	PhoneNumberCountryCodeEt PhoneNumberCountryCode = "ET"
	PhoneNumberCountryCodeFk PhoneNumberCountryCode = "FK"
	PhoneNumberCountryCodeFo PhoneNumberCountryCode = "FO"
	PhoneNumberCountryCodeFj PhoneNumberCountryCode = "FJ"
	PhoneNumberCountryCodeFi PhoneNumberCountryCode = "FI"
	PhoneNumberCountryCodeFr PhoneNumberCountryCode = "FR"
	PhoneNumberCountryCodePf PhoneNumberCountryCode = "PF"
	PhoneNumberCountryCodeGa PhoneNumberCountryCode = "GA"
	PhoneNumberCountryCodeGm PhoneNumberCountryCode = "GM"
	PhoneNumberCountryCodeGe PhoneNumberCountryCode = "GE"
	PhoneNumberCountryCodeDe PhoneNumberCountryCode = "DE"
	PhoneNumberCountryCodeGh PhoneNumberCountryCode = "GH"
	PhoneNumberCountryCodeGi PhoneNumberCountryCode = "GI"
	PhoneNumberCountryCodeGr PhoneNumberCountryCode = "GR"
	PhoneNumberCountryCodeGl PhoneNumberCountryCode = "GL"
	PhoneNumberCountryCodeGd PhoneNumberCountryCode = "GD"
	PhoneNumberCountryCodeGu PhoneNumberCountryCode = "GU"
	PhoneNumberCountryCodeGt PhoneNumberCountryCode = "GT"
	PhoneNumberCountryCodeGg PhoneNumberCountryCode = "GG"
	PhoneNumberCountryCodeGn PhoneNumberCountryCode = "GN"
	PhoneNumberCountryCodeGw PhoneNumberCountryCode = "GW"
	PhoneNumberCountryCodeGy PhoneNumberCountryCode = "GY"
	PhoneNumberCountryCodeHt PhoneNumberCountryCode = "HT"
	PhoneNumberCountryCodeHn PhoneNumberCountryCode = "HN"
	PhoneNumberCountryCodeHk PhoneNumberCountryCode = "HK"
	PhoneNumberCountryCodeHu PhoneNumberCountryCode = "HU"
	PhoneNumberCountryCodeIs PhoneNumberCountryCode = "IS"
	PhoneNumberCountryCodeIn PhoneNumberCountryCode = "IN"
	PhoneNumberCountryCodeId PhoneNumberCountryCode = "ID"
	PhoneNumberCountryCodeIr PhoneNumberCountryCode = "IR"
	PhoneNumberCountryCodeIq PhoneNumberCountryCode = "IQ"
	PhoneNumberCountryCodeIe PhoneNumberCountryCode = "IE"
	PhoneNumberCountryCodeIm PhoneNumberCountryCode = "IM"
	PhoneNumberCountryCodeIl PhoneNumberCountryCode = "IL"
	PhoneNumberCountryCodeIt PhoneNumberCountryCode = "IT"
	PhoneNumberCountryCodeCi PhoneNumberCountryCode = "CI"
	PhoneNumberCountryCodeJm PhoneNumberCountryCode = "JM"
	PhoneNumberCountryCodeJp PhoneNumberCountryCode = "JP"
	PhoneNumberCountryCodeJe PhoneNumberCountryCode = "JE"
	PhoneNumberCountryCodeJo PhoneNumberCountryCode = "JO"
	PhoneNumberCountryCodeKz PhoneNumberCountryCode = "KZ"
	PhoneNumberCountryCodeKe PhoneNumberCountryCode = "KE"
	PhoneNumberCountryCodeKi PhoneNumberCountryCode = "KI"
	PhoneNumberCountryCodeKw PhoneNumberCountryCode = "KW"
	PhoneNumberCountryCodeKg PhoneNumberCountryCode = "KG"
	PhoneNumberCountryCodeLa PhoneNumberCountryCode = "LA"
	PhoneNumberCountryCodeLv PhoneNumberCountryCode = "LV"
	PhoneNumberCountryCodeLb PhoneNumberCountryCode = "LB"
	PhoneNumberCountryCodeLs PhoneNumberCountryCode = "LS"
	PhoneNumberCountryCodeLr PhoneNumberCountryCode = "LR"
	PhoneNumberCountryCodeLy PhoneNumberCountryCode = "LY"
	PhoneNumberCountryCodeLi PhoneNumberCountryCode = "LI"
	PhoneNumberCountryCodeLt PhoneNumberCountryCode = "LT"
	PhoneNumberCountryCodeLu PhoneNumberCountryCode = "LU"
	PhoneNumberCountryCodeMo PhoneNumberCountryCode = "MO"
	PhoneNumberCountryCodeMk PhoneNumberCountryCode = "MK"
	PhoneNumberCountryCodeMg PhoneNumberCountryCode = "MG"
	PhoneNumberCountryCodeMw PhoneNumberCountryCode = "MW"
	PhoneNumberCountryCodeMy PhoneNumberCountryCode = "MY"
	PhoneNumberCountryCodeMv PhoneNumberCountryCode = "MV"
	PhoneNumberCountryCodeMl PhoneNumberCountryCode = "ML"
	PhoneNumberCountryCodeMt PhoneNumberCountryCode = "MT"
	PhoneNumberCountryCodeMh PhoneNumberCountryCode = "MH"
	PhoneNumberCountryCodeMr PhoneNumberCountryCode = "MR"
	PhoneNumberCountryCodeMu PhoneNumberCountryCode = "MU"
	PhoneNumberCountryCodeYt PhoneNumberCountryCode = "YT"
	PhoneNumberCountryCodeMx PhoneNumberCountryCode = "MX"
	PhoneNumberCountryCodeFm PhoneNumberCountryCode = "FM"
	PhoneNumberCountryCodeMd PhoneNumberCountryCode = "MD"
	PhoneNumberCountryCodeMc PhoneNumberCountryCode = "MC"
	PhoneNumberCountryCodeMn PhoneNumberCountryCode = "MN"
	PhoneNumberCountryCodeMe PhoneNumberCountryCode = "ME"
	PhoneNumberCountryCodeMs PhoneNumberCountryCode = "MS"
	PhoneNumberCountryCodeMa PhoneNumberCountryCode = "MA"
	PhoneNumberCountryCodeMz PhoneNumberCountryCode = "MZ"
	PhoneNumberCountryCodeMm PhoneNumberCountryCode = "MM"
	PhoneNumberCountryCodeNa PhoneNumberCountryCode = "NA"
	PhoneNumberCountryCodeNr PhoneNumberCountryCode = "NR"
	PhoneNumberCountryCodeNp PhoneNumberCountryCode = "NP"
	PhoneNumberCountryCodeNl PhoneNumberCountryCode = "NL"
	PhoneNumberCountryCodeAn PhoneNumberCountryCode = "AN"
	PhoneNumberCountryCodeNc PhoneNumberCountryCode = "NC"
	PhoneNumberCountryCodeNz PhoneNumberCountryCode = "NZ"
	PhoneNumberCountryCodeNi PhoneNumberCountryCode = "NI"
	PhoneNumberCountryCodeNe PhoneNumberCountryCode = "NE"
	PhoneNumberCountryCodeNg PhoneNumberCountryCode = "NG"
	PhoneNumberCountryCodeNu PhoneNumberCountryCode = "NU"
	PhoneNumberCountryCodeKp PhoneNumberCountryCode = "KP"
	PhoneNumberCountryCodeMp PhoneNumberCountryCode = "MP"
	PhoneNumberCountryCodeNo PhoneNumberCountryCode = "NO"
	PhoneNumberCountryCodeOm PhoneNumberCountryCode = "OM"
	PhoneNumberCountryCodePk PhoneNumberCountryCode = "PK"
	PhoneNumberCountryCodePw PhoneNumberCountryCode = "PW"
	PhoneNumberCountryCodePa PhoneNumberCountryCode = "PA"
	PhoneNumberCountryCodePg PhoneNumberCountryCode = "PG"
	PhoneNumberCountryCodePy PhoneNumberCountryCode = "PY"
	PhoneNumberCountryCodePe PhoneNumberCountryCode = "PE"
	PhoneNumberCountryCodePh PhoneNumberCountryCode = "PH"
	PhoneNumberCountryCodePn PhoneNumberCountryCode = "PN"
	PhoneNumberCountryCodePl PhoneNumberCountryCode = "PL"
	PhoneNumberCountryCodePt PhoneNumberCountryCode = "PT"
	PhoneNumberCountryCodePr PhoneNumberCountryCode = "PR"
	PhoneNumberCountryCodeQa PhoneNumberCountryCode = "QA"
	PhoneNumberCountryCodeCg PhoneNumberCountryCode = "CG"
	PhoneNumberCountryCodeRe PhoneNumberCountryCode = "RE"
	PhoneNumberCountryCodeRo PhoneNumberCountryCode = "RO"
	PhoneNumberCountryCodeRu PhoneNumberCountryCode = "RU"
	PhoneNumberCountryCodeRw PhoneNumberCountryCode = "RW"
	PhoneNumberCountryCodeBl PhoneNumberCountryCode = "BL"
	PhoneNumberCountryCodeSh PhoneNumberCountryCode = "SH"
	PhoneNumberCountryCodeKn PhoneNumberCountryCode = "KN"
	PhoneNumberCountryCodeLc PhoneNumberCountryCode = "LC"
	PhoneNumberCountryCodeMf PhoneNumberCountryCode = "MF"
	PhoneNumberCountryCodePm PhoneNumberCountryCode = "PM"
	PhoneNumberCountryCodeVc PhoneNumberCountryCode = "VC"
	PhoneNumberCountryCodeWs PhoneNumberCountryCode = "WS"
	PhoneNumberCountryCodeSm PhoneNumberCountryCode = "SM"
	PhoneNumberCountryCodeSt PhoneNumberCountryCode = "ST"
	PhoneNumberCountryCodeSa PhoneNumberCountryCode = "SA"
	PhoneNumberCountryCodeSn PhoneNumberCountryCode = "SN"
	PhoneNumberCountryCodeRs PhoneNumberCountryCode = "RS"
	PhoneNumberCountryCodeSc PhoneNumberCountryCode = "SC"
	PhoneNumberCountryCodeSl PhoneNumberCountryCode = "SL"
	PhoneNumberCountryCodeSg PhoneNumberCountryCode = "SG"
	PhoneNumberCountryCodeSx PhoneNumberCountryCode = "SX"
	PhoneNumberCountryCodeSk PhoneNumberCountryCode = "SK"
	PhoneNumberCountryCodeSi PhoneNumberCountryCode = "SI"
	PhoneNumberCountryCodeSb PhoneNumberCountryCode = "SB"
	PhoneNumberCountryCodeSo PhoneNumberCountryCode = "SO"
	PhoneNumberCountryCodeZa PhoneNumberCountryCode = "ZA"
	PhoneNumberCountryCodeKr PhoneNumberCountryCode = "KR"
	PhoneNumberCountryCodeEs PhoneNumberCountryCode = "ES"
	PhoneNumberCountryCodeLk PhoneNumberCountryCode = "LK"
	PhoneNumberCountryCodeSd PhoneNumberCountryCode = "SD"
	PhoneNumberCountryCodeSr PhoneNumberCountryCode = "SR"
	PhoneNumberCountryCodeSj PhoneNumberCountryCode = "SJ"
	PhoneNumberCountryCodeSz PhoneNumberCountryCode = "SZ"
	PhoneNumberCountryCodeSe PhoneNumberCountryCode = "SE"
	PhoneNumberCountryCodeCh PhoneNumberCountryCode = "CH"
	PhoneNumberCountryCodeSy PhoneNumberCountryCode = "SY"
	PhoneNumberCountryCodeTw PhoneNumberCountryCode = "TW"
	PhoneNumberCountryCodeTj PhoneNumberCountryCode = "TJ"
	PhoneNumberCountryCodeTz PhoneNumberCountryCode = "TZ"
	PhoneNumberCountryCodeTh PhoneNumberCountryCode = "TH"
	PhoneNumberCountryCodeTg PhoneNumberCountryCode = "TG"
	PhoneNumberCountryCodeTk PhoneNumberCountryCode = "TK"
	PhoneNumberCountryCodeTo PhoneNumberCountryCode = "TO"
	PhoneNumberCountryCodeTt PhoneNumberCountryCode = "TT"
	PhoneNumberCountryCodeTn PhoneNumberCountryCode = "TN"
	PhoneNumberCountryCodeTr PhoneNumberCountryCode = "TR"
	PhoneNumberCountryCodeTm PhoneNumberCountryCode = "TM"
	PhoneNumberCountryCodeTc PhoneNumberCountryCode = "TC"
	PhoneNumberCountryCodeTv PhoneNumberCountryCode = "TV"
	PhoneNumberCountryCodeVi PhoneNumberCountryCode = "VI"
	PhoneNumberCountryCodeUg PhoneNumberCountryCode = "UG"
	PhoneNumberCountryCodeUa PhoneNumberCountryCode = "UA"
	PhoneNumberCountryCodeAe PhoneNumberCountryCode = "AE"
	PhoneNumberCountryCodeGb PhoneNumberCountryCode = "GB"
	PhoneNumberCountryCodeUs PhoneNumberCountryCode = "US"
	PhoneNumberCountryCodeUy PhoneNumberCountryCode = "UY"
	PhoneNumberCountryCodeUz PhoneNumberCountryCode = "UZ"
	PhoneNumberCountryCodeVu PhoneNumberCountryCode = "VU"
	PhoneNumberCountryCodeVa PhoneNumberCountryCode = "VA"
	PhoneNumberCountryCodeVe PhoneNumberCountryCode = "VE"
	PhoneNumberCountryCodeVn PhoneNumberCountryCode = "VN"
	PhoneNumberCountryCodeWf PhoneNumberCountryCode = "WF"
	PhoneNumberCountryCodeEh PhoneNumberCountryCode = "EH"
	PhoneNumberCountryCodeYe PhoneNumberCountryCode = "YE"
	PhoneNumberCountryCodeZm PhoneNumberCountryCode = "ZM"
	PhoneNumberCountryCodeZw PhoneNumberCountryCode = "ZW"
)

// Values returns all known values for PhoneNumberCountryCode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PhoneNumberCountryCode) Values() []PhoneNumberCountryCode {
	return []PhoneNumberCountryCode{
		"AF",
		"AL",
		"DZ",
		"AS",
		"AD",
		"AO",
		"AI",
		"AQ",
		"AG",
		"AR",
		"AM",
		"AW",
		"AU",
		"AT",
		"AZ",
		"BS",
		"BH",
		"BD",
		"BB",
		"BY",
		"BE",
		"BZ",
		"BJ",
		"BM",
		"BT",
		"BO",
		"BA",
		"BW",
		"BR",
		"IO",
		"VG",
		"BN",
		"BG",
		"BF",
		"BI",
		"KH",
		"CM",
		"CA",
		"CV",
		"KY",
		"CF",
		"TD",
		"CL",
		"CN",
		"CX",
		"CC",
		"CO",
		"KM",
		"CK",
		"CR",
		"HR",
		"CU",
		"CW",
		"CY",
		"CZ",
		"CD",
		"DK",
		"DJ",
		"DM",
		"DO",
		"TL",
		"EC",
		"EG",
		"SV",
		"GQ",
		"ER",
		"EE",
		"ET",
		"FK",
		"FO",
		"FJ",
		"FI",
		"FR",
		"PF",
		"GA",
		"GM",
		"GE",
		"DE",
		"GH",
		"GI",
		"GR",
		"GL",
		"GD",
		"GU",
		"GT",
		"GG",
		"GN",
		"GW",
		"GY",
		"HT",
		"HN",
		"HK",
		"HU",
		"IS",
		"IN",
		"ID",
		"IR",
		"IQ",
		"IE",
		"IM",
		"IL",
		"IT",
		"CI",
		"JM",
		"JP",
		"JE",
		"JO",
		"KZ",
		"KE",
		"KI",
		"KW",
		"KG",
		"LA",
		"LV",
		"LB",
		"LS",
		"LR",
		"LY",
		"LI",
		"LT",
		"LU",
		"MO",
		"MK",
		"MG",
		"MW",
		"MY",
		"MV",
		"ML",
		"MT",
		"MH",
		"MR",
		"MU",
		"YT",
		"MX",
		"FM",
		"MD",
		"MC",
		"MN",
		"ME",
		"MS",
		"MA",
		"MZ",
		"MM",
		"NA",
		"NR",
		"NP",
		"NL",
		"AN",
		"NC",
		"NZ",
		"NI",
		"NE",
		"NG",
		"NU",
		"KP",
		"MP",
		"NO",
		"OM",
		"PK",
		"PW",
		"PA",
		"PG",
		"PY",
		"PE",
		"PH",
		"PN",
		"PL",
		"PT",
		"PR",
		"QA",
		"CG",
		"RE",
		"RO",
		"RU",
		"RW",
		"BL",
		"SH",
		"KN",
		"LC",
		"MF",
		"PM",
		"VC",
		"WS",
		"SM",
		"ST",
		"SA",
		"SN",
		"RS",
		"SC",
		"SL",
		"SG",
		"SX",
		"SK",
		"SI",
		"SB",
		"SO",
		"ZA",
		"KR",
		"ES",
		"LK",
		"SD",
		"SR",
		"SJ",
		"SZ",
		"SE",
		"CH",
		"SY",
		"TW",
		"TJ",
		"TZ",
		"TH",
		"TG",
		"TK",
		"TO",
		"TT",
		"TN",
		"TR",
		"TM",
		"TC",
		"TV",
		"VI",
		"UG",
		"UA",
		"AE",
		"GB",
		"US",
		"UY",
		"UZ",
		"VU",
		"VA",
		"VE",
		"VN",
		"WF",
		"EH",
		"YE",
		"ZM",
		"ZW",
	}
}

type PhoneNumberType string

// Enum values for PhoneNumberType
const (
	PhoneNumberTypeTollFree      PhoneNumberType = "TOLL_FREE"
	PhoneNumberTypeDid           PhoneNumberType = "DID"
	PhoneNumberTypeUifn          PhoneNumberType = "UIFN"
	PhoneNumberTypeShared        PhoneNumberType = "SHARED"
	PhoneNumberTypeThirdPartyTf  PhoneNumberType = "THIRD_PARTY_TF"
	PhoneNumberTypeThirdPartyDid PhoneNumberType = "THIRD_PARTY_DID"
	PhoneNumberTypeShortCode     PhoneNumberType = "SHORT_CODE"
)

// Values returns all known values for PhoneNumberType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PhoneNumberType) Values() []PhoneNumberType {
	return []PhoneNumberType{
		"TOLL_FREE",
		"DID",
		"UIFN",
		"SHARED",
		"THIRD_PARTY_TF",
		"THIRD_PARTY_DID",
		"SHORT_CODE",
	}
}

type PhoneNumberWorkflowStatus string

// Enum values for PhoneNumberWorkflowStatus
const (
	PhoneNumberWorkflowStatusClaimed    PhoneNumberWorkflowStatus = "CLAIMED"
	PhoneNumberWorkflowStatusInProgress PhoneNumberWorkflowStatus = "IN_PROGRESS"
	PhoneNumberWorkflowStatusFailed     PhoneNumberWorkflowStatus = "FAILED"
)

// Values returns all known values for PhoneNumberWorkflowStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PhoneNumberWorkflowStatus) Values() []PhoneNumberWorkflowStatus {
	return []PhoneNumberWorkflowStatus{
		"CLAIMED",
		"IN_PROGRESS",
		"FAILED",
	}
}

type PhoneType string

// Enum values for PhoneType
const (
	PhoneTypeSoftPhone PhoneType = "SOFT_PHONE"
	PhoneTypeDeskPhone PhoneType = "DESK_PHONE"
)

// Values returns all known values for PhoneType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PhoneType) Values() []PhoneType {
	return []PhoneType{
		"SOFT_PHONE",
		"DESK_PHONE",
	}
}

type PropertyValidationExceptionReason string

// Enum values for PropertyValidationExceptionReason
const (
	PropertyValidationExceptionReasonInvalidFormat              PropertyValidationExceptionReason = "INVALID_FORMAT"
	PropertyValidationExceptionReasonUniqueConstraintViolated   PropertyValidationExceptionReason = "UNIQUE_CONSTRAINT_VIOLATED"
	PropertyValidationExceptionReasonReferencedResourceNotFound PropertyValidationExceptionReason = "REFERENCED_RESOURCE_NOT_FOUND"
	PropertyValidationExceptionReasonResourceNameAlreadyExists  PropertyValidationExceptionReason = "RESOURCE_NAME_ALREADY_EXISTS"
	PropertyValidationExceptionReasonRequiredPropertyMissing    PropertyValidationExceptionReason = "REQUIRED_PROPERTY_MISSING"
	PropertyValidationExceptionReasonNotSupported               PropertyValidationExceptionReason = "NOT_SUPPORTED"
)

// Values returns all known values for PropertyValidationExceptionReason. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PropertyValidationExceptionReason) Values() []PropertyValidationExceptionReason {
	return []PropertyValidationExceptionReason{
		"INVALID_FORMAT",
		"UNIQUE_CONSTRAINT_VIOLATED",
		"REFERENCED_RESOURCE_NOT_FOUND",
		"RESOURCE_NAME_ALREADY_EXISTS",
		"REQUIRED_PROPERTY_MISSING",
		"NOT_SUPPORTED",
	}
}

type QueueStatus string

// Enum values for QueueStatus
const (
	QueueStatusEnabled  QueueStatus = "ENABLED"
	QueueStatusDisabled QueueStatus = "DISABLED"
)

// Values returns all known values for QueueStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueueStatus) Values() []QueueStatus {
	return []QueueStatus{
		"ENABLED",
		"DISABLED",
	}
}

type QueueType string

// Enum values for QueueType
const (
	QueueTypeStandard QueueType = "STANDARD"
	QueueTypeAgent    QueueType = "AGENT"
)

// Values returns all known values for QueueType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueueType) Values() []QueueType {
	return []QueueType{
		"STANDARD",
		"AGENT",
	}
}

type QuickConnectType string

// Enum values for QuickConnectType
const (
	QuickConnectTypeUser        QuickConnectType = "USER"
	QuickConnectTypeQueue       QuickConnectType = "QUEUE"
	QuickConnectTypePhoneNumber QuickConnectType = "PHONE_NUMBER"
)

// Values returns all known values for QuickConnectType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QuickConnectType) Values() []QuickConnectType {
	return []QuickConnectType{
		"USER",
		"QUEUE",
		"PHONE_NUMBER",
	}
}

type RealTimeContactAnalysisOutputType string

// Enum values for RealTimeContactAnalysisOutputType
const (
	RealTimeContactAnalysisOutputTypeRaw      RealTimeContactAnalysisOutputType = "Raw"
	RealTimeContactAnalysisOutputTypeRedacted RealTimeContactAnalysisOutputType = "Redacted"
)

// Values returns all known values for RealTimeContactAnalysisOutputType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RealTimeContactAnalysisOutputType) Values() []RealTimeContactAnalysisOutputType {
	return []RealTimeContactAnalysisOutputType{
		"Raw",
		"Redacted",
	}
}

type RealTimeContactAnalysisPostContactSummaryFailureCode string

// Enum values for RealTimeContactAnalysisPostContactSummaryFailureCode
const (
	RealTimeContactAnalysisPostContactSummaryFailureCodeQuotaExceeded                   RealTimeContactAnalysisPostContactSummaryFailureCode = "QUOTA_EXCEEDED"
	RealTimeContactAnalysisPostContactSummaryFailureCodeInsufficientConversationContent RealTimeContactAnalysisPostContactSummaryFailureCode = "INSUFFICIENT_CONVERSATION_CONTENT"
	RealTimeContactAnalysisPostContactSummaryFailureCodeFailedSafetyGuidelines          RealTimeContactAnalysisPostContactSummaryFailureCode = "FAILED_SAFETY_GUIDELINES"
	RealTimeContactAnalysisPostContactSummaryFailureCodeInvalidAnalysisConfiguration    RealTimeContactAnalysisPostContactSummaryFailureCode = "INVALID_ANALYSIS_CONFIGURATION"
	RealTimeContactAnalysisPostContactSummaryFailureCodeInternalError                   RealTimeContactAnalysisPostContactSummaryFailureCode = "INTERNAL_ERROR"
)

// Values returns all known values for
// RealTimeContactAnalysisPostContactSummaryFailureCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RealTimeContactAnalysisPostContactSummaryFailureCode) Values() []RealTimeContactAnalysisPostContactSummaryFailureCode {
	return []RealTimeContactAnalysisPostContactSummaryFailureCode{
		"QUOTA_EXCEEDED",
		"INSUFFICIENT_CONVERSATION_CONTENT",
		"FAILED_SAFETY_GUIDELINES",
		"INVALID_ANALYSIS_CONFIGURATION",
		"INTERNAL_ERROR",
	}
}

type RealTimeContactAnalysisPostContactSummaryStatus string

// Enum values for RealTimeContactAnalysisPostContactSummaryStatus
const (
	RealTimeContactAnalysisPostContactSummaryStatusFailed    RealTimeContactAnalysisPostContactSummaryStatus = "FAILED"
	RealTimeContactAnalysisPostContactSummaryStatusCompleted RealTimeContactAnalysisPostContactSummaryStatus = "COMPLETED"
)

// Values returns all known values for
// RealTimeContactAnalysisPostContactSummaryStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RealTimeContactAnalysisPostContactSummaryStatus) Values() []RealTimeContactAnalysisPostContactSummaryStatus {
	return []RealTimeContactAnalysisPostContactSummaryStatus{
		"FAILED",
		"COMPLETED",
	}
}

type RealTimeContactAnalysisSegmentType string

// Enum values for RealTimeContactAnalysisSegmentType
const (
	RealTimeContactAnalysisSegmentTypeTranscript         RealTimeContactAnalysisSegmentType = "Transcript"
	RealTimeContactAnalysisSegmentTypeCategories         RealTimeContactAnalysisSegmentType = "Categories"
	RealTimeContactAnalysisSegmentTypeIssues             RealTimeContactAnalysisSegmentType = "Issues"
	RealTimeContactAnalysisSegmentTypeEvent              RealTimeContactAnalysisSegmentType = "Event"
	RealTimeContactAnalysisSegmentTypeAttachments        RealTimeContactAnalysisSegmentType = "Attachments"
	RealTimeContactAnalysisSegmentTypePostContactSummary RealTimeContactAnalysisSegmentType = "PostContactSummary"
)

// Values returns all known values for RealTimeContactAnalysisSegmentType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RealTimeContactAnalysisSegmentType) Values() []RealTimeContactAnalysisSegmentType {
	return []RealTimeContactAnalysisSegmentType{
		"Transcript",
		"Categories",
		"Issues",
		"Event",
		"Attachments",
		"PostContactSummary",
	}
}

type RealTimeContactAnalysisSentimentLabel string

// Enum values for RealTimeContactAnalysisSentimentLabel
const (
	RealTimeContactAnalysisSentimentLabelPositive RealTimeContactAnalysisSentimentLabel = "POSITIVE"
	RealTimeContactAnalysisSentimentLabelNegative RealTimeContactAnalysisSentimentLabel = "NEGATIVE"
	RealTimeContactAnalysisSentimentLabelNeutral  RealTimeContactAnalysisSentimentLabel = "NEUTRAL"
)

// Values returns all known values for RealTimeContactAnalysisSentimentLabel. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RealTimeContactAnalysisSentimentLabel) Values() []RealTimeContactAnalysisSentimentLabel {
	return []RealTimeContactAnalysisSentimentLabel{
		"POSITIVE",
		"NEGATIVE",
		"NEUTRAL",
	}
}

type RealTimeContactAnalysisStatus string

// Enum values for RealTimeContactAnalysisStatus
const (
	RealTimeContactAnalysisStatusInProgress RealTimeContactAnalysisStatus = "IN_PROGRESS"
	RealTimeContactAnalysisStatusFailed     RealTimeContactAnalysisStatus = "FAILED"
	RealTimeContactAnalysisStatusCompleted  RealTimeContactAnalysisStatus = "COMPLETED"
)

// Values returns all known values for RealTimeContactAnalysisStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RealTimeContactAnalysisStatus) Values() []RealTimeContactAnalysisStatus {
	return []RealTimeContactAnalysisStatus{
		"IN_PROGRESS",
		"FAILED",
		"COMPLETED",
	}
}

type RealTimeContactAnalysisSupportedChannel string

// Enum values for RealTimeContactAnalysisSupportedChannel
const (
	RealTimeContactAnalysisSupportedChannelVoice RealTimeContactAnalysisSupportedChannel = "VOICE"
	RealTimeContactAnalysisSupportedChannelChat  RealTimeContactAnalysisSupportedChannel = "CHAT"
)

// Values returns all known values for RealTimeContactAnalysisSupportedChannel.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RealTimeContactAnalysisSupportedChannel) Values() []RealTimeContactAnalysisSupportedChannel {
	return []RealTimeContactAnalysisSupportedChannel{
		"VOICE",
		"CHAT",
	}
}

type RecordingStatus string

// Enum values for RecordingStatus
const (
	RecordingStatusAvailable RecordingStatus = "AVAILABLE"
	RecordingStatusDeleted   RecordingStatus = "DELETED"
)

// Values returns all known values for RecordingStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecordingStatus) Values() []RecordingStatus {
	return []RecordingStatus{
		"AVAILABLE",
		"DELETED",
	}
}

type ReferenceStatus string

// Enum values for ReferenceStatus
const (
	ReferenceStatusAvailable  ReferenceStatus = "AVAILABLE"
	ReferenceStatusDeleted    ReferenceStatus = "DELETED"
	ReferenceStatusApproved   ReferenceStatus = "APPROVED"
	ReferenceStatusRejected   ReferenceStatus = "REJECTED"
	ReferenceStatusProcessing ReferenceStatus = "PROCESSING"
	ReferenceStatusFailed     ReferenceStatus = "FAILED"
)

// Values returns all known values for ReferenceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReferenceStatus) Values() []ReferenceStatus {
	return []ReferenceStatus{
		"AVAILABLE",
		"DELETED",
		"APPROVED",
		"REJECTED",
		"PROCESSING",
		"FAILED",
	}
}

type ReferenceType string

// Enum values for ReferenceType
const (
	ReferenceTypeUrl             ReferenceType = "URL"
	ReferenceTypeAttachment      ReferenceType = "ATTACHMENT"
	ReferenceTypeContactAnalysis ReferenceType = "CONTACT_ANALYSIS"
	ReferenceTypeNumber          ReferenceType = "NUMBER"
	ReferenceTypeString          ReferenceType = "STRING"
	ReferenceTypeDate            ReferenceType = "DATE"
	ReferenceTypeEmail           ReferenceType = "EMAIL"
	ReferenceTypeEmailMessage    ReferenceType = "EMAIL_MESSAGE"
)

// Values returns all known values for ReferenceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReferenceType) Values() []ReferenceType {
	return []ReferenceType{
		"URL",
		"ATTACHMENT",
		"CONTACT_ANALYSIS",
		"NUMBER",
		"STRING",
		"DATE",
		"EMAIL",
		"EMAIL_MESSAGE",
	}
}

type RehydrationType string

// Enum values for RehydrationType
const (
	RehydrationTypeEntirePastSession RehydrationType = "ENTIRE_PAST_SESSION"
	RehydrationTypeFromSegment       RehydrationType = "FROM_SEGMENT"
)

// Values returns all known values for RehydrationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RehydrationType) Values() []RehydrationType {
	return []RehydrationType{
		"ENTIRE_PAST_SESSION",
		"FROM_SEGMENT",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeContact        ResourceType = "CONTACT"
	ResourceTypeContactFlow    ResourceType = "CONTACT_FLOW"
	ResourceTypeInstance       ResourceType = "INSTANCE"
	ResourceTypeParticipant    ResourceType = "PARTICIPANT"
	ResourceTypeHierarchyLevel ResourceType = "HIERARCHY_LEVEL"
	ResourceTypeHierarchyGroup ResourceType = "HIERARCHY_GROUP"
	ResourceTypeUser           ResourceType = "USER"
	ResourceTypePhoneNumber    ResourceType = "PHONE_NUMBER"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"CONTACT",
		"CONTACT_FLOW",
		"INSTANCE",
		"PARTICIPANT",
		"HIERARCHY_LEVEL",
		"HIERARCHY_GROUP",
		"USER",
		"PHONE_NUMBER",
	}
}

type RoutingCriteriaStepStatus string

// Enum values for RoutingCriteriaStepStatus
const (
	RoutingCriteriaStepStatusActive   RoutingCriteriaStepStatus = "ACTIVE"
	RoutingCriteriaStepStatusInactive RoutingCriteriaStepStatus = "INACTIVE"
	RoutingCriteriaStepStatusJoined   RoutingCriteriaStepStatus = "JOINED"
	RoutingCriteriaStepStatusExpired  RoutingCriteriaStepStatus = "EXPIRED"
)

// Values returns all known values for RoutingCriteriaStepStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RoutingCriteriaStepStatus) Values() []RoutingCriteriaStepStatus {
	return []RoutingCriteriaStepStatus{
		"ACTIVE",
		"INACTIVE",
		"JOINED",
		"EXPIRED",
	}
}

type RulePublishStatus string

// Enum values for RulePublishStatus
const (
	RulePublishStatusDraft     RulePublishStatus = "DRAFT"
	RulePublishStatusPublished RulePublishStatus = "PUBLISHED"
)

// Values returns all known values for RulePublishStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RulePublishStatus) Values() []RulePublishStatus {
	return []RulePublishStatus{
		"DRAFT",
		"PUBLISHED",
	}
}

type ScreenShareCapability string

// Enum values for ScreenShareCapability
const (
	ScreenShareCapabilitySend ScreenShareCapability = "SEND"
)

// Values returns all known values for ScreenShareCapability. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScreenShareCapability) Values() []ScreenShareCapability {
	return []ScreenShareCapability{
		"SEND",
	}
}

type SearchableQueueType string

// Enum values for SearchableQueueType
const (
	SearchableQueueTypeStandard SearchableQueueType = "STANDARD"
)

// Values returns all known values for SearchableQueueType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SearchableQueueType) Values() []SearchableQueueType {
	return []SearchableQueueType{
		"STANDARD",
	}
}

type SearchContactsMatchType string

// Enum values for SearchContactsMatchType
const (
	SearchContactsMatchTypeMatchAll SearchContactsMatchType = "MATCH_ALL"
	SearchContactsMatchTypeMatchAny SearchContactsMatchType = "MATCH_ANY"
)

// Values returns all known values for SearchContactsMatchType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SearchContactsMatchType) Values() []SearchContactsMatchType {
	return []SearchContactsMatchType{
		"MATCH_ALL",
		"MATCH_ANY",
	}
}

type SearchContactsTimeRangeType string

// Enum values for SearchContactsTimeRangeType
const (
	SearchContactsTimeRangeTypeInitiationTimestamp       SearchContactsTimeRangeType = "INITIATION_TIMESTAMP"
	SearchContactsTimeRangeTypeScheduledTimestamp        SearchContactsTimeRangeType = "SCHEDULED_TIMESTAMP"
	SearchContactsTimeRangeTypeConnectedToAgentTimestamp SearchContactsTimeRangeType = "CONNECTED_TO_AGENT_TIMESTAMP"
	SearchContactsTimeRangeTypeDisconnectTimestamp       SearchContactsTimeRangeType = "DISCONNECT_TIMESTAMP"
)

// Values returns all known values for SearchContactsTimeRangeType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SearchContactsTimeRangeType) Values() []SearchContactsTimeRangeType {
	return []SearchContactsTimeRangeType{
		"INITIATION_TIMESTAMP",
		"SCHEDULED_TIMESTAMP",
		"CONNECTED_TO_AGENT_TIMESTAMP",
		"DISCONNECT_TIMESTAMP",
	}
}

type SingleSelectQuestionRuleCategoryAutomationCondition string

// Enum values for SingleSelectQuestionRuleCategoryAutomationCondition
const (
	SingleSelectQuestionRuleCategoryAutomationConditionPresent    SingleSelectQuestionRuleCategoryAutomationCondition = "PRESENT"
	SingleSelectQuestionRuleCategoryAutomationConditionNotPresent SingleSelectQuestionRuleCategoryAutomationCondition = "NOT_PRESENT"
)

// Values returns all known values for
// SingleSelectQuestionRuleCategoryAutomationCondition. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SingleSelectQuestionRuleCategoryAutomationCondition) Values() []SingleSelectQuestionRuleCategoryAutomationCondition {
	return []SingleSelectQuestionRuleCategoryAutomationCondition{
		"PRESENT",
		"NOT_PRESENT",
	}
}

type SlaAssignmentType string

// Enum values for SlaAssignmentType
const (
	SlaAssignmentTypeCases SlaAssignmentType = "CASES"
)

// Values returns all known values for SlaAssignmentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlaAssignmentType) Values() []SlaAssignmentType {
	return []SlaAssignmentType{
		"CASES",
	}
}

type SlaType string

// Enum values for SlaType
const (
	SlaTypeCaseField SlaType = "CaseField"
)

// Values returns all known values for SlaType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlaType) Values() []SlaType {
	return []SlaType{
		"CaseField",
	}
}

type SortableFieldName string

// Enum values for SortableFieldName
const (
	SortableFieldNameInitiationTimestamp       SortableFieldName = "INITIATION_TIMESTAMP"
	SortableFieldNameScheduledTimestamp        SortableFieldName = "SCHEDULED_TIMESTAMP"
	SortableFieldNameConnectedToAgentTimestamp SortableFieldName = "CONNECTED_TO_AGENT_TIMESTAMP"
	SortableFieldNameDisconnectTimestamp       SortableFieldName = "DISCONNECT_TIMESTAMP"
	SortableFieldNameInitiationMethod          SortableFieldName = "INITIATION_METHOD"
	SortableFieldNameChannel                   SortableFieldName = "CHANNEL"
)

// Values returns all known values for SortableFieldName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortableFieldName) Values() []SortableFieldName {
	return []SortableFieldName{
		"INITIATION_TIMESTAMP",
		"SCHEDULED_TIMESTAMP",
		"CONNECTED_TO_AGENT_TIMESTAMP",
		"DISCONNECT_TIMESTAMP",
		"INITIATION_METHOD",
		"CHANNEL",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "ASCENDING"
	SortOrderDescending SortOrder = "DESCENDING"
)

// Values returns all known values for SortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"ASCENDING",
		"DESCENDING",
	}
}

type SourceType string

// Enum values for SourceType
const (
	SourceTypeSalesforce SourceType = "SALESFORCE"
	SourceTypeZendesk    SourceType = "ZENDESK"
	SourceTypeCases      SourceType = "CASES"
)

// Values returns all known values for SourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SourceType) Values() []SourceType {
	return []SourceType{
		"SALESFORCE",
		"ZENDESK",
		"CASES",
	}
}

type Statistic string

// Enum values for Statistic
const (
	StatisticSum Statistic = "SUM"
	StatisticMax Statistic = "MAX"
	StatisticAvg Statistic = "AVG"
)

// Values returns all known values for Statistic. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Statistic) Values() []Statistic {
	return []Statistic{
		"SUM",
		"MAX",
		"AVG",
	}
}

type Status string

// Enum values for Status
const (
	StatusComplete   Status = "COMPLETE"
	StatusInProgress Status = "IN_PROGRESS"
	StatusDeleted    Status = "DELETED"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"COMPLETE",
		"IN_PROGRESS",
		"DELETED",
	}
}

type StorageType string

// Enum values for StorageType
const (
	StorageTypeS3                 StorageType = "S3"
	StorageTypeKinesisVideoStream StorageType = "KINESIS_VIDEO_STREAM"
	StorageTypeKinesisStream      StorageType = "KINESIS_STREAM"
	StorageTypeKinesisFirehose    StorageType = "KINESIS_FIREHOSE"
)

// Values returns all known values for StorageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StorageType) Values() []StorageType {
	return []StorageType{
		"S3",
		"KINESIS_VIDEO_STREAM",
		"KINESIS_STREAM",
		"KINESIS_FIREHOSE",
	}
}

type StringComparisonType string

// Enum values for StringComparisonType
const (
	StringComparisonTypeStartsWith StringComparisonType = "STARTS_WITH"
	StringComparisonTypeContains   StringComparisonType = "CONTAINS"
	StringComparisonTypeExact      StringComparisonType = "EXACT"
)

// Values returns all known values for StringComparisonType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StringComparisonType) Values() []StringComparisonType {
	return []StringComparisonType{
		"STARTS_WITH",
		"CONTAINS",
		"EXACT",
	}
}

type TargetListType string

// Enum values for TargetListType
const (
	TargetListTypeProficiencies TargetListType = "PROFICIENCIES"
)

// Values returns all known values for TargetListType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetListType) Values() []TargetListType {
	return []TargetListType{
		"PROFICIENCIES",
	}
}

type TaskTemplateFieldType string

// Enum values for TaskTemplateFieldType
const (
	TaskTemplateFieldTypeName           TaskTemplateFieldType = "NAME"
	TaskTemplateFieldTypeDescription    TaskTemplateFieldType = "DESCRIPTION"
	TaskTemplateFieldTypeScheduledTime  TaskTemplateFieldType = "SCHEDULED_TIME"
	TaskTemplateFieldTypeQuickConnect   TaskTemplateFieldType = "QUICK_CONNECT"
	TaskTemplateFieldTypeUrl            TaskTemplateFieldType = "URL"
	TaskTemplateFieldTypeNumber         TaskTemplateFieldType = "NUMBER"
	TaskTemplateFieldTypeText           TaskTemplateFieldType = "TEXT"
	TaskTemplateFieldTypeTextArea       TaskTemplateFieldType = "TEXT_AREA"
	TaskTemplateFieldTypeDateTime       TaskTemplateFieldType = "DATE_TIME"
	TaskTemplateFieldTypeBoolean        TaskTemplateFieldType = "BOOLEAN"
	TaskTemplateFieldTypeSingleSelect   TaskTemplateFieldType = "SINGLE_SELECT"
	TaskTemplateFieldTypeEmail          TaskTemplateFieldType = "EMAIL"
	TaskTemplateFieldTypeSelfAssign     TaskTemplateFieldType = "SELF_ASSIGN"
	TaskTemplateFieldTypeExpiryDuration TaskTemplateFieldType = "EXPIRY_DURATION"
)

// Values returns all known values for TaskTemplateFieldType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TaskTemplateFieldType) Values() []TaskTemplateFieldType {
	return []TaskTemplateFieldType{
		"NAME",
		"DESCRIPTION",
		"SCHEDULED_TIME",
		"QUICK_CONNECT",
		"URL",
		"NUMBER",
		"TEXT",
		"TEXT_AREA",
		"DATE_TIME",
		"BOOLEAN",
		"SINGLE_SELECT",
		"EMAIL",
		"SELF_ASSIGN",
		"EXPIRY_DURATION",
	}
}

type TaskTemplateStatus string

// Enum values for TaskTemplateStatus
const (
	TaskTemplateStatusActive   TaskTemplateStatus = "ACTIVE"
	TaskTemplateStatusInactive TaskTemplateStatus = "INACTIVE"
)

// Values returns all known values for TaskTemplateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TaskTemplateStatus) Values() []TaskTemplateStatus {
	return []TaskTemplateStatus{
		"ACTIVE",
		"INACTIVE",
	}
}

type TimerEligibleParticipantRoles string

// Enum values for TimerEligibleParticipantRoles
const (
	TimerEligibleParticipantRolesCustomer TimerEligibleParticipantRoles = "CUSTOMER"
	TimerEligibleParticipantRolesAgent    TimerEligibleParticipantRoles = "AGENT"
)

// Values returns all known values for TimerEligibleParticipantRoles. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TimerEligibleParticipantRoles) Values() []TimerEligibleParticipantRoles {
	return []TimerEligibleParticipantRoles{
		"CUSTOMER",
		"AGENT",
	}
}

type TrafficDistributionGroupStatus string

// Enum values for TrafficDistributionGroupStatus
const (
	TrafficDistributionGroupStatusCreationInProgress TrafficDistributionGroupStatus = "CREATION_IN_PROGRESS"
	TrafficDistributionGroupStatusActive             TrafficDistributionGroupStatus = "ACTIVE"
	TrafficDistributionGroupStatusCreationFailed     TrafficDistributionGroupStatus = "CREATION_FAILED"
	TrafficDistributionGroupStatusPendingDeletion    TrafficDistributionGroupStatus = "PENDING_DELETION"
	TrafficDistributionGroupStatusDeletionFailed     TrafficDistributionGroupStatus = "DELETION_FAILED"
	TrafficDistributionGroupStatusUpdateInProgress   TrafficDistributionGroupStatus = "UPDATE_IN_PROGRESS"
)

// Values returns all known values for TrafficDistributionGroupStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrafficDistributionGroupStatus) Values() []TrafficDistributionGroupStatus {
	return []TrafficDistributionGroupStatus{
		"CREATION_IN_PROGRESS",
		"ACTIVE",
		"CREATION_FAILED",
		"PENDING_DELETION",
		"DELETION_FAILED",
		"UPDATE_IN_PROGRESS",
	}
}

type TrafficType string

// Enum values for TrafficType
const (
	TrafficTypeGeneral  TrafficType = "GENERAL"
	TrafficTypeCampaign TrafficType = "CAMPAIGN"
)

// Values returns all known values for TrafficType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrafficType) Values() []TrafficType {
	return []TrafficType{
		"GENERAL",
		"CAMPAIGN",
	}
}

type Unit string

// Enum values for Unit
const (
	UnitSeconds Unit = "SECONDS"
	UnitCount   Unit = "COUNT"
	UnitPercent Unit = "PERCENT"
)

// Values returns all known values for Unit. Note that this can be expanded in the
// future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Unit) Values() []Unit {
	return []Unit{
		"SECONDS",
		"COUNT",
		"PERCENT",
	}
}

type UseCaseType string

// Enum values for UseCaseType
const (
	UseCaseTypeRulesEvaluation  UseCaseType = "RULES_EVALUATION"
	UseCaseTypeConnectCampaigns UseCaseType = "CONNECT_CAMPAIGNS"
)

// Values returns all known values for UseCaseType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UseCaseType) Values() []UseCaseType {
	return []UseCaseType{
		"RULES_EVALUATION",
		"CONNECT_CAMPAIGNS",
	}
}

type VideoCapability string

// Enum values for VideoCapability
const (
	VideoCapabilitySend VideoCapability = "SEND"
)

// Values returns all known values for VideoCapability. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VideoCapability) Values() []VideoCapability {
	return []VideoCapability{
		"SEND",
	}
}

type ViewStatus string

// Enum values for ViewStatus
const (
	ViewStatusPublished ViewStatus = "PUBLISHED"
	ViewStatusSaved     ViewStatus = "SAVED"
)

// Values returns all known values for ViewStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ViewStatus) Values() []ViewStatus {
	return []ViewStatus{
		"PUBLISHED",
		"SAVED",
	}
}

type ViewType string

// Enum values for ViewType
const (
	ViewTypeCustomerManaged ViewType = "CUSTOMER_MANAGED"
	ViewTypeAwsManaged      ViewType = "AWS_MANAGED"
)

// Values returns all known values for ViewType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ViewType) Values() []ViewType {
	return []ViewType{
		"CUSTOMER_MANAGED",
		"AWS_MANAGED",
	}
}

type VocabularyLanguageCode string

// Enum values for VocabularyLanguageCode
const (
	VocabularyLanguageCodeArAe VocabularyLanguageCode = "ar-AE"
	VocabularyLanguageCodeDeCh VocabularyLanguageCode = "de-CH"
	VocabularyLanguageCodeDeDe VocabularyLanguageCode = "de-DE"
	VocabularyLanguageCodeEnAb VocabularyLanguageCode = "en-AB"
	VocabularyLanguageCodeEnAu VocabularyLanguageCode = "en-AU"
	VocabularyLanguageCodeEnGb VocabularyLanguageCode = "en-GB"
	VocabularyLanguageCodeEnIe VocabularyLanguageCode = "en-IE"
	VocabularyLanguageCodeEnIn VocabularyLanguageCode = "en-IN"
	VocabularyLanguageCodeEnUs VocabularyLanguageCode = "en-US"
	VocabularyLanguageCodeEnWl VocabularyLanguageCode = "en-WL"
	VocabularyLanguageCodeEsEs VocabularyLanguageCode = "es-ES"
	VocabularyLanguageCodeEsUs VocabularyLanguageCode = "es-US"
	VocabularyLanguageCodeFrCa VocabularyLanguageCode = "fr-CA"
	VocabularyLanguageCodeFrFr VocabularyLanguageCode = "fr-FR"
	VocabularyLanguageCodeHiIn VocabularyLanguageCode = "hi-IN"
	VocabularyLanguageCodeItIt VocabularyLanguageCode = "it-IT"
	VocabularyLanguageCodeJaJp VocabularyLanguageCode = "ja-JP"
	VocabularyLanguageCodeKoKr VocabularyLanguageCode = "ko-KR"
	VocabularyLanguageCodePtBr VocabularyLanguageCode = "pt-BR"
	VocabularyLanguageCodePtPt VocabularyLanguageCode = "pt-PT"
	VocabularyLanguageCodeZhCn VocabularyLanguageCode = "zh-CN"
	VocabularyLanguageCodeEnNz VocabularyLanguageCode = "en-NZ"
	VocabularyLanguageCodeEnZa VocabularyLanguageCode = "en-ZA"
	VocabularyLanguageCodeCaEs VocabularyLanguageCode = "ca-ES"
	VocabularyLanguageCodeDaDk VocabularyLanguageCode = "da-DK"
	VocabularyLanguageCodeFiFi VocabularyLanguageCode = "fi-FI"
	VocabularyLanguageCodeIdId VocabularyLanguageCode = "id-ID"
	VocabularyLanguageCodeMsMy VocabularyLanguageCode = "ms-MY"
	VocabularyLanguageCodeNlNl VocabularyLanguageCode = "nl-NL"
	VocabularyLanguageCodeNoNo VocabularyLanguageCode = "no-NO"
	VocabularyLanguageCodePlPl VocabularyLanguageCode = "pl-PL"
	VocabularyLanguageCodeSvSe VocabularyLanguageCode = "sv-SE"
	VocabularyLanguageCodeTlPh VocabularyLanguageCode = "tl-PH"
)

// Values returns all known values for VocabularyLanguageCode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VocabularyLanguageCode) Values() []VocabularyLanguageCode {
	return []VocabularyLanguageCode{
		"ar-AE",
		"de-CH",
		"de-DE",
		"en-AB",
		"en-AU",
		"en-GB",
		"en-IE",
		"en-IN",
		"en-US",
		"en-WL",
		"es-ES",
		"es-US",
		"fr-CA",
		"fr-FR",
		"hi-IN",
		"it-IT",
		"ja-JP",
		"ko-KR",
		"pt-BR",
		"pt-PT",
		"zh-CN",
		"en-NZ",
		"en-ZA",
		"ca-ES",
		"da-DK",
		"fi-FI",
		"id-ID",
		"ms-MY",
		"nl-NL",
		"no-NO",
		"pl-PL",
		"sv-SE",
		"tl-PH",
	}
}

type VocabularyState string

// Enum values for VocabularyState
const (
	VocabularyStateCreationInProgress VocabularyState = "CREATION_IN_PROGRESS"
	VocabularyStateActive             VocabularyState = "ACTIVE"
	VocabularyStateCreationFailed     VocabularyState = "CREATION_FAILED"
	VocabularyStateDeleteInProgress   VocabularyState = "DELETE_IN_PROGRESS"
)

// Values returns all known values for VocabularyState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VocabularyState) Values() []VocabularyState {
	return []VocabularyState{
		"CREATION_IN_PROGRESS",
		"ACTIVE",
		"CREATION_FAILED",
		"DELETE_IN_PROGRESS",
	}
}

type VoiceRecordingTrack string

// Enum values for VoiceRecordingTrack
const (
	VoiceRecordingTrackFromAgent VoiceRecordingTrack = "FROM_AGENT"
	VoiceRecordingTrackToAgent   VoiceRecordingTrack = "TO_AGENT"
	VoiceRecordingTrackAll       VoiceRecordingTrack = "ALL"
)

// Values returns all known values for VoiceRecordingTrack. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VoiceRecordingTrack) Values() []VoiceRecordingTrack {
	return []VoiceRecordingTrack{
		"FROM_AGENT",
		"TO_AGENT",
		"ALL",
	}
}
