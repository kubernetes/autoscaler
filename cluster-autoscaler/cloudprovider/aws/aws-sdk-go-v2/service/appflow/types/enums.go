// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AggregationType string

// Enum values for AggregationType
const (
	AggregationTypeNone       AggregationType = "None"
	AggregationTypeSingleFile AggregationType = "SingleFile"
)

// Values returns all known values for AggregationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AggregationType) Values() []AggregationType {
	return []AggregationType{
		"None",
		"SingleFile",
	}
}

type AmplitudeConnectorOperator string

// Enum values for AmplitudeConnectorOperator
const (
	AmplitudeConnectorOperatorBetween AmplitudeConnectorOperator = "BETWEEN"
)

// Values returns all known values for AmplitudeConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AmplitudeConnectorOperator) Values() []AmplitudeConnectorOperator {
	return []AmplitudeConnectorOperator{
		"BETWEEN",
	}
}

type AuthenticationType string

// Enum values for AuthenticationType
const (
	AuthenticationTypeOauth2 AuthenticationType = "OAUTH2"
	AuthenticationTypeApikey AuthenticationType = "APIKEY"
	AuthenticationTypeBasic  AuthenticationType = "BASIC"
	AuthenticationTypeCustom AuthenticationType = "CUSTOM"
)

// Values returns all known values for AuthenticationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthenticationType) Values() []AuthenticationType {
	return []AuthenticationType{
		"OAUTH2",
		"APIKEY",
		"BASIC",
		"CUSTOM",
	}
}

type CatalogType string

// Enum values for CatalogType
const (
	CatalogTypeGlue CatalogType = "GLUE"
)

// Values returns all known values for CatalogType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CatalogType) Values() []CatalogType {
	return []CatalogType{
		"GLUE",
	}
}

type ConnectionMode string

// Enum values for ConnectionMode
const (
	ConnectionModePublic  ConnectionMode = "Public"
	ConnectionModePrivate ConnectionMode = "Private"
)

// Values returns all known values for ConnectionMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionMode) Values() []ConnectionMode {
	return []ConnectionMode{
		"Public",
		"Private",
	}
}

type ConnectorProvisioningType string

// Enum values for ConnectorProvisioningType
const (
	ConnectorProvisioningTypeLambda ConnectorProvisioningType = "LAMBDA"
)

// Values returns all known values for ConnectorProvisioningType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectorProvisioningType) Values() []ConnectorProvisioningType {
	return []ConnectorProvisioningType{
		"LAMBDA",
	}
}

type ConnectorType string

// Enum values for ConnectorType
const (
	ConnectorTypeSalesforce       ConnectorType = "Salesforce"
	ConnectorTypeSingular         ConnectorType = "Singular"
	ConnectorTypeSlack            ConnectorType = "Slack"
	ConnectorTypeRedshift         ConnectorType = "Redshift"
	ConnectorTypeS3               ConnectorType = "S3"
	ConnectorTypeMarketo          ConnectorType = "Marketo"
	ConnectorTypeGoogleanalytics  ConnectorType = "Googleanalytics"
	ConnectorTypeZendesk          ConnectorType = "Zendesk"
	ConnectorTypeServicenow       ConnectorType = "Servicenow"
	ConnectorTypeDatadog          ConnectorType = "Datadog"
	ConnectorTypeTrendmicro       ConnectorType = "Trendmicro"
	ConnectorTypeSnowflake        ConnectorType = "Snowflake"
	ConnectorTypeDynatrace        ConnectorType = "Dynatrace"
	ConnectorTypeInfornexus       ConnectorType = "Infornexus"
	ConnectorTypeAmplitude        ConnectorType = "Amplitude"
	ConnectorTypeVeeva            ConnectorType = "Veeva"
	ConnectorTypeEventbridge      ConnectorType = "EventBridge"
	ConnectorTypeLookoutmetrics   ConnectorType = "LookoutMetrics"
	ConnectorTypeUpsolver         ConnectorType = "Upsolver"
	ConnectorTypeHoneycode        ConnectorType = "Honeycode"
	ConnectorTypeCustomerprofiles ConnectorType = "CustomerProfiles"
	ConnectorTypeSapodata         ConnectorType = "SAPOData"
	ConnectorTypeCustomconnector  ConnectorType = "CustomConnector"
	ConnectorTypePardot           ConnectorType = "Pardot"
)

// Values returns all known values for ConnectorType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectorType) Values() []ConnectorType {
	return []ConnectorType{
		"Salesforce",
		"Singular",
		"Slack",
		"Redshift",
		"S3",
		"Marketo",
		"Googleanalytics",
		"Zendesk",
		"Servicenow",
		"Datadog",
		"Trendmicro",
		"Snowflake",
		"Dynatrace",
		"Infornexus",
		"Amplitude",
		"Veeva",
		"EventBridge",
		"LookoutMetrics",
		"Upsolver",
		"Honeycode",
		"CustomerProfiles",
		"SAPOData",
		"CustomConnector",
		"Pardot",
	}
}

type DatadogConnectorOperator string

// Enum values for DatadogConnectorOperator
const (
	DatadogConnectorOperatorProjection          DatadogConnectorOperator = "PROJECTION"
	DatadogConnectorOperatorBetween             DatadogConnectorOperator = "BETWEEN"
	DatadogConnectorOperatorEqualTo             DatadogConnectorOperator = "EQUAL_TO"
	DatadogConnectorOperatorAddition            DatadogConnectorOperator = "ADDITION"
	DatadogConnectorOperatorMultiplication      DatadogConnectorOperator = "MULTIPLICATION"
	DatadogConnectorOperatorDivision            DatadogConnectorOperator = "DIVISION"
	DatadogConnectorOperatorSubtraction         DatadogConnectorOperator = "SUBTRACTION"
	DatadogConnectorOperatorMaskAll             DatadogConnectorOperator = "MASK_ALL"
	DatadogConnectorOperatorMaskFirstN          DatadogConnectorOperator = "MASK_FIRST_N"
	DatadogConnectorOperatorMaskLastN           DatadogConnectorOperator = "MASK_LAST_N"
	DatadogConnectorOperatorValidateNonNull     DatadogConnectorOperator = "VALIDATE_NON_NULL"
	DatadogConnectorOperatorValidateNonZero     DatadogConnectorOperator = "VALIDATE_NON_ZERO"
	DatadogConnectorOperatorValidateNonNegative DatadogConnectorOperator = "VALIDATE_NON_NEGATIVE"
	DatadogConnectorOperatorValidateNumeric     DatadogConnectorOperator = "VALIDATE_NUMERIC"
	DatadogConnectorOperatorNoOp                DatadogConnectorOperator = "NO_OP"
)

// Values returns all known values for DatadogConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatadogConnectorOperator) Values() []DatadogConnectorOperator {
	return []DatadogConnectorOperator{
		"PROJECTION",
		"BETWEEN",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type DataPullMode string

// Enum values for DataPullMode
const (
	DataPullModeIncremental DataPullMode = "Incremental"
	DataPullModeComplete    DataPullMode = "Complete"
)

// Values returns all known values for DataPullMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataPullMode) Values() []DataPullMode {
	return []DataPullMode{
		"Incremental",
		"Complete",
	}
}

type DataTransferApiType string

// Enum values for DataTransferApiType
const (
	DataTransferApiTypeSync      DataTransferApiType = "SYNC"
	DataTransferApiTypeAsync     DataTransferApiType = "ASYNC"
	DataTransferApiTypeAutomatic DataTransferApiType = "AUTOMATIC"
)

// Values returns all known values for DataTransferApiType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataTransferApiType) Values() []DataTransferApiType {
	return []DataTransferApiType{
		"SYNC",
		"ASYNC",
		"AUTOMATIC",
	}
}

type DynatraceConnectorOperator string

// Enum values for DynatraceConnectorOperator
const (
	DynatraceConnectorOperatorProjection          DynatraceConnectorOperator = "PROJECTION"
	DynatraceConnectorOperatorBetween             DynatraceConnectorOperator = "BETWEEN"
	DynatraceConnectorOperatorEqualTo             DynatraceConnectorOperator = "EQUAL_TO"
	DynatraceConnectorOperatorAddition            DynatraceConnectorOperator = "ADDITION"
	DynatraceConnectorOperatorMultiplication      DynatraceConnectorOperator = "MULTIPLICATION"
	DynatraceConnectorOperatorDivision            DynatraceConnectorOperator = "DIVISION"
	DynatraceConnectorOperatorSubtraction         DynatraceConnectorOperator = "SUBTRACTION"
	DynatraceConnectorOperatorMaskAll             DynatraceConnectorOperator = "MASK_ALL"
	DynatraceConnectorOperatorMaskFirstN          DynatraceConnectorOperator = "MASK_FIRST_N"
	DynatraceConnectorOperatorMaskLastN           DynatraceConnectorOperator = "MASK_LAST_N"
	DynatraceConnectorOperatorValidateNonNull     DynatraceConnectorOperator = "VALIDATE_NON_NULL"
	DynatraceConnectorOperatorValidateNonZero     DynatraceConnectorOperator = "VALIDATE_NON_ZERO"
	DynatraceConnectorOperatorValidateNonNegative DynatraceConnectorOperator = "VALIDATE_NON_NEGATIVE"
	DynatraceConnectorOperatorValidateNumeric     DynatraceConnectorOperator = "VALIDATE_NUMERIC"
	DynatraceConnectorOperatorNoOp                DynatraceConnectorOperator = "NO_OP"
)

// Values returns all known values for DynatraceConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DynatraceConnectorOperator) Values() []DynatraceConnectorOperator {
	return []DynatraceConnectorOperator{
		"PROJECTION",
		"BETWEEN",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusInprogress    ExecutionStatus = "InProgress"
	ExecutionStatusSuccessful    ExecutionStatus = "Successful"
	ExecutionStatusError         ExecutionStatus = "Error"
	ExecutionStatusCancelstarted ExecutionStatus = "CancelStarted"
	ExecutionStatusCanceled      ExecutionStatus = "Canceled"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"InProgress",
		"Successful",
		"Error",
		"CancelStarted",
		"Canceled",
	}
}

type FileType string

// Enum values for FileType
const (
	FileTypeCsv     FileType = "CSV"
	FileTypeJson    FileType = "JSON"
	FileTypeParquet FileType = "PARQUET"
)

// Values returns all known values for FileType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FileType) Values() []FileType {
	return []FileType{
		"CSV",
		"JSON",
		"PARQUET",
	}
}

type FlowStatus string

// Enum values for FlowStatus
const (
	FlowStatusActive     FlowStatus = "Active"
	FlowStatusDeprecated FlowStatus = "Deprecated"
	FlowStatusDeleted    FlowStatus = "Deleted"
	FlowStatusDraft      FlowStatus = "Draft"
	FlowStatusErrored    FlowStatus = "Errored"
	FlowStatusSuspended  FlowStatus = "Suspended"
)

// Values returns all known values for FlowStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FlowStatus) Values() []FlowStatus {
	return []FlowStatus{
		"Active",
		"Deprecated",
		"Deleted",
		"Draft",
		"Errored",
		"Suspended",
	}
}

type GoogleAnalyticsConnectorOperator string

// Enum values for GoogleAnalyticsConnectorOperator
const (
	GoogleAnalyticsConnectorOperatorProjection GoogleAnalyticsConnectorOperator = "PROJECTION"
	GoogleAnalyticsConnectorOperatorBetween    GoogleAnalyticsConnectorOperator = "BETWEEN"
)

// Values returns all known values for GoogleAnalyticsConnectorOperator. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GoogleAnalyticsConnectorOperator) Values() []GoogleAnalyticsConnectorOperator {
	return []GoogleAnalyticsConnectorOperator{
		"PROJECTION",
		"BETWEEN",
	}
}

type InforNexusConnectorOperator string

// Enum values for InforNexusConnectorOperator
const (
	InforNexusConnectorOperatorProjection          InforNexusConnectorOperator = "PROJECTION"
	InforNexusConnectorOperatorBetween             InforNexusConnectorOperator = "BETWEEN"
	InforNexusConnectorOperatorEqualTo             InforNexusConnectorOperator = "EQUAL_TO"
	InforNexusConnectorOperatorAddition            InforNexusConnectorOperator = "ADDITION"
	InforNexusConnectorOperatorMultiplication      InforNexusConnectorOperator = "MULTIPLICATION"
	InforNexusConnectorOperatorDivision            InforNexusConnectorOperator = "DIVISION"
	InforNexusConnectorOperatorSubtraction         InforNexusConnectorOperator = "SUBTRACTION"
	InforNexusConnectorOperatorMaskAll             InforNexusConnectorOperator = "MASK_ALL"
	InforNexusConnectorOperatorMaskFirstN          InforNexusConnectorOperator = "MASK_FIRST_N"
	InforNexusConnectorOperatorMaskLastN           InforNexusConnectorOperator = "MASK_LAST_N"
	InforNexusConnectorOperatorValidateNonNull     InforNexusConnectorOperator = "VALIDATE_NON_NULL"
	InforNexusConnectorOperatorValidateNonZero     InforNexusConnectorOperator = "VALIDATE_NON_ZERO"
	InforNexusConnectorOperatorValidateNonNegative InforNexusConnectorOperator = "VALIDATE_NON_NEGATIVE"
	InforNexusConnectorOperatorValidateNumeric     InforNexusConnectorOperator = "VALIDATE_NUMERIC"
	InforNexusConnectorOperatorNoOp                InforNexusConnectorOperator = "NO_OP"
)

// Values returns all known values for InforNexusConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InforNexusConnectorOperator) Values() []InforNexusConnectorOperator {
	return []InforNexusConnectorOperator{
		"PROJECTION",
		"BETWEEN",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type MarketoConnectorOperator string

// Enum values for MarketoConnectorOperator
const (
	MarketoConnectorOperatorProjection          MarketoConnectorOperator = "PROJECTION"
	MarketoConnectorOperatorLessThan            MarketoConnectorOperator = "LESS_THAN"
	MarketoConnectorOperatorGreaterThan         MarketoConnectorOperator = "GREATER_THAN"
	MarketoConnectorOperatorBetween             MarketoConnectorOperator = "BETWEEN"
	MarketoConnectorOperatorAddition            MarketoConnectorOperator = "ADDITION"
	MarketoConnectorOperatorMultiplication      MarketoConnectorOperator = "MULTIPLICATION"
	MarketoConnectorOperatorDivision            MarketoConnectorOperator = "DIVISION"
	MarketoConnectorOperatorSubtraction         MarketoConnectorOperator = "SUBTRACTION"
	MarketoConnectorOperatorMaskAll             MarketoConnectorOperator = "MASK_ALL"
	MarketoConnectorOperatorMaskFirstN          MarketoConnectorOperator = "MASK_FIRST_N"
	MarketoConnectorOperatorMaskLastN           MarketoConnectorOperator = "MASK_LAST_N"
	MarketoConnectorOperatorValidateNonNull     MarketoConnectorOperator = "VALIDATE_NON_NULL"
	MarketoConnectorOperatorValidateNonZero     MarketoConnectorOperator = "VALIDATE_NON_ZERO"
	MarketoConnectorOperatorValidateNonNegative MarketoConnectorOperator = "VALIDATE_NON_NEGATIVE"
	MarketoConnectorOperatorValidateNumeric     MarketoConnectorOperator = "VALIDATE_NUMERIC"
	MarketoConnectorOperatorNoOp                MarketoConnectorOperator = "NO_OP"
)

// Values returns all known values for MarketoConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MarketoConnectorOperator) Values() []MarketoConnectorOperator {
	return []MarketoConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"BETWEEN",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type OAuth2CustomPropType string

// Enum values for OAuth2CustomPropType
const (
	OAuth2CustomPropTypeTokenUrl OAuth2CustomPropType = "TOKEN_URL"
	OAuth2CustomPropTypeAuthUrl  OAuth2CustomPropType = "AUTH_URL"
)

// Values returns all known values for OAuth2CustomPropType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OAuth2CustomPropType) Values() []OAuth2CustomPropType {
	return []OAuth2CustomPropType{
		"TOKEN_URL",
		"AUTH_URL",
	}
}

type OAuth2GrantType string

// Enum values for OAuth2GrantType
const (
	OAuth2GrantTypeClientCredentials OAuth2GrantType = "CLIENT_CREDENTIALS"
	OAuth2GrantTypeAuthorizationCode OAuth2GrantType = "AUTHORIZATION_CODE"
	OAuth2GrantTypeJwtBearer         OAuth2GrantType = "JWT_BEARER"
)

// Values returns all known values for OAuth2GrantType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OAuth2GrantType) Values() []OAuth2GrantType {
	return []OAuth2GrantType{
		"CLIENT_CREDENTIALS",
		"AUTHORIZATION_CODE",
		"JWT_BEARER",
	}
}

type Operator string

// Enum values for Operator
const (
	OperatorProjection           Operator = "PROJECTION"
	OperatorLessThan             Operator = "LESS_THAN"
	OperatorGreaterThan          Operator = "GREATER_THAN"
	OperatorContains             Operator = "CONTAINS"
	OperatorBetween              Operator = "BETWEEN"
	OperatorLessThanOrEqualTo    Operator = "LESS_THAN_OR_EQUAL_TO"
	OperatorGreaterThanOrEqualTo Operator = "GREATER_THAN_OR_EQUAL_TO"
	OperatorEqualTo              Operator = "EQUAL_TO"
	OperatorNotEqualTo           Operator = "NOT_EQUAL_TO"
	OperatorAddition             Operator = "ADDITION"
	OperatorMultiplication       Operator = "MULTIPLICATION"
	OperatorDivision             Operator = "DIVISION"
	OperatorSubtraction          Operator = "SUBTRACTION"
	OperatorMaskAll              Operator = "MASK_ALL"
	OperatorMaskFirstN           Operator = "MASK_FIRST_N"
	OperatorMaskLastN            Operator = "MASK_LAST_N"
	OperatorValidateNonNull      Operator = "VALIDATE_NON_NULL"
	OperatorValidateNonZero      Operator = "VALIDATE_NON_ZERO"
	OperatorValidateNonNegative  Operator = "VALIDATE_NON_NEGATIVE"
	OperatorValidateNumeric      Operator = "VALIDATE_NUMERIC"
	OperatorNoOp                 Operator = "NO_OP"
)

// Values returns all known values for Operator. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Operator) Values() []Operator {
	return []Operator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"CONTAINS",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type OperatorPropertiesKeys string

// Enum values for OperatorPropertiesKeys
const (
	OperatorPropertiesKeysValue                    OperatorPropertiesKeys = "VALUE"
	OperatorPropertiesKeysValues                   OperatorPropertiesKeys = "VALUES"
	OperatorPropertiesKeysDataType                 OperatorPropertiesKeys = "DATA_TYPE"
	OperatorPropertiesKeysUpperBound               OperatorPropertiesKeys = "UPPER_BOUND"
	OperatorPropertiesKeysLowerBound               OperatorPropertiesKeys = "LOWER_BOUND"
	OperatorPropertiesKeysSourceDataType           OperatorPropertiesKeys = "SOURCE_DATA_TYPE"
	OperatorPropertiesKeysDestinationDataType      OperatorPropertiesKeys = "DESTINATION_DATA_TYPE"
	OperatorPropertiesKeysValidationAction         OperatorPropertiesKeys = "VALIDATION_ACTION"
	OperatorPropertiesKeysMaskValue                OperatorPropertiesKeys = "MASK_VALUE"
	OperatorPropertiesKeysMaskLength               OperatorPropertiesKeys = "MASK_LENGTH"
	OperatorPropertiesKeysTruncateLength           OperatorPropertiesKeys = "TRUNCATE_LENGTH"
	OperatorPropertiesKeysMathOperationFieldsOrder OperatorPropertiesKeys = "MATH_OPERATION_FIELDS_ORDER"
	OperatorPropertiesKeysConcatFormat             OperatorPropertiesKeys = "CONCAT_FORMAT"
	OperatorPropertiesKeysSubfieldCategoryMap      OperatorPropertiesKeys = "SUBFIELD_CATEGORY_MAP"
	OperatorPropertiesKeysExcludeSourceFieldsList  OperatorPropertiesKeys = "EXCLUDE_SOURCE_FIELDS_LIST"
	OperatorPropertiesKeysIncludeNewFields         OperatorPropertiesKeys = "INCLUDE_NEW_FIELDS"
	OperatorPropertiesKeysOrderedPartitionKeysList OperatorPropertiesKeys = "ORDERED_PARTITION_KEYS_LIST"
)

// Values returns all known values for OperatorPropertiesKeys. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OperatorPropertiesKeys) Values() []OperatorPropertiesKeys {
	return []OperatorPropertiesKeys{
		"VALUE",
		"VALUES",
		"DATA_TYPE",
		"UPPER_BOUND",
		"LOWER_BOUND",
		"SOURCE_DATA_TYPE",
		"DESTINATION_DATA_TYPE",
		"VALIDATION_ACTION",
		"MASK_VALUE",
		"MASK_LENGTH",
		"TRUNCATE_LENGTH",
		"MATH_OPERATION_FIELDS_ORDER",
		"CONCAT_FORMAT",
		"SUBFIELD_CATEGORY_MAP",
		"EXCLUDE_SOURCE_FIELDS_LIST",
		"INCLUDE_NEW_FIELDS",
		"ORDERED_PARTITION_KEYS_LIST",
	}
}

type Operators string

// Enum values for Operators
const (
	OperatorsProjection           Operators = "PROJECTION"
	OperatorsLessThan             Operators = "LESS_THAN"
	OperatorsGreaterThan          Operators = "GREATER_THAN"
	OperatorsContains             Operators = "CONTAINS"
	OperatorsBetween              Operators = "BETWEEN"
	OperatorsLessThanOrEqualTo    Operators = "LESS_THAN_OR_EQUAL_TO"
	OperatorsGreaterThanOrEqualTo Operators = "GREATER_THAN_OR_EQUAL_TO"
	OperatorsEqualTo              Operators = "EQUAL_TO"
	OperatorsNotEqualTo           Operators = "NOT_EQUAL_TO"
	OperatorsAddition             Operators = "ADDITION"
	OperatorsMultiplication       Operators = "MULTIPLICATION"
	OperatorsDivision             Operators = "DIVISION"
	OperatorsSubtraction          Operators = "SUBTRACTION"
	OperatorsMaskAll              Operators = "MASK_ALL"
	OperatorsMaskFirstN           Operators = "MASK_FIRST_N"
	OperatorsMaskLastN            Operators = "MASK_LAST_N"
	OperatorsValidateNonNull      Operators = "VALIDATE_NON_NULL"
	OperatorsValidateNonZero      Operators = "VALIDATE_NON_ZERO"
	OperatorsValidateNonNegative  Operators = "VALIDATE_NON_NEGATIVE"
	OperatorsValidateNumeric      Operators = "VALIDATE_NUMERIC"
	OperatorsNoOp                 Operators = "NO_OP"
)

// Values returns all known values for Operators. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Operators) Values() []Operators {
	return []Operators{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"CONTAINS",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type PardotConnectorOperator string

// Enum values for PardotConnectorOperator
const (
	PardotConnectorOperatorProjection          PardotConnectorOperator = "PROJECTION"
	PardotConnectorOperatorEqualTo             PardotConnectorOperator = "EQUAL_TO"
	PardotConnectorOperatorNoOp                PardotConnectorOperator = "NO_OP"
	PardotConnectorOperatorAddition            PardotConnectorOperator = "ADDITION"
	PardotConnectorOperatorMultiplication      PardotConnectorOperator = "MULTIPLICATION"
	PardotConnectorOperatorDivision            PardotConnectorOperator = "DIVISION"
	PardotConnectorOperatorSubtraction         PardotConnectorOperator = "SUBTRACTION"
	PardotConnectorOperatorMaskAll             PardotConnectorOperator = "MASK_ALL"
	PardotConnectorOperatorMaskFirstN          PardotConnectorOperator = "MASK_FIRST_N"
	PardotConnectorOperatorMaskLastN           PardotConnectorOperator = "MASK_LAST_N"
	PardotConnectorOperatorValidateNonNull     PardotConnectorOperator = "VALIDATE_NON_NULL"
	PardotConnectorOperatorValidateNonZero     PardotConnectorOperator = "VALIDATE_NON_ZERO"
	PardotConnectorOperatorValidateNonNegative PardotConnectorOperator = "VALIDATE_NON_NEGATIVE"
	PardotConnectorOperatorValidateNumeric     PardotConnectorOperator = "VALIDATE_NUMERIC"
)

// Values returns all known values for PardotConnectorOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PardotConnectorOperator) Values() []PardotConnectorOperator {
	return []PardotConnectorOperator{
		"PROJECTION",
		"EQUAL_TO",
		"NO_OP",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
	}
}

type PathPrefix string

// Enum values for PathPrefix
const (
	PathPrefixExecutionId   PathPrefix = "EXECUTION_ID"
	PathPrefixSchemaVersion PathPrefix = "SCHEMA_VERSION"
)

// Values returns all known values for PathPrefix. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PathPrefix) Values() []PathPrefix {
	return []PathPrefix{
		"EXECUTION_ID",
		"SCHEMA_VERSION",
	}
}

type PrefixFormat string

// Enum values for PrefixFormat
const (
	PrefixFormatYear   PrefixFormat = "YEAR"
	PrefixFormatMonth  PrefixFormat = "MONTH"
	PrefixFormatDay    PrefixFormat = "DAY"
	PrefixFormatHour   PrefixFormat = "HOUR"
	PrefixFormatMinute PrefixFormat = "MINUTE"
)

// Values returns all known values for PrefixFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PrefixFormat) Values() []PrefixFormat {
	return []PrefixFormat{
		"YEAR",
		"MONTH",
		"DAY",
		"HOUR",
		"MINUTE",
	}
}

type PrefixType string

// Enum values for PrefixType
const (
	PrefixTypeFilename        PrefixType = "FILENAME"
	PrefixTypePath            PrefixType = "PATH"
	PrefixTypePathAndFilename PrefixType = "PATH_AND_FILENAME"
)

// Values returns all known values for PrefixType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PrefixType) Values() []PrefixType {
	return []PrefixType{
		"FILENAME",
		"PATH",
		"PATH_AND_FILENAME",
	}
}

type PrivateConnectionProvisioningFailureCause string

// Enum values for PrivateConnectionProvisioningFailureCause
const (
	PrivateConnectionProvisioningFailureCauseConnectorAuthentication PrivateConnectionProvisioningFailureCause = "CONNECTOR_AUTHENTICATION"
	PrivateConnectionProvisioningFailureCauseConnectorServer         PrivateConnectionProvisioningFailureCause = "CONNECTOR_SERVER"
	PrivateConnectionProvisioningFailureCauseInternalServer          PrivateConnectionProvisioningFailureCause = "INTERNAL_SERVER"
	PrivateConnectionProvisioningFailureCauseAccessDenied            PrivateConnectionProvisioningFailureCause = "ACCESS_DENIED"
	PrivateConnectionProvisioningFailureCauseValidation              PrivateConnectionProvisioningFailureCause = "VALIDATION"
)

// Values returns all known values for PrivateConnectionProvisioningFailureCause.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PrivateConnectionProvisioningFailureCause) Values() []PrivateConnectionProvisioningFailureCause {
	return []PrivateConnectionProvisioningFailureCause{
		"CONNECTOR_AUTHENTICATION",
		"CONNECTOR_SERVER",
		"INTERNAL_SERVER",
		"ACCESS_DENIED",
		"VALIDATION",
	}
}

type PrivateConnectionProvisioningStatus string

// Enum values for PrivateConnectionProvisioningStatus
const (
	PrivateConnectionProvisioningStatusFailed  PrivateConnectionProvisioningStatus = "FAILED"
	PrivateConnectionProvisioningStatusPending PrivateConnectionProvisioningStatus = "PENDING"
	PrivateConnectionProvisioningStatusCreated PrivateConnectionProvisioningStatus = "CREATED"
)

// Values returns all known values for PrivateConnectionProvisioningStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PrivateConnectionProvisioningStatus) Values() []PrivateConnectionProvisioningStatus {
	return []PrivateConnectionProvisioningStatus{
		"FAILED",
		"PENDING",
		"CREATED",
	}
}

type S3ConnectorOperator string

// Enum values for S3ConnectorOperator
const (
	S3ConnectorOperatorProjection           S3ConnectorOperator = "PROJECTION"
	S3ConnectorOperatorLessThan             S3ConnectorOperator = "LESS_THAN"
	S3ConnectorOperatorGreaterThan          S3ConnectorOperator = "GREATER_THAN"
	S3ConnectorOperatorBetween              S3ConnectorOperator = "BETWEEN"
	S3ConnectorOperatorLessThanOrEqualTo    S3ConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	S3ConnectorOperatorGreaterThanOrEqualTo S3ConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	S3ConnectorOperatorEqualTo              S3ConnectorOperator = "EQUAL_TO"
	S3ConnectorOperatorNotEqualTo           S3ConnectorOperator = "NOT_EQUAL_TO"
	S3ConnectorOperatorAddition             S3ConnectorOperator = "ADDITION"
	S3ConnectorOperatorMultiplication       S3ConnectorOperator = "MULTIPLICATION"
	S3ConnectorOperatorDivision             S3ConnectorOperator = "DIVISION"
	S3ConnectorOperatorSubtraction          S3ConnectorOperator = "SUBTRACTION"
	S3ConnectorOperatorMaskAll              S3ConnectorOperator = "MASK_ALL"
	S3ConnectorOperatorMaskFirstN           S3ConnectorOperator = "MASK_FIRST_N"
	S3ConnectorOperatorMaskLastN            S3ConnectorOperator = "MASK_LAST_N"
	S3ConnectorOperatorValidateNonNull      S3ConnectorOperator = "VALIDATE_NON_NULL"
	S3ConnectorOperatorValidateNonZero      S3ConnectorOperator = "VALIDATE_NON_ZERO"
	S3ConnectorOperatorValidateNonNegative  S3ConnectorOperator = "VALIDATE_NON_NEGATIVE"
	S3ConnectorOperatorValidateNumeric      S3ConnectorOperator = "VALIDATE_NUMERIC"
	S3ConnectorOperatorNoOp                 S3ConnectorOperator = "NO_OP"
)

// Values returns all known values for S3ConnectorOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (S3ConnectorOperator) Values() []S3ConnectorOperator {
	return []S3ConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type S3InputFileType string

// Enum values for S3InputFileType
const (
	S3InputFileTypeCsv  S3InputFileType = "CSV"
	S3InputFileTypeJson S3InputFileType = "JSON"
)

// Values returns all known values for S3InputFileType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (S3InputFileType) Values() []S3InputFileType {
	return []S3InputFileType{
		"CSV",
		"JSON",
	}
}

type SalesforceConnectorOperator string

// Enum values for SalesforceConnectorOperator
const (
	SalesforceConnectorOperatorProjection           SalesforceConnectorOperator = "PROJECTION"
	SalesforceConnectorOperatorLessThan             SalesforceConnectorOperator = "LESS_THAN"
	SalesforceConnectorOperatorContains             SalesforceConnectorOperator = "CONTAINS"
	SalesforceConnectorOperatorGreaterThan          SalesforceConnectorOperator = "GREATER_THAN"
	SalesforceConnectorOperatorBetween              SalesforceConnectorOperator = "BETWEEN"
	SalesforceConnectorOperatorLessThanOrEqualTo    SalesforceConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	SalesforceConnectorOperatorGreaterThanOrEqualTo SalesforceConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	SalesforceConnectorOperatorEqualTo              SalesforceConnectorOperator = "EQUAL_TO"
	SalesforceConnectorOperatorNotEqualTo           SalesforceConnectorOperator = "NOT_EQUAL_TO"
	SalesforceConnectorOperatorAddition             SalesforceConnectorOperator = "ADDITION"
	SalesforceConnectorOperatorMultiplication       SalesforceConnectorOperator = "MULTIPLICATION"
	SalesforceConnectorOperatorDivision             SalesforceConnectorOperator = "DIVISION"
	SalesforceConnectorOperatorSubtraction          SalesforceConnectorOperator = "SUBTRACTION"
	SalesforceConnectorOperatorMaskAll              SalesforceConnectorOperator = "MASK_ALL"
	SalesforceConnectorOperatorMaskFirstN           SalesforceConnectorOperator = "MASK_FIRST_N"
	SalesforceConnectorOperatorMaskLastN            SalesforceConnectorOperator = "MASK_LAST_N"
	SalesforceConnectorOperatorValidateNonNull      SalesforceConnectorOperator = "VALIDATE_NON_NULL"
	SalesforceConnectorOperatorValidateNonZero      SalesforceConnectorOperator = "VALIDATE_NON_ZERO"
	SalesforceConnectorOperatorValidateNonNegative  SalesforceConnectorOperator = "VALIDATE_NON_NEGATIVE"
	SalesforceConnectorOperatorValidateNumeric      SalesforceConnectorOperator = "VALIDATE_NUMERIC"
	SalesforceConnectorOperatorNoOp                 SalesforceConnectorOperator = "NO_OP"
)

// Values returns all known values for SalesforceConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SalesforceConnectorOperator) Values() []SalesforceConnectorOperator {
	return []SalesforceConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"CONTAINS",
		"GREATER_THAN",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type SalesforceDataTransferApi string

// Enum values for SalesforceDataTransferApi
const (
	SalesforceDataTransferApiAutomatic SalesforceDataTransferApi = "AUTOMATIC"
	SalesforceDataTransferApiBulkv2    SalesforceDataTransferApi = "BULKV2"
	SalesforceDataTransferApiRestSync  SalesforceDataTransferApi = "REST_SYNC"
)

// Values returns all known values for SalesforceDataTransferApi. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SalesforceDataTransferApi) Values() []SalesforceDataTransferApi {
	return []SalesforceDataTransferApi{
		"AUTOMATIC",
		"BULKV2",
		"REST_SYNC",
	}
}

type SAPODataConnectorOperator string

// Enum values for SAPODataConnectorOperator
const (
	SAPODataConnectorOperatorProjection           SAPODataConnectorOperator = "PROJECTION"
	SAPODataConnectorOperatorLessThan             SAPODataConnectorOperator = "LESS_THAN"
	SAPODataConnectorOperatorContains             SAPODataConnectorOperator = "CONTAINS"
	SAPODataConnectorOperatorGreaterThan          SAPODataConnectorOperator = "GREATER_THAN"
	SAPODataConnectorOperatorBetween              SAPODataConnectorOperator = "BETWEEN"
	SAPODataConnectorOperatorLessThanOrEqualTo    SAPODataConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	SAPODataConnectorOperatorGreaterThanOrEqualTo SAPODataConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	SAPODataConnectorOperatorEqualTo              SAPODataConnectorOperator = "EQUAL_TO"
	SAPODataConnectorOperatorNotEqualTo           SAPODataConnectorOperator = "NOT_EQUAL_TO"
	SAPODataConnectorOperatorAddition             SAPODataConnectorOperator = "ADDITION"
	SAPODataConnectorOperatorMultiplication       SAPODataConnectorOperator = "MULTIPLICATION"
	SAPODataConnectorOperatorDivision             SAPODataConnectorOperator = "DIVISION"
	SAPODataConnectorOperatorSubtraction          SAPODataConnectorOperator = "SUBTRACTION"
	SAPODataConnectorOperatorMaskAll              SAPODataConnectorOperator = "MASK_ALL"
	SAPODataConnectorOperatorMaskFirstN           SAPODataConnectorOperator = "MASK_FIRST_N"
	SAPODataConnectorOperatorMaskLastN            SAPODataConnectorOperator = "MASK_LAST_N"
	SAPODataConnectorOperatorValidateNonNull      SAPODataConnectorOperator = "VALIDATE_NON_NULL"
	SAPODataConnectorOperatorValidateNonZero      SAPODataConnectorOperator = "VALIDATE_NON_ZERO"
	SAPODataConnectorOperatorValidateNonNegative  SAPODataConnectorOperator = "VALIDATE_NON_NEGATIVE"
	SAPODataConnectorOperatorValidateNumeric      SAPODataConnectorOperator = "VALIDATE_NUMERIC"
	SAPODataConnectorOperatorNoOp                 SAPODataConnectorOperator = "NO_OP"
)

// Values returns all known values for SAPODataConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SAPODataConnectorOperator) Values() []SAPODataConnectorOperator {
	return []SAPODataConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"CONTAINS",
		"GREATER_THAN",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type ScheduleFrequencyType string

// Enum values for ScheduleFrequencyType
const (
	ScheduleFrequencyTypeByminute ScheduleFrequencyType = "BYMINUTE"
	ScheduleFrequencyTypeHourly   ScheduleFrequencyType = "HOURLY"
	ScheduleFrequencyTypeDaily    ScheduleFrequencyType = "DAILY"
	ScheduleFrequencyTypeWeekly   ScheduleFrequencyType = "WEEKLY"
	ScheduleFrequencyTypeMonthly  ScheduleFrequencyType = "MONTHLY"
	ScheduleFrequencyTypeOnce     ScheduleFrequencyType = "ONCE"
)

// Values returns all known values for ScheduleFrequencyType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScheduleFrequencyType) Values() []ScheduleFrequencyType {
	return []ScheduleFrequencyType{
		"BYMINUTE",
		"HOURLY",
		"DAILY",
		"WEEKLY",
		"MONTHLY",
		"ONCE",
	}
}

type ServiceNowConnectorOperator string

// Enum values for ServiceNowConnectorOperator
const (
	ServiceNowConnectorOperatorProjection           ServiceNowConnectorOperator = "PROJECTION"
	ServiceNowConnectorOperatorContains             ServiceNowConnectorOperator = "CONTAINS"
	ServiceNowConnectorOperatorLessThan             ServiceNowConnectorOperator = "LESS_THAN"
	ServiceNowConnectorOperatorGreaterThan          ServiceNowConnectorOperator = "GREATER_THAN"
	ServiceNowConnectorOperatorBetween              ServiceNowConnectorOperator = "BETWEEN"
	ServiceNowConnectorOperatorLessThanOrEqualTo    ServiceNowConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	ServiceNowConnectorOperatorGreaterThanOrEqualTo ServiceNowConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	ServiceNowConnectorOperatorEqualTo              ServiceNowConnectorOperator = "EQUAL_TO"
	ServiceNowConnectorOperatorNotEqualTo           ServiceNowConnectorOperator = "NOT_EQUAL_TO"
	ServiceNowConnectorOperatorAddition             ServiceNowConnectorOperator = "ADDITION"
	ServiceNowConnectorOperatorMultiplication       ServiceNowConnectorOperator = "MULTIPLICATION"
	ServiceNowConnectorOperatorDivision             ServiceNowConnectorOperator = "DIVISION"
	ServiceNowConnectorOperatorSubtraction          ServiceNowConnectorOperator = "SUBTRACTION"
	ServiceNowConnectorOperatorMaskAll              ServiceNowConnectorOperator = "MASK_ALL"
	ServiceNowConnectorOperatorMaskFirstN           ServiceNowConnectorOperator = "MASK_FIRST_N"
	ServiceNowConnectorOperatorMaskLastN            ServiceNowConnectorOperator = "MASK_LAST_N"
	ServiceNowConnectorOperatorValidateNonNull      ServiceNowConnectorOperator = "VALIDATE_NON_NULL"
	ServiceNowConnectorOperatorValidateNonZero      ServiceNowConnectorOperator = "VALIDATE_NON_ZERO"
	ServiceNowConnectorOperatorValidateNonNegative  ServiceNowConnectorOperator = "VALIDATE_NON_NEGATIVE"
	ServiceNowConnectorOperatorValidateNumeric      ServiceNowConnectorOperator = "VALIDATE_NUMERIC"
	ServiceNowConnectorOperatorNoOp                 ServiceNowConnectorOperator = "NO_OP"
)

// Values returns all known values for ServiceNowConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceNowConnectorOperator) Values() []ServiceNowConnectorOperator {
	return []ServiceNowConnectorOperator{
		"PROJECTION",
		"CONTAINS",
		"LESS_THAN",
		"GREATER_THAN",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type SingularConnectorOperator string

// Enum values for SingularConnectorOperator
const (
	SingularConnectorOperatorProjection          SingularConnectorOperator = "PROJECTION"
	SingularConnectorOperatorEqualTo             SingularConnectorOperator = "EQUAL_TO"
	SingularConnectorOperatorAddition            SingularConnectorOperator = "ADDITION"
	SingularConnectorOperatorMultiplication      SingularConnectorOperator = "MULTIPLICATION"
	SingularConnectorOperatorDivision            SingularConnectorOperator = "DIVISION"
	SingularConnectorOperatorSubtraction         SingularConnectorOperator = "SUBTRACTION"
	SingularConnectorOperatorMaskAll             SingularConnectorOperator = "MASK_ALL"
	SingularConnectorOperatorMaskFirstN          SingularConnectorOperator = "MASK_FIRST_N"
	SingularConnectorOperatorMaskLastN           SingularConnectorOperator = "MASK_LAST_N"
	SingularConnectorOperatorValidateNonNull     SingularConnectorOperator = "VALIDATE_NON_NULL"
	SingularConnectorOperatorValidateNonZero     SingularConnectorOperator = "VALIDATE_NON_ZERO"
	SingularConnectorOperatorValidateNonNegative SingularConnectorOperator = "VALIDATE_NON_NEGATIVE"
	SingularConnectorOperatorValidateNumeric     SingularConnectorOperator = "VALIDATE_NUMERIC"
	SingularConnectorOperatorNoOp                SingularConnectorOperator = "NO_OP"
)

// Values returns all known values for SingularConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SingularConnectorOperator) Values() []SingularConnectorOperator {
	return []SingularConnectorOperator{
		"PROJECTION",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type SlackConnectorOperator string

// Enum values for SlackConnectorOperator
const (
	SlackConnectorOperatorProjection           SlackConnectorOperator = "PROJECTION"
	SlackConnectorOperatorLessThan             SlackConnectorOperator = "LESS_THAN"
	SlackConnectorOperatorGreaterThan          SlackConnectorOperator = "GREATER_THAN"
	SlackConnectorOperatorBetween              SlackConnectorOperator = "BETWEEN"
	SlackConnectorOperatorLessThanOrEqualTo    SlackConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	SlackConnectorOperatorGreaterThanOrEqualTo SlackConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	SlackConnectorOperatorEqualTo              SlackConnectorOperator = "EQUAL_TO"
	SlackConnectorOperatorAddition             SlackConnectorOperator = "ADDITION"
	SlackConnectorOperatorMultiplication       SlackConnectorOperator = "MULTIPLICATION"
	SlackConnectorOperatorDivision             SlackConnectorOperator = "DIVISION"
	SlackConnectorOperatorSubtraction          SlackConnectorOperator = "SUBTRACTION"
	SlackConnectorOperatorMaskAll              SlackConnectorOperator = "MASK_ALL"
	SlackConnectorOperatorMaskFirstN           SlackConnectorOperator = "MASK_FIRST_N"
	SlackConnectorOperatorMaskLastN            SlackConnectorOperator = "MASK_LAST_N"
	SlackConnectorOperatorValidateNonNull      SlackConnectorOperator = "VALIDATE_NON_NULL"
	SlackConnectorOperatorValidateNonZero      SlackConnectorOperator = "VALIDATE_NON_ZERO"
	SlackConnectorOperatorValidateNonNegative  SlackConnectorOperator = "VALIDATE_NON_NEGATIVE"
	SlackConnectorOperatorValidateNumeric      SlackConnectorOperator = "VALIDATE_NUMERIC"
	SlackConnectorOperatorNoOp                 SlackConnectorOperator = "NO_OP"
)

// Values returns all known values for SlackConnectorOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlackConnectorOperator) Values() []SlackConnectorOperator {
	return []SlackConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type SupportedDataTransferType string

// Enum values for SupportedDataTransferType
const (
	SupportedDataTransferTypeRecord SupportedDataTransferType = "RECORD"
	SupportedDataTransferTypeFile   SupportedDataTransferType = "FILE"
)

// Values returns all known values for SupportedDataTransferType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SupportedDataTransferType) Values() []SupportedDataTransferType {
	return []SupportedDataTransferType{
		"RECORD",
		"FILE",
	}
}

type TaskType string

// Enum values for TaskType
const (
	TaskTypeArithmetic  TaskType = "Arithmetic"
	TaskTypeFilter      TaskType = "Filter"
	TaskTypeMap         TaskType = "Map"
	TaskTypeMapAll      TaskType = "Map_all"
	TaskTypeMask        TaskType = "Mask"
	TaskTypeMerge       TaskType = "Merge"
	TaskTypePassthrough TaskType = "Passthrough"
	TaskTypeTruncate    TaskType = "Truncate"
	TaskTypeValidate    TaskType = "Validate"
	TaskTypePartition   TaskType = "Partition"
)

// Values returns all known values for TaskType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TaskType) Values() []TaskType {
	return []TaskType{
		"Arithmetic",
		"Filter",
		"Map",
		"Map_all",
		"Mask",
		"Merge",
		"Passthrough",
		"Truncate",
		"Validate",
		"Partition",
	}
}

type TrendmicroConnectorOperator string

// Enum values for TrendmicroConnectorOperator
const (
	TrendmicroConnectorOperatorProjection          TrendmicroConnectorOperator = "PROJECTION"
	TrendmicroConnectorOperatorEqualTo             TrendmicroConnectorOperator = "EQUAL_TO"
	TrendmicroConnectorOperatorAddition            TrendmicroConnectorOperator = "ADDITION"
	TrendmicroConnectorOperatorMultiplication      TrendmicroConnectorOperator = "MULTIPLICATION"
	TrendmicroConnectorOperatorDivision            TrendmicroConnectorOperator = "DIVISION"
	TrendmicroConnectorOperatorSubtraction         TrendmicroConnectorOperator = "SUBTRACTION"
	TrendmicroConnectorOperatorMaskAll             TrendmicroConnectorOperator = "MASK_ALL"
	TrendmicroConnectorOperatorMaskFirstN          TrendmicroConnectorOperator = "MASK_FIRST_N"
	TrendmicroConnectorOperatorMaskLastN           TrendmicroConnectorOperator = "MASK_LAST_N"
	TrendmicroConnectorOperatorValidateNonNull     TrendmicroConnectorOperator = "VALIDATE_NON_NULL"
	TrendmicroConnectorOperatorValidateNonZero     TrendmicroConnectorOperator = "VALIDATE_NON_ZERO"
	TrendmicroConnectorOperatorValidateNonNegative TrendmicroConnectorOperator = "VALIDATE_NON_NEGATIVE"
	TrendmicroConnectorOperatorValidateNumeric     TrendmicroConnectorOperator = "VALIDATE_NUMERIC"
	TrendmicroConnectorOperatorNoOp                TrendmicroConnectorOperator = "NO_OP"
)

// Values returns all known values for TrendmicroConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrendmicroConnectorOperator) Values() []TrendmicroConnectorOperator {
	return []TrendmicroConnectorOperator{
		"PROJECTION",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type TriggerType string

// Enum values for TriggerType
const (
	TriggerTypeScheduled TriggerType = "Scheduled"
	TriggerTypeEvent     TriggerType = "Event"
	TriggerTypeOndemand  TriggerType = "OnDemand"
)

// Values returns all known values for TriggerType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TriggerType) Values() []TriggerType {
	return []TriggerType{
		"Scheduled",
		"Event",
		"OnDemand",
	}
}

type VeevaConnectorOperator string

// Enum values for VeevaConnectorOperator
const (
	VeevaConnectorOperatorProjection           VeevaConnectorOperator = "PROJECTION"
	VeevaConnectorOperatorLessThan             VeevaConnectorOperator = "LESS_THAN"
	VeevaConnectorOperatorGreaterThan          VeevaConnectorOperator = "GREATER_THAN"
	VeevaConnectorOperatorContains             VeevaConnectorOperator = "CONTAINS"
	VeevaConnectorOperatorBetween              VeevaConnectorOperator = "BETWEEN"
	VeevaConnectorOperatorLessThanOrEqualTo    VeevaConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	VeevaConnectorOperatorGreaterThanOrEqualTo VeevaConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	VeevaConnectorOperatorEqualTo              VeevaConnectorOperator = "EQUAL_TO"
	VeevaConnectorOperatorNotEqualTo           VeevaConnectorOperator = "NOT_EQUAL_TO"
	VeevaConnectorOperatorAddition             VeevaConnectorOperator = "ADDITION"
	VeevaConnectorOperatorMultiplication       VeevaConnectorOperator = "MULTIPLICATION"
	VeevaConnectorOperatorDivision             VeevaConnectorOperator = "DIVISION"
	VeevaConnectorOperatorSubtraction          VeevaConnectorOperator = "SUBTRACTION"
	VeevaConnectorOperatorMaskAll              VeevaConnectorOperator = "MASK_ALL"
	VeevaConnectorOperatorMaskFirstN           VeevaConnectorOperator = "MASK_FIRST_N"
	VeevaConnectorOperatorMaskLastN            VeevaConnectorOperator = "MASK_LAST_N"
	VeevaConnectorOperatorValidateNonNull      VeevaConnectorOperator = "VALIDATE_NON_NULL"
	VeevaConnectorOperatorValidateNonZero      VeevaConnectorOperator = "VALIDATE_NON_ZERO"
	VeevaConnectorOperatorValidateNonNegative  VeevaConnectorOperator = "VALIDATE_NON_NEGATIVE"
	VeevaConnectorOperatorValidateNumeric      VeevaConnectorOperator = "VALIDATE_NUMERIC"
	VeevaConnectorOperatorNoOp                 VeevaConnectorOperator = "NO_OP"
)

// Values returns all known values for VeevaConnectorOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VeevaConnectorOperator) Values() []VeevaConnectorOperator {
	return []VeevaConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"CONTAINS",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type WriteOperationType string

// Enum values for WriteOperationType
const (
	WriteOperationTypeInsert WriteOperationType = "INSERT"
	WriteOperationTypeUpsert WriteOperationType = "UPSERT"
	WriteOperationTypeUpdate WriteOperationType = "UPDATE"
	WriteOperationTypeDelete WriteOperationType = "DELETE"
)

// Values returns all known values for WriteOperationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WriteOperationType) Values() []WriteOperationType {
	return []WriteOperationType{
		"INSERT",
		"UPSERT",
		"UPDATE",
		"DELETE",
	}
}

type ZendeskConnectorOperator string

// Enum values for ZendeskConnectorOperator
const (
	ZendeskConnectorOperatorProjection          ZendeskConnectorOperator = "PROJECTION"
	ZendeskConnectorOperatorGreaterThan         ZendeskConnectorOperator = "GREATER_THAN"
	ZendeskConnectorOperatorAddition            ZendeskConnectorOperator = "ADDITION"
	ZendeskConnectorOperatorMultiplication      ZendeskConnectorOperator = "MULTIPLICATION"
	ZendeskConnectorOperatorDivision            ZendeskConnectorOperator = "DIVISION"
	ZendeskConnectorOperatorSubtraction         ZendeskConnectorOperator = "SUBTRACTION"
	ZendeskConnectorOperatorMaskAll             ZendeskConnectorOperator = "MASK_ALL"
	ZendeskConnectorOperatorMaskFirstN          ZendeskConnectorOperator = "MASK_FIRST_N"
	ZendeskConnectorOperatorMaskLastN           ZendeskConnectorOperator = "MASK_LAST_N"
	ZendeskConnectorOperatorValidateNonNull     ZendeskConnectorOperator = "VALIDATE_NON_NULL"
	ZendeskConnectorOperatorValidateNonZero     ZendeskConnectorOperator = "VALIDATE_NON_ZERO"
	ZendeskConnectorOperatorValidateNonNegative ZendeskConnectorOperator = "VALIDATE_NON_NEGATIVE"
	ZendeskConnectorOperatorValidateNumeric     ZendeskConnectorOperator = "VALIDATE_NUMERIC"
	ZendeskConnectorOperatorNoOp                ZendeskConnectorOperator = "NO_OP"
)

// Values returns all known values for ZendeskConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ZendeskConnectorOperator) Values() []ZendeskConnectorOperator {
	return []ZendeskConnectorOperator{
		"PROJECTION",
		"GREATER_THAN",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}
