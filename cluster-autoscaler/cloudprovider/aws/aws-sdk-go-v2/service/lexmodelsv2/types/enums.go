// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AggregatedUtterancesFilterName string

// Enum values for AggregatedUtterancesFilterName
const (
	AggregatedUtterancesFilterNameUtterance AggregatedUtterancesFilterName = "Utterance"
)

// Values returns all known values for AggregatedUtterancesFilterName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AggregatedUtterancesFilterName) Values() []AggregatedUtterancesFilterName {
	return []AggregatedUtterancesFilterName{
		"Utterance",
	}
}

type AggregatedUtterancesFilterOperator string

// Enum values for AggregatedUtterancesFilterOperator
const (
	AggregatedUtterancesFilterOperatorContains AggregatedUtterancesFilterOperator = "CO"
	AggregatedUtterancesFilterOperatorEquals   AggregatedUtterancesFilterOperator = "EQ"
)

// Values returns all known values for AggregatedUtterancesFilterOperator. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AggregatedUtterancesFilterOperator) Values() []AggregatedUtterancesFilterOperator {
	return []AggregatedUtterancesFilterOperator{
		"CO",
		"EQ",
	}
}

type AggregatedUtterancesSortAttribute string

// Enum values for AggregatedUtterancesSortAttribute
const (
	AggregatedUtterancesSortAttributeHitCount    AggregatedUtterancesSortAttribute = "HitCount"
	AggregatedUtterancesSortAttributeMissedCount AggregatedUtterancesSortAttribute = "MissedCount"
)

// Values returns all known values for AggregatedUtterancesSortAttribute. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AggregatedUtterancesSortAttribute) Values() []AggregatedUtterancesSortAttribute {
	return []AggregatedUtterancesSortAttribute{
		"HitCount",
		"MissedCount",
	}
}

type AnalyticsBinByName string

// Enum values for AnalyticsBinByName
const (
	AnalyticsBinByNameConversationStartTime AnalyticsBinByName = "ConversationStartTime"
	AnalyticsBinByNameUtteranceTimestamp    AnalyticsBinByName = "UtteranceTimestamp"
)

// Values returns all known values for AnalyticsBinByName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsBinByName) Values() []AnalyticsBinByName {
	return []AnalyticsBinByName{
		"ConversationStartTime",
		"UtteranceTimestamp",
	}
}

type AnalyticsCommonFilterName string

// Enum values for AnalyticsCommonFilterName
const (
	AnalyticsCommonFilterNameBotAliasId AnalyticsCommonFilterName = "BotAliasId"
	AnalyticsCommonFilterNameBotVersion AnalyticsCommonFilterName = "BotVersion"
	AnalyticsCommonFilterNameLocaleId   AnalyticsCommonFilterName = "LocaleId"
	AnalyticsCommonFilterNameModality   AnalyticsCommonFilterName = "Modality"
	AnalyticsCommonFilterNameChannel    AnalyticsCommonFilterName = "Channel"
)

// Values returns all known values for AnalyticsCommonFilterName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsCommonFilterName) Values() []AnalyticsCommonFilterName {
	return []AnalyticsCommonFilterName{
		"BotAliasId",
		"BotVersion",
		"LocaleId",
		"Modality",
		"Channel",
	}
}

type AnalyticsFilterOperator string

// Enum values for AnalyticsFilterOperator
const (
	AnalyticsFilterOperatorEquals      AnalyticsFilterOperator = "EQ"
	AnalyticsFilterOperatorGreaterThan AnalyticsFilterOperator = "GT"
	AnalyticsFilterOperatorLessThan    AnalyticsFilterOperator = "LT"
)

// Values returns all known values for AnalyticsFilterOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsFilterOperator) Values() []AnalyticsFilterOperator {
	return []AnalyticsFilterOperator{
		"EQ",
		"GT",
		"LT",
	}
}

type AnalyticsIntentField string

// Enum values for AnalyticsIntentField
const (
	AnalyticsIntentFieldIntentName     AnalyticsIntentField = "IntentName"
	AnalyticsIntentFieldIntentEndState AnalyticsIntentField = "IntentEndState"
	AnalyticsIntentFieldIntentLevel    AnalyticsIntentField = "IntentLevel"
)

// Values returns all known values for AnalyticsIntentField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsIntentField) Values() []AnalyticsIntentField {
	return []AnalyticsIntentField{
		"IntentName",
		"IntentEndState",
		"IntentLevel",
	}
}

type AnalyticsIntentFilterName string

// Enum values for AnalyticsIntentFilterName
const (
	AnalyticsIntentFilterNameBotAliasId           AnalyticsIntentFilterName = "BotAliasId"
	AnalyticsIntentFilterNameBotVersion           AnalyticsIntentFilterName = "BotVersion"
	AnalyticsIntentFilterNameLocaleId             AnalyticsIntentFilterName = "LocaleId"
	AnalyticsIntentFilterNameModality             AnalyticsIntentFilterName = "Modality"
	AnalyticsIntentFilterNameChannel              AnalyticsIntentFilterName = "Channel"
	AnalyticsIntentFilterNameSessionId            AnalyticsIntentFilterName = "SessionId"
	AnalyticsIntentFilterNameOriginatingRequestId AnalyticsIntentFilterName = "OriginatingRequestId"
	AnalyticsIntentFilterNameIntentName           AnalyticsIntentFilterName = "IntentName"
	AnalyticsIntentFilterNameIntentEndState       AnalyticsIntentFilterName = "IntentEndState"
)

// Values returns all known values for AnalyticsIntentFilterName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsIntentFilterName) Values() []AnalyticsIntentFilterName {
	return []AnalyticsIntentFilterName{
		"BotAliasId",
		"BotVersion",
		"LocaleId",
		"Modality",
		"Channel",
		"SessionId",
		"OriginatingRequestId",
		"IntentName",
		"IntentEndState",
	}
}

type AnalyticsIntentMetricName string

// Enum values for AnalyticsIntentMetricName
const (
	AnalyticsIntentMetricNameCount    AnalyticsIntentMetricName = "Count"
	AnalyticsIntentMetricNameSuccess  AnalyticsIntentMetricName = "Success"
	AnalyticsIntentMetricNameFailure  AnalyticsIntentMetricName = "Failure"
	AnalyticsIntentMetricNameSwitched AnalyticsIntentMetricName = "Switched"
	AnalyticsIntentMetricNameDropped  AnalyticsIntentMetricName = "Dropped"
)

// Values returns all known values for AnalyticsIntentMetricName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsIntentMetricName) Values() []AnalyticsIntentMetricName {
	return []AnalyticsIntentMetricName{
		"Count",
		"Success",
		"Failure",
		"Switched",
		"Dropped",
	}
}

type AnalyticsIntentStageField string

// Enum values for AnalyticsIntentStageField
const (
	AnalyticsIntentStageFieldIntentStageName  AnalyticsIntentStageField = "IntentStageName"
	AnalyticsIntentStageFieldSwitchedToIntent AnalyticsIntentStageField = "SwitchedToIntent"
)

// Values returns all known values for AnalyticsIntentStageField. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsIntentStageField) Values() []AnalyticsIntentStageField {
	return []AnalyticsIntentStageField{
		"IntentStageName",
		"SwitchedToIntent",
	}
}

type AnalyticsIntentStageFilterName string

// Enum values for AnalyticsIntentStageFilterName
const (
	AnalyticsIntentStageFilterNameBotAliasId           AnalyticsIntentStageFilterName = "BotAliasId"
	AnalyticsIntentStageFilterNameBotVersion           AnalyticsIntentStageFilterName = "BotVersion"
	AnalyticsIntentStageFilterNameLocaleId             AnalyticsIntentStageFilterName = "LocaleId"
	AnalyticsIntentStageFilterNameModality             AnalyticsIntentStageFilterName = "Modality"
	AnalyticsIntentStageFilterNameChannel              AnalyticsIntentStageFilterName = "Channel"
	AnalyticsIntentStageFilterNameSessionId            AnalyticsIntentStageFilterName = "SessionId"
	AnalyticsIntentStageFilterNameOriginatingRequestId AnalyticsIntentStageFilterName = "OriginatingRequestId"
	AnalyticsIntentStageFilterNameIntentName           AnalyticsIntentStageFilterName = "IntentName"
	AnalyticsIntentStageFilterNameIntentStageName      AnalyticsIntentStageFilterName = "IntentStageName"
)

// Values returns all known values for AnalyticsIntentStageFilterName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsIntentStageFilterName) Values() []AnalyticsIntentStageFilterName {
	return []AnalyticsIntentStageFilterName{
		"BotAliasId",
		"BotVersion",
		"LocaleId",
		"Modality",
		"Channel",
		"SessionId",
		"OriginatingRequestId",
		"IntentName",
		"IntentStageName",
	}
}

type AnalyticsIntentStageMetricName string

// Enum values for AnalyticsIntentStageMetricName
const (
	AnalyticsIntentStageMetricNameCount   AnalyticsIntentStageMetricName = "Count"
	AnalyticsIntentStageMetricNameSuccess AnalyticsIntentStageMetricName = "Success"
	AnalyticsIntentStageMetricNameFailed  AnalyticsIntentStageMetricName = "Failed"
	AnalyticsIntentStageMetricNameDropped AnalyticsIntentStageMetricName = "Dropped"
	AnalyticsIntentStageMetricNameRetry   AnalyticsIntentStageMetricName = "Retry"
)

// Values returns all known values for AnalyticsIntentStageMetricName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsIntentStageMetricName) Values() []AnalyticsIntentStageMetricName {
	return []AnalyticsIntentStageMetricName{
		"Count",
		"Success",
		"Failed",
		"Dropped",
		"Retry",
	}
}

type AnalyticsInterval string

// Enum values for AnalyticsInterval
const (
	AnalyticsIntervalOneHour AnalyticsInterval = "OneHour"
	AnalyticsIntervalOneDay  AnalyticsInterval = "OneDay"
)

// Values returns all known values for AnalyticsInterval. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsInterval) Values() []AnalyticsInterval {
	return []AnalyticsInterval{
		"OneHour",
		"OneDay",
	}
}

type AnalyticsMetricStatistic string

// Enum values for AnalyticsMetricStatistic
const (
	AnalyticsMetricStatisticSum AnalyticsMetricStatistic = "Sum"
	AnalyticsMetricStatisticAvg AnalyticsMetricStatistic = "Avg"
	AnalyticsMetricStatisticMax AnalyticsMetricStatistic = "Max"
)

// Values returns all known values for AnalyticsMetricStatistic. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsMetricStatistic) Values() []AnalyticsMetricStatistic {
	return []AnalyticsMetricStatistic{
		"Sum",
		"Avg",
		"Max",
	}
}

type AnalyticsModality string

// Enum values for AnalyticsModality
const (
	AnalyticsModalitySpeech    AnalyticsModality = "Speech"
	AnalyticsModalityText      AnalyticsModality = "Text"
	AnalyticsModalityDtmf      AnalyticsModality = "DTMF"
	AnalyticsModalityMultiMode AnalyticsModality = "MultiMode"
)

// Values returns all known values for AnalyticsModality. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsModality) Values() []AnalyticsModality {
	return []AnalyticsModality{
		"Speech",
		"Text",
		"DTMF",
		"MultiMode",
	}
}

type AnalyticsNodeType string

// Enum values for AnalyticsNodeType
const (
	AnalyticsNodeTypeInner AnalyticsNodeType = "Inner"
	AnalyticsNodeTypeExit  AnalyticsNodeType = "Exit"
)

// Values returns all known values for AnalyticsNodeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsNodeType) Values() []AnalyticsNodeType {
	return []AnalyticsNodeType{
		"Inner",
		"Exit",
	}
}

type AnalyticsSessionField string

// Enum values for AnalyticsSessionField
const (
	AnalyticsSessionFieldConversationEndState AnalyticsSessionField = "ConversationEndState"
	AnalyticsSessionFieldLocaleId             AnalyticsSessionField = "LocaleId"
)

// Values returns all known values for AnalyticsSessionField. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsSessionField) Values() []AnalyticsSessionField {
	return []AnalyticsSessionField{
		"ConversationEndState",
		"LocaleId",
	}
}

type AnalyticsSessionFilterName string

// Enum values for AnalyticsSessionFilterName
const (
	AnalyticsSessionFilterNameBotAliasId           AnalyticsSessionFilterName = "BotAliasId"
	AnalyticsSessionFilterNameBotVersion           AnalyticsSessionFilterName = "BotVersion"
	AnalyticsSessionFilterNameLocaleId             AnalyticsSessionFilterName = "LocaleId"
	AnalyticsSessionFilterNameModality             AnalyticsSessionFilterName = "Modality"
	AnalyticsSessionFilterNameChannel              AnalyticsSessionFilterName = "Channel"
	AnalyticsSessionFilterNameDuration             AnalyticsSessionFilterName = "Duration"
	AnalyticsSessionFilterNameConversationEndState AnalyticsSessionFilterName = "ConversationEndState"
	AnalyticsSessionFilterNameSessionId            AnalyticsSessionFilterName = "SessionId"
	AnalyticsSessionFilterNameOriginatingRequestId AnalyticsSessionFilterName = "OriginatingRequestId"
	AnalyticsSessionFilterNameIntentPath           AnalyticsSessionFilterName = "IntentPath"
)

// Values returns all known values for AnalyticsSessionFilterName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsSessionFilterName) Values() []AnalyticsSessionFilterName {
	return []AnalyticsSessionFilterName{
		"BotAliasId",
		"BotVersion",
		"LocaleId",
		"Modality",
		"Channel",
		"Duration",
		"ConversationEndState",
		"SessionId",
		"OriginatingRequestId",
		"IntentPath",
	}
}

type AnalyticsSessionMetricName string

// Enum values for AnalyticsSessionMetricName
const (
	AnalyticsSessionMetricNameCount                AnalyticsSessionMetricName = "Count"
	AnalyticsSessionMetricNameSuccess              AnalyticsSessionMetricName = "Success"
	AnalyticsSessionMetricNameFailure              AnalyticsSessionMetricName = "Failure"
	AnalyticsSessionMetricNameDropped              AnalyticsSessionMetricName = "Dropped"
	AnalyticsSessionMetricNameDuration             AnalyticsSessionMetricName = "Duration"
	AnalyticsSessionMetricNameTurnsPerConversation AnalyticsSessionMetricName = "TurnsPerConversation"
	AnalyticsSessionMetricNameConcurrency          AnalyticsSessionMetricName = "Concurrency"
)

// Values returns all known values for AnalyticsSessionMetricName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsSessionMetricName) Values() []AnalyticsSessionMetricName {
	return []AnalyticsSessionMetricName{
		"Count",
		"Success",
		"Failure",
		"Dropped",
		"Duration",
		"TurnsPerConversation",
		"Concurrency",
	}
}

type AnalyticsSessionSortByName string

// Enum values for AnalyticsSessionSortByName
const (
	AnalyticsSessionSortByNameConversationStartTime AnalyticsSessionSortByName = "ConversationStartTime"
	AnalyticsSessionSortByNameNumberOfTurns         AnalyticsSessionSortByName = "NumberOfTurns"
	AnalyticsSessionSortByNameDuration              AnalyticsSessionSortByName = "Duration"
)

// Values returns all known values for AnalyticsSessionSortByName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsSessionSortByName) Values() []AnalyticsSessionSortByName {
	return []AnalyticsSessionSortByName{
		"ConversationStartTime",
		"NumberOfTurns",
		"Duration",
	}
}

type AnalyticsSortOrder string

// Enum values for AnalyticsSortOrder
const (
	AnalyticsSortOrderAscending  AnalyticsSortOrder = "Ascending"
	AnalyticsSortOrderDescending AnalyticsSortOrder = "Descending"
)

// Values returns all known values for AnalyticsSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsSortOrder) Values() []AnalyticsSortOrder {
	return []AnalyticsSortOrder{
		"Ascending",
		"Descending",
	}
}

type AnalyticsUtteranceAttributeName string

// Enum values for AnalyticsUtteranceAttributeName
const (
	AnalyticsUtteranceAttributeNameLastUsedIntent AnalyticsUtteranceAttributeName = "LastUsedIntent"
)

// Values returns all known values for AnalyticsUtteranceAttributeName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsUtteranceAttributeName) Values() []AnalyticsUtteranceAttributeName {
	return []AnalyticsUtteranceAttributeName{
		"LastUsedIntent",
	}
}

type AnalyticsUtteranceField string

// Enum values for AnalyticsUtteranceField
const (
	AnalyticsUtteranceFieldUtteranceText  AnalyticsUtteranceField = "UtteranceText"
	AnalyticsUtteranceFieldUtteranceState AnalyticsUtteranceField = "UtteranceState"
)

// Values returns all known values for AnalyticsUtteranceField. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsUtteranceField) Values() []AnalyticsUtteranceField {
	return []AnalyticsUtteranceField{
		"UtteranceText",
		"UtteranceState",
	}
}

type AnalyticsUtteranceFilterName string

// Enum values for AnalyticsUtteranceFilterName
const (
	AnalyticsUtteranceFilterNameBotAliasId           AnalyticsUtteranceFilterName = "BotAliasId"
	AnalyticsUtteranceFilterNameBotVersion           AnalyticsUtteranceFilterName = "BotVersion"
	AnalyticsUtteranceFilterNameLocaleId             AnalyticsUtteranceFilterName = "LocaleId"
	AnalyticsUtteranceFilterNameModality             AnalyticsUtteranceFilterName = "Modality"
	AnalyticsUtteranceFilterNameChannel              AnalyticsUtteranceFilterName = "Channel"
	AnalyticsUtteranceFilterNameSessionId            AnalyticsUtteranceFilterName = "SessionId"
	AnalyticsUtteranceFilterNameOriginatingRequestId AnalyticsUtteranceFilterName = "OriginatingRequestId"
	AnalyticsUtteranceFilterNameUtteranceState       AnalyticsUtteranceFilterName = "UtteranceState"
	AnalyticsUtteranceFilterNameUtteranceText        AnalyticsUtteranceFilterName = "UtteranceText"
)

// Values returns all known values for AnalyticsUtteranceFilterName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsUtteranceFilterName) Values() []AnalyticsUtteranceFilterName {
	return []AnalyticsUtteranceFilterName{
		"BotAliasId",
		"BotVersion",
		"LocaleId",
		"Modality",
		"Channel",
		"SessionId",
		"OriginatingRequestId",
		"UtteranceState",
		"UtteranceText",
	}
}

type AnalyticsUtteranceMetricName string

// Enum values for AnalyticsUtteranceMetricName
const (
	AnalyticsUtteranceMetricNameCount              AnalyticsUtteranceMetricName = "Count"
	AnalyticsUtteranceMetricNameMissed             AnalyticsUtteranceMetricName = "Missed"
	AnalyticsUtteranceMetricNameDetected           AnalyticsUtteranceMetricName = "Detected"
	AnalyticsUtteranceMetricNameUtteranceTimestamp AnalyticsUtteranceMetricName = "UtteranceTimestamp"
)

// Values returns all known values for AnalyticsUtteranceMetricName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsUtteranceMetricName) Values() []AnalyticsUtteranceMetricName {
	return []AnalyticsUtteranceMetricName{
		"Count",
		"Missed",
		"Detected",
		"UtteranceTimestamp",
	}
}

type AnalyticsUtteranceSortByName string

// Enum values for AnalyticsUtteranceSortByName
const (
	AnalyticsUtteranceSortByNameUtteranceTimestamp AnalyticsUtteranceSortByName = "UtteranceTimestamp"
)

// Values returns all known values for AnalyticsUtteranceSortByName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsUtteranceSortByName) Values() []AnalyticsUtteranceSortByName {
	return []AnalyticsUtteranceSortByName{
		"UtteranceTimestamp",
	}
}

type AssociatedTranscriptFilterName string

// Enum values for AssociatedTranscriptFilterName
const (
	AssociatedTranscriptFilterNameIntentId   AssociatedTranscriptFilterName = "IntentId"
	AssociatedTranscriptFilterNameSlotTypeId AssociatedTranscriptFilterName = "SlotTypeId"
)

// Values returns all known values for AssociatedTranscriptFilterName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssociatedTranscriptFilterName) Values() []AssociatedTranscriptFilterName {
	return []AssociatedTranscriptFilterName{
		"IntentId",
		"SlotTypeId",
	}
}

type AudioRecognitionStrategy string

// Enum values for AudioRecognitionStrategy
const (
	AudioRecognitionStrategyUseSlotValuesAsCustomVocabulary AudioRecognitionStrategy = "UseSlotValuesAsCustomVocabulary"
)

// Values returns all known values for AudioRecognitionStrategy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AudioRecognitionStrategy) Values() []AudioRecognitionStrategy {
	return []AudioRecognitionStrategy{
		"UseSlotValuesAsCustomVocabulary",
	}
}

type BedrockTraceStatus string

// Enum values for BedrockTraceStatus
const (
	BedrockTraceStatusEnabled  BedrockTraceStatus = "ENABLED"
	BedrockTraceStatusDisabled BedrockTraceStatus = "DISABLED"
)

// Values returns all known values for BedrockTraceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BedrockTraceStatus) Values() []BedrockTraceStatus {
	return []BedrockTraceStatus{
		"ENABLED",
		"DISABLED",
	}
}

type BotAliasReplicationStatus string

// Enum values for BotAliasReplicationStatus
const (
	BotAliasReplicationStatusCreating  BotAliasReplicationStatus = "Creating"
	BotAliasReplicationStatusUpdating  BotAliasReplicationStatus = "Updating"
	BotAliasReplicationStatusAvailable BotAliasReplicationStatus = "Available"
	BotAliasReplicationStatusDeleting  BotAliasReplicationStatus = "Deleting"
	BotAliasReplicationStatusFailed    BotAliasReplicationStatus = "Failed"
)

// Values returns all known values for BotAliasReplicationStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotAliasReplicationStatus) Values() []BotAliasReplicationStatus {
	return []BotAliasReplicationStatus{
		"Creating",
		"Updating",
		"Available",
		"Deleting",
		"Failed",
	}
}

type BotAliasStatus string

// Enum values for BotAliasStatus
const (
	BotAliasStatusCreating  BotAliasStatus = "Creating"
	BotAliasStatusAvailable BotAliasStatus = "Available"
	BotAliasStatusDeleting  BotAliasStatus = "Deleting"
	BotAliasStatusFailed    BotAliasStatus = "Failed"
)

// Values returns all known values for BotAliasStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotAliasStatus) Values() []BotAliasStatus {
	return []BotAliasStatus{
		"Creating",
		"Available",
		"Deleting",
		"Failed",
	}
}

type BotFilterName string

// Enum values for BotFilterName
const (
	BotFilterNameBotName BotFilterName = "BotName"
	BotFilterNameBotType BotFilterName = "BotType"
)

// Values returns all known values for BotFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotFilterName) Values() []BotFilterName {
	return []BotFilterName{
		"BotName",
		"BotType",
	}
}

type BotFilterOperator string

// Enum values for BotFilterOperator
const (
	BotFilterOperatorContains  BotFilterOperator = "CO"
	BotFilterOperatorEquals    BotFilterOperator = "EQ"
	BotFilterOperatorNotEquals BotFilterOperator = "NE"
)

// Values returns all known values for BotFilterOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotFilterOperator) Values() []BotFilterOperator {
	return []BotFilterOperator{
		"CO",
		"EQ",
		"NE",
	}
}

type BotLocaleFilterName string

// Enum values for BotLocaleFilterName
const (
	BotLocaleFilterNameBotLocaleName BotLocaleFilterName = "BotLocaleName"
)

// Values returns all known values for BotLocaleFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotLocaleFilterName) Values() []BotLocaleFilterName {
	return []BotLocaleFilterName{
		"BotLocaleName",
	}
}

type BotLocaleFilterOperator string

// Enum values for BotLocaleFilterOperator
const (
	BotLocaleFilterOperatorContains BotLocaleFilterOperator = "CO"
	BotLocaleFilterOperatorEquals   BotLocaleFilterOperator = "EQ"
)

// Values returns all known values for BotLocaleFilterOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotLocaleFilterOperator) Values() []BotLocaleFilterOperator {
	return []BotLocaleFilterOperator{
		"CO",
		"EQ",
	}
}

type BotLocaleSortAttribute string

// Enum values for BotLocaleSortAttribute
const (
	BotLocaleSortAttributeBotLocaleName BotLocaleSortAttribute = "BotLocaleName"
)

// Values returns all known values for BotLocaleSortAttribute. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotLocaleSortAttribute) Values() []BotLocaleSortAttribute {
	return []BotLocaleSortAttribute{
		"BotLocaleName",
	}
}

type BotLocaleStatus string

// Enum values for BotLocaleStatus
const (
	BotLocaleStatusCreating            BotLocaleStatus = "Creating"
	BotLocaleStatusBuilding            BotLocaleStatus = "Building"
	BotLocaleStatusBuilt               BotLocaleStatus = "Built"
	BotLocaleStatusReadyExpressTesting BotLocaleStatus = "ReadyExpressTesting"
	BotLocaleStatusFailed              BotLocaleStatus = "Failed"
	BotLocaleStatusDeleting            BotLocaleStatus = "Deleting"
	BotLocaleStatusNotBuilt            BotLocaleStatus = "NotBuilt"
	BotLocaleStatusImporting           BotLocaleStatus = "Importing"
	BotLocaleStatusProcessing          BotLocaleStatus = "Processing"
)

// Values returns all known values for BotLocaleStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotLocaleStatus) Values() []BotLocaleStatus {
	return []BotLocaleStatus{
		"Creating",
		"Building",
		"Built",
		"ReadyExpressTesting",
		"Failed",
		"Deleting",
		"NotBuilt",
		"Importing",
		"Processing",
	}
}

type BotRecommendationStatus string

// Enum values for BotRecommendationStatus
const (
	BotRecommendationStatusProcessing  BotRecommendationStatus = "Processing"
	BotRecommendationStatusDeleting    BotRecommendationStatus = "Deleting"
	BotRecommendationStatusDeleted     BotRecommendationStatus = "Deleted"
	BotRecommendationStatusDownloading BotRecommendationStatus = "Downloading"
	BotRecommendationStatusUpdating    BotRecommendationStatus = "Updating"
	BotRecommendationStatusAvailable   BotRecommendationStatus = "Available"
	BotRecommendationStatusFailed      BotRecommendationStatus = "Failed"
	BotRecommendationStatusStopping    BotRecommendationStatus = "Stopping"
	BotRecommendationStatusStopped     BotRecommendationStatus = "Stopped"
)

// Values returns all known values for BotRecommendationStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotRecommendationStatus) Values() []BotRecommendationStatus {
	return []BotRecommendationStatus{
		"Processing",
		"Deleting",
		"Deleted",
		"Downloading",
		"Updating",
		"Available",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type BotReplicaStatus string

// Enum values for BotReplicaStatus
const (
	BotReplicaStatusEnabling BotReplicaStatus = "Enabling"
	BotReplicaStatusEnabled  BotReplicaStatus = "Enabled"
	BotReplicaStatusDeleting BotReplicaStatus = "Deleting"
	BotReplicaStatusFailed   BotReplicaStatus = "Failed"
)

// Values returns all known values for BotReplicaStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotReplicaStatus) Values() []BotReplicaStatus {
	return []BotReplicaStatus{
		"Enabling",
		"Enabled",
		"Deleting",
		"Failed",
	}
}

type BotSortAttribute string

// Enum values for BotSortAttribute
const (
	BotSortAttributeBotName BotSortAttribute = "BotName"
)

// Values returns all known values for BotSortAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotSortAttribute) Values() []BotSortAttribute {
	return []BotSortAttribute{
		"BotName",
	}
}

type BotStatus string

// Enum values for BotStatus
const (
	BotStatusCreating   BotStatus = "Creating"
	BotStatusAvailable  BotStatus = "Available"
	BotStatusInactive   BotStatus = "Inactive"
	BotStatusDeleting   BotStatus = "Deleting"
	BotStatusFailed     BotStatus = "Failed"
	BotStatusVersioning BotStatus = "Versioning"
	BotStatusImporting  BotStatus = "Importing"
	BotStatusUpdating   BotStatus = "Updating"
)

// Values returns all known values for BotStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotStatus) Values() []BotStatus {
	return []BotStatus{
		"Creating",
		"Available",
		"Inactive",
		"Deleting",
		"Failed",
		"Versioning",
		"Importing",
		"Updating",
	}
}

type BotType string

// Enum values for BotType
const (
	BotTypeBot        BotType = "Bot"
	BotTypeBotNetwork BotType = "BotNetwork"
)

// Values returns all known values for BotType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotType) Values() []BotType {
	return []BotType{
		"Bot",
		"BotNetwork",
	}
}

type BotVersionReplicaSortAttribute string

// Enum values for BotVersionReplicaSortAttribute
const (
	BotVersionReplicaSortAttributeBotVersion BotVersionReplicaSortAttribute = "BotVersion"
)

// Values returns all known values for BotVersionReplicaSortAttribute. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotVersionReplicaSortAttribute) Values() []BotVersionReplicaSortAttribute {
	return []BotVersionReplicaSortAttribute{
		"BotVersion",
	}
}

type BotVersionReplicationStatus string

// Enum values for BotVersionReplicationStatus
const (
	BotVersionReplicationStatusCreating  BotVersionReplicationStatus = "Creating"
	BotVersionReplicationStatusAvailable BotVersionReplicationStatus = "Available"
	BotVersionReplicationStatusDeleting  BotVersionReplicationStatus = "Deleting"
	BotVersionReplicationStatusFailed    BotVersionReplicationStatus = "Failed"
)

// Values returns all known values for BotVersionReplicationStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotVersionReplicationStatus) Values() []BotVersionReplicationStatus {
	return []BotVersionReplicationStatus{
		"Creating",
		"Available",
		"Deleting",
		"Failed",
	}
}

type BotVersionSortAttribute string

// Enum values for BotVersionSortAttribute
const (
	BotVersionSortAttributeBotVersion BotVersionSortAttribute = "BotVersion"
)

// Values returns all known values for BotVersionSortAttribute. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BotVersionSortAttribute) Values() []BotVersionSortAttribute {
	return []BotVersionSortAttribute{
		"BotVersion",
	}
}

type BuiltInIntentSortAttribute string

// Enum values for BuiltInIntentSortAttribute
const (
	BuiltInIntentSortAttributeIntentSignature BuiltInIntentSortAttribute = "IntentSignature"
)

// Values returns all known values for BuiltInIntentSortAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BuiltInIntentSortAttribute) Values() []BuiltInIntentSortAttribute {
	return []BuiltInIntentSortAttribute{
		"IntentSignature",
	}
}

type BuiltInSlotTypeSortAttribute string

// Enum values for BuiltInSlotTypeSortAttribute
const (
	BuiltInSlotTypeSortAttributeSlotTypeSignature BuiltInSlotTypeSortAttribute = "SlotTypeSignature"
)

// Values returns all known values for BuiltInSlotTypeSortAttribute. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BuiltInSlotTypeSortAttribute) Values() []BuiltInSlotTypeSortAttribute {
	return []BuiltInSlotTypeSortAttribute{
		"SlotTypeSignature",
	}
}

type ConversationEndState string

// Enum values for ConversationEndState
const (
	ConversationEndStateSuccess ConversationEndState = "Success"
	ConversationEndStateFailure ConversationEndState = "Failure"
	ConversationEndStateDropped ConversationEndState = "Dropped"
)

// Values returns all known values for ConversationEndState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConversationEndState) Values() []ConversationEndState {
	return []ConversationEndState{
		"Success",
		"Failure",
		"Dropped",
	}
}

type ConversationLogsInputModeFilter string

// Enum values for ConversationLogsInputModeFilter
const (
	ConversationLogsInputModeFilterSpeech ConversationLogsInputModeFilter = "Speech"
	ConversationLogsInputModeFilterText   ConversationLogsInputModeFilter = "Text"
)

// Values returns all known values for ConversationLogsInputModeFilter. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConversationLogsInputModeFilter) Values() []ConversationLogsInputModeFilter {
	return []ConversationLogsInputModeFilter{
		"Speech",
		"Text",
	}
}

type CustomVocabularyStatus string

// Enum values for CustomVocabularyStatus
const (
	CustomVocabularyStatusReady     CustomVocabularyStatus = "Ready"
	CustomVocabularyStatusDeleting  CustomVocabularyStatus = "Deleting"
	CustomVocabularyStatusExporting CustomVocabularyStatus = "Exporting"
	CustomVocabularyStatusImporting CustomVocabularyStatus = "Importing"
	CustomVocabularyStatusCreating  CustomVocabularyStatus = "Creating"
)

// Values returns all known values for CustomVocabularyStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CustomVocabularyStatus) Values() []CustomVocabularyStatus {
	return []CustomVocabularyStatus{
		"Ready",
		"Deleting",
		"Exporting",
		"Importing",
		"Creating",
	}
}

type DialogActionType string

// Enum values for DialogActionType
const (
	DialogActionTypeElicitIntent         DialogActionType = "ElicitIntent"
	DialogActionTypeStartIntent          DialogActionType = "StartIntent"
	DialogActionTypeElicitSlot           DialogActionType = "ElicitSlot"
	DialogActionTypeEvaluateConditional  DialogActionType = "EvaluateConditional"
	DialogActionTypeInvokeDialogCodeHook DialogActionType = "InvokeDialogCodeHook"
	DialogActionTypeConfirmIntent        DialogActionType = "ConfirmIntent"
	DialogActionTypeFulfillIntent        DialogActionType = "FulfillIntent"
	DialogActionTypeCloseIntent          DialogActionType = "CloseIntent"
	DialogActionTypeEndConversation      DialogActionType = "EndConversation"
)

// Values returns all known values for DialogActionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DialogActionType) Values() []DialogActionType {
	return []DialogActionType{
		"ElicitIntent",
		"StartIntent",
		"ElicitSlot",
		"EvaluateConditional",
		"InvokeDialogCodeHook",
		"ConfirmIntent",
		"FulfillIntent",
		"CloseIntent",
		"EndConversation",
	}
}

type Effect string

// Enum values for Effect
const (
	EffectAllow Effect = "Allow"
	EffectDeny  Effect = "Deny"
)

// Values returns all known values for Effect. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Effect) Values() []Effect {
	return []Effect{
		"Allow",
		"Deny",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeDuplicateInput        ErrorCode = "DUPLICATE_INPUT"
	ErrorCodeResourceDoesNotExist  ErrorCode = "RESOURCE_DOES_NOT_EXIST"
	ErrorCodeResourceAlreadyExists ErrorCode = "RESOURCE_ALREADY_EXISTS"
	ErrorCodeInternalServerFailure ErrorCode = "INTERNAL_SERVER_FAILURE"
)

// Values returns all known values for ErrorCode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"DUPLICATE_INPUT",
		"RESOURCE_DOES_NOT_EXIST",
		"RESOURCE_ALREADY_EXISTS",
		"INTERNAL_SERVER_FAILURE",
	}
}

type ExportFilterName string

// Enum values for ExportFilterName
const (
	ExportFilterNameExportResourceType ExportFilterName = "ExportResourceType"
)

// Values returns all known values for ExportFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExportFilterName) Values() []ExportFilterName {
	return []ExportFilterName{
		"ExportResourceType",
	}
}

type ExportFilterOperator string

// Enum values for ExportFilterOperator
const (
	ExportFilterOperatorContains ExportFilterOperator = "CO"
	ExportFilterOperatorEquals   ExportFilterOperator = "EQ"
)

// Values returns all known values for ExportFilterOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExportFilterOperator) Values() []ExportFilterOperator {
	return []ExportFilterOperator{
		"CO",
		"EQ",
	}
}

type ExportSortAttribute string

// Enum values for ExportSortAttribute
const (
	ExportSortAttributeLastUpdatedDateTime ExportSortAttribute = "LastUpdatedDateTime"
)

// Values returns all known values for ExportSortAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExportSortAttribute) Values() []ExportSortAttribute {
	return []ExportSortAttribute{
		"LastUpdatedDateTime",
	}
}

type ExportStatus string

// Enum values for ExportStatus
const (
	ExportStatusInProgress ExportStatus = "InProgress"
	ExportStatusCompleted  ExportStatus = "Completed"
	ExportStatusFailed     ExportStatus = "Failed"
	ExportStatusDeleting   ExportStatus = "Deleting"
)

// Values returns all known values for ExportStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExportStatus) Values() []ExportStatus {
	return []ExportStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
	}
}

type GenerationSortByAttribute string

// Enum values for GenerationSortByAttribute
const (
	GenerationSortByAttributeCreationStartTime GenerationSortByAttribute = "creationStartTime"
	GenerationSortByAttributeLastUpdatedTime   GenerationSortByAttribute = "lastUpdatedTime"
)

// Values returns all known values for GenerationSortByAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GenerationSortByAttribute) Values() []GenerationSortByAttribute {
	return []GenerationSortByAttribute{
		"creationStartTime",
		"lastUpdatedTime",
	}
}

type GenerationStatus string

// Enum values for GenerationStatus
const (
	GenerationStatusFailed     GenerationStatus = "Failed"
	GenerationStatusComplete   GenerationStatus = "Complete"
	GenerationStatusInProgress GenerationStatus = "InProgress"
)

// Values returns all known values for GenerationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GenerationStatus) Values() []GenerationStatus {
	return []GenerationStatus{
		"Failed",
		"Complete",
		"InProgress",
	}
}

type ImportExportFileFormat string

// Enum values for ImportExportFileFormat
const (
	ImportExportFileFormatLexJson ImportExportFileFormat = "LexJson"
	ImportExportFileFormatTsv     ImportExportFileFormat = "TSV"
	ImportExportFileFormatCsv     ImportExportFileFormat = "CSV"
)

// Values returns all known values for ImportExportFileFormat. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportExportFileFormat) Values() []ImportExportFileFormat {
	return []ImportExportFileFormat{
		"LexJson",
		"TSV",
		"CSV",
	}
}

type ImportFilterName string

// Enum values for ImportFilterName
const (
	ImportFilterNameImportResourceType ImportFilterName = "ImportResourceType"
)

// Values returns all known values for ImportFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportFilterName) Values() []ImportFilterName {
	return []ImportFilterName{
		"ImportResourceType",
	}
}

type ImportFilterOperator string

// Enum values for ImportFilterOperator
const (
	ImportFilterOperatorContains ImportFilterOperator = "CO"
	ImportFilterOperatorEquals   ImportFilterOperator = "EQ"
)

// Values returns all known values for ImportFilterOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportFilterOperator) Values() []ImportFilterOperator {
	return []ImportFilterOperator{
		"CO",
		"EQ",
	}
}

type ImportResourceType string

// Enum values for ImportResourceType
const (
	ImportResourceTypeBot              ImportResourceType = "Bot"
	ImportResourceTypeBotLocale        ImportResourceType = "BotLocale"
	ImportResourceTypeCustomVocabulary ImportResourceType = "CustomVocabulary"
	ImportResourceTypeTestSet          ImportResourceType = "TestSet"
)

// Values returns all known values for ImportResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportResourceType) Values() []ImportResourceType {
	return []ImportResourceType{
		"Bot",
		"BotLocale",
		"CustomVocabulary",
		"TestSet",
	}
}

type ImportSortAttribute string

// Enum values for ImportSortAttribute
const (
	ImportSortAttributeLastUpdatedDateTime ImportSortAttribute = "LastUpdatedDateTime"
)

// Values returns all known values for ImportSortAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportSortAttribute) Values() []ImportSortAttribute {
	return []ImportSortAttribute{
		"LastUpdatedDateTime",
	}
}

type ImportStatus string

// Enum values for ImportStatus
const (
	ImportStatusInProgress ImportStatus = "InProgress"
	ImportStatusCompleted  ImportStatus = "Completed"
	ImportStatusFailed     ImportStatus = "Failed"
	ImportStatusDeleting   ImportStatus = "Deleting"
)

// Values returns all known values for ImportStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportStatus) Values() []ImportStatus {
	return []ImportStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
	}
}

type IntentFilterName string

// Enum values for IntentFilterName
const (
	IntentFilterNameIntentName IntentFilterName = "IntentName"
)

// Values returns all known values for IntentFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IntentFilterName) Values() []IntentFilterName {
	return []IntentFilterName{
		"IntentName",
	}
}

type IntentFilterOperator string

// Enum values for IntentFilterOperator
const (
	IntentFilterOperatorContains IntentFilterOperator = "CO"
	IntentFilterOperatorEquals   IntentFilterOperator = "EQ"
)

// Values returns all known values for IntentFilterOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IntentFilterOperator) Values() []IntentFilterOperator {
	return []IntentFilterOperator{
		"CO",
		"EQ",
	}
}

type IntentSortAttribute string

// Enum values for IntentSortAttribute
const (
	IntentSortAttributeIntentName          IntentSortAttribute = "IntentName"
	IntentSortAttributeLastUpdatedDateTime IntentSortAttribute = "LastUpdatedDateTime"
)

// Values returns all known values for IntentSortAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IntentSortAttribute) Values() []IntentSortAttribute {
	return []IntentSortAttribute{
		"IntentName",
		"LastUpdatedDateTime",
	}
}

type IntentState string

// Enum values for IntentState
const (
	IntentStateFailed                IntentState = "Failed"
	IntentStateFulfilled             IntentState = "Fulfilled"
	IntentStateInProgress            IntentState = "InProgress"
	IntentStateReadyForFulfillment   IntentState = "ReadyForFulfillment"
	IntentStateWaiting               IntentState = "Waiting"
	IntentStateFulfillmentInProgress IntentState = "FulfillmentInProgress"
)

// Values returns all known values for IntentState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IntentState) Values() []IntentState {
	return []IntentState{
		"Failed",
		"Fulfilled",
		"InProgress",
		"ReadyForFulfillment",
		"Waiting",
		"FulfillmentInProgress",
	}
}

type MergeStrategy string

// Enum values for MergeStrategy
const (
	MergeStrategyOverwrite      MergeStrategy = "Overwrite"
	MergeStrategyFailOnConflict MergeStrategy = "FailOnConflict"
	MergeStrategyAppend         MergeStrategy = "Append"
)

// Values returns all known values for MergeStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MergeStrategy) Values() []MergeStrategy {
	return []MergeStrategy{
		"Overwrite",
		"FailOnConflict",
		"Append",
	}
}

type MessageSelectionStrategy string

// Enum values for MessageSelectionStrategy
const (
	MessageSelectionStrategyRandom  MessageSelectionStrategy = "Random"
	MessageSelectionStrategyOrdered MessageSelectionStrategy = "Ordered"
)

// Values returns all known values for MessageSelectionStrategy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageSelectionStrategy) Values() []MessageSelectionStrategy {
	return []MessageSelectionStrategy{
		"Random",
		"Ordered",
	}
}

type ObfuscationSettingType string

// Enum values for ObfuscationSettingType
const (
	ObfuscationSettingTypeNone               ObfuscationSettingType = "None"
	ObfuscationSettingTypeDefaultObfuscation ObfuscationSettingType = "DefaultObfuscation"
)

// Values returns all known values for ObfuscationSettingType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ObfuscationSettingType) Values() []ObfuscationSettingType {
	return []ObfuscationSettingType{
		"None",
		"DefaultObfuscation",
	}
}

type PromptAttempt string

// Enum values for PromptAttempt
const (
	PromptAttemptInitial PromptAttempt = "Initial"
	PromptAttemptRetry1  PromptAttempt = "Retry1"
	PromptAttemptRetry2  PromptAttempt = "Retry2"
	PromptAttemptRetry3  PromptAttempt = "Retry3"
	PromptAttemptRetry4  PromptAttempt = "Retry4"
	PromptAttemptRetry5  PromptAttempt = "Retry5"
)

// Values returns all known values for PromptAttempt. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PromptAttempt) Values() []PromptAttempt {
	return []PromptAttempt{
		"Initial",
		"Retry1",
		"Retry2",
		"Retry3",
		"Retry4",
		"Retry5",
	}
}

type SearchOrder string

// Enum values for SearchOrder
const (
	SearchOrderAscending  SearchOrder = "Ascending"
	SearchOrderDescending SearchOrder = "Descending"
)

// Values returns all known values for SearchOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SearchOrder) Values() []SearchOrder {
	return []SearchOrder{
		"Ascending",
		"Descending",
	}
}

type SlotConstraint string

// Enum values for SlotConstraint
const (
	SlotConstraintRequired SlotConstraint = "Required"
	SlotConstraintOptional SlotConstraint = "Optional"
)

// Values returns all known values for SlotConstraint. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotConstraint) Values() []SlotConstraint {
	return []SlotConstraint{
		"Required",
		"Optional",
	}
}

type SlotFilterName string

// Enum values for SlotFilterName
const (
	SlotFilterNameSlotName SlotFilterName = "SlotName"
)

// Values returns all known values for SlotFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotFilterName) Values() []SlotFilterName {
	return []SlotFilterName{
		"SlotName",
	}
}

type SlotFilterOperator string

// Enum values for SlotFilterOperator
const (
	SlotFilterOperatorContains SlotFilterOperator = "CO"
	SlotFilterOperatorEquals   SlotFilterOperator = "EQ"
)

// Values returns all known values for SlotFilterOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotFilterOperator) Values() []SlotFilterOperator {
	return []SlotFilterOperator{
		"CO",
		"EQ",
	}
}

type SlotResolutionStrategy string

// Enum values for SlotResolutionStrategy
const (
	SlotResolutionStrategyEnhancedFallback SlotResolutionStrategy = "EnhancedFallback"
	SlotResolutionStrategyDefault          SlotResolutionStrategy = "Default"
)

// Values returns all known values for SlotResolutionStrategy. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotResolutionStrategy) Values() []SlotResolutionStrategy {
	return []SlotResolutionStrategy{
		"EnhancedFallback",
		"Default",
	}
}

type SlotShape string

// Enum values for SlotShape
const (
	SlotShapeScalar SlotShape = "Scalar"
	SlotShapeList   SlotShape = "List"
)

// Values returns all known values for SlotShape. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotShape) Values() []SlotShape {
	return []SlotShape{
		"Scalar",
		"List",
	}
}

type SlotSortAttribute string

// Enum values for SlotSortAttribute
const (
	SlotSortAttributeSlotName            SlotSortAttribute = "SlotName"
	SlotSortAttributeLastUpdatedDateTime SlotSortAttribute = "LastUpdatedDateTime"
)

// Values returns all known values for SlotSortAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotSortAttribute) Values() []SlotSortAttribute {
	return []SlotSortAttribute{
		"SlotName",
		"LastUpdatedDateTime",
	}
}

type SlotTypeCategory string

// Enum values for SlotTypeCategory
const (
	SlotTypeCategoryCustom          SlotTypeCategory = "Custom"
	SlotTypeCategoryExtended        SlotTypeCategory = "Extended"
	SlotTypeCategoryExternalGrammar SlotTypeCategory = "ExternalGrammar"
	SlotTypeCategoryComposite       SlotTypeCategory = "Composite"
)

// Values returns all known values for SlotTypeCategory. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotTypeCategory) Values() []SlotTypeCategory {
	return []SlotTypeCategory{
		"Custom",
		"Extended",
		"ExternalGrammar",
		"Composite",
	}
}

type SlotTypeFilterName string

// Enum values for SlotTypeFilterName
const (
	SlotTypeFilterNameSlotTypeName       SlotTypeFilterName = "SlotTypeName"
	SlotTypeFilterNameExternalSourceType SlotTypeFilterName = "ExternalSourceType"
)

// Values returns all known values for SlotTypeFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotTypeFilterName) Values() []SlotTypeFilterName {
	return []SlotTypeFilterName{
		"SlotTypeName",
		"ExternalSourceType",
	}
}

type SlotTypeFilterOperator string

// Enum values for SlotTypeFilterOperator
const (
	SlotTypeFilterOperatorContains SlotTypeFilterOperator = "CO"
	SlotTypeFilterOperatorEquals   SlotTypeFilterOperator = "EQ"
)

// Values returns all known values for SlotTypeFilterOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotTypeFilterOperator) Values() []SlotTypeFilterOperator {
	return []SlotTypeFilterOperator{
		"CO",
		"EQ",
	}
}

type SlotTypeSortAttribute string

// Enum values for SlotTypeSortAttribute
const (
	SlotTypeSortAttributeSlotTypeName        SlotTypeSortAttribute = "SlotTypeName"
	SlotTypeSortAttributeLastUpdatedDateTime SlotTypeSortAttribute = "LastUpdatedDateTime"
)

// Values returns all known values for SlotTypeSortAttribute. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotTypeSortAttribute) Values() []SlotTypeSortAttribute {
	return []SlotTypeSortAttribute{
		"SlotTypeName",
		"LastUpdatedDateTime",
	}
}

type SlotValueResolutionStrategy string

// Enum values for SlotValueResolutionStrategy
const (
	SlotValueResolutionStrategyOriginalValue SlotValueResolutionStrategy = "OriginalValue"
	SlotValueResolutionStrategyTopResolution SlotValueResolutionStrategy = "TopResolution"
	SlotValueResolutionStrategyConcatenation SlotValueResolutionStrategy = "Concatenation"
)

// Values returns all known values for SlotValueResolutionStrategy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotValueResolutionStrategy) Values() []SlotValueResolutionStrategy {
	return []SlotValueResolutionStrategy{
		"OriginalValue",
		"TopResolution",
		"Concatenation",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "Ascending"
	SortOrderDescending SortOrder = "Descending"
)

// Values returns all known values for SortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"Ascending",
		"Descending",
	}
}

type TestExecutionApiMode string

// Enum values for TestExecutionApiMode
const (
	TestExecutionApiModeStreaming    TestExecutionApiMode = "Streaming"
	TestExecutionApiModeNonStreaming TestExecutionApiMode = "NonStreaming"
)

// Values returns all known values for TestExecutionApiMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestExecutionApiMode) Values() []TestExecutionApiMode {
	return []TestExecutionApiMode{
		"Streaming",
		"NonStreaming",
	}
}

type TestExecutionModality string

// Enum values for TestExecutionModality
const (
	TestExecutionModalityText  TestExecutionModality = "Text"
	TestExecutionModalityAudio TestExecutionModality = "Audio"
)

// Values returns all known values for TestExecutionModality. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestExecutionModality) Values() []TestExecutionModality {
	return []TestExecutionModality{
		"Text",
		"Audio",
	}
}

type TestExecutionSortAttribute string

// Enum values for TestExecutionSortAttribute
const (
	TestExecutionSortAttributeTestSetName      TestExecutionSortAttribute = "TestSetName"
	TestExecutionSortAttributeCreationDateTime TestExecutionSortAttribute = "CreationDateTime"
)

// Values returns all known values for TestExecutionSortAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestExecutionSortAttribute) Values() []TestExecutionSortAttribute {
	return []TestExecutionSortAttribute{
		"TestSetName",
		"CreationDateTime",
	}
}

type TestExecutionStatus string

// Enum values for TestExecutionStatus
const (
	TestExecutionStatusPending    TestExecutionStatus = "Pending"
	TestExecutionStatusWaiting    TestExecutionStatus = "Waiting"
	TestExecutionStatusInProgress TestExecutionStatus = "InProgress"
	TestExecutionStatusCompleted  TestExecutionStatus = "Completed"
	TestExecutionStatusFailed     TestExecutionStatus = "Failed"
	TestExecutionStatusStopping   TestExecutionStatus = "Stopping"
	TestExecutionStatusStopped    TestExecutionStatus = "Stopped"
)

// Values returns all known values for TestExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestExecutionStatus) Values() []TestExecutionStatus {
	return []TestExecutionStatus{
		"Pending",
		"Waiting",
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type TestResultMatchStatus string

// Enum values for TestResultMatchStatus
const (
	TestResultMatchStatusMatched        TestResultMatchStatus = "Matched"
	TestResultMatchStatusMismatched     TestResultMatchStatus = "Mismatched"
	TestResultMatchStatusExecutionError TestResultMatchStatus = "ExecutionError"
)

// Values returns all known values for TestResultMatchStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestResultMatchStatus) Values() []TestResultMatchStatus {
	return []TestResultMatchStatus{
		"Matched",
		"Mismatched",
		"ExecutionError",
	}
}

type TestResultTypeFilter string

// Enum values for TestResultTypeFilter
const (
	TestResultTypeFilterOverallTestResults              TestResultTypeFilter = "OverallTestResults"
	TestResultTypeFilterConversationLevelTestResults    TestResultTypeFilter = "ConversationLevelTestResults"
	TestResultTypeFilterIntentClassificationTestResults TestResultTypeFilter = "IntentClassificationTestResults"
	TestResultTypeFilterSlotResolutionTestResults       TestResultTypeFilter = "SlotResolutionTestResults"
	TestResultTypeFilterUtteranceLevelResults           TestResultTypeFilter = "UtteranceLevelResults"
)

// Values returns all known values for TestResultTypeFilter. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestResultTypeFilter) Values() []TestResultTypeFilter {
	return []TestResultTypeFilter{
		"OverallTestResults",
		"ConversationLevelTestResults",
		"IntentClassificationTestResults",
		"SlotResolutionTestResults",
		"UtteranceLevelResults",
	}
}

type TestSetDiscrepancyReportStatus string

// Enum values for TestSetDiscrepancyReportStatus
const (
	TestSetDiscrepancyReportStatusInProgress TestSetDiscrepancyReportStatus = "InProgress"
	TestSetDiscrepancyReportStatusCompleted  TestSetDiscrepancyReportStatus = "Completed"
	TestSetDiscrepancyReportStatusFailed     TestSetDiscrepancyReportStatus = "Failed"
)

// Values returns all known values for TestSetDiscrepancyReportStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestSetDiscrepancyReportStatus) Values() []TestSetDiscrepancyReportStatus {
	return []TestSetDiscrepancyReportStatus{
		"InProgress",
		"Completed",
		"Failed",
	}
}

type TestSetGenerationStatus string

// Enum values for TestSetGenerationStatus
const (
	TestSetGenerationStatusGenerating TestSetGenerationStatus = "Generating"
	TestSetGenerationStatusReady      TestSetGenerationStatus = "Ready"
	TestSetGenerationStatusFailed     TestSetGenerationStatus = "Failed"
	TestSetGenerationStatusPending    TestSetGenerationStatus = "Pending"
)

// Values returns all known values for TestSetGenerationStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestSetGenerationStatus) Values() []TestSetGenerationStatus {
	return []TestSetGenerationStatus{
		"Generating",
		"Ready",
		"Failed",
		"Pending",
	}
}

type TestSetModality string

// Enum values for TestSetModality
const (
	TestSetModalityText  TestSetModality = "Text"
	TestSetModalityAudio TestSetModality = "Audio"
)

// Values returns all known values for TestSetModality. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestSetModality) Values() []TestSetModality {
	return []TestSetModality{
		"Text",
		"Audio",
	}
}

type TestSetSortAttribute string

// Enum values for TestSetSortAttribute
const (
	TestSetSortAttributeTestSetName         TestSetSortAttribute = "TestSetName"
	TestSetSortAttributeLastUpdatedDateTime TestSetSortAttribute = "LastUpdatedDateTime"
)

// Values returns all known values for TestSetSortAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestSetSortAttribute) Values() []TestSetSortAttribute {
	return []TestSetSortAttribute{
		"TestSetName",
		"LastUpdatedDateTime",
	}
}

type TestSetStatus string

// Enum values for TestSetStatus
const (
	TestSetStatusImporting         TestSetStatus = "Importing"
	TestSetStatusPendingAnnotation TestSetStatus = "PendingAnnotation"
	TestSetStatusDeleting          TestSetStatus = "Deleting"
	TestSetStatusValidationError   TestSetStatus = "ValidationError"
	TestSetStatusReady             TestSetStatus = "Ready"
)

// Values returns all known values for TestSetStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestSetStatus) Values() []TestSetStatus {
	return []TestSetStatus{
		"Importing",
		"PendingAnnotation",
		"Deleting",
		"ValidationError",
		"Ready",
	}
}

type TimeDimension string

// Enum values for TimeDimension
const (
	TimeDimensionHours TimeDimension = "Hours"
	TimeDimensionDays  TimeDimension = "Days"
	TimeDimensionWeeks TimeDimension = "Weeks"
)

// Values returns all known values for TimeDimension. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TimeDimension) Values() []TimeDimension {
	return []TimeDimension{
		"Hours",
		"Days",
		"Weeks",
	}
}

type TranscriptFormat string

// Enum values for TranscriptFormat
const (
	TranscriptFormatLex TranscriptFormat = "Lex"
)

// Values returns all known values for TranscriptFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TranscriptFormat) Values() []TranscriptFormat {
	return []TranscriptFormat{
		"Lex",
	}
}

type UtteranceContentType string

// Enum values for UtteranceContentType
const (
	UtteranceContentTypePlainText         UtteranceContentType = "PlainText"
	UtteranceContentTypeCustomPayload     UtteranceContentType = "CustomPayload"
	UtteranceContentTypeSsml              UtteranceContentType = "SSML"
	UtteranceContentTypeImageResponseCard UtteranceContentType = "ImageResponseCard"
)

// Values returns all known values for UtteranceContentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UtteranceContentType) Values() []UtteranceContentType {
	return []UtteranceContentType{
		"PlainText",
		"CustomPayload",
		"SSML",
		"ImageResponseCard",
	}
}

type VoiceEngine string

// Enum values for VoiceEngine
const (
	VoiceEngineStandard   VoiceEngine = "standard"
	VoiceEngineNeural     VoiceEngine = "neural"
	VoiceEngineLongForm   VoiceEngine = "long-form"
	VoiceEngineGenerative VoiceEngine = "generative"
)

// Values returns all known values for VoiceEngine. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VoiceEngine) Values() []VoiceEngine {
	return []VoiceEngine{
		"standard",
		"neural",
		"long-form",
		"generative",
	}
}
