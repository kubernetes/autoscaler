// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActorSessionMfaStatus string

// Enum values for ActorSessionMfaStatus
const (
	ActorSessionMfaStatusEnabled  ActorSessionMfaStatus = "ENABLED"
	ActorSessionMfaStatusDisabled ActorSessionMfaStatus = "DISABLED"
)

// Values returns all known values for ActorSessionMfaStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActorSessionMfaStatus) Values() []ActorSessionMfaStatus {
	return []ActorSessionMfaStatus{
		"ENABLED",
		"DISABLED",
	}
}

type AdminStatus string

// Enum values for AdminStatus
const (
	AdminStatusEnabled           AdminStatus = "ENABLED"
	AdminStatusDisableInProgress AdminStatus = "DISABLE_IN_PROGRESS"
)

// Values returns all known values for AdminStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AdminStatus) Values() []AdminStatus {
	return []AdminStatus{
		"ENABLED",
		"DISABLE_IN_PROGRESS",
	}
}

type AllowedOperators string

// Enum values for AllowedOperators
const (
	AllowedOperatorsAnd AllowedOperators = "AND"
	AllowedOperatorsOr  AllowedOperators = "OR"
)

// Values returns all known values for AllowedOperators. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AllowedOperators) Values() []AllowedOperators {
	return []AllowedOperators{
		"AND",
		"OR",
	}
}

type AssociationStatus string

// Enum values for AssociationStatus
const (
	AssociationStatusEnabled  AssociationStatus = "ENABLED"
	AssociationStatusDisabled AssociationStatus = "DISABLED"
)

// Values returns all known values for AssociationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssociationStatus) Values() []AssociationStatus {
	return []AssociationStatus{
		"ENABLED",
		"DISABLED",
	}
}

type AssociationType string

// Enum values for AssociationType
const (
	AssociationTypeInherited AssociationType = "INHERITED"
	AssociationTypeApplied   AssociationType = "APPLIED"
)

// Values returns all known values for AssociationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssociationType) Values() []AssociationType {
	return []AssociationType{
		"INHERITED",
		"APPLIED",
	}
}

type AutoEnableStandards string

// Enum values for AutoEnableStandards
const (
	AutoEnableStandardsNone    AutoEnableStandards = "NONE"
	AutoEnableStandardsDefault AutoEnableStandards = "DEFAULT"
)

// Values returns all known values for AutoEnableStandards. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoEnableStandards) Values() []AutoEnableStandards {
	return []AutoEnableStandards{
		"NONE",
		"DEFAULT",
	}
}

type AutomationRulesActionType string

// Enum values for AutomationRulesActionType
const (
	AutomationRulesActionTypeFindingFieldsUpdate AutomationRulesActionType = "FINDING_FIELDS_UPDATE"
)

// Values returns all known values for AutomationRulesActionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutomationRulesActionType) Values() []AutomationRulesActionType {
	return []AutomationRulesActionType{
		"FINDING_FIELDS_UPDATE",
	}
}

type AutomationRulesActionTypeV2 string

// Enum values for AutomationRulesActionTypeV2
const (
	AutomationRulesActionTypeV2FindingFieldsUpdate AutomationRulesActionTypeV2 = "FINDING_FIELDS_UPDATE"
	AutomationRulesActionTypeV2ExternalIntegration AutomationRulesActionTypeV2 = "EXTERNAL_INTEGRATION"
)

// Values returns all known values for AutomationRulesActionTypeV2. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutomationRulesActionTypeV2) Values() []AutomationRulesActionTypeV2 {
	return []AutomationRulesActionTypeV2{
		"FINDING_FIELDS_UPDATE",
		"EXTERNAL_INTEGRATION",
	}
}

type AwsIamAccessKeyStatus string

// Enum values for AwsIamAccessKeyStatus
const (
	AwsIamAccessKeyStatusActive   AwsIamAccessKeyStatus = "Active"
	AwsIamAccessKeyStatusInactive AwsIamAccessKeyStatus = "Inactive"
)

// Values returns all known values for AwsIamAccessKeyStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AwsIamAccessKeyStatus) Values() []AwsIamAccessKeyStatus {
	return []AwsIamAccessKeyStatus{
		"Active",
		"Inactive",
	}
}

type AwsS3BucketNotificationConfigurationS3KeyFilterRuleName string

// Enum values for AwsS3BucketNotificationConfigurationS3KeyFilterRuleName
const (
	AwsS3BucketNotificationConfigurationS3KeyFilterRuleNamePrefix AwsS3BucketNotificationConfigurationS3KeyFilterRuleName = "Prefix"
	AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameSuffix AwsS3BucketNotificationConfigurationS3KeyFilterRuleName = "Suffix"
)

// Values returns all known values for
// AwsS3BucketNotificationConfigurationS3KeyFilterRuleName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AwsS3BucketNotificationConfigurationS3KeyFilterRuleName) Values() []AwsS3BucketNotificationConfigurationS3KeyFilterRuleName {
	return []AwsS3BucketNotificationConfigurationS3KeyFilterRuleName{
		"Prefix",
		"Suffix",
	}
}

type BatchUpdateFindingsV2UnprocessedFindingErrorCode string

// Enum values for BatchUpdateFindingsV2UnprocessedFindingErrorCode
const (
	BatchUpdateFindingsV2UnprocessedFindingErrorCodeResourceNotFoundException BatchUpdateFindingsV2UnprocessedFindingErrorCode = "ResourceNotFoundException"
	BatchUpdateFindingsV2UnprocessedFindingErrorCodeValidationException       BatchUpdateFindingsV2UnprocessedFindingErrorCode = "ValidationException"
	BatchUpdateFindingsV2UnprocessedFindingErrorCodeInternalServerException   BatchUpdateFindingsV2UnprocessedFindingErrorCode = "InternalServerException"
	BatchUpdateFindingsV2UnprocessedFindingErrorCodeConflictException         BatchUpdateFindingsV2UnprocessedFindingErrorCode = "ConflictException"
)

// Values returns all known values for
// BatchUpdateFindingsV2UnprocessedFindingErrorCode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchUpdateFindingsV2UnprocessedFindingErrorCode) Values() []BatchUpdateFindingsV2UnprocessedFindingErrorCode {
	return []BatchUpdateFindingsV2UnprocessedFindingErrorCode{
		"ResourceNotFoundException",
		"ValidationException",
		"InternalServerException",
		"ConflictException",
	}
}

type ComplianceStatus string

// Enum values for ComplianceStatus
const (
	ComplianceStatusPassed       ComplianceStatus = "PASSED"
	ComplianceStatusWarning      ComplianceStatus = "WARNING"
	ComplianceStatusFailed       ComplianceStatus = "FAILED"
	ComplianceStatusNotAvailable ComplianceStatus = "NOT_AVAILABLE"
)

// Values returns all known values for ComplianceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ComplianceStatus) Values() []ComplianceStatus {
	return []ComplianceStatus{
		"PASSED",
		"WARNING",
		"FAILED",
		"NOT_AVAILABLE",
	}
}

type ConfigurationPolicyAssociationStatus string

// Enum values for ConfigurationPolicyAssociationStatus
const (
	ConfigurationPolicyAssociationStatusPending ConfigurationPolicyAssociationStatus = "PENDING"
	ConfigurationPolicyAssociationStatusSuccess ConfigurationPolicyAssociationStatus = "SUCCESS"
	ConfigurationPolicyAssociationStatusFailed  ConfigurationPolicyAssociationStatus = "FAILED"
)

// Values returns all known values for ConfigurationPolicyAssociationStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfigurationPolicyAssociationStatus) Values() []ConfigurationPolicyAssociationStatus {
	return []ConfigurationPolicyAssociationStatus{
		"PENDING",
		"SUCCESS",
		"FAILED",
	}
}

type ConnectionDirection string

// Enum values for ConnectionDirection
const (
	ConnectionDirectionInbound  ConnectionDirection = "INBOUND"
	ConnectionDirectionOutbound ConnectionDirection = "OUTBOUND"
)

// Values returns all known values for ConnectionDirection. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionDirection) Values() []ConnectionDirection {
	return []ConnectionDirection{
		"INBOUND",
		"OUTBOUND",
	}
}

type ConnectorAuthStatus string

// Enum values for ConnectorAuthStatus
const (
	ConnectorAuthStatusActive ConnectorAuthStatus = "ACTIVE"
	ConnectorAuthStatusFailed ConnectorAuthStatus = "FAILED"
)

// Values returns all known values for ConnectorAuthStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectorAuthStatus) Values() []ConnectorAuthStatus {
	return []ConnectorAuthStatus{
		"ACTIVE",
		"FAILED",
	}
}

type ConnectorProviderName string

// Enum values for ConnectorProviderName
const (
	ConnectorProviderNameJiraCloud  ConnectorProviderName = "JIRA_CLOUD"
	ConnectorProviderNameServicenow ConnectorProviderName = "SERVICENOW"
)

// Values returns all known values for ConnectorProviderName. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectorProviderName) Values() []ConnectorProviderName {
	return []ConnectorProviderName{
		"JIRA_CLOUD",
		"SERVICENOW",
	}
}

type ConnectorStatus string

// Enum values for ConnectorStatus
const (
	ConnectorStatusConnected            ConnectorStatus = "CONNECTED"
	ConnectorStatusFailedToConnect      ConnectorStatus = "FAILED_TO_CONNECT"
	ConnectorStatusPendingConfiguration ConnectorStatus = "PENDING_CONFIGURATION"
	ConnectorStatusPendingAuthorization ConnectorStatus = "PENDING_AUTHORIZATION"
)

// Values returns all known values for ConnectorStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectorStatus) Values() []ConnectorStatus {
	return []ConnectorStatus{
		"CONNECTED",
		"FAILED_TO_CONNECT",
		"PENDING_CONFIGURATION",
		"PENDING_AUTHORIZATION",
	}
}

type ControlFindingGenerator string

// Enum values for ControlFindingGenerator
const (
	ControlFindingGeneratorStandardControl ControlFindingGenerator = "STANDARD_CONTROL"
	ControlFindingGeneratorSecurityControl ControlFindingGenerator = "SECURITY_CONTROL"
)

// Values returns all known values for ControlFindingGenerator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ControlFindingGenerator) Values() []ControlFindingGenerator {
	return []ControlFindingGenerator{
		"STANDARD_CONTROL",
		"SECURITY_CONTROL",
	}
}

type ControlStatus string

// Enum values for ControlStatus
const (
	ControlStatusEnabled  ControlStatus = "ENABLED"
	ControlStatusDisabled ControlStatus = "DISABLED"
)

// Values returns all known values for ControlStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ControlStatus) Values() []ControlStatus {
	return []ControlStatus{
		"ENABLED",
		"DISABLED",
	}
}

type DateRangeUnit string

// Enum values for DateRangeUnit
const (
	DateRangeUnitDays DateRangeUnit = "DAYS"
)

// Values returns all known values for DateRangeUnit. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DateRangeUnit) Values() []DateRangeUnit {
	return []DateRangeUnit{
		"DAYS",
	}
}

type FindingHistoryUpdateSourceType string

// Enum values for FindingHistoryUpdateSourceType
const (
	FindingHistoryUpdateSourceTypeBatchUpdateFindings FindingHistoryUpdateSourceType = "BATCH_UPDATE_FINDINGS"
	FindingHistoryUpdateSourceTypeBatchImportFindings FindingHistoryUpdateSourceType = "BATCH_IMPORT_FINDINGS"
)

// Values returns all known values for FindingHistoryUpdateSourceType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FindingHistoryUpdateSourceType) Values() []FindingHistoryUpdateSourceType {
	return []FindingHistoryUpdateSourceType{
		"BATCH_UPDATE_FINDINGS",
		"BATCH_IMPORT_FINDINGS",
	}
}

type GroupByField string

// Enum values for GroupByField
const (
	GroupByFieldActivityName               GroupByField = "activity_name"
	GroupByFieldCloudAccountUid            GroupByField = "cloud.account.uid"
	GroupByFieldCloudProvider              GroupByField = "cloud.provider"
	GroupByFieldCloudRegion                GroupByField = "cloud.region"
	GroupByFieldComplianceAssessmentsName  GroupByField = "compliance.assessments.name"
	GroupByFieldComplianceStatus           GroupByField = "compliance.status"
	GroupByFieldComplianceControl          GroupByField = "compliance.control"
	GroupByFieldFindingInfoTitle           GroupByField = "finding_info.title"
	GroupByFieldFindingInfoTypes           GroupByField = "finding_info.types"
	GroupByFieldMetadataProductName        GroupByField = "metadata.product.name"
	GroupByFieldMetadataProductUid         GroupByField = "metadata.product.uid"
	GroupByFieldResourcesType              GroupByField = "resources.type"
	GroupByFieldResourcesUid               GroupByField = "resources.uid"
	GroupByFieldSeverity                   GroupByField = "severity"
	GroupByFieldStatus                     GroupByField = "status"
	GroupByFieldVulnerabilitiesFixCoverage GroupByField = "vulnerabilities.fix_coverage"
	GroupByFieldClassName                  GroupByField = "class_name"
)

// Values returns all known values for GroupByField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GroupByField) Values() []GroupByField {
	return []GroupByField{
		"activity_name",
		"cloud.account.uid",
		"cloud.provider",
		"cloud.region",
		"compliance.assessments.name",
		"compliance.status",
		"compliance.control",
		"finding_info.title",
		"finding_info.types",
		"metadata.product.name",
		"metadata.product.uid",
		"resources.type",
		"resources.uid",
		"severity",
		"status",
		"vulnerabilities.fix_coverage",
		"class_name",
	}
}

type IntegrationType string

// Enum values for IntegrationType
const (
	IntegrationTypeSendFindingsToSecurityHub      IntegrationType = "SEND_FINDINGS_TO_SECURITY_HUB"
	IntegrationTypeReceiveFindingsFromSecurityHub IntegrationType = "RECEIVE_FINDINGS_FROM_SECURITY_HUB"
	IntegrationTypeUpdateFindingsInSecurityHub    IntegrationType = "UPDATE_FINDINGS_IN_SECURITY_HUB"
)

// Values returns all known values for IntegrationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IntegrationType) Values() []IntegrationType {
	return []IntegrationType{
		"SEND_FINDINGS_TO_SECURITY_HUB",
		"RECEIVE_FINDINGS_FROM_SECURITY_HUB",
		"UPDATE_FINDINGS_IN_SECURITY_HUB",
	}
}

type IntegrationV2Type string

// Enum values for IntegrationV2Type
const (
	IntegrationV2TypeSendFindingsToSecurityHub      IntegrationV2Type = "SEND_FINDINGS_TO_SECURITY_HUB"
	IntegrationV2TypeReceiveFindingsFromSecurityHub IntegrationV2Type = "RECEIVE_FINDINGS_FROM_SECURITY_HUB"
	IntegrationV2TypeUpdateFindingsInSecurityHub    IntegrationV2Type = "UPDATE_FINDINGS_IN_SECURITY_HUB"
)

// Values returns all known values for IntegrationV2Type. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IntegrationV2Type) Values() []IntegrationV2Type {
	return []IntegrationV2Type{
		"SEND_FINDINGS_TO_SECURITY_HUB",
		"RECEIVE_FINDINGS_FROM_SECURITY_HUB",
		"UPDATE_FINDINGS_IN_SECURITY_HUB",
	}
}

type MalwareState string

// Enum values for MalwareState
const (
	MalwareStateObserved      MalwareState = "OBSERVED"
	MalwareStateRemovalFailed MalwareState = "REMOVAL_FAILED"
	MalwareStateRemoved       MalwareState = "REMOVED"
)

// Values returns all known values for MalwareState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MalwareState) Values() []MalwareState {
	return []MalwareState{
		"OBSERVED",
		"REMOVAL_FAILED",
		"REMOVED",
	}
}

type MalwareType string

// Enum values for MalwareType
const (
	MalwareTypeAdware              MalwareType = "ADWARE"
	MalwareTypeBlendedThreat       MalwareType = "BLENDED_THREAT"
	MalwareTypeBotnetAgent         MalwareType = "BOTNET_AGENT"
	MalwareTypeCoinMiner           MalwareType = "COIN_MINER"
	MalwareTypeExploitKit          MalwareType = "EXPLOIT_KIT"
	MalwareTypeKeylogger           MalwareType = "KEYLOGGER"
	MalwareTypeMacro               MalwareType = "MACRO"
	MalwareTypePotentiallyUnwanted MalwareType = "POTENTIALLY_UNWANTED"
	MalwareTypeSpyware             MalwareType = "SPYWARE"
	MalwareTypeRansomware          MalwareType = "RANSOMWARE"
	MalwareTypeRemoteAccess        MalwareType = "REMOTE_ACCESS"
	MalwareTypeRootkit             MalwareType = "ROOTKIT"
	MalwareTypeTrojan              MalwareType = "TROJAN"
	MalwareTypeVirus               MalwareType = "VIRUS"
	MalwareTypeWorm                MalwareType = "WORM"
)

// Values returns all known values for MalwareType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MalwareType) Values() []MalwareType {
	return []MalwareType{
		"ADWARE",
		"BLENDED_THREAT",
		"BOTNET_AGENT",
		"COIN_MINER",
		"EXPLOIT_KIT",
		"KEYLOGGER",
		"MACRO",
		"POTENTIALLY_UNWANTED",
		"SPYWARE",
		"RANSOMWARE",
		"REMOTE_ACCESS",
		"ROOTKIT",
		"TROJAN",
		"VIRUS",
		"WORM",
	}
}

type MapFilterComparison string

// Enum values for MapFilterComparison
const (
	MapFilterComparisonEquals      MapFilterComparison = "EQUALS"
	MapFilterComparisonNotEquals   MapFilterComparison = "NOT_EQUALS"
	MapFilterComparisonContains    MapFilterComparison = "CONTAINS"
	MapFilterComparisonNotContains MapFilterComparison = "NOT_CONTAINS"
)

// Values returns all known values for MapFilterComparison. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MapFilterComparison) Values() []MapFilterComparison {
	return []MapFilterComparison{
		"EQUALS",
		"NOT_EQUALS",
		"CONTAINS",
		"NOT_CONTAINS",
	}
}

type NetworkDirection string

// Enum values for NetworkDirection
const (
	NetworkDirectionIn  NetworkDirection = "IN"
	NetworkDirectionOut NetworkDirection = "OUT"
)

// Values returns all known values for NetworkDirection. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NetworkDirection) Values() []NetworkDirection {
	return []NetworkDirection{
		"IN",
		"OUT",
	}
}

type OcsfBooleanField string

// Enum values for OcsfBooleanField
const (
	OcsfBooleanFieldComplianceAssessmentsMeetsCriteria OcsfBooleanField = "compliance.assessments.meets_criteria"
	OcsfBooleanFieldVulnerabilitiesIsExploitAvailable  OcsfBooleanField = "vulnerabilities.is_exploit_available"
	OcsfBooleanFieldVulnerabilitiesIsFixAvailable      OcsfBooleanField = "vulnerabilities.is_fix_available"
)

// Values returns all known values for OcsfBooleanField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OcsfBooleanField) Values() []OcsfBooleanField {
	return []OcsfBooleanField{
		"compliance.assessments.meets_criteria",
		"vulnerabilities.is_exploit_available",
		"vulnerabilities.is_fix_available",
	}
}

type OcsfDateField string

// Enum values for OcsfDateField
const (
	OcsfDateFieldFindingInfoCreatedTimeDt   OcsfDateField = "finding_info.created_time_dt"
	OcsfDateFieldFindingInfoFirstSeenTimeDt OcsfDateField = "finding_info.first_seen_time_dt"
	OcsfDateFieldFindingInfoLastSeenTimeDt  OcsfDateField = "finding_info.last_seen_time_dt"
	OcsfDateFieldFindingInfoModifiedTimeDt  OcsfDateField = "finding_info.modified_time_dt"
)

// Values returns all known values for OcsfDateField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OcsfDateField) Values() []OcsfDateField {
	return []OcsfDateField{
		"finding_info.created_time_dt",
		"finding_info.first_seen_time_dt",
		"finding_info.last_seen_time_dt",
		"finding_info.modified_time_dt",
	}
}

type OcsfMapField string

// Enum values for OcsfMapField
const (
	OcsfMapFieldResourcesTags OcsfMapField = "resources.tags"
)

// Values returns all known values for OcsfMapField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OcsfMapField) Values() []OcsfMapField {
	return []OcsfMapField{
		"resources.tags",
	}
}

type OcsfNumberField string

// Enum values for OcsfNumberField
const (
	OcsfNumberFieldActivityId                    OcsfNumberField = "activity_id"
	OcsfNumberFieldComplianceStatusId            OcsfNumberField = "compliance.status_id"
	OcsfNumberFieldConfidenceScore               OcsfNumberField = "confidence_score"
	OcsfNumberFieldSeverityId                    OcsfNumberField = "severity_id"
	OcsfNumberFieldStatusId                      OcsfNumberField = "status_id"
	OcsfNumberFieldFindingInfoRelatedEventsCount OcsfNumberField = "finding_info.related_events_count"
)

// Values returns all known values for OcsfNumberField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OcsfNumberField) Values() []OcsfNumberField {
	return []OcsfNumberField{
		"activity_id",
		"compliance.status_id",
		"confidence_score",
		"severity_id",
		"status_id",
		"finding_info.related_events_count",
	}
}

type OcsfStringField string

// Enum values for OcsfStringField
const (
	OcsfStringFieldMetadataUid                        OcsfStringField = "metadata.uid"
	OcsfStringFieldActivityName                       OcsfStringField = "activity_name"
	OcsfStringFieldCloudAccountUid                    OcsfStringField = "cloud.account.uid"
	OcsfStringFieldCloudProvider                      OcsfStringField = "cloud.provider"
	OcsfStringFieldCloudRegion                        OcsfStringField = "cloud.region"
	OcsfStringFieldComplianceAssessmentsCategory      OcsfStringField = "compliance.assessments.category"
	OcsfStringFieldComplianceAssessmentsName          OcsfStringField = "compliance.assessments.name"
	OcsfStringFieldComplianceControl                  OcsfStringField = "compliance.control"
	OcsfStringFieldComplianceStatus                   OcsfStringField = "compliance.status"
	OcsfStringFieldComplianceStandards                OcsfStringField = "compliance.standards"
	OcsfStringFieldFindingInfoDesc                    OcsfStringField = "finding_info.desc"
	OcsfStringFieldFindingInfoSrcUrl                  OcsfStringField = "finding_info.src_url"
	OcsfStringFieldFindingInfoTitle                   OcsfStringField = "finding_info.title"
	OcsfStringFieldFindingInfoTypes                   OcsfStringField = "finding_info.types"
	OcsfStringFieldFindingInfoUid                     OcsfStringField = "finding_info.uid"
	OcsfStringFieldFindingInfoRelatedEventsUid        OcsfStringField = "finding_info.related_events.uid"
	OcsfStringFieldFindingInfoRelatedEventsProductUid OcsfStringField = "finding_info.related_events.product.uid"
	OcsfStringFieldFindingInfoRelatedEventsTitle      OcsfStringField = "finding_info.related_events.title"
	OcsfStringFieldMetadataProductName                OcsfStringField = "metadata.product.name"
	OcsfStringFieldMetadataProductUid                 OcsfStringField = "metadata.product.uid"
	OcsfStringFieldMetadataProductVendorName          OcsfStringField = "metadata.product.vendor_name"
	OcsfStringFieldRemediationDesc                    OcsfStringField = "remediation.desc"
	OcsfStringFieldRemediationReferences              OcsfStringField = "remediation.references"
	OcsfStringFieldResourcesCloudPartition            OcsfStringField = "resources.cloud_partition"
	OcsfStringFieldResourcesRegion                    OcsfStringField = "resources.region"
	OcsfStringFieldResourcesType                      OcsfStringField = "resources.type"
	OcsfStringFieldResourcesUid                       OcsfStringField = "resources.uid"
	OcsfStringFieldSeverity                           OcsfStringField = "severity"
	OcsfStringFieldStatus                             OcsfStringField = "status"
	OcsfStringFieldComment                            OcsfStringField = "comment"
	OcsfStringFieldVulnerabilitiesFixCoverage         OcsfStringField = "vulnerabilities.fix_coverage"
	OcsfStringFieldClassName                          OcsfStringField = "class_name"
)

// Values returns all known values for OcsfStringField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OcsfStringField) Values() []OcsfStringField {
	return []OcsfStringField{
		"metadata.uid",
		"activity_name",
		"cloud.account.uid",
		"cloud.provider",
		"cloud.region",
		"compliance.assessments.category",
		"compliance.assessments.name",
		"compliance.control",
		"compliance.status",
		"compliance.standards",
		"finding_info.desc",
		"finding_info.src_url",
		"finding_info.title",
		"finding_info.types",
		"finding_info.uid",
		"finding_info.related_events.uid",
		"finding_info.related_events.product.uid",
		"finding_info.related_events.title",
		"metadata.product.name",
		"metadata.product.uid",
		"metadata.product.vendor_name",
		"remediation.desc",
		"remediation.references",
		"resources.cloud_partition",
		"resources.region",
		"resources.type",
		"resources.uid",
		"severity",
		"status",
		"comment",
		"vulnerabilities.fix_coverage",
		"class_name",
	}
}

type OrganizationConfigurationConfigurationType string

// Enum values for OrganizationConfigurationConfigurationType
const (
	OrganizationConfigurationConfigurationTypeCentral OrganizationConfigurationConfigurationType = "CENTRAL"
	OrganizationConfigurationConfigurationTypeLocal   OrganizationConfigurationConfigurationType = "LOCAL"
)

// Values returns all known values for OrganizationConfigurationConfigurationType.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OrganizationConfigurationConfigurationType) Values() []OrganizationConfigurationConfigurationType {
	return []OrganizationConfigurationConfigurationType{
		"CENTRAL",
		"LOCAL",
	}
}

type OrganizationConfigurationStatus string

// Enum values for OrganizationConfigurationStatus
const (
	OrganizationConfigurationStatusPending OrganizationConfigurationStatus = "PENDING"
	OrganizationConfigurationStatusEnabled OrganizationConfigurationStatus = "ENABLED"
	OrganizationConfigurationStatusFailed  OrganizationConfigurationStatus = "FAILED"
)

// Values returns all known values for OrganizationConfigurationStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OrganizationConfigurationStatus) Values() []OrganizationConfigurationStatus {
	return []OrganizationConfigurationStatus{
		"PENDING",
		"ENABLED",
		"FAILED",
	}
}

type ParameterValueType string

// Enum values for ParameterValueType
const (
	ParameterValueTypeDefault ParameterValueType = "DEFAULT"
	ParameterValueTypeCustom  ParameterValueType = "CUSTOM"
)

// Values returns all known values for ParameterValueType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParameterValueType) Values() []ParameterValueType {
	return []ParameterValueType{
		"DEFAULT",
		"CUSTOM",
	}
}

type Partition string

// Enum values for Partition
const (
	PartitionAws      Partition = "aws"
	PartitionAwsCn    Partition = "aws-cn"
	PartitionAwsUsGov Partition = "aws-us-gov"
)

// Values returns all known values for Partition. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Partition) Values() []Partition {
	return []Partition{
		"aws",
		"aws-cn",
		"aws-us-gov",
	}
}

type RecordState string

// Enum values for RecordState
const (
	RecordStateActive   RecordState = "ACTIVE"
	RecordStateArchived RecordState = "ARCHIVED"
)

// Values returns all known values for RecordState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecordState) Values() []RecordState {
	return []RecordState{
		"ACTIVE",
		"ARCHIVED",
	}
}

type RegionAvailabilityStatus string

// Enum values for RegionAvailabilityStatus
const (
	RegionAvailabilityStatusAvailable   RegionAvailabilityStatus = "AVAILABLE"
	RegionAvailabilityStatusUnavailable RegionAvailabilityStatus = "UNAVAILABLE"
)

// Values returns all known values for RegionAvailabilityStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RegionAvailabilityStatus) Values() []RegionAvailabilityStatus {
	return []RegionAvailabilityStatus{
		"AVAILABLE",
		"UNAVAILABLE",
	}
}

type ResourceCategory string

// Enum values for ResourceCategory
const (
	ResourceCategoryCompute  ResourceCategory = "Compute"
	ResourceCategoryDatabase ResourceCategory = "Database"
	ResourceCategoryStorage  ResourceCategory = "Storage"
	ResourceCategoryCode     ResourceCategory = "Code"
	ResourceCategoryAiMl     ResourceCategory = "AI/ML"
	ResourceCategoryIdentity ResourceCategory = "Identity"
	ResourceCategoryNetwork  ResourceCategory = "Network"
	ResourceCategoryOther    ResourceCategory = "Other"
)

// Values returns all known values for ResourceCategory. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceCategory) Values() []ResourceCategory {
	return []ResourceCategory{
		"Compute",
		"Database",
		"Storage",
		"Code",
		"AI/ML",
		"Identity",
		"Network",
		"Other",
	}
}

type ResourceGroupByField string

// Enum values for ResourceGroupByField
const (
	ResourceGroupByFieldAccountId        ResourceGroupByField = "account_id"
	ResourceGroupByFieldRegion           ResourceGroupByField = "region"
	ResourceGroupByFieldResourceCategory ResourceGroupByField = "resource_category"
	ResourceGroupByFieldResourceType     ResourceGroupByField = "resource_type"
	ResourceGroupByFieldResourceName     ResourceGroupByField = "resource_name"
	ResourceGroupByFieldFindingType      ResourceGroupByField = "findings_summary.finding_type"
)

// Values returns all known values for ResourceGroupByField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceGroupByField) Values() []ResourceGroupByField {
	return []ResourceGroupByField{
		"account_id",
		"region",
		"resource_category",
		"resource_type",
		"resource_name",
		"findings_summary.finding_type",
	}
}

type ResourcesDateField string

// Enum values for ResourcesDateField
const (
	ResourcesDateFieldResourceDetailCaptureTimeDt ResourcesDateField = "resource_detail_capture_time_dt"
	ResourcesDateFieldResourceCreationTimeDt      ResourcesDateField = "resource_creation_time_dt"
)

// Values returns all known values for ResourcesDateField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourcesDateField) Values() []ResourcesDateField {
	return []ResourcesDateField{
		"resource_detail_capture_time_dt",
		"resource_creation_time_dt",
	}
}

type ResourcesMapField string

// Enum values for ResourcesMapField
const (
	ResourcesMapFieldTag ResourcesMapField = "tags"
)

// Values returns all known values for ResourcesMapField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourcesMapField) Values() []ResourcesMapField {
	return []ResourcesMapField{
		"tags",
	}
}

type ResourcesNumberField string

// Enum values for ResourcesNumberField
const (
	ResourcesNumberFieldTotalFindings         ResourcesNumberField = "findings_summary.total_findings"
	ResourcesNumberFieldSeverityOther         ResourcesNumberField = "findings_summary.severities.other"
	ResourcesNumberFieldSeverityFatal         ResourcesNumberField = "findings_summary.severities.fatal"
	ResourcesNumberFieldSeverityCritical      ResourcesNumberField = "findings_summary.severities.critical"
	ResourcesNumberFieldSeverityHigh          ResourcesNumberField = "findings_summary.severities.high"
	ResourcesNumberFieldSeverityMedium        ResourcesNumberField = "findings_summary.severities.medium"
	ResourcesNumberFieldSeverityLow           ResourcesNumberField = "findings_summary.severities.low"
	ResourcesNumberFieldSeverityInformational ResourcesNumberField = "findings_summary.severities.informational"
	ResourcesNumberFieldSeverityUnknown       ResourcesNumberField = "findings_summary.severities.unknown"
)

// Values returns all known values for ResourcesNumberField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourcesNumberField) Values() []ResourcesNumberField {
	return []ResourcesNumberField{
		"findings_summary.total_findings",
		"findings_summary.severities.other",
		"findings_summary.severities.fatal",
		"findings_summary.severities.critical",
		"findings_summary.severities.high",
		"findings_summary.severities.medium",
		"findings_summary.severities.low",
		"findings_summary.severities.informational",
		"findings_summary.severities.unknown",
	}
}

type ResourcesStringField string

// Enum values for ResourcesStringField
const (
	ResourcesStringFieldResourceArn      ResourcesStringField = "resource_arn"
	ResourcesStringFieldResourceId       ResourcesStringField = "resource_id"
	ResourcesStringFieldAccountId        ResourcesStringField = "account_id"
	ResourcesStringFieldRegion           ResourcesStringField = "region"
	ResourcesStringFieldResourceCategory ResourcesStringField = "resource_category"
	ResourcesStringFieldResourceType     ResourcesStringField = "resource_type"
	ResourcesStringFieldResourceName     ResourcesStringField = "resource_name"
	ResourcesStringFieldFindingType      ResourcesStringField = "findings_summary.finding_type"
	ResourcesStringFieldProductName      ResourcesStringField = "findings_summary.product_name"
)

// Values returns all known values for ResourcesStringField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourcesStringField) Values() []ResourcesStringField {
	return []ResourcesStringField{
		"resource_arn",
		"resource_id",
		"account_id",
		"region",
		"resource_category",
		"resource_type",
		"resource_name",
		"findings_summary.finding_type",
		"findings_summary.product_name",
	}
}

type RuleStatus string

// Enum values for RuleStatus
const (
	RuleStatusEnabled  RuleStatus = "ENABLED"
	RuleStatusDisabled RuleStatus = "DISABLED"
)

// Values returns all known values for RuleStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleStatus) Values() []RuleStatus {
	return []RuleStatus{
		"ENABLED",
		"DISABLED",
	}
}

type RuleStatusV2 string

// Enum values for RuleStatusV2
const (
	RuleStatusV2Enabled  RuleStatusV2 = "ENABLED"
	RuleStatusV2Disabled RuleStatusV2 = "DISABLED"
)

// Values returns all known values for RuleStatusV2. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleStatusV2) Values() []RuleStatusV2 {
	return []RuleStatusV2{
		"ENABLED",
		"DISABLED",
	}
}

type SecurityControlProperty string

// Enum values for SecurityControlProperty
const (
	SecurityControlPropertyParameters SecurityControlProperty = "Parameters"
)

// Values returns all known values for SecurityControlProperty. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SecurityControlProperty) Values() []SecurityControlProperty {
	return []SecurityControlProperty{
		"Parameters",
	}
}

type SecurityHubFeature string

// Enum values for SecurityHubFeature
const (
	SecurityHubFeatureSecurityHub   SecurityHubFeature = "SecurityHub"
	SecurityHubFeatureSecurityHubV2 SecurityHubFeature = "SecurityHubV2"
)

// Values returns all known values for SecurityHubFeature. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SecurityHubFeature) Values() []SecurityHubFeature {
	return []SecurityHubFeature{
		"SecurityHub",
		"SecurityHubV2",
	}
}

type SeverityLabel string

// Enum values for SeverityLabel
const (
	SeverityLabelInformational SeverityLabel = "INFORMATIONAL"
	SeverityLabelLow           SeverityLabel = "LOW"
	SeverityLabelMedium        SeverityLabel = "MEDIUM"
	SeverityLabelHigh          SeverityLabel = "HIGH"
	SeverityLabelCritical      SeverityLabel = "CRITICAL"
)

// Values returns all known values for SeverityLabel. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SeverityLabel) Values() []SeverityLabel {
	return []SeverityLabel{
		"INFORMATIONAL",
		"LOW",
		"MEDIUM",
		"HIGH",
		"CRITICAL",
	}
}

type SeverityRating string

// Enum values for SeverityRating
const (
	SeverityRatingLow      SeverityRating = "LOW"
	SeverityRatingMedium   SeverityRating = "MEDIUM"
	SeverityRatingHigh     SeverityRating = "HIGH"
	SeverityRatingCritical SeverityRating = "CRITICAL"
)

// Values returns all known values for SeverityRating. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SeverityRating) Values() []SeverityRating {
	return []SeverityRating{
		"LOW",
		"MEDIUM",
		"HIGH",
		"CRITICAL",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "asc"
	SortOrderDescending SortOrder = "desc"
)

// Values returns all known values for SortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"asc",
		"desc",
	}
}

type StandardsControlsUpdatable string

// Enum values for StandardsControlsUpdatable
const (
	StandardsControlsUpdatableReadyForUpdates    StandardsControlsUpdatable = "READY_FOR_UPDATES"
	StandardsControlsUpdatableNotReadyForUpdates StandardsControlsUpdatable = "NOT_READY_FOR_UPDATES"
)

// Values returns all known values for StandardsControlsUpdatable. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StandardsControlsUpdatable) Values() []StandardsControlsUpdatable {
	return []StandardsControlsUpdatable{
		"READY_FOR_UPDATES",
		"NOT_READY_FOR_UPDATES",
	}
}

type StandardsStatus string

// Enum values for StandardsStatus
const (
	StandardsStatusPending    StandardsStatus = "PENDING"
	StandardsStatusReady      StandardsStatus = "READY"
	StandardsStatusFailed     StandardsStatus = "FAILED"
	StandardsStatusDeleting   StandardsStatus = "DELETING"
	StandardsStatusIncomplete StandardsStatus = "INCOMPLETE"
)

// Values returns all known values for StandardsStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StandardsStatus) Values() []StandardsStatus {
	return []StandardsStatus{
		"PENDING",
		"READY",
		"FAILED",
		"DELETING",
		"INCOMPLETE",
	}
}

type StatusReasonCode string

// Enum values for StatusReasonCode
const (
	StatusReasonCodeNoAvailableConfigurationRecorder   StatusReasonCode = "NO_AVAILABLE_CONFIGURATION_RECORDER"
	StatusReasonCodeMaximumNumberOfConfigRulesExceeded StatusReasonCode = "MAXIMUM_NUMBER_OF_CONFIG_RULES_EXCEEDED"
	StatusReasonCodeInternalError                      StatusReasonCode = "INTERNAL_ERROR"
)

// Values returns all known values for StatusReasonCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StatusReasonCode) Values() []StatusReasonCode {
	return []StatusReasonCode{
		"NO_AVAILABLE_CONFIGURATION_RECORDER",
		"MAXIMUM_NUMBER_OF_CONFIG_RULES_EXCEEDED",
		"INTERNAL_ERROR",
	}
}

type StringFilterComparison string

// Enum values for StringFilterComparison
const (
	StringFilterComparisonEquals          StringFilterComparison = "EQUALS"
	StringFilterComparisonPrefix          StringFilterComparison = "PREFIX"
	StringFilterComparisonNotEquals       StringFilterComparison = "NOT_EQUALS"
	StringFilterComparisonPrefixNotEquals StringFilterComparison = "PREFIX_NOT_EQUALS"
	StringFilterComparisonContains        StringFilterComparison = "CONTAINS"
	StringFilterComparisonNotContains     StringFilterComparison = "NOT_CONTAINS"
	StringFilterComparisonContainsWord    StringFilterComparison = "CONTAINS_WORD"
)

// Values returns all known values for StringFilterComparison. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StringFilterComparison) Values() []StringFilterComparison {
	return []StringFilterComparison{
		"EQUALS",
		"PREFIX",
		"NOT_EQUALS",
		"PREFIX_NOT_EQUALS",
		"CONTAINS",
		"NOT_CONTAINS",
		"CONTAINS_WORD",
	}
}

type TargetType string

// Enum values for TargetType
const (
	TargetTypeAccount            TargetType = "ACCOUNT"
	TargetTypeOrganizationalUnit TargetType = "ORGANIZATIONAL_UNIT"
	TargetTypeRoot               TargetType = "ROOT"
)

// Values returns all known values for TargetType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetType) Values() []TargetType {
	return []TargetType{
		"ACCOUNT",
		"ORGANIZATIONAL_UNIT",
		"ROOT",
	}
}

type ThreatIntelIndicatorCategory string

// Enum values for ThreatIntelIndicatorCategory
const (
	ThreatIntelIndicatorCategoryBackdoor          ThreatIntelIndicatorCategory = "BACKDOOR"
	ThreatIntelIndicatorCategoryCardStealer       ThreatIntelIndicatorCategory = "CARD_STEALER"
	ThreatIntelIndicatorCategoryCommandAndControl ThreatIntelIndicatorCategory = "COMMAND_AND_CONTROL"
	ThreatIntelIndicatorCategoryDropSite          ThreatIntelIndicatorCategory = "DROP_SITE"
	ThreatIntelIndicatorCategoryExploitSite       ThreatIntelIndicatorCategory = "EXPLOIT_SITE"
	ThreatIntelIndicatorCategoryKeylogger         ThreatIntelIndicatorCategory = "KEYLOGGER"
)

// Values returns all known values for ThreatIntelIndicatorCategory. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThreatIntelIndicatorCategory) Values() []ThreatIntelIndicatorCategory {
	return []ThreatIntelIndicatorCategory{
		"BACKDOOR",
		"CARD_STEALER",
		"COMMAND_AND_CONTROL",
		"DROP_SITE",
		"EXPLOIT_SITE",
		"KEYLOGGER",
	}
}

type ThreatIntelIndicatorType string

// Enum values for ThreatIntelIndicatorType
const (
	ThreatIntelIndicatorTypeDomain       ThreatIntelIndicatorType = "DOMAIN"
	ThreatIntelIndicatorTypeEmailAddress ThreatIntelIndicatorType = "EMAIL_ADDRESS"
	ThreatIntelIndicatorTypeHashMd5      ThreatIntelIndicatorType = "HASH_MD5"
	ThreatIntelIndicatorTypeHashSha1     ThreatIntelIndicatorType = "HASH_SHA1"
	ThreatIntelIndicatorTypeHashSha256   ThreatIntelIndicatorType = "HASH_SHA256"
	ThreatIntelIndicatorTypeHashSha512   ThreatIntelIndicatorType = "HASH_SHA512"
	ThreatIntelIndicatorTypeIpv4Address  ThreatIntelIndicatorType = "IPV4_ADDRESS"
	ThreatIntelIndicatorTypeIpv6Address  ThreatIntelIndicatorType = "IPV6_ADDRESS"
	ThreatIntelIndicatorTypeMutex        ThreatIntelIndicatorType = "MUTEX"
	ThreatIntelIndicatorTypeProcess      ThreatIntelIndicatorType = "PROCESS"
	ThreatIntelIndicatorTypeUrl          ThreatIntelIndicatorType = "URL"
)

// Values returns all known values for ThreatIntelIndicatorType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThreatIntelIndicatorType) Values() []ThreatIntelIndicatorType {
	return []ThreatIntelIndicatorType{
		"DOMAIN",
		"EMAIL_ADDRESS",
		"HASH_MD5",
		"HASH_SHA1",
		"HASH_SHA256",
		"HASH_SHA512",
		"IPV4_ADDRESS",
		"IPV6_ADDRESS",
		"MUTEX",
		"PROCESS",
		"URL",
	}
}

type UnprocessedErrorCode string

// Enum values for UnprocessedErrorCode
const (
	UnprocessedErrorCodeInvalidInput  UnprocessedErrorCode = "INVALID_INPUT"
	UnprocessedErrorCodeAccessDenied  UnprocessedErrorCode = "ACCESS_DENIED"
	UnprocessedErrorCodeNotFound      UnprocessedErrorCode = "NOT_FOUND"
	UnprocessedErrorCodeLimitExceeded UnprocessedErrorCode = "LIMIT_EXCEEDED"
)

// Values returns all known values for UnprocessedErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UnprocessedErrorCode) Values() []UnprocessedErrorCode {
	return []UnprocessedErrorCode{
		"INVALID_INPUT",
		"ACCESS_DENIED",
		"NOT_FOUND",
		"LIMIT_EXCEEDED",
	}
}

type UpdateStatus string

// Enum values for UpdateStatus
const (
	UpdateStatusReady    UpdateStatus = "READY"
	UpdateStatusUpdating UpdateStatus = "UPDATING"
)

// Values returns all known values for UpdateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UpdateStatus) Values() []UpdateStatus {
	return []UpdateStatus{
		"READY",
		"UPDATING",
	}
}

type VerificationState string

// Enum values for VerificationState
const (
	VerificationStateUnknown        VerificationState = "UNKNOWN"
	VerificationStateTruePositive   VerificationState = "TRUE_POSITIVE"
	VerificationStateFalsePositive  VerificationState = "FALSE_POSITIVE"
	VerificationStateBenignPositive VerificationState = "BENIGN_POSITIVE"
)

// Values returns all known values for VerificationState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VerificationState) Values() []VerificationState {
	return []VerificationState{
		"UNKNOWN",
		"TRUE_POSITIVE",
		"FALSE_POSITIVE",
		"BENIGN_POSITIVE",
	}
}

type VulnerabilityExploitAvailable string

// Enum values for VulnerabilityExploitAvailable
const (
	VulnerabilityExploitAvailableYes VulnerabilityExploitAvailable = "YES"
	VulnerabilityExploitAvailableNo  VulnerabilityExploitAvailable = "NO"
)

// Values returns all known values for VulnerabilityExploitAvailable. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VulnerabilityExploitAvailable) Values() []VulnerabilityExploitAvailable {
	return []VulnerabilityExploitAvailable{
		"YES",
		"NO",
	}
}

type VulnerabilityFixAvailable string

// Enum values for VulnerabilityFixAvailable
const (
	VulnerabilityFixAvailableYes     VulnerabilityFixAvailable = "YES"
	VulnerabilityFixAvailableNo      VulnerabilityFixAvailable = "NO"
	VulnerabilityFixAvailablePartial VulnerabilityFixAvailable = "PARTIAL"
)

// Values returns all known values for VulnerabilityFixAvailable. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VulnerabilityFixAvailable) Values() []VulnerabilityFixAvailable {
	return []VulnerabilityFixAvailable{
		"YES",
		"NO",
		"PARTIAL",
	}
}

type WorkflowState string

// Enum values for WorkflowState
const (
	WorkflowStateNew        WorkflowState = "NEW"
	WorkflowStateAssigned   WorkflowState = "ASSIGNED"
	WorkflowStateInProgress WorkflowState = "IN_PROGRESS"
	WorkflowStateDeferred   WorkflowState = "DEFERRED"
	WorkflowStateResolved   WorkflowState = "RESOLVED"
)

// Values returns all known values for WorkflowState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowState) Values() []WorkflowState {
	return []WorkflowState{
		"NEW",
		"ASSIGNED",
		"IN_PROGRESS",
		"DEFERRED",
		"RESOLVED",
	}
}

type WorkflowStatus string

// Enum values for WorkflowStatus
const (
	WorkflowStatusNew        WorkflowStatus = "NEW"
	WorkflowStatusNotified   WorkflowStatus = "NOTIFIED"
	WorkflowStatusResolved   WorkflowStatus = "RESOLVED"
	WorkflowStatusSuppressed WorkflowStatus = "SUPPRESSED"
)

// Values returns all known values for WorkflowStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowStatus) Values() []WorkflowStatus {
	return []WorkflowStatus{
		"NEW",
		"NOTIFIED",
		"RESOLVED",
		"SUPPRESSED",
	}
}
