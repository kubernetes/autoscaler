// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccessDeniedExceptionReason string

// Enum values for AccessDeniedExceptionReason
const (
	AccessDeniedExceptionReasonUnauthorizedAccount    AccessDeniedExceptionReason = "UNAUTHORIZED_ACCOUNT"
	AccessDeniedExceptionReasonDependencyAccessDenied AccessDeniedExceptionReason = "DEPENDENCY_ACCESS_DENIED"
)

// Values returns all known values for AccessDeniedExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AccessDeniedExceptionReason) Values() []AccessDeniedExceptionReason {
	return []AccessDeniedExceptionReason{
		"UNAUTHORIZED_ACCOUNT",
		"DEPENDENCY_ACCESS_DENIED",
	}
}

type ChecksumAggregationMethod string

// Enum values for ChecksumAggregationMethod
const (
	ChecksumAggregationMethodChecksumAggregationLinear ChecksumAggregationMethod = "LINEAR"
)

// Values returns all known values for ChecksumAggregationMethod. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChecksumAggregationMethod) Values() []ChecksumAggregationMethod {
	return []ChecksumAggregationMethod{
		"LINEAR",
	}
}

type ChecksumAlgorithm string

// Enum values for ChecksumAlgorithm
const (
	ChecksumAlgorithmChecksumAlgorithmSha256 ChecksumAlgorithm = "SHA256"
)

// Values returns all known values for ChecksumAlgorithm. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChecksumAlgorithm) Values() []ChecksumAlgorithm {
	return []ChecksumAlgorithm{
		"SHA256",
	}
}

type RequestThrottledExceptionReason string

// Enum values for RequestThrottledExceptionReason
const (
	RequestThrottledExceptionReasonAccountThrottled           RequestThrottledExceptionReason = "ACCOUNT_THROTTLED"
	RequestThrottledExceptionReasonDependencyRequestThrottled RequestThrottledExceptionReason = "DEPENDENCY_REQUEST_THROTTLED"
	RequestThrottledExceptionReasonResourceLevelThrottle      RequestThrottledExceptionReason = "RESOURCE_LEVEL_THROTTLE"
)

// Values returns all known values for RequestThrottledExceptionReason. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RequestThrottledExceptionReason) Values() []RequestThrottledExceptionReason {
	return []RequestThrottledExceptionReason{
		"ACCOUNT_THROTTLED",
		"DEPENDENCY_REQUEST_THROTTLED",
		"RESOURCE_LEVEL_THROTTLE",
	}
}

type ResourceNotFoundExceptionReason string

// Enum values for ResourceNotFoundExceptionReason
const (
	ResourceNotFoundExceptionReasonSnapshotNotFound           ResourceNotFoundExceptionReason = "SNAPSHOT_NOT_FOUND"
	ResourceNotFoundExceptionReasonGrantNotFound              ResourceNotFoundExceptionReason = "GRANT_NOT_FOUND"
	ResourceNotFoundExceptionReasonDependencyResourceNotFound ResourceNotFoundExceptionReason = "DEPENDENCY_RESOURCE_NOT_FOUND"
	ResourceNotFoundExceptionReasonImageNotFound              ResourceNotFoundExceptionReason = "IMAGE_NOT_FOUND"
)

// Values returns all known values for ResourceNotFoundExceptionReason. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceNotFoundExceptionReason) Values() []ResourceNotFoundExceptionReason {
	return []ResourceNotFoundExceptionReason{
		"SNAPSHOT_NOT_FOUND",
		"GRANT_NOT_FOUND",
		"DEPENDENCY_RESOURCE_NOT_FOUND",
		"IMAGE_NOT_FOUND",
	}
}

type ServiceQuotaExceededExceptionReason string

// Enum values for ServiceQuotaExceededExceptionReason
const (
	ServiceQuotaExceededExceptionReasonDependencyServiceQuotaExceeded ServiceQuotaExceededExceptionReason = "DEPENDENCY_SERVICE_QUOTA_EXCEEDED"
)

// Values returns all known values for ServiceQuotaExceededExceptionReason. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceQuotaExceededExceptionReason) Values() []ServiceQuotaExceededExceptionReason {
	return []ServiceQuotaExceededExceptionReason{
		"DEPENDENCY_SERVICE_QUOTA_EXCEEDED",
	}
}

type SSEType string

// Enum values for SSEType
const (
	SSETypeSseEbs SSEType = "sse-ebs"
	SSETypeSseKms SSEType = "sse-kms"
	SSETypeNone   SSEType = "none"
)

// Values returns all known values for SSEType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SSEType) Values() []SSEType {
	return []SSEType{
		"sse-ebs",
		"sse-kms",
		"none",
	}
}

type Status string

// Enum values for Status
const (
	StatusCompleted Status = "completed"
	StatusPending   Status = "pending"
	StatusError     Status = "error"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"completed",
		"pending",
		"error",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonInvalidCustomerKey       ValidationExceptionReason = "INVALID_CUSTOMER_KEY"
	ValidationExceptionReasonInvalidPageToken         ValidationExceptionReason = "INVALID_PAGE_TOKEN"
	ValidationExceptionReasonInvalidBlockToken        ValidationExceptionReason = "INVALID_BLOCK_TOKEN"
	ValidationExceptionReasonInvalidGrantToken        ValidationExceptionReason = "INVALID_GRANT_TOKEN"
	ValidationExceptionReasonInvalidSnapshotId        ValidationExceptionReason = "INVALID_SNAPSHOT_ID"
	ValidationExceptionReasonUnrelatedSnapshots       ValidationExceptionReason = "UNRELATED_SNAPSHOTS"
	ValidationExceptionReasonInvalidBlock             ValidationExceptionReason = "INVALID_BLOCK"
	ValidationExceptionReasonInvalidContentEncoding   ValidationExceptionReason = "INVALID_CONTENT_ENCODING"
	ValidationExceptionReasonInvalidTag               ValidationExceptionReason = "INVALID_TAG"
	ValidationExceptionReasonInvalidDependencyRequest ValidationExceptionReason = "INVALID_DEPENDENCY_REQUEST"
	ValidationExceptionReasonInvalidParameterValue    ValidationExceptionReason = "INVALID_PARAMETER_VALUE"
	ValidationExceptionReasonInvalidVolumeSize        ValidationExceptionReason = "INVALID_VOLUME_SIZE"
	ValidationExceptionReasonConflictingBlockUpdate   ValidationExceptionReason = "CONFLICTING_BLOCK_UPDATE"
	ValidationExceptionReasonInvalidImageId           ValidationExceptionReason = "INVALID_IMAGE_ID"
	ValidationExceptionReasonWriteRequestTimeout      ValidationExceptionReason = "WRITE_REQUEST_TIMEOUT"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"INVALID_CUSTOMER_KEY",
		"INVALID_PAGE_TOKEN",
		"INVALID_BLOCK_TOKEN",
		"INVALID_GRANT_TOKEN",
		"INVALID_SNAPSHOT_ID",
		"UNRELATED_SNAPSHOTS",
		"INVALID_BLOCK",
		"INVALID_CONTENT_ENCODING",
		"INVALID_TAG",
		"INVALID_DEPENDENCY_REQUEST",
		"INVALID_PARAMETER_VALUE",
		"INVALID_VOLUME_SIZE",
		"CONFLICTING_BLOCK_UPDATE",
		"INVALID_IMAGE_ID",
		"WRITE_REQUEST_TIMEOUT",
	}
}
