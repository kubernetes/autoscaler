// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AppAuthorizationStatus string

// Enum values for AppAuthorizationStatus
const (
	AppAuthorizationStatusPendingConnect             AppAuthorizationStatus = "PendingConnect"
	AppAuthorizationStatusConnected                  AppAuthorizationStatus = "Connected"
	AppAuthorizationStatusConnectionValidationFailed AppAuthorizationStatus = "ConnectionValidationFailed"
	AppAuthorizationStatusTokenAutoRotationFailed    AppAuthorizationStatus = "TokenAutoRotationFailed"
)

// Values returns all known values for AppAuthorizationStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppAuthorizationStatus) Values() []AppAuthorizationStatus {
	return []AppAuthorizationStatus{
		"PendingConnect",
		"Connected",
		"ConnectionValidationFailed",
		"TokenAutoRotationFailed",
	}
}

type AuthType string

// Enum values for AuthType
const (
	AuthTypeOauth2 AuthType = "oauth2"
	AuthTypeApiKey AuthType = "apiKey"
)

// Values returns all known values for AuthType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthType) Values() []AuthType {
	return []AuthType{
		"oauth2",
		"apiKey",
	}
}

type Format string

// Enum values for Format
const (
	FormatJson    Format = "json"
	FormatParquet Format = "parquet"
)

// Values returns all known values for Format. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Format) Values() []Format {
	return []Format{
		"json",
		"parquet",
	}
}

type IngestionDestinationStatus string

// Enum values for IngestionDestinationStatus
const (
	IngestionDestinationStatusActive IngestionDestinationStatus = "Active"
	IngestionDestinationStatusFailed IngestionDestinationStatus = "Failed"
)

// Values returns all known values for IngestionDestinationStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngestionDestinationStatus) Values() []IngestionDestinationStatus {
	return []IngestionDestinationStatus{
		"Active",
		"Failed",
	}
}

type IngestionState string

// Enum values for IngestionState
const (
	IngestionStateEnabled  IngestionState = "enabled"
	IngestionStateDisabled IngestionState = "disabled"
)

// Values returns all known values for IngestionState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngestionState) Values() []IngestionState {
	return []IngestionState{
		"enabled",
		"disabled",
	}
}

type IngestionType string

// Enum values for IngestionType
const (
	IngestionTypeAuditLog IngestionType = "auditLog"
)

// Values returns all known values for IngestionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngestionType) Values() []IngestionType {
	return []IngestionType{
		"auditLog",
	}
}

type Persona string

// Enum values for Persona
const (
	PersonaAdmin   Persona = "admin"
	PersonaEnduser Persona = "endUser"
)

// Values returns all known values for Persona. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Persona) Values() []Persona {
	return []Persona{
		"admin",
		"endUser",
	}
}

type ResultStatus string

// Enum values for ResultStatus
const (
	ResultStatusInProgress ResultStatus = "IN_PROGRESS"
	ResultStatusCompleted  ResultStatus = "COMPLETED"
	ResultStatusFailed     ResultStatus = "FAILED"
	ResultStatusExpired    ResultStatus = "EXPIRED"
)

// Values returns all known values for ResultStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResultStatus) Values() []ResultStatus {
	return []ResultStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
		"EXPIRED",
	}
}

type Schema string

// Enum values for Schema
const (
	SchemaOcsf Schema = "ocsf"
	SchemaRaw  Schema = "raw"
)

// Values returns all known values for Schema. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Schema) Values() []Schema {
	return []Schema{
		"ocsf",
		"raw",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "unknownOperation"
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "cannotParse"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "fieldValidationFailed"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "other"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"unknownOperation",
		"cannotParse",
		"fieldValidationFailed",
		"other",
	}
}
