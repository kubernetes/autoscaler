// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AwsRegion string

// Enum values for AwsRegion
const (
	AwsRegionAfSouth1     AwsRegion = "af-south-1"
	AwsRegionApEast1      AwsRegion = "ap-east-1"
	AwsRegionApNortheast1 AwsRegion = "ap-northeast-1"
	AwsRegionApNortheast2 AwsRegion = "ap-northeast-2"
	AwsRegionApNortheast3 AwsRegion = "ap-northeast-3"
	AwsRegionApSouth1     AwsRegion = "ap-south-1"
	AwsRegionApSouth2     AwsRegion = "ap-south-2"
	AwsRegionApSoutheast1 AwsRegion = "ap-southeast-1"
	AwsRegionApSoutheast2 AwsRegion = "ap-southeast-2"
	AwsRegionApSoutheast3 AwsRegion = "ap-southeast-3"
	AwsRegionApSoutheast4 AwsRegion = "ap-southeast-4"
	AwsRegionApSoutheast5 AwsRegion = "ap-southeast-5"
	AwsRegionApSoutheast7 AwsRegion = "ap-southeast-7"
	AwsRegionCaCentral1   AwsRegion = "ca-central-1"
	AwsRegionCaWest1      AwsRegion = "ca-west-1"
	AwsRegionCnNorth1     AwsRegion = "cn-north-1"
	AwsRegionCnNorthwest1 AwsRegion = "cn-northwest-1"
	AwsRegionEuCentral1   AwsRegion = "eu-central-1"
	AwsRegionEuCentral2   AwsRegion = "eu-central-2"
	AwsRegionEuNorth1     AwsRegion = "eu-north-1"
	AwsRegionEuSouth1     AwsRegion = "eu-south-1"
	AwsRegionEuSouth2     AwsRegion = "eu-south-2"
	AwsRegionEuWest1      AwsRegion = "eu-west-1"
	AwsRegionEuWest2      AwsRegion = "eu-west-2"
	AwsRegionEuWest3      AwsRegion = "eu-west-3"
	AwsRegionIlCentral1   AwsRegion = "il-central-1"
	AwsRegionMeCentral1   AwsRegion = "me-central-1"
	AwsRegionMeSouth1     AwsRegion = "me-south-1"
	AwsRegionMxCentral1   AwsRegion = "mx-central-1"
	AwsRegionSaEast1      AwsRegion = "sa-east-1"
	AwsRegionUsEast1      AwsRegion = "us-east-1"
	AwsRegionUsEast2      AwsRegion = "us-east-2"
	AwsRegionUsWest1      AwsRegion = "us-west-1"
	AwsRegionUsWest2      AwsRegion = "us-west-2"
)

// Values returns all known values for AwsRegion. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AwsRegion) Values() []AwsRegion {
	return []AwsRegion{
		"af-south-1",
		"ap-east-1",
		"ap-northeast-1",
		"ap-northeast-2",
		"ap-northeast-3",
		"ap-south-1",
		"ap-south-2",
		"ap-southeast-1",
		"ap-southeast-2",
		"ap-southeast-3",
		"ap-southeast-4",
		"ap-southeast-5",
		"ap-southeast-7",
		"ca-central-1",
		"ca-west-1",
		"cn-north-1",
		"cn-northwest-1",
		"eu-central-1",
		"eu-central-2",
		"eu-north-1",
		"eu-south-1",
		"eu-south-2",
		"eu-west-1",
		"eu-west-2",
		"eu-west-3",
		"il-central-1",
		"me-central-1",
		"me-south-1",
		"mx-central-1",
		"sa-east-1",
		"us-east-1",
		"us-east-2",
		"us-west-1",
		"us-west-2",
	}
}

type CaseAttachmentStatus string

// Enum values for CaseAttachmentStatus
const (
	CaseAttachmentStatusVerified CaseAttachmentStatus = "Verified"
	CaseAttachmentStatusFailed   CaseAttachmentStatus = "Failed"
	CaseAttachmentStatusPending  CaseAttachmentStatus = "Pending"
)

// Values returns all known values for CaseAttachmentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CaseAttachmentStatus) Values() []CaseAttachmentStatus {
	return []CaseAttachmentStatus{
		"Verified",
		"Failed",
		"Pending",
	}
}

type CaseStatus string

// Enum values for CaseStatus
const (
	CaseStatusSubmitted                         CaseStatus = "Submitted"
	CaseStatusAcknowledged                      CaseStatus = "Acknowledged"
	CaseStatusDetectionAndAnalysis              CaseStatus = "Detection and Analysis"
	CaseStatusContainmentEradicationAndRecovery CaseStatus = "Containment, Eradication and Recovery"
	CaseStatusPostIncidentActivities            CaseStatus = "Post-incident Activities"
	CaseStatusReadyToClose                      CaseStatus = "Ready to Close"
	CaseStatusClosed                            CaseStatus = "Closed"
)

// Values returns all known values for CaseStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CaseStatus) Values() []CaseStatus {
	return []CaseStatus{
		"Submitted",
		"Acknowledged",
		"Detection and Analysis",
		"Containment, Eradication and Recovery",
		"Post-incident Activities",
		"Ready to Close",
		"Closed",
	}
}

type ClosureCode string

// Enum values for ClosureCode
const (
	ClosureCodeInvestigationCompleted ClosureCode = "Investigation Completed"
	ClosureCodeNotResolved            ClosureCode = "Not Resolved"
	ClosureCodeFalsePositive          ClosureCode = "False Positive"
	ClosureCodeDuplicate              ClosureCode = "Duplicate"
)

// Values returns all known values for ClosureCode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClosureCode) Values() []ClosureCode {
	return []ClosureCode{
		"Investigation Completed",
		"Not Resolved",
		"False Positive",
		"Duplicate",
	}
}

type CustomerType string

// Enum values for CustomerType
const (
	CustomerTypeStandalone   CustomerType = "Standalone"
	CustomerTypeOrganization CustomerType = "Organization"
)

// Values returns all known values for CustomerType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CustomerType) Values() []CustomerType {
	return []CustomerType{
		"Standalone",
		"Organization",
	}
}

type EngagementType string

// Enum values for EngagementType
const (
	EngagementTypeSecurityIncident EngagementType = "Security Incident"
	EngagementTypeInvestigation    EngagementType = "Investigation"
)

// Values returns all known values for EngagementType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EngagementType) Values() []EngagementType {
	return []EngagementType{
		"Security Incident",
		"Investigation",
	}
}

type MembershipAccountRelationshipStatus string

// Enum values for MembershipAccountRelationshipStatus
const (
	MembershipAccountRelationshipStatusAssociated    MembershipAccountRelationshipStatus = "Associated"
	MembershipAccountRelationshipStatusDisassociated MembershipAccountRelationshipStatus = "Disassociated"
)

// Values returns all known values for MembershipAccountRelationshipStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MembershipAccountRelationshipStatus) Values() []MembershipAccountRelationshipStatus {
	return []MembershipAccountRelationshipStatus{
		"Associated",
		"Disassociated",
	}
}

type MembershipAccountRelationshipType string

// Enum values for MembershipAccountRelationshipType
const (
	MembershipAccountRelationshipTypeOrganization MembershipAccountRelationshipType = "Organization"
)

// Values returns all known values for MembershipAccountRelationshipType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MembershipAccountRelationshipType) Values() []MembershipAccountRelationshipType {
	return []MembershipAccountRelationshipType{
		"Organization",
	}
}

type MembershipStatus string

// Enum values for MembershipStatus
const (
	MembershipStatusActive     MembershipStatus = "Active"
	MembershipStatusCancelled  MembershipStatus = "Cancelled"
	MembershipStatusTerminated MembershipStatus = "Terminated"
)

// Values returns all known values for MembershipStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MembershipStatus) Values() []MembershipStatus {
	return []MembershipStatus{
		"Active",
		"Cancelled",
		"Terminated",
	}
}

type OptInFeatureName string

// Enum values for OptInFeatureName
const (
	OptInFeatureNameTriage OptInFeatureName = "Triage"
)

// Values returns all known values for OptInFeatureName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OptInFeatureName) Values() []OptInFeatureName {
	return []OptInFeatureName{
		"Triage",
	}
}

type PendingAction string

// Enum values for PendingAction
const (
	PendingActionCustomer PendingAction = "Customer"
	PendingActionNone     PendingAction = "None"
)

// Values returns all known values for PendingAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PendingAction) Values() []PendingAction {
	return []PendingAction{
		"Customer",
		"None",
	}
}

type ResolverType string

// Enum values for ResolverType
const (
	ResolverTypeAws  ResolverType = "AWS"
	ResolverTypeSelf ResolverType = "Self"
)

// Values returns all known values for ResolverType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResolverType) Values() []ResolverType {
	return []ResolverType{
		"AWS",
		"Self",
	}
}

type SelfManagedCaseStatus string

// Enum values for SelfManagedCaseStatus
const (
	SelfManagedCaseStatusSubmitted                         SelfManagedCaseStatus = "Submitted"
	SelfManagedCaseStatusDetectionAndAnalysis              SelfManagedCaseStatus = "Detection and Analysis"
	SelfManagedCaseStatusContainmentEradicationAndRecovery SelfManagedCaseStatus = "Containment, Eradication and Recovery"
	SelfManagedCaseStatusPostIncidentActivities            SelfManagedCaseStatus = "Post-incident Activities"
)

// Values returns all known values for SelfManagedCaseStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SelfManagedCaseStatus) Values() []SelfManagedCaseStatus {
	return []SelfManagedCaseStatus{
		"Submitted",
		"Detection and Analysis",
		"Containment, Eradication and Recovery",
		"Post-incident Activities",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "UNKNOWN_OPERATION"
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "CANNOT_PARSE"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "FIELD_VALIDATION_FAILED"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "OTHER"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"UNKNOWN_OPERATION",
		"CANNOT_PARSE",
		"FIELD_VALIDATION_FAILED",
		"OTHER",
	}
}
