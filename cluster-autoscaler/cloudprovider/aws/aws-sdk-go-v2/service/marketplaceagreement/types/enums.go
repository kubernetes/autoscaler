// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AgreementStatus string

// Enum values for AgreementStatus
const (
	AgreementStatusActive     AgreementStatus = "ACTIVE"
	AgreementStatusArchived   AgreementStatus = "ARCHIVED"
	AgreementStatusCancelled  AgreementStatus = "CANCELLED"
	AgreementStatusExpired    AgreementStatus = "EXPIRED"
	AgreementStatusRenewed    AgreementStatus = "RENEWED"
	AgreementStatusReplaced   AgreementStatus = "REPLACED"
	AgreementStatusRolledBack AgreementStatus = "ROLLED_BACK"
	AgreementStatusSuperseded AgreementStatus = "SUPERSEDED"
	AgreementStatusTerminated AgreementStatus = "TERMINATED"
)

// Values returns all known values for AgreementStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AgreementStatus) Values() []AgreementStatus {
	return []AgreementStatus{
		"ACTIVE",
		"ARCHIVED",
		"CANCELLED",
		"EXPIRED",
		"RENEWED",
		"REPLACED",
		"ROLLED_BACK",
		"SUPERSEDED",
		"TERMINATED",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeAgreement ResourceType = "Agreement"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"Agreement",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "ASCENDING"
	SortOrderDescending SortOrder = "DESCENDING"
)

// Values returns all known values for SortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"ASCENDING",
		"DESCENDING",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonInvalidAgreementId  ValidationExceptionReason = "INVALID_AGREEMENT_ID"
	ValidationExceptionReasonMissingAgreementId  ValidationExceptionReason = "MISSING_AGREEMENT_ID"
	ValidationExceptionReasonInvalidCatalog      ValidationExceptionReason = "INVALID_CATALOG"
	ValidationExceptionReasonInvalidFilterName   ValidationExceptionReason = "INVALID_FILTER_NAME"
	ValidationExceptionReasonInvalidFilterValues ValidationExceptionReason = "INVALID_FILTER_VALUES"
	ValidationExceptionReasonInvalidSortBy       ValidationExceptionReason = "INVALID_SORT_BY"
	ValidationExceptionReasonInvalidSortOrder    ValidationExceptionReason = "INVALID_SORT_ORDER"
	ValidationExceptionReasonInvalidNextToken    ValidationExceptionReason = "INVALID_NEXT_TOKEN"
	ValidationExceptionReasonInvalidMaxResults   ValidationExceptionReason = "INVALID_MAX_RESULTS"
	ValidationExceptionReasonUnsupportedFilters  ValidationExceptionReason = "UNSUPPORTED_FILTERS"
	ValidationExceptionReasonOther               ValidationExceptionReason = "OTHER"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"INVALID_AGREEMENT_ID",
		"MISSING_AGREEMENT_ID",
		"INVALID_CATALOG",
		"INVALID_FILTER_NAME",
		"INVALID_FILTER_VALUES",
		"INVALID_SORT_BY",
		"INVALID_SORT_ORDER",
		"INVALID_NEXT_TOKEN",
		"INVALID_MAX_RESULTS",
		"UNSUPPORTED_FILTERS",
		"OTHER",
	}
}
