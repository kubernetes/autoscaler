// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AllocationType string

// Enum values for AllocationType
const (
	AllocationTypeVpcSubnet AllocationType = "VPC_SUBNET"
	AllocationTypeElasticIp AllocationType = "ELASTIC_IP"
	AllocationTypeOverlay   AllocationType = "OVERLAY"
	AllocationTypeUnknown   AllocationType = "UNKNOWN"
)

// Values returns all known values for AllocationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AllocationType) Values() []AllocationType {
	return []AllocationType{
		"VPC_SUBNET",
		"ELASTIC_IP",
		"OVERLAY",
		"UNKNOWN",
	}
}

type ApplicationDiscoveryStatus string

// Enum values for ApplicationDiscoveryStatus
const (
	ApplicationDiscoveryStatusSuccess            ApplicationDiscoveryStatus = "SUCCESS"
	ApplicationDiscoveryStatusRegistrationFailed ApplicationDiscoveryStatus = "REGISTRATION_FAILED"
	ApplicationDiscoveryStatusRefreshFailed      ApplicationDiscoveryStatus = "REFRESH_FAILED"
	ApplicationDiscoveryStatusRegistering        ApplicationDiscoveryStatus = "REGISTERING"
	ApplicationDiscoveryStatusDeleting           ApplicationDiscoveryStatus = "DELETING"
)

// Values returns all known values for ApplicationDiscoveryStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ApplicationDiscoveryStatus) Values() []ApplicationDiscoveryStatus {
	return []ApplicationDiscoveryStatus{
		"SUCCESS",
		"REGISTRATION_FAILED",
		"REFRESH_FAILED",
		"REGISTERING",
		"DELETING",
	}
}

type ApplicationStatus string

// Enum values for ApplicationStatus
const (
	ApplicationStatusActivated   ApplicationStatus = "ACTIVATED"
	ApplicationStatusStarting    ApplicationStatus = "STARTING"
	ApplicationStatusStopped     ApplicationStatus = "STOPPED"
	ApplicationStatusStopping    ApplicationStatus = "STOPPING"
	ApplicationStatusFailed      ApplicationStatus = "FAILED"
	ApplicationStatusRegistering ApplicationStatus = "REGISTERING"
	ApplicationStatusDeleting    ApplicationStatus = "DELETING"
	ApplicationStatusUnknown     ApplicationStatus = "UNKNOWN"
)

// Values returns all known values for ApplicationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ApplicationStatus) Values() []ApplicationStatus {
	return []ApplicationStatus{
		"ACTIVATED",
		"STARTING",
		"STOPPED",
		"STOPPING",
		"FAILED",
		"REGISTERING",
		"DELETING",
		"UNKNOWN",
	}
}

type ApplicationType string

// Enum values for ApplicationType
const (
	ApplicationTypeHana    ApplicationType = "HANA"
	ApplicationTypeSapAbap ApplicationType = "SAP_ABAP"
)

// Values returns all known values for ApplicationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ApplicationType) Values() []ApplicationType {
	return []ApplicationType{
		"HANA",
		"SAP_ABAP",
	}
}

type BackintMode string

// Enum values for BackintMode
const (
	BackintModeAWSBackup BackintMode = "AWSBackup"
)

// Values returns all known values for BackintMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BackintMode) Values() []BackintMode {
	return []BackintMode{
		"AWSBackup",
	}
}

type ClusterStatus string

// Enum values for ClusterStatus
const (
	ClusterStatusOnline      ClusterStatus = "ONLINE"
	ClusterStatusStandby     ClusterStatus = "STANDBY"
	ClusterStatusMaintenance ClusterStatus = "MAINTENANCE"
	ClusterStatusOffline     ClusterStatus = "OFFLINE"
	ClusterStatusNone        ClusterStatus = "NONE"
)

// Values returns all known values for ClusterStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClusterStatus) Values() []ClusterStatus {
	return []ClusterStatus{
		"ONLINE",
		"STANDBY",
		"MAINTENANCE",
		"OFFLINE",
		"NONE",
	}
}

type ComponentStatus string

// Enum values for ComponentStatus
const (
	ComponentStatusActivated        ComponentStatus = "ACTIVATED"
	ComponentStatusStarting         ComponentStatus = "STARTING"
	ComponentStatusStopped          ComponentStatus = "STOPPED"
	ComponentStatusStopping         ComponentStatus = "STOPPING"
	ComponentStatusRunning          ComponentStatus = "RUNNING"
	ComponentStatusRunningWithError ComponentStatus = "RUNNING_WITH_ERROR"
	ComponentStatusUndefined        ComponentStatus = "UNDEFINED"
)

// Values returns all known values for ComponentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ComponentStatus) Values() []ComponentStatus {
	return []ComponentStatus{
		"ACTIVATED",
		"STARTING",
		"STOPPED",
		"STOPPING",
		"RUNNING",
		"RUNNING_WITH_ERROR",
		"UNDEFINED",
	}
}

type ComponentType string

// Enum values for ComponentType
const (
	ComponentTypeHana     ComponentType = "HANA"
	ComponentTypeHanaNode ComponentType = "HANA_NODE"
	ComponentTypeAbap     ComponentType = "ABAP"
	ComponentTypeAscs     ComponentType = "ASCS"
	ComponentTypeDialog   ComponentType = "DIALOG"
	ComponentTypeWebdisp  ComponentType = "WEBDISP"
	ComponentTypeWd       ComponentType = "WD"
	ComponentTypeErs      ComponentType = "ERS"
)

// Values returns all known values for ComponentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ComponentType) Values() []ComponentType {
	return []ComponentType{
		"HANA",
		"HANA_NODE",
		"ABAP",
		"ASCS",
		"DIALOG",
		"WEBDISP",
		"WD",
		"ERS",
	}
}

type ConnectedEntityType string

// Enum values for ConnectedEntityType
const (
	ConnectedEntityTypeDbms ConnectedEntityType = "DBMS"
)

// Values returns all known values for ConnectedEntityType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectedEntityType) Values() []ConnectedEntityType {
	return []ConnectedEntityType{
		"DBMS",
	}
}

type CredentialType string

// Enum values for CredentialType
const (
	CredentialTypeAdmin CredentialType = "ADMIN"
)

// Values returns all known values for CredentialType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CredentialType) Values() []CredentialType {
	return []CredentialType{
		"ADMIN",
	}
}

type DatabaseConnectionMethod string

// Enum values for DatabaseConnectionMethod
const (
	DatabaseConnectionMethodDirect  DatabaseConnectionMethod = "DIRECT"
	DatabaseConnectionMethodOverlay DatabaseConnectionMethod = "OVERLAY"
)

// Values returns all known values for DatabaseConnectionMethod. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatabaseConnectionMethod) Values() []DatabaseConnectionMethod {
	return []DatabaseConnectionMethod{
		"DIRECT",
		"OVERLAY",
	}
}

type DatabaseStatus string

// Enum values for DatabaseStatus
const (
	DatabaseStatusRunning  DatabaseStatus = "RUNNING"
	DatabaseStatusStarting DatabaseStatus = "STARTING"
	DatabaseStatusStopped  DatabaseStatus = "STOPPED"
	DatabaseStatusWarning  DatabaseStatus = "WARNING"
	DatabaseStatusUnknown  DatabaseStatus = "UNKNOWN"
	DatabaseStatusError    DatabaseStatus = "ERROR"
)

// Values returns all known values for DatabaseStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatabaseStatus) Values() []DatabaseStatus {
	return []DatabaseStatus{
		"RUNNING",
		"STARTING",
		"STOPPED",
		"WARNING",
		"UNKNOWN",
		"ERROR",
	}
}

type DatabaseType string

// Enum values for DatabaseType
const (
	DatabaseTypeSystem DatabaseType = "SYSTEM"
	DatabaseTypeTenant DatabaseType = "TENANT"
)

// Values returns all known values for DatabaseType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatabaseType) Values() []DatabaseType {
	return []DatabaseType{
		"SYSTEM",
		"TENANT",
	}
}

type FilterOperator string

// Enum values for FilterOperator
const (
	FilterOperatorEquals              FilterOperator = "Equals"
	FilterOperatorGreaterThanOrEquals FilterOperator = "GreaterThanOrEquals"
	FilterOperatorLessThanOrEquals    FilterOperator = "LessThanOrEquals"
)

// Values returns all known values for FilterOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FilterOperator) Values() []FilterOperator {
	return []FilterOperator{
		"Equals",
		"GreaterThanOrEquals",
		"LessThanOrEquals",
	}
}

type HostRole string

// Enum values for HostRole
const (
	HostRoleLeader  HostRole = "LEADER"
	HostRoleWorker  HostRole = "WORKER"
	HostRoleStandby HostRole = "STANDBY"
	HostRoleUnknown HostRole = "UNKNOWN"
)

// Values returns all known values for HostRole. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HostRole) Values() []HostRole {
	return []HostRole{
		"LEADER",
		"WORKER",
		"STANDBY",
		"UNKNOWN",
	}
}

type OperationEventStatus string

// Enum values for OperationEventStatus
const (
	OperationEventStatusInProgress OperationEventStatus = "IN_PROGRESS"
	OperationEventStatusCompleted  OperationEventStatus = "COMPLETED"
	OperationEventStatusFailed     OperationEventStatus = "FAILED"
)

// Values returns all known values for OperationEventStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OperationEventStatus) Values() []OperationEventStatus {
	return []OperationEventStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
	}
}

type OperationMode string

// Enum values for OperationMode
const (
	OperationModePrimary             OperationMode = "PRIMARY"
	OperationModeLogreplay           OperationMode = "LOGREPLAY"
	OperationModeDeltaDatashipping   OperationMode = "DELTA_DATASHIPPING"
	OperationModeLogreplayReadaccess OperationMode = "LOGREPLAY_READACCESS"
	OperationModeNone                OperationMode = "NONE"
)

// Values returns all known values for OperationMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OperationMode) Values() []OperationMode {
	return []OperationMode{
		"PRIMARY",
		"LOGREPLAY",
		"DELTA_DATASHIPPING",
		"LOGREPLAY_READACCESS",
		"NONE",
	}
}

type OperationStatus string

// Enum values for OperationStatus
const (
	OperationStatusInprogress OperationStatus = "INPROGRESS"
	OperationStatusSuccess    OperationStatus = "SUCCESS"
	OperationStatusError      OperationStatus = "ERROR"
)

// Values returns all known values for OperationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OperationStatus) Values() []OperationStatus {
	return []OperationStatus{
		"INPROGRESS",
		"SUCCESS",
		"ERROR",
	}
}

type PermissionActionType string

// Enum values for PermissionActionType
const (
	PermissionActionTypeRestore PermissionActionType = "RESTORE"
)

// Values returns all known values for PermissionActionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PermissionActionType) Values() []PermissionActionType {
	return []PermissionActionType{
		"RESTORE",
	}
}

type ReplicationMode string

// Enum values for ReplicationMode
const (
	ReplicationModePrimary ReplicationMode = "PRIMARY"
	ReplicationModeNone    ReplicationMode = "NONE"
	ReplicationModeSync    ReplicationMode = "SYNC"
	ReplicationModeSyncmem ReplicationMode = "SYNCMEM"
	ReplicationModeAsync   ReplicationMode = "ASYNC"
)

// Values returns all known values for ReplicationMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReplicationMode) Values() []ReplicationMode {
	return []ReplicationMode{
		"PRIMARY",
		"NONE",
		"SYNC",
		"SYNCMEM",
		"ASYNC",
	}
}
