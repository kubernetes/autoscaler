// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ConfigurationJobStatus string

// Enum values for ConfigurationJobStatus
const (
	ConfigurationJobStatusNew        ConfigurationJobStatus = "NEW"
	ConfigurationJobStatusFailed     ConfigurationJobStatus = "FAILED"
	ConfigurationJobStatusInProgress ConfigurationJobStatus = "IN_PROGRESS"
	ConfigurationJobStatusQueued     ConfigurationJobStatus = "QUEUED"
	ConfigurationJobStatusSuccess    ConfigurationJobStatus = "SUCCESS"
)

// Values returns all known values for ConfigurationJobStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfigurationJobStatus) Values() []ConfigurationJobStatus {
	return []ConfigurationJobStatus{
		"NEW",
		"FAILED",
		"IN_PROGRESS",
		"QUEUED",
		"SUCCESS",
	}
}

type DataIntegrationEventDatasetLoadStatus string

// Enum values for DataIntegrationEventDatasetLoadStatus
const (
	DataIntegrationEventDatasetLoadStatusSucceeded  DataIntegrationEventDatasetLoadStatus = "SUCCEEDED"
	DataIntegrationEventDatasetLoadStatusInProgress DataIntegrationEventDatasetLoadStatus = "IN_PROGRESS"
	DataIntegrationEventDatasetLoadStatusFailed     DataIntegrationEventDatasetLoadStatus = "FAILED"
)

// Values returns all known values for DataIntegrationEventDatasetLoadStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationEventDatasetLoadStatus) Values() []DataIntegrationEventDatasetLoadStatus {
	return []DataIntegrationEventDatasetLoadStatus{
		"SUCCEEDED",
		"IN_PROGRESS",
		"FAILED",
	}
}

type DataIntegrationEventDatasetOperationType string

// Enum values for DataIntegrationEventDatasetOperationType
const (
	DataIntegrationEventDatasetOperationTypeAppend DataIntegrationEventDatasetOperationType = "APPEND"
	DataIntegrationEventDatasetOperationTypeUpsert DataIntegrationEventDatasetOperationType = "UPSERT"
	DataIntegrationEventDatasetOperationTypeDelete DataIntegrationEventDatasetOperationType = "DELETE"
)

// Values returns all known values for DataIntegrationEventDatasetOperationType.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationEventDatasetOperationType) Values() []DataIntegrationEventDatasetOperationType {
	return []DataIntegrationEventDatasetOperationType{
		"APPEND",
		"UPSERT",
		"DELETE",
	}
}

type DataIntegrationEventType string

// Enum values for DataIntegrationEventType
const (
	DataIntegrationEventTypeForecast                 DataIntegrationEventType = "scn.data.forecast"
	DataIntegrationEventTypeInventoryLevel           DataIntegrationEventType = "scn.data.inventorylevel"
	DataIntegrationEventTypeInboundOrder             DataIntegrationEventType = "scn.data.inboundorder"
	DataIntegrationEventTypeInboundOrderLine         DataIntegrationEventType = "scn.data.inboundorderline"
	DataIntegrationEventTypeInboundOrderLineSchedule DataIntegrationEventType = "scn.data.inboundorderlineschedule"
	DataIntegrationEventTypeOutboundOrderLine        DataIntegrationEventType = "scn.data.outboundorderline"
	DataIntegrationEventTypeOutboundShipment         DataIntegrationEventType = "scn.data.outboundshipment"
	DataIntegrationEventTypeProcessHeader            DataIntegrationEventType = "scn.data.processheader"
	DataIntegrationEventTypeProcessOperation         DataIntegrationEventType = "scn.data.processoperation"
	DataIntegrationEventTypeProcessProduct           DataIntegrationEventType = "scn.data.processproduct"
	DataIntegrationEventTypeReservation              DataIntegrationEventType = "scn.data.reservation"
	DataIntegrationEventTypeShipment                 DataIntegrationEventType = "scn.data.shipment"
	DataIntegrationEventTypeShipmentStop             DataIntegrationEventType = "scn.data.shipmentstop"
	DataIntegrationEventTypeShipmentStopOrder        DataIntegrationEventType = "scn.data.shipmentstoporder"
	DataIntegrationEventTypeSupplyPlan               DataIntegrationEventType = "scn.data.supplyplan"
	DataIntegrationEventTypeDataset                  DataIntegrationEventType = "scn.data.dataset"
)

// Values returns all known values for DataIntegrationEventType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationEventType) Values() []DataIntegrationEventType {
	return []DataIntegrationEventType{
		"scn.data.forecast",
		"scn.data.inventorylevel",
		"scn.data.inboundorder",
		"scn.data.inboundorderline",
		"scn.data.inboundorderlineschedule",
		"scn.data.outboundorderline",
		"scn.data.outboundshipment",
		"scn.data.processheader",
		"scn.data.processoperation",
		"scn.data.processproduct",
		"scn.data.reservation",
		"scn.data.shipment",
		"scn.data.shipmentstop",
		"scn.data.shipmentstoporder",
		"scn.data.supplyplan",
		"scn.data.dataset",
	}
}

type DataIntegrationFlowDedupeStrategyType string

// Enum values for DataIntegrationFlowDedupeStrategyType
const (
	DataIntegrationFlowDedupeStrategyTypeFieldPriority DataIntegrationFlowDedupeStrategyType = "FIELD_PRIORITY"
)

// Values returns all known values for DataIntegrationFlowDedupeStrategyType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationFlowDedupeStrategyType) Values() []DataIntegrationFlowDedupeStrategyType {
	return []DataIntegrationFlowDedupeStrategyType{
		"FIELD_PRIORITY",
	}
}

type DataIntegrationFlowExecutionStatus string

// Enum values for DataIntegrationFlowExecutionStatus
const (
	DataIntegrationFlowExecutionStatusSucceeded  DataIntegrationFlowExecutionStatus = "SUCCEEDED"
	DataIntegrationFlowExecutionStatusInProgress DataIntegrationFlowExecutionStatus = "IN_PROGRESS"
	DataIntegrationFlowExecutionStatusFailed     DataIntegrationFlowExecutionStatus = "FAILED"
)

// Values returns all known values for DataIntegrationFlowExecutionStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationFlowExecutionStatus) Values() []DataIntegrationFlowExecutionStatus {
	return []DataIntegrationFlowExecutionStatus{
		"SUCCEEDED",
		"IN_PROGRESS",
		"FAILED",
	}
}

type DataIntegrationFlowFieldPriorityDedupeSortOrder string

// Enum values for DataIntegrationFlowFieldPriorityDedupeSortOrder
const (
	DataIntegrationFlowFieldPriorityDedupeSortOrderAsc  DataIntegrationFlowFieldPriorityDedupeSortOrder = "ASC"
	DataIntegrationFlowFieldPriorityDedupeSortOrderDesc DataIntegrationFlowFieldPriorityDedupeSortOrder = "DESC"
)

// Values returns all known values for
// DataIntegrationFlowFieldPriorityDedupeSortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationFlowFieldPriorityDedupeSortOrder) Values() []DataIntegrationFlowFieldPriorityDedupeSortOrder {
	return []DataIntegrationFlowFieldPriorityDedupeSortOrder{
		"ASC",
		"DESC",
	}
}

type DataIntegrationFlowFileType string

// Enum values for DataIntegrationFlowFileType
const (
	DataIntegrationFlowFileTypeCsv     DataIntegrationFlowFileType = "CSV"
	DataIntegrationFlowFileTypeParquet DataIntegrationFlowFileType = "PARQUET"
	DataIntegrationFlowFileTypeJson    DataIntegrationFlowFileType = "JSON"
)

// Values returns all known values for DataIntegrationFlowFileType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationFlowFileType) Values() []DataIntegrationFlowFileType {
	return []DataIntegrationFlowFileType{
		"CSV",
		"PARQUET",
		"JSON",
	}
}

type DataIntegrationFlowLoadType string

// Enum values for DataIntegrationFlowLoadType
const (
	DataIntegrationFlowLoadTypeIncremental DataIntegrationFlowLoadType = "INCREMENTAL"
	DataIntegrationFlowLoadTypeReplace     DataIntegrationFlowLoadType = "REPLACE"
)

// Values returns all known values for DataIntegrationFlowLoadType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationFlowLoadType) Values() []DataIntegrationFlowLoadType {
	return []DataIntegrationFlowLoadType{
		"INCREMENTAL",
		"REPLACE",
	}
}

type DataIntegrationFlowSourceType string

// Enum values for DataIntegrationFlowSourceType
const (
	DataIntegrationFlowSourceTypeS3      DataIntegrationFlowSourceType = "S3"
	DataIntegrationFlowSourceTypeDataset DataIntegrationFlowSourceType = "DATASET"
)

// Values returns all known values for DataIntegrationFlowSourceType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationFlowSourceType) Values() []DataIntegrationFlowSourceType {
	return []DataIntegrationFlowSourceType{
		"S3",
		"DATASET",
	}
}

type DataIntegrationFlowTargetType string

// Enum values for DataIntegrationFlowTargetType
const (
	DataIntegrationFlowTargetTypeS3      DataIntegrationFlowTargetType = "S3"
	DataIntegrationFlowTargetTypeDataset DataIntegrationFlowTargetType = "DATASET"
)

// Values returns all known values for DataIntegrationFlowTargetType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationFlowTargetType) Values() []DataIntegrationFlowTargetType {
	return []DataIntegrationFlowTargetType{
		"S3",
		"DATASET",
	}
}

type DataIntegrationFlowTransformationType string

// Enum values for DataIntegrationFlowTransformationType
const (
	DataIntegrationFlowTransformationTypeSql  DataIntegrationFlowTransformationType = "SQL"
	DataIntegrationFlowTransformationTypeNone DataIntegrationFlowTransformationType = "NONE"
)

// Values returns all known values for DataIntegrationFlowTransformationType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataIntegrationFlowTransformationType) Values() []DataIntegrationFlowTransformationType {
	return []DataIntegrationFlowTransformationType{
		"SQL",
		"NONE",
	}
}

type DataLakeDatasetPartitionTransformType string

// Enum values for DataLakeDatasetPartitionTransformType
const (
	DataLakeDatasetPartitionTransformTypeYear     DataLakeDatasetPartitionTransformType = "YEAR"
	DataLakeDatasetPartitionTransformTypeMonth    DataLakeDatasetPartitionTransformType = "MONTH"
	DataLakeDatasetPartitionTransformTypeDay      DataLakeDatasetPartitionTransformType = "DAY"
	DataLakeDatasetPartitionTransformTypeHour     DataLakeDatasetPartitionTransformType = "HOUR"
	DataLakeDatasetPartitionTransformTypeIdentity DataLakeDatasetPartitionTransformType = "IDENTITY"
)

// Values returns all known values for DataLakeDatasetPartitionTransformType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataLakeDatasetPartitionTransformType) Values() []DataLakeDatasetPartitionTransformType {
	return []DataLakeDatasetPartitionTransformType{
		"YEAR",
		"MONTH",
		"DAY",
		"HOUR",
		"IDENTITY",
	}
}

type DataLakeDatasetSchemaFieldType string

// Enum values for DataLakeDatasetSchemaFieldType
const (
	DataLakeDatasetSchemaFieldTypeInt       DataLakeDatasetSchemaFieldType = "INT"
	DataLakeDatasetSchemaFieldTypeDouble    DataLakeDatasetSchemaFieldType = "DOUBLE"
	DataLakeDatasetSchemaFieldTypeString    DataLakeDatasetSchemaFieldType = "STRING"
	DataLakeDatasetSchemaFieldTypeTimestamp DataLakeDatasetSchemaFieldType = "TIMESTAMP"
	DataLakeDatasetSchemaFieldTypeLong      DataLakeDatasetSchemaFieldType = "LONG"
)

// Values returns all known values for DataLakeDatasetSchemaFieldType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataLakeDatasetSchemaFieldType) Values() []DataLakeDatasetSchemaFieldType {
	return []DataLakeDatasetSchemaFieldType{
		"INT",
		"DOUBLE",
		"STRING",
		"TIMESTAMP",
		"LONG",
	}
}

type InstanceState string

// Enum values for InstanceState
const (
	InstanceStateInitializing InstanceState = "Initializing"
	InstanceStateActive       InstanceState = "Active"
	InstanceStateCreateFailed InstanceState = "CreateFailed"
	InstanceStateDeleteFailed InstanceState = "DeleteFailed"
	InstanceStateDeleting     InstanceState = "Deleting"
	InstanceStateDeleted      InstanceState = "Deleted"
)

// Values returns all known values for InstanceState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstanceState) Values() []InstanceState {
	return []InstanceState{
		"Initializing",
		"Active",
		"CreateFailed",
		"DeleteFailed",
		"Deleting",
		"Deleted",
	}
}
