// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActivityTaskTimeoutType string

// Enum values for ActivityTaskTimeoutType
const (
	ActivityTaskTimeoutTypeStartToClose    ActivityTaskTimeoutType = "START_TO_CLOSE"
	ActivityTaskTimeoutTypeScheduleToStart ActivityTaskTimeoutType = "SCHEDULE_TO_START"
	ActivityTaskTimeoutTypeScheduleToClose ActivityTaskTimeoutType = "SCHEDULE_TO_CLOSE"
	ActivityTaskTimeoutTypeHeartbeat       ActivityTaskTimeoutType = "HEARTBEAT"
)

// Values returns all known values for ActivityTaskTimeoutType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActivityTaskTimeoutType) Values() []ActivityTaskTimeoutType {
	return []ActivityTaskTimeoutType{
		"START_TO_CLOSE",
		"SCHEDULE_TO_START",
		"SCHEDULE_TO_CLOSE",
		"HEARTBEAT",
	}
}

type CancelTimerFailedCause string

// Enum values for CancelTimerFailedCause
const (
	CancelTimerFailedCauseTimerIdUnknown        CancelTimerFailedCause = "TIMER_ID_UNKNOWN"
	CancelTimerFailedCauseOperationNotPermitted CancelTimerFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for CancelTimerFailedCause. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CancelTimerFailedCause) Values() []CancelTimerFailedCause {
	return []CancelTimerFailedCause{
		"TIMER_ID_UNKNOWN",
		"OPERATION_NOT_PERMITTED",
	}
}

type CancelWorkflowExecutionFailedCause string

// Enum values for CancelWorkflowExecutionFailedCause
const (
	CancelWorkflowExecutionFailedCauseUnhandledDecision     CancelWorkflowExecutionFailedCause = "UNHANDLED_DECISION"
	CancelWorkflowExecutionFailedCauseOperationNotPermitted CancelWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for CancelWorkflowExecutionFailedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CancelWorkflowExecutionFailedCause) Values() []CancelWorkflowExecutionFailedCause {
	return []CancelWorkflowExecutionFailedCause{
		"UNHANDLED_DECISION",
		"OPERATION_NOT_PERMITTED",
	}
}

type ChildPolicy string

// Enum values for ChildPolicy
const (
	ChildPolicyTerminate     ChildPolicy = "TERMINATE"
	ChildPolicyRequestCancel ChildPolicy = "REQUEST_CANCEL"
	ChildPolicyAbandon       ChildPolicy = "ABANDON"
)

// Values returns all known values for ChildPolicy. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChildPolicy) Values() []ChildPolicy {
	return []ChildPolicy{
		"TERMINATE",
		"REQUEST_CANCEL",
		"ABANDON",
	}
}

type CloseStatus string

// Enum values for CloseStatus
const (
	CloseStatusCompleted      CloseStatus = "COMPLETED"
	CloseStatusFailed         CloseStatus = "FAILED"
	CloseStatusCanceled       CloseStatus = "CANCELED"
	CloseStatusTerminated     CloseStatus = "TERMINATED"
	CloseStatusContinuedAsNew CloseStatus = "CONTINUED_AS_NEW"
	CloseStatusTimedOut       CloseStatus = "TIMED_OUT"
)

// Values returns all known values for CloseStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CloseStatus) Values() []CloseStatus {
	return []CloseStatus{
		"COMPLETED",
		"FAILED",
		"CANCELED",
		"TERMINATED",
		"CONTINUED_AS_NEW",
		"TIMED_OUT",
	}
}

type CompleteWorkflowExecutionFailedCause string

// Enum values for CompleteWorkflowExecutionFailedCause
const (
	CompleteWorkflowExecutionFailedCauseUnhandledDecision     CompleteWorkflowExecutionFailedCause = "UNHANDLED_DECISION"
	CompleteWorkflowExecutionFailedCauseOperationNotPermitted CompleteWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for CompleteWorkflowExecutionFailedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CompleteWorkflowExecutionFailedCause) Values() []CompleteWorkflowExecutionFailedCause {
	return []CompleteWorkflowExecutionFailedCause{
		"UNHANDLED_DECISION",
		"OPERATION_NOT_PERMITTED",
	}
}

type ContinueAsNewWorkflowExecutionFailedCause string

// Enum values for ContinueAsNewWorkflowExecutionFailedCause
const (
	ContinueAsNewWorkflowExecutionFailedCauseUnhandledDecision                            ContinueAsNewWorkflowExecutionFailedCause = "UNHANDLED_DECISION"
	ContinueAsNewWorkflowExecutionFailedCauseWorkflowTypeDeprecated                       ContinueAsNewWorkflowExecutionFailedCause = "WORKFLOW_TYPE_DEPRECATED"
	ContinueAsNewWorkflowExecutionFailedCauseWorkflowTypeDoesNotExist                     ContinueAsNewWorkflowExecutionFailedCause = "WORKFLOW_TYPE_DOES_NOT_EXIST"
	ContinueAsNewWorkflowExecutionFailedCauseDefaultExecutionStartToCloseTimeoutUndefined ContinueAsNewWorkflowExecutionFailedCause = "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	ContinueAsNewWorkflowExecutionFailedCauseDefaultTaskStartToCloseTimeoutUndefined      ContinueAsNewWorkflowExecutionFailedCause = "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	ContinueAsNewWorkflowExecutionFailedCauseDefaultTaskListUndefined                     ContinueAsNewWorkflowExecutionFailedCause = "DEFAULT_TASK_LIST_UNDEFINED"
	ContinueAsNewWorkflowExecutionFailedCauseDefaultChildPolicyUndefined                  ContinueAsNewWorkflowExecutionFailedCause = "DEFAULT_CHILD_POLICY_UNDEFINED"
	ContinueAsNewWorkflowExecutionFailedCauseContinueAsNewWorkflowExecutionRateExceeded   ContinueAsNewWorkflowExecutionFailedCause = "CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED"
	ContinueAsNewWorkflowExecutionFailedCauseOperationNotPermitted                        ContinueAsNewWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for ContinueAsNewWorkflowExecutionFailedCause.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContinueAsNewWorkflowExecutionFailedCause) Values() []ContinueAsNewWorkflowExecutionFailedCause {
	return []ContinueAsNewWorkflowExecutionFailedCause{
		"UNHANDLED_DECISION",
		"WORKFLOW_TYPE_DEPRECATED",
		"WORKFLOW_TYPE_DOES_NOT_EXIST",
		"DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_TASK_LIST_UNDEFINED",
		"DEFAULT_CHILD_POLICY_UNDEFINED",
		"CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED",
		"OPERATION_NOT_PERMITTED",
	}
}

type DecisionTaskTimeoutType string

// Enum values for DecisionTaskTimeoutType
const (
	DecisionTaskTimeoutTypeStartToClose    DecisionTaskTimeoutType = "START_TO_CLOSE"
	DecisionTaskTimeoutTypeScheduleToStart DecisionTaskTimeoutType = "SCHEDULE_TO_START"
)

// Values returns all known values for DecisionTaskTimeoutType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DecisionTaskTimeoutType) Values() []DecisionTaskTimeoutType {
	return []DecisionTaskTimeoutType{
		"START_TO_CLOSE",
		"SCHEDULE_TO_START",
	}
}

type DecisionType string

// Enum values for DecisionType
const (
	DecisionTypeScheduleActivityTask                   DecisionType = "ScheduleActivityTask"
	DecisionTypeRequestCancelActivityTask              DecisionType = "RequestCancelActivityTask"
	DecisionTypeCompleteWorkflowExecution              DecisionType = "CompleteWorkflowExecution"
	DecisionTypeFailWorkflowExecution                  DecisionType = "FailWorkflowExecution"
	DecisionTypeCancelWorkflowExecution                DecisionType = "CancelWorkflowExecution"
	DecisionTypeContinueAsNewWorkflowExecution         DecisionType = "ContinueAsNewWorkflowExecution"
	DecisionTypeRecordMarker                           DecisionType = "RecordMarker"
	DecisionTypeStartTimer                             DecisionType = "StartTimer"
	DecisionTypeCancelTimer                            DecisionType = "CancelTimer"
	DecisionTypeSignalExternalWorkflowExecution        DecisionType = "SignalExternalWorkflowExecution"
	DecisionTypeRequestCancelExternalWorkflowExecution DecisionType = "RequestCancelExternalWorkflowExecution"
	DecisionTypeStartChildWorkflowExecution            DecisionType = "StartChildWorkflowExecution"
	DecisionTypeScheduleLambdaFunction                 DecisionType = "ScheduleLambdaFunction"
)

// Values returns all known values for DecisionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DecisionType) Values() []DecisionType {
	return []DecisionType{
		"ScheduleActivityTask",
		"RequestCancelActivityTask",
		"CompleteWorkflowExecution",
		"FailWorkflowExecution",
		"CancelWorkflowExecution",
		"ContinueAsNewWorkflowExecution",
		"RecordMarker",
		"StartTimer",
		"CancelTimer",
		"SignalExternalWorkflowExecution",
		"RequestCancelExternalWorkflowExecution",
		"StartChildWorkflowExecution",
		"ScheduleLambdaFunction",
	}
}

type EventType string

// Enum values for EventType
const (
	EventTypeWorkflowExecutionStarted                        EventType = "WorkflowExecutionStarted"
	EventTypeWorkflowExecutionCancelRequested                EventType = "WorkflowExecutionCancelRequested"
	EventTypeWorkflowExecutionCompleted                      EventType = "WorkflowExecutionCompleted"
	EventTypeCompleteWorkflowExecutionFailed                 EventType = "CompleteWorkflowExecutionFailed"
	EventTypeWorkflowExecutionFailed                         EventType = "WorkflowExecutionFailed"
	EventTypeFailWorkflowExecutionFailed                     EventType = "FailWorkflowExecutionFailed"
	EventTypeWorkflowExecutionTimedOut                       EventType = "WorkflowExecutionTimedOut"
	EventTypeWorkflowExecutionCanceled                       EventType = "WorkflowExecutionCanceled"
	EventTypeCancelWorkflowExecutionFailed                   EventType = "CancelWorkflowExecutionFailed"
	EventTypeWorkflowExecutionContinuedAsNew                 EventType = "WorkflowExecutionContinuedAsNew"
	EventTypeContinueAsNewWorkflowExecutionFailed            EventType = "ContinueAsNewWorkflowExecutionFailed"
	EventTypeWorkflowExecutionTerminated                     EventType = "WorkflowExecutionTerminated"
	EventTypeDecisionTaskScheduled                           EventType = "DecisionTaskScheduled"
	EventTypeDecisionTaskStarted                             EventType = "DecisionTaskStarted"
	EventTypeDecisionTaskCompleted                           EventType = "DecisionTaskCompleted"
	EventTypeDecisionTaskTimedOut                            EventType = "DecisionTaskTimedOut"
	EventTypeActivityTaskScheduled                           EventType = "ActivityTaskScheduled"
	EventTypeScheduleActivityTaskFailed                      EventType = "ScheduleActivityTaskFailed"
	EventTypeActivityTaskStarted                             EventType = "ActivityTaskStarted"
	EventTypeActivityTaskCompleted                           EventType = "ActivityTaskCompleted"
	EventTypeActivityTaskFailed                              EventType = "ActivityTaskFailed"
	EventTypeActivityTaskTimedOut                            EventType = "ActivityTaskTimedOut"
	EventTypeActivityTaskCanceled                            EventType = "ActivityTaskCanceled"
	EventTypeActivityTaskCancelRequested                     EventType = "ActivityTaskCancelRequested"
	EventTypeRequestCancelActivityTaskFailed                 EventType = "RequestCancelActivityTaskFailed"
	EventTypeWorkflowExecutionSignaled                       EventType = "WorkflowExecutionSignaled"
	EventTypeMarkerRecorded                                  EventType = "MarkerRecorded"
	EventTypeRecordMarkerFailed                              EventType = "RecordMarkerFailed"
	EventTypeTimerStarted                                    EventType = "TimerStarted"
	EventTypeStartTimerFailed                                EventType = "StartTimerFailed"
	EventTypeTimerFired                                      EventType = "TimerFired"
	EventTypeTimerCanceled                                   EventType = "TimerCanceled"
	EventTypeCancelTimerFailed                               EventType = "CancelTimerFailed"
	EventTypeStartChildWorkflowExecutionInitiated            EventType = "StartChildWorkflowExecutionInitiated"
	EventTypeStartChildWorkflowExecutionFailed               EventType = "StartChildWorkflowExecutionFailed"
	EventTypeChildWorkflowExecutionStarted                   EventType = "ChildWorkflowExecutionStarted"
	EventTypeChildWorkflowExecutionCompleted                 EventType = "ChildWorkflowExecutionCompleted"
	EventTypeChildWorkflowExecutionFailed                    EventType = "ChildWorkflowExecutionFailed"
	EventTypeChildWorkflowExecutionTimedOut                  EventType = "ChildWorkflowExecutionTimedOut"
	EventTypeChildWorkflowExecutionCanceled                  EventType = "ChildWorkflowExecutionCanceled"
	EventTypeChildWorkflowExecutionTerminated                EventType = "ChildWorkflowExecutionTerminated"
	EventTypeSignalExternalWorkflowExecutionInitiated        EventType = "SignalExternalWorkflowExecutionInitiated"
	EventTypeSignalExternalWorkflowExecutionFailed           EventType = "SignalExternalWorkflowExecutionFailed"
	EventTypeExternalWorkflowExecutionSignaled               EventType = "ExternalWorkflowExecutionSignaled"
	EventTypeRequestCancelExternalWorkflowExecutionInitiated EventType = "RequestCancelExternalWorkflowExecutionInitiated"
	EventTypeRequestCancelExternalWorkflowExecutionFailed    EventType = "RequestCancelExternalWorkflowExecutionFailed"
	EventTypeExternalWorkflowExecutionCancelRequested        EventType = "ExternalWorkflowExecutionCancelRequested"
	EventTypeLambdaFunctionScheduled                         EventType = "LambdaFunctionScheduled"
	EventTypeLambdaFunctionStarted                           EventType = "LambdaFunctionStarted"
	EventTypeLambdaFunctionCompleted                         EventType = "LambdaFunctionCompleted"
	EventTypeLambdaFunctionFailed                            EventType = "LambdaFunctionFailed"
	EventTypeLambdaFunctionTimedOut                          EventType = "LambdaFunctionTimedOut"
	EventTypeScheduleLambdaFunctionFailed                    EventType = "ScheduleLambdaFunctionFailed"
	EventTypeStartLambdaFunctionFailed                       EventType = "StartLambdaFunctionFailed"
)

// Values returns all known values for EventType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventType) Values() []EventType {
	return []EventType{
		"WorkflowExecutionStarted",
		"WorkflowExecutionCancelRequested",
		"WorkflowExecutionCompleted",
		"CompleteWorkflowExecutionFailed",
		"WorkflowExecutionFailed",
		"FailWorkflowExecutionFailed",
		"WorkflowExecutionTimedOut",
		"WorkflowExecutionCanceled",
		"CancelWorkflowExecutionFailed",
		"WorkflowExecutionContinuedAsNew",
		"ContinueAsNewWorkflowExecutionFailed",
		"WorkflowExecutionTerminated",
		"DecisionTaskScheduled",
		"DecisionTaskStarted",
		"DecisionTaskCompleted",
		"DecisionTaskTimedOut",
		"ActivityTaskScheduled",
		"ScheduleActivityTaskFailed",
		"ActivityTaskStarted",
		"ActivityTaskCompleted",
		"ActivityTaskFailed",
		"ActivityTaskTimedOut",
		"ActivityTaskCanceled",
		"ActivityTaskCancelRequested",
		"RequestCancelActivityTaskFailed",
		"WorkflowExecutionSignaled",
		"MarkerRecorded",
		"RecordMarkerFailed",
		"TimerStarted",
		"StartTimerFailed",
		"TimerFired",
		"TimerCanceled",
		"CancelTimerFailed",
		"StartChildWorkflowExecutionInitiated",
		"StartChildWorkflowExecutionFailed",
		"ChildWorkflowExecutionStarted",
		"ChildWorkflowExecutionCompleted",
		"ChildWorkflowExecutionFailed",
		"ChildWorkflowExecutionTimedOut",
		"ChildWorkflowExecutionCanceled",
		"ChildWorkflowExecutionTerminated",
		"SignalExternalWorkflowExecutionInitiated",
		"SignalExternalWorkflowExecutionFailed",
		"ExternalWorkflowExecutionSignaled",
		"RequestCancelExternalWorkflowExecutionInitiated",
		"RequestCancelExternalWorkflowExecutionFailed",
		"ExternalWorkflowExecutionCancelRequested",
		"LambdaFunctionScheduled",
		"LambdaFunctionStarted",
		"LambdaFunctionCompleted",
		"LambdaFunctionFailed",
		"LambdaFunctionTimedOut",
		"ScheduleLambdaFunctionFailed",
		"StartLambdaFunctionFailed",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusOpen   ExecutionStatus = "OPEN"
	ExecutionStatusClosed ExecutionStatus = "CLOSED"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"OPEN",
		"CLOSED",
	}
}

type FailWorkflowExecutionFailedCause string

// Enum values for FailWorkflowExecutionFailedCause
const (
	FailWorkflowExecutionFailedCauseUnhandledDecision     FailWorkflowExecutionFailedCause = "UNHANDLED_DECISION"
	FailWorkflowExecutionFailedCauseOperationNotPermitted FailWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for FailWorkflowExecutionFailedCause. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FailWorkflowExecutionFailedCause) Values() []FailWorkflowExecutionFailedCause {
	return []FailWorkflowExecutionFailedCause{
		"UNHANDLED_DECISION",
		"OPERATION_NOT_PERMITTED",
	}
}

type LambdaFunctionTimeoutType string

// Enum values for LambdaFunctionTimeoutType
const (
	LambdaFunctionTimeoutTypeStartToClose LambdaFunctionTimeoutType = "START_TO_CLOSE"
)

// Values returns all known values for LambdaFunctionTimeoutType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LambdaFunctionTimeoutType) Values() []LambdaFunctionTimeoutType {
	return []LambdaFunctionTimeoutType{
		"START_TO_CLOSE",
	}
}

type RecordMarkerFailedCause string

// Enum values for RecordMarkerFailedCause
const (
	RecordMarkerFailedCauseOperationNotPermitted RecordMarkerFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for RecordMarkerFailedCause. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecordMarkerFailedCause) Values() []RecordMarkerFailedCause {
	return []RecordMarkerFailedCause{
		"OPERATION_NOT_PERMITTED",
	}
}

type RegistrationStatus string

// Enum values for RegistrationStatus
const (
	RegistrationStatusRegistered RegistrationStatus = "REGISTERED"
	RegistrationStatusDeprecated RegistrationStatus = "DEPRECATED"
)

// Values returns all known values for RegistrationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RegistrationStatus) Values() []RegistrationStatus {
	return []RegistrationStatus{
		"REGISTERED",
		"DEPRECATED",
	}
}

type RequestCancelActivityTaskFailedCause string

// Enum values for RequestCancelActivityTaskFailedCause
const (
	RequestCancelActivityTaskFailedCauseActivityIdUnknown     RequestCancelActivityTaskFailedCause = "ACTIVITY_ID_UNKNOWN"
	RequestCancelActivityTaskFailedCauseOperationNotPermitted RequestCancelActivityTaskFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for RequestCancelActivityTaskFailedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RequestCancelActivityTaskFailedCause) Values() []RequestCancelActivityTaskFailedCause {
	return []RequestCancelActivityTaskFailedCause{
		"ACTIVITY_ID_UNKNOWN",
		"OPERATION_NOT_PERMITTED",
	}
}

type RequestCancelExternalWorkflowExecutionFailedCause string

// Enum values for RequestCancelExternalWorkflowExecutionFailedCause
const (
	RequestCancelExternalWorkflowExecutionFailedCauseUnknownExternalWorkflowExecution                   RequestCancelExternalWorkflowExecutionFailedCause = "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION"
	RequestCancelExternalWorkflowExecutionFailedCauseRequestCancelExternalWorkflowExecutionRateExceeded RequestCancelExternalWorkflowExecutionFailedCause = "REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED"
	RequestCancelExternalWorkflowExecutionFailedCauseOperationNotPermitted                              RequestCancelExternalWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for
// RequestCancelExternalWorkflowExecutionFailedCause. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RequestCancelExternalWorkflowExecutionFailedCause) Values() []RequestCancelExternalWorkflowExecutionFailedCause {
	return []RequestCancelExternalWorkflowExecutionFailedCause{
		"UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION",
		"REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED",
		"OPERATION_NOT_PERMITTED",
	}
}

type ScheduleActivityTaskFailedCause string

// Enum values for ScheduleActivityTaskFailedCause
const (
	ScheduleActivityTaskFailedCauseActivityTypeDeprecated                 ScheduleActivityTaskFailedCause = "ACTIVITY_TYPE_DEPRECATED"
	ScheduleActivityTaskFailedCauseActivityTypeDoesNotExist               ScheduleActivityTaskFailedCause = "ACTIVITY_TYPE_DOES_NOT_EXIST"
	ScheduleActivityTaskFailedCauseActivityIdAlreadyInUse                 ScheduleActivityTaskFailedCause = "ACTIVITY_ID_ALREADY_IN_USE"
	ScheduleActivityTaskFailedCauseOpenActivitiesLimitExceeded            ScheduleActivityTaskFailedCause = "OPEN_ACTIVITIES_LIMIT_EXCEEDED"
	ScheduleActivityTaskFailedCauseActivityCreationRateExceeded           ScheduleActivityTaskFailedCause = "ACTIVITY_CREATION_RATE_EXCEEDED"
	ScheduleActivityTaskFailedCauseDefaultScheduleToCloseTimeoutUndefined ScheduleActivityTaskFailedCause = "DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED"
	ScheduleActivityTaskFailedCauseDefaultTaskListUndefined               ScheduleActivityTaskFailedCause = "DEFAULT_TASK_LIST_UNDEFINED"
	ScheduleActivityTaskFailedCauseDefaultScheduleToStartTimeoutUndefined ScheduleActivityTaskFailedCause = "DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED"
	ScheduleActivityTaskFailedCauseDefaultStartToCloseTimeoutUndefined    ScheduleActivityTaskFailedCause = "DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	ScheduleActivityTaskFailedCauseDefaultHeartbeatTimeoutUndefined       ScheduleActivityTaskFailedCause = "DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED"
	ScheduleActivityTaskFailedCauseOperationNotPermitted                  ScheduleActivityTaskFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for ScheduleActivityTaskFailedCause. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScheduleActivityTaskFailedCause) Values() []ScheduleActivityTaskFailedCause {
	return []ScheduleActivityTaskFailedCause{
		"ACTIVITY_TYPE_DEPRECATED",
		"ACTIVITY_TYPE_DOES_NOT_EXIST",
		"ACTIVITY_ID_ALREADY_IN_USE",
		"OPEN_ACTIVITIES_LIMIT_EXCEEDED",
		"ACTIVITY_CREATION_RATE_EXCEEDED",
		"DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_TASK_LIST_UNDEFINED",
		"DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED",
		"DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED",
		"OPERATION_NOT_PERMITTED",
	}
}

type ScheduleLambdaFunctionFailedCause string

// Enum values for ScheduleLambdaFunctionFailedCause
const (
	ScheduleLambdaFunctionFailedCauseIdAlreadyInUse                     ScheduleLambdaFunctionFailedCause = "ID_ALREADY_IN_USE"
	ScheduleLambdaFunctionFailedCauseOpenLambdaFunctionsLimitExceeded   ScheduleLambdaFunctionFailedCause = "OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED"
	ScheduleLambdaFunctionFailedCauseLambdaFunctionCreationRateExceeded ScheduleLambdaFunctionFailedCause = "LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED"
	ScheduleLambdaFunctionFailedCauseLambdaServiceNotAvailableInRegion  ScheduleLambdaFunctionFailedCause = "LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION"
)

// Values returns all known values for ScheduleLambdaFunctionFailedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScheduleLambdaFunctionFailedCause) Values() []ScheduleLambdaFunctionFailedCause {
	return []ScheduleLambdaFunctionFailedCause{
		"ID_ALREADY_IN_USE",
		"OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED",
		"LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED",
		"LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION",
	}
}

type SignalExternalWorkflowExecutionFailedCause string

// Enum values for SignalExternalWorkflowExecutionFailedCause
const (
	SignalExternalWorkflowExecutionFailedCauseUnknownExternalWorkflowExecution            SignalExternalWorkflowExecutionFailedCause = "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION"
	SignalExternalWorkflowExecutionFailedCauseSignalExternalWorkflowExecutionRateExceeded SignalExternalWorkflowExecutionFailedCause = "SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED"
	SignalExternalWorkflowExecutionFailedCauseOperationNotPermitted                       SignalExternalWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for SignalExternalWorkflowExecutionFailedCause.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SignalExternalWorkflowExecutionFailedCause) Values() []SignalExternalWorkflowExecutionFailedCause {
	return []SignalExternalWorkflowExecutionFailedCause{
		"UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION",
		"SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED",
		"OPERATION_NOT_PERMITTED",
	}
}

type StartChildWorkflowExecutionFailedCause string

// Enum values for StartChildWorkflowExecutionFailedCause
const (
	StartChildWorkflowExecutionFailedCauseWorkflowTypeDoesNotExist                     StartChildWorkflowExecutionFailedCause = "WORKFLOW_TYPE_DOES_NOT_EXIST"
	StartChildWorkflowExecutionFailedCauseWorkflowTypeDeprecated                       StartChildWorkflowExecutionFailedCause = "WORKFLOW_TYPE_DEPRECATED"
	StartChildWorkflowExecutionFailedCauseOpenChildrenLimitExceeded                    StartChildWorkflowExecutionFailedCause = "OPEN_CHILDREN_LIMIT_EXCEEDED"
	StartChildWorkflowExecutionFailedCauseOpenWorkflowsLimitExceeded                   StartChildWorkflowExecutionFailedCause = "OPEN_WORKFLOWS_LIMIT_EXCEEDED"
	StartChildWorkflowExecutionFailedCauseChildCreationRateExceeded                    StartChildWorkflowExecutionFailedCause = "CHILD_CREATION_RATE_EXCEEDED"
	StartChildWorkflowExecutionFailedCauseWorkflowAlreadyRunning                       StartChildWorkflowExecutionFailedCause = "WORKFLOW_ALREADY_RUNNING"
	StartChildWorkflowExecutionFailedCauseDefaultExecutionStartToCloseTimeoutUndefined StartChildWorkflowExecutionFailedCause = "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseDefaultTaskListUndefined                     StartChildWorkflowExecutionFailedCause = "DEFAULT_TASK_LIST_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseDefaultTaskStartToCloseTimeoutUndefined      StartChildWorkflowExecutionFailedCause = "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseDefaultChildPolicyUndefined                  StartChildWorkflowExecutionFailedCause = "DEFAULT_CHILD_POLICY_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseOperationNotPermitted                        StartChildWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for StartChildWorkflowExecutionFailedCause.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StartChildWorkflowExecutionFailedCause) Values() []StartChildWorkflowExecutionFailedCause {
	return []StartChildWorkflowExecutionFailedCause{
		"WORKFLOW_TYPE_DOES_NOT_EXIST",
		"WORKFLOW_TYPE_DEPRECATED",
		"OPEN_CHILDREN_LIMIT_EXCEEDED",
		"OPEN_WORKFLOWS_LIMIT_EXCEEDED",
		"CHILD_CREATION_RATE_EXCEEDED",
		"WORKFLOW_ALREADY_RUNNING",
		"DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_TASK_LIST_UNDEFINED",
		"DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_CHILD_POLICY_UNDEFINED",
		"OPERATION_NOT_PERMITTED",
	}
}

type StartLambdaFunctionFailedCause string

// Enum values for StartLambdaFunctionFailedCause
const (
	StartLambdaFunctionFailedCauseAssumeRoleFailed StartLambdaFunctionFailedCause = "ASSUME_ROLE_FAILED"
)

// Values returns all known values for StartLambdaFunctionFailedCause. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StartLambdaFunctionFailedCause) Values() []StartLambdaFunctionFailedCause {
	return []StartLambdaFunctionFailedCause{
		"ASSUME_ROLE_FAILED",
	}
}

type StartTimerFailedCause string

// Enum values for StartTimerFailedCause
const (
	StartTimerFailedCauseTimerIdAlreadyInUse       StartTimerFailedCause = "TIMER_ID_ALREADY_IN_USE"
	StartTimerFailedCauseOpenTimersLimitExceeded   StartTimerFailedCause = "OPEN_TIMERS_LIMIT_EXCEEDED"
	StartTimerFailedCauseTimerCreationRateExceeded StartTimerFailedCause = "TIMER_CREATION_RATE_EXCEEDED"
	StartTimerFailedCauseOperationNotPermitted     StartTimerFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for StartTimerFailedCause. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StartTimerFailedCause) Values() []StartTimerFailedCause {
	return []StartTimerFailedCause{
		"TIMER_ID_ALREADY_IN_USE",
		"OPEN_TIMERS_LIMIT_EXCEEDED",
		"TIMER_CREATION_RATE_EXCEEDED",
		"OPERATION_NOT_PERMITTED",
	}
}

type WorkflowExecutionCancelRequestedCause string

// Enum values for WorkflowExecutionCancelRequestedCause
const (
	WorkflowExecutionCancelRequestedCauseChildPolicyApplied WorkflowExecutionCancelRequestedCause = "CHILD_POLICY_APPLIED"
)

// Values returns all known values for WorkflowExecutionCancelRequestedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowExecutionCancelRequestedCause) Values() []WorkflowExecutionCancelRequestedCause {
	return []WorkflowExecutionCancelRequestedCause{
		"CHILD_POLICY_APPLIED",
	}
}

type WorkflowExecutionTerminatedCause string

// Enum values for WorkflowExecutionTerminatedCause
const (
	WorkflowExecutionTerminatedCauseChildPolicyApplied WorkflowExecutionTerminatedCause = "CHILD_POLICY_APPLIED"
	WorkflowExecutionTerminatedCauseEventLimitExceeded WorkflowExecutionTerminatedCause = "EVENT_LIMIT_EXCEEDED"
	WorkflowExecutionTerminatedCauseOperatorInitiated  WorkflowExecutionTerminatedCause = "OPERATOR_INITIATED"
)

// Values returns all known values for WorkflowExecutionTerminatedCause. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowExecutionTerminatedCause) Values() []WorkflowExecutionTerminatedCause {
	return []WorkflowExecutionTerminatedCause{
		"CHILD_POLICY_APPLIED",
		"EVENT_LIMIT_EXCEEDED",
		"OPERATOR_INITIATED",
	}
}

type WorkflowExecutionTimeoutType string

// Enum values for WorkflowExecutionTimeoutType
const (
	WorkflowExecutionTimeoutTypeStartToClose WorkflowExecutionTimeoutType = "START_TO_CLOSE"
)

// Values returns all known values for WorkflowExecutionTimeoutType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowExecutionTimeoutType) Values() []WorkflowExecutionTimeoutType {
	return []WorkflowExecutionTimeoutType{
		"START_TO_CLOSE",
	}
}
