// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AIAgentAssociationConfigurationType string

// Enum values for AIAgentAssociationConfigurationType
const (
	AIAgentAssociationConfigurationTypeKnowledgeBase AIAgentAssociationConfigurationType = "KNOWLEDGE_BASE"
)

// Values returns all known values for AIAgentAssociationConfigurationType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AIAgentAssociationConfigurationType) Values() []AIAgentAssociationConfigurationType {
	return []AIAgentAssociationConfigurationType{
		"KNOWLEDGE_BASE",
	}
}

type AIAgentType string

// Enum values for AIAgentType
const (
	AIAgentTypeManualSearch         AIAgentType = "MANUAL_SEARCH"
	AIAgentTypeAnswerRecommendation AIAgentType = "ANSWER_RECOMMENDATION"
	AIAgentTypeSelfService          AIAgentType = "SELF_SERVICE"
)

// Values returns all known values for AIAgentType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AIAgentType) Values() []AIAgentType {
	return []AIAgentType{
		"MANUAL_SEARCH",
		"ANSWER_RECOMMENDATION",
		"SELF_SERVICE",
	}
}

type AIPromptAPIFormat string

// Enum values for AIPromptAPIFormat
const (
	AIPromptAPIFormatAnthropicClaudeMessages        AIPromptAPIFormat = "ANTHROPIC_CLAUDE_MESSAGES"
	AIPromptAPIFormatAnthropicClaudeTextCompletions AIPromptAPIFormat = "ANTHROPIC_CLAUDE_TEXT_COMPLETIONS"
	AIPromptAPIFormatMessages                       AIPromptAPIFormat = "MESSAGES"
	AIPromptAPIFormatTextCompletions                AIPromptAPIFormat = "TEXT_COMPLETIONS"
)

// Values returns all known values for AIPromptAPIFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AIPromptAPIFormat) Values() []AIPromptAPIFormat {
	return []AIPromptAPIFormat{
		"ANTHROPIC_CLAUDE_MESSAGES",
		"ANTHROPIC_CLAUDE_TEXT_COMPLETIONS",
		"MESSAGES",
		"TEXT_COMPLETIONS",
	}
}

type AIPromptTemplateType string

// Enum values for AIPromptTemplateType
const (
	AIPromptTemplateTypeText AIPromptTemplateType = "TEXT"
)

// Values returns all known values for AIPromptTemplateType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AIPromptTemplateType) Values() []AIPromptTemplateType {
	return []AIPromptTemplateType{
		"TEXT",
	}
}

type AIPromptType string

// Enum values for AIPromptType
const (
	AIPromptTypeAnswerGeneration            AIPromptType = "ANSWER_GENERATION"
	AIPromptTypeIntentLabelingGeneration    AIPromptType = "INTENT_LABELING_GENERATION"
	AIPromptTypeQueryReformulation          AIPromptType = "QUERY_REFORMULATION"
	AIPromptTypeSelfServicePreProcessing    AIPromptType = "SELF_SERVICE_PRE_PROCESSING"
	AIPromptTypeSelfServiceAnswerGeneration AIPromptType = "SELF_SERVICE_ANSWER_GENERATION"
)

// Values returns all known values for AIPromptType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AIPromptType) Values() []AIPromptType {
	return []AIPromptType{
		"ANSWER_GENERATION",
		"INTENT_LABELING_GENERATION",
		"QUERY_REFORMULATION",
		"SELF_SERVICE_PRE_PROCESSING",
		"SELF_SERVICE_ANSWER_GENERATION",
	}
}

type AssistantCapabilityType string

// Enum values for AssistantCapabilityType
const (
	AssistantCapabilityTypeV1 AssistantCapabilityType = "V1"
	AssistantCapabilityTypeV2 AssistantCapabilityType = "V2"
)

// Values returns all known values for AssistantCapabilityType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssistantCapabilityType) Values() []AssistantCapabilityType {
	return []AssistantCapabilityType{
		"V1",
		"V2",
	}
}

type AssistantStatus string

// Enum values for AssistantStatus
const (
	AssistantStatusCreateInProgress AssistantStatus = "CREATE_IN_PROGRESS"
	AssistantStatusCreateFailed     AssistantStatus = "CREATE_FAILED"
	AssistantStatusActive           AssistantStatus = "ACTIVE"
	AssistantStatusDeleteInProgress AssistantStatus = "DELETE_IN_PROGRESS"
	AssistantStatusDeleteFailed     AssistantStatus = "DELETE_FAILED"
	AssistantStatusDeleted          AssistantStatus = "DELETED"
)

// Values returns all known values for AssistantStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssistantStatus) Values() []AssistantStatus {
	return []AssistantStatus{
		"CREATE_IN_PROGRESS",
		"CREATE_FAILED",
		"ACTIVE",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
		"DELETED",
	}
}

type AssistantType string

// Enum values for AssistantType
const (
	AssistantTypeAgent AssistantType = "AGENT"
)

// Values returns all known values for AssistantType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssistantType) Values() []AssistantType {
	return []AssistantType{
		"AGENT",
	}
}

type AssociationType string

// Enum values for AssociationType
const (
	AssociationTypeKnowledgeBase AssociationType = "KNOWLEDGE_BASE"
)

// Values returns all known values for AssociationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssociationType) Values() []AssociationType {
	return []AssociationType{
		"KNOWLEDGE_BASE",
	}
}

type ChannelSubtype string

// Enum values for ChannelSubtype
const (
	ChannelSubtypeEmail ChannelSubtype = "EMAIL"
	ChannelSubtypeSms   ChannelSubtype = "SMS"
)

// Values returns all known values for ChannelSubtype. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChannelSubtype) Values() []ChannelSubtype {
	return []ChannelSubtype{
		"EMAIL",
		"SMS",
	}
}

type ChunkingStrategy string

// Enum values for ChunkingStrategy
const (
	ChunkingStrategyFixedSize    ChunkingStrategy = "FIXED_SIZE"
	ChunkingStrategyNone         ChunkingStrategy = "NONE"
	ChunkingStrategyHierarchical ChunkingStrategy = "HIERARCHICAL"
	ChunkingStrategySemantic     ChunkingStrategy = "SEMANTIC"
)

// Values returns all known values for ChunkingStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChunkingStrategy) Values() []ChunkingStrategy {
	return []ChunkingStrategy{
		"FIXED_SIZE",
		"NONE",
		"HIERARCHICAL",
		"SEMANTIC",
	}
}

type ContentAssociationType string

// Enum values for ContentAssociationType
const (
	ContentAssociationTypeAmazonConnectGuide ContentAssociationType = "AMAZON_CONNECT_GUIDE"
)

// Values returns all known values for ContentAssociationType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentAssociationType) Values() []ContentAssociationType {
	return []ContentAssociationType{
		"AMAZON_CONNECT_GUIDE",
	}
}

type ContentDisposition string

// Enum values for ContentDisposition
const (
	ContentDispositionAttachment ContentDisposition = "ATTACHMENT"
)

// Values returns all known values for ContentDisposition. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentDisposition) Values() []ContentDisposition {
	return []ContentDisposition{
		"ATTACHMENT",
	}
}

type ContentStatus string

// Enum values for ContentStatus
const (
	ContentStatusCreateInProgress ContentStatus = "CREATE_IN_PROGRESS"
	ContentStatusCreateFailed     ContentStatus = "CREATE_FAILED"
	ContentStatusActive           ContentStatus = "ACTIVE"
	ContentStatusDeleteInProgress ContentStatus = "DELETE_IN_PROGRESS"
	ContentStatusDeleteFailed     ContentStatus = "DELETE_FAILED"
	ContentStatusDeleted          ContentStatus = "DELETED"
	ContentStatusUpdateFailed     ContentStatus = "UPDATE_FAILED"
)

// Values returns all known values for ContentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentStatus) Values() []ContentStatus {
	return []ContentStatus{
		"CREATE_IN_PROGRESS",
		"CREATE_FAILED",
		"ACTIVE",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
		"DELETED",
		"UPDATE_FAILED",
	}
}

type ConversationStatus string

// Enum values for ConversationStatus
const (
	ConversationStatusClosed     ConversationStatus = "CLOSED"
	ConversationStatusReady      ConversationStatus = "READY"
	ConversationStatusProcessing ConversationStatus = "PROCESSING"
)

// Values returns all known values for ConversationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConversationStatus) Values() []ConversationStatus {
	return []ConversationStatus{
		"CLOSED",
		"READY",
		"PROCESSING",
	}
}

type ConversationStatusReason string

// Enum values for ConversationStatusReason
const (
	ConversationStatusReasonSuccess  ConversationStatusReason = "SUCCESS"
	ConversationStatusReasonFailed   ConversationStatusReason = "FAILED"
	ConversationStatusReasonRejected ConversationStatusReason = "REJECTED"
)

// Values returns all known values for ConversationStatusReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConversationStatusReason) Values() []ConversationStatusReason {
	return []ConversationStatusReason{
		"SUCCESS",
		"FAILED",
		"REJECTED",
	}
}

type ExternalSource string

// Enum values for ExternalSource
const (
	ExternalSourceAmazonConnect ExternalSource = "AMAZON_CONNECT"
)

// Values returns all known values for ExternalSource. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExternalSource) Values() []ExternalSource {
	return []ExternalSource{
		"AMAZON_CONNECT",
	}
}

type FilterField string

// Enum values for FilterField
const (
	FilterFieldName FilterField = "NAME"
)

// Values returns all known values for FilterField. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FilterField) Values() []FilterField {
	return []FilterField{
		"NAME",
	}
}

type FilterOperator string

// Enum values for FilterOperator
const (
	FilterOperatorEquals FilterOperator = "EQUALS"
)

// Values returns all known values for FilterOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FilterOperator) Values() []FilterOperator {
	return []FilterOperator{
		"EQUALS",
	}
}

type GuardrailContentFilterType string

// Enum values for GuardrailContentFilterType
const (
	GuardrailContentFilterTypeSexual       GuardrailContentFilterType = "SEXUAL"
	GuardrailContentFilterTypeViolence     GuardrailContentFilterType = "VIOLENCE"
	GuardrailContentFilterTypeHate         GuardrailContentFilterType = "HATE"
	GuardrailContentFilterTypeInsults      GuardrailContentFilterType = "INSULTS"
	GuardrailContentFilterTypeMisconduct   GuardrailContentFilterType = "MISCONDUCT"
	GuardrailContentFilterTypePromptAttack GuardrailContentFilterType = "PROMPT_ATTACK"
)

// Values returns all known values for GuardrailContentFilterType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailContentFilterType) Values() []GuardrailContentFilterType {
	return []GuardrailContentFilterType{
		"SEXUAL",
		"VIOLENCE",
		"HATE",
		"INSULTS",
		"MISCONDUCT",
		"PROMPT_ATTACK",
	}
}

type GuardrailContextualGroundingFilterType string

// Enum values for GuardrailContextualGroundingFilterType
const (
	GuardrailContextualGroundingFilterTypeGrounding GuardrailContextualGroundingFilterType = "GROUNDING"
	GuardrailContextualGroundingFilterTypeRelevance GuardrailContextualGroundingFilterType = "RELEVANCE"
)

// Values returns all known values for GuardrailContextualGroundingFilterType.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailContextualGroundingFilterType) Values() []GuardrailContextualGroundingFilterType {
	return []GuardrailContextualGroundingFilterType{
		"GROUNDING",
		"RELEVANCE",
	}
}

type GuardrailFilterStrength string

// Enum values for GuardrailFilterStrength
const (
	GuardrailFilterStrengthNone   GuardrailFilterStrength = "NONE"
	GuardrailFilterStrengthLow    GuardrailFilterStrength = "LOW"
	GuardrailFilterStrengthMedium GuardrailFilterStrength = "MEDIUM"
	GuardrailFilterStrengthHigh   GuardrailFilterStrength = "HIGH"
)

// Values returns all known values for GuardrailFilterStrength. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailFilterStrength) Values() []GuardrailFilterStrength {
	return []GuardrailFilterStrength{
		"NONE",
		"LOW",
		"MEDIUM",
		"HIGH",
	}
}

type GuardrailManagedWordsType string

// Enum values for GuardrailManagedWordsType
const (
	GuardrailManagedWordsTypeProfanity GuardrailManagedWordsType = "PROFANITY"
)

// Values returns all known values for GuardrailManagedWordsType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailManagedWordsType) Values() []GuardrailManagedWordsType {
	return []GuardrailManagedWordsType{
		"PROFANITY",
	}
}

type GuardrailPiiEntityType string

// Enum values for GuardrailPiiEntityType
const (
	GuardrailPiiEntityTypeAddress                             GuardrailPiiEntityType = "ADDRESS"
	GuardrailPiiEntityTypeAge                                 GuardrailPiiEntityType = "AGE"
	GuardrailPiiEntityTypeAwsAccessKey                        GuardrailPiiEntityType = "AWS_ACCESS_KEY"
	GuardrailPiiEntityTypeAwsSecretKey                        GuardrailPiiEntityType = "AWS_SECRET_KEY"
	GuardrailPiiEntityTypeCaHealthNumber                      GuardrailPiiEntityType = "CA_HEALTH_NUMBER"
	GuardrailPiiEntityTypeCaSocialInsuranceNumber             GuardrailPiiEntityType = "CA_SOCIAL_INSURANCE_NUMBER"
	GuardrailPiiEntityTypeCreditDebitCardCvv                  GuardrailPiiEntityType = "CREDIT_DEBIT_CARD_CVV"
	GuardrailPiiEntityTypeCreditDebitCardExpiry               GuardrailPiiEntityType = "CREDIT_DEBIT_CARD_EXPIRY"
	GuardrailPiiEntityTypeCreditDebitCardNumber               GuardrailPiiEntityType = "CREDIT_DEBIT_CARD_NUMBER"
	GuardrailPiiEntityTypeDriverId                            GuardrailPiiEntityType = "DRIVER_ID"
	GuardrailPiiEntityTypeEmail                               GuardrailPiiEntityType = "EMAIL"
	GuardrailPiiEntityTypeInternationalBankAccountNumber      GuardrailPiiEntityType = "INTERNATIONAL_BANK_ACCOUNT_NUMBER"
	GuardrailPiiEntityTypeIpAddress                           GuardrailPiiEntityType = "IP_ADDRESS"
	GuardrailPiiEntityTypeLicensePlate                        GuardrailPiiEntityType = "LICENSE_PLATE"
	GuardrailPiiEntityTypeMacAddress                          GuardrailPiiEntityType = "MAC_ADDRESS"
	GuardrailPiiEntityTypeName                                GuardrailPiiEntityType = "NAME"
	GuardrailPiiEntityTypePassword                            GuardrailPiiEntityType = "PASSWORD"
	GuardrailPiiEntityTypePhone                               GuardrailPiiEntityType = "PHONE"
	GuardrailPiiEntityTypePin                                 GuardrailPiiEntityType = "PIN"
	GuardrailPiiEntityTypeSwiftCode                           GuardrailPiiEntityType = "SWIFT_CODE"
	GuardrailPiiEntityTypeUkNationalHealthServiceNumber       GuardrailPiiEntityType = "UK_NATIONAL_HEALTH_SERVICE_NUMBER"
	GuardrailPiiEntityTypeUkNationalInsuranceNumber           GuardrailPiiEntityType = "UK_NATIONAL_INSURANCE_NUMBER"
	GuardrailPiiEntityTypeUkUniqueTaxpayerReferenceNumber     GuardrailPiiEntityType = "UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER"
	GuardrailPiiEntityTypeUrl                                 GuardrailPiiEntityType = "URL"
	GuardrailPiiEntityTypeUsername                            GuardrailPiiEntityType = "USERNAME"
	GuardrailPiiEntityTypeUsBankAccountNumber                 GuardrailPiiEntityType = "US_BANK_ACCOUNT_NUMBER"
	GuardrailPiiEntityTypeUsBankRoutingNumber                 GuardrailPiiEntityType = "US_BANK_ROUTING_NUMBER"
	GuardrailPiiEntityTypeUsIndividualTaxIdentificationNumber GuardrailPiiEntityType = "US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER"
	GuardrailPiiEntityTypeUsPassportNumber                    GuardrailPiiEntityType = "US_PASSPORT_NUMBER"
	GuardrailPiiEntityTypeUsSocialSecurityNumber              GuardrailPiiEntityType = "US_SOCIAL_SECURITY_NUMBER"
	GuardrailPiiEntityTypeVehicleIdentificationNumber         GuardrailPiiEntityType = "VEHICLE_IDENTIFICATION_NUMBER"
)

// Values returns all known values for GuardrailPiiEntityType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailPiiEntityType) Values() []GuardrailPiiEntityType {
	return []GuardrailPiiEntityType{
		"ADDRESS",
		"AGE",
		"AWS_ACCESS_KEY",
		"AWS_SECRET_KEY",
		"CA_HEALTH_NUMBER",
		"CA_SOCIAL_INSURANCE_NUMBER",
		"CREDIT_DEBIT_CARD_CVV",
		"CREDIT_DEBIT_CARD_EXPIRY",
		"CREDIT_DEBIT_CARD_NUMBER",
		"DRIVER_ID",
		"EMAIL",
		"INTERNATIONAL_BANK_ACCOUNT_NUMBER",
		"IP_ADDRESS",
		"LICENSE_PLATE",
		"MAC_ADDRESS",
		"NAME",
		"PASSWORD",
		"PHONE",
		"PIN",
		"SWIFT_CODE",
		"UK_NATIONAL_HEALTH_SERVICE_NUMBER",
		"UK_NATIONAL_INSURANCE_NUMBER",
		"UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER",
		"URL",
		"USERNAME",
		"US_BANK_ACCOUNT_NUMBER",
		"US_BANK_ROUTING_NUMBER",
		"US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER",
		"US_PASSPORT_NUMBER",
		"US_SOCIAL_SECURITY_NUMBER",
		"VEHICLE_IDENTIFICATION_NUMBER",
	}
}

type GuardrailSensitiveInformationAction string

// Enum values for GuardrailSensitiveInformationAction
const (
	GuardrailSensitiveInformationActionBlock     GuardrailSensitiveInformationAction = "BLOCK"
	GuardrailSensitiveInformationActionAnonymize GuardrailSensitiveInformationAction = "ANONYMIZE"
)

// Values returns all known values for GuardrailSensitiveInformationAction. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailSensitiveInformationAction) Values() []GuardrailSensitiveInformationAction {
	return []GuardrailSensitiveInformationAction{
		"BLOCK",
		"ANONYMIZE",
	}
}

type GuardrailTopicType string

// Enum values for GuardrailTopicType
const (
	GuardrailTopicTypeDeny GuardrailTopicType = "DENY"
)

// Values returns all known values for GuardrailTopicType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailTopicType) Values() []GuardrailTopicType {
	return []GuardrailTopicType{
		"DENY",
	}
}

type ImportJobStatus string

// Enum values for ImportJobStatus
const (
	ImportJobStatusStartInProgress  ImportJobStatus = "START_IN_PROGRESS"
	ImportJobStatusFailed           ImportJobStatus = "FAILED"
	ImportJobStatusComplete         ImportJobStatus = "COMPLETE"
	ImportJobStatusDeleteInProgress ImportJobStatus = "DELETE_IN_PROGRESS"
	ImportJobStatusDeleteFailed     ImportJobStatus = "DELETE_FAILED"
	ImportJobStatusDeleted          ImportJobStatus = "DELETED"
)

// Values returns all known values for ImportJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportJobStatus) Values() []ImportJobStatus {
	return []ImportJobStatus{
		"START_IN_PROGRESS",
		"FAILED",
		"COMPLETE",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
		"DELETED",
	}
}

type ImportJobType string

// Enum values for ImportJobType
const (
	ImportJobTypeQuickResponses ImportJobType = "QUICK_RESPONSES"
)

// Values returns all known values for ImportJobType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportJobType) Values() []ImportJobType {
	return []ImportJobType{
		"QUICK_RESPONSES",
	}
}

type KnowledgeBaseSearchType string

// Enum values for KnowledgeBaseSearchType
const (
	KnowledgeBaseSearchTypeHybrid   KnowledgeBaseSearchType = "HYBRID"
	KnowledgeBaseSearchTypeSemantic KnowledgeBaseSearchType = "SEMANTIC"
)

// Values returns all known values for KnowledgeBaseSearchType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KnowledgeBaseSearchType) Values() []KnowledgeBaseSearchType {
	return []KnowledgeBaseSearchType{
		"HYBRID",
		"SEMANTIC",
	}
}

type KnowledgeBaseStatus string

// Enum values for KnowledgeBaseStatus
const (
	KnowledgeBaseStatusCreateInProgress KnowledgeBaseStatus = "CREATE_IN_PROGRESS"
	KnowledgeBaseStatusCreateFailed     KnowledgeBaseStatus = "CREATE_FAILED"
	KnowledgeBaseStatusActive           KnowledgeBaseStatus = "ACTIVE"
	KnowledgeBaseStatusDeleteInProgress KnowledgeBaseStatus = "DELETE_IN_PROGRESS"
	KnowledgeBaseStatusDeleteFailed     KnowledgeBaseStatus = "DELETE_FAILED"
	KnowledgeBaseStatusDeleted          KnowledgeBaseStatus = "DELETED"
)

// Values returns all known values for KnowledgeBaseStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KnowledgeBaseStatus) Values() []KnowledgeBaseStatus {
	return []KnowledgeBaseStatus{
		"CREATE_IN_PROGRESS",
		"CREATE_FAILED",
		"ACTIVE",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
		"DELETED",
	}
}

type KnowledgeBaseType string

// Enum values for KnowledgeBaseType
const (
	KnowledgeBaseTypeExternal         KnowledgeBaseType = "EXTERNAL"
	KnowledgeBaseTypeCustom           KnowledgeBaseType = "CUSTOM"
	KnowledgeBaseTypeQuickResponses   KnowledgeBaseType = "QUICK_RESPONSES"
	KnowledgeBaseTypeMessageTemplates KnowledgeBaseType = "MESSAGE_TEMPLATES"
	KnowledgeBaseTypeManaged          KnowledgeBaseType = "MANAGED"
)

// Values returns all known values for KnowledgeBaseType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KnowledgeBaseType) Values() []KnowledgeBaseType {
	return []KnowledgeBaseType{
		"EXTERNAL",
		"CUSTOM",
		"QUICK_RESPONSES",
		"MESSAGE_TEMPLATES",
		"MANAGED",
	}
}

type MessageTemplateAttributeType string

// Enum values for MessageTemplateAttributeType
const (
	MessageTemplateAttributeTypeSystem          MessageTemplateAttributeType = "SYSTEM"
	MessageTemplateAttributeTypeAgent           MessageTemplateAttributeType = "AGENT"
	MessageTemplateAttributeTypeCustomerProfile MessageTemplateAttributeType = "CUSTOMER_PROFILE"
	MessageTemplateAttributeTypeCustom          MessageTemplateAttributeType = "CUSTOM"
)

// Values returns all known values for MessageTemplateAttributeType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageTemplateAttributeType) Values() []MessageTemplateAttributeType {
	return []MessageTemplateAttributeType{
		"SYSTEM",
		"AGENT",
		"CUSTOMER_PROFILE",
		"CUSTOM",
	}
}

type MessageTemplateFilterOperator string

// Enum values for MessageTemplateFilterOperator
const (
	MessageTemplateFilterOperatorEquals MessageTemplateFilterOperator = "EQUALS"
	MessageTemplateFilterOperatorPrefix MessageTemplateFilterOperator = "PREFIX"
)

// Values returns all known values for MessageTemplateFilterOperator. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageTemplateFilterOperator) Values() []MessageTemplateFilterOperator {
	return []MessageTemplateFilterOperator{
		"EQUALS",
		"PREFIX",
	}
}

type MessageTemplateQueryOperator string

// Enum values for MessageTemplateQueryOperator
const (
	MessageTemplateQueryOperatorContains          MessageTemplateQueryOperator = "CONTAINS"
	MessageTemplateQueryOperatorContainsAndPrefix MessageTemplateQueryOperator = "CONTAINS_AND_PREFIX"
)

// Values returns all known values for MessageTemplateQueryOperator. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageTemplateQueryOperator) Values() []MessageTemplateQueryOperator {
	return []MessageTemplateQueryOperator{
		"CONTAINS",
		"CONTAINS_AND_PREFIX",
	}
}

type MessageType string

// Enum values for MessageType
const (
	MessageTypeText MessageType = "TEXT"
)

// Values returns all known values for MessageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageType) Values() []MessageType {
	return []MessageType{
		"TEXT",
	}
}

type Order string

// Enum values for Order
const (
	OrderAsc  Order = "ASC"
	OrderDesc Order = "DESC"
)

// Values returns all known values for Order. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Order) Values() []Order {
	return []Order{
		"ASC",
		"DESC",
	}
}

type Origin string

// Enum values for Origin
const (
	OriginSystem   Origin = "SYSTEM"
	OriginCustomer Origin = "CUSTOMER"
)

// Values returns all known values for Origin. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Origin) Values() []Origin {
	return []Origin{
		"SYSTEM",
		"CUSTOMER",
	}
}

type ParsingStrategy string

// Enum values for ParsingStrategy
const (
	ParsingStrategyBedrockFoundationModel ParsingStrategy = "BEDROCK_FOUNDATION_MODEL"
)

// Values returns all known values for ParsingStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParsingStrategy) Values() []ParsingStrategy {
	return []ParsingStrategy{
		"BEDROCK_FOUNDATION_MODEL",
	}
}

type Participant string

// Enum values for Participant
const (
	ParticipantCustomer Participant = "CUSTOMER"
	ParticipantAgent    Participant = "AGENT"
	ParticipantBot      Participant = "BOT"
)

// Values returns all known values for Participant. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Participant) Values() []Participant {
	return []Participant{
		"CUSTOMER",
		"AGENT",
		"BOT",
	}
}

type Priority string

// Enum values for Priority
const (
	PriorityHigh   Priority = "HIGH"
	PriorityMedium Priority = "MEDIUM"
	PriorityLow    Priority = "LOW"
)

// Values returns all known values for Priority. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Priority) Values() []Priority {
	return []Priority{
		"HIGH",
		"MEDIUM",
		"LOW",
	}
}

type QueryConditionComparisonOperator string

// Enum values for QueryConditionComparisonOperator
const (
	QueryConditionComparisonOperatorEquals QueryConditionComparisonOperator = "EQUALS"
)

// Values returns all known values for QueryConditionComparisonOperator. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueryConditionComparisonOperator) Values() []QueryConditionComparisonOperator {
	return []QueryConditionComparisonOperator{
		"EQUALS",
	}
}

type QueryConditionFieldName string

// Enum values for QueryConditionFieldName
const (
	QueryConditionFieldNameResultType QueryConditionFieldName = "RESULT_TYPE"
)

// Values returns all known values for QueryConditionFieldName. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueryConditionFieldName) Values() []QueryConditionFieldName {
	return []QueryConditionFieldName{
		"RESULT_TYPE",
	}
}

type QueryResultType string

// Enum values for QueryResultType
const (
	QueryResultTypeKnowledgeContent             QueryResultType = "KNOWLEDGE_CONTENT"
	QueryResultTypeIntentAnswer                 QueryResultType = "INTENT_ANSWER"
	QueryResultTypeGenerativeAnswer             QueryResultType = "GENERATIVE_ANSWER"
	QueryResultTypeGenerativeAnswerChunk        QueryResultType = "GENERATIVE_ANSWER_CHUNK"
	QueryResultTypeBlockedGenerativeAnswerChunk QueryResultType = "BLOCKED_GENERATIVE_ANSWER_CHUNK"
	QueryResultTypeIntentAnswerChunk            QueryResultType = "INTENT_ANSWER_CHUNK"
	QueryResultTypeBlockedIntentAnswerChunk     QueryResultType = "BLOCKED_INTENT_ANSWER_CHUNK"
)

// Values returns all known values for QueryResultType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueryResultType) Values() []QueryResultType {
	return []QueryResultType{
		"KNOWLEDGE_CONTENT",
		"INTENT_ANSWER",
		"GENERATIVE_ANSWER",
		"GENERATIVE_ANSWER_CHUNK",
		"BLOCKED_GENERATIVE_ANSWER_CHUNK",
		"INTENT_ANSWER_CHUNK",
		"BLOCKED_INTENT_ANSWER_CHUNK",
	}
}

type QuickResponseFilterOperator string

// Enum values for QuickResponseFilterOperator
const (
	QuickResponseFilterOperatorEquals QuickResponseFilterOperator = "EQUALS"
	QuickResponseFilterOperatorPrefix QuickResponseFilterOperator = "PREFIX"
)

// Values returns all known values for QuickResponseFilterOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QuickResponseFilterOperator) Values() []QuickResponseFilterOperator {
	return []QuickResponseFilterOperator{
		"EQUALS",
		"PREFIX",
	}
}

type QuickResponseQueryOperator string

// Enum values for QuickResponseQueryOperator
const (
	QuickResponseQueryOperatorContains          QuickResponseQueryOperator = "CONTAINS"
	QuickResponseQueryOperatorContainsAndPrefix QuickResponseQueryOperator = "CONTAINS_AND_PREFIX"
)

// Values returns all known values for QuickResponseQueryOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QuickResponseQueryOperator) Values() []QuickResponseQueryOperator {
	return []QuickResponseQueryOperator{
		"CONTAINS",
		"CONTAINS_AND_PREFIX",
	}
}

type QuickResponseStatus string

// Enum values for QuickResponseStatus
const (
	QuickResponseStatusCreateInProgress QuickResponseStatus = "CREATE_IN_PROGRESS"
	QuickResponseStatusCreateFailed     QuickResponseStatus = "CREATE_FAILED"
	QuickResponseStatusCreated          QuickResponseStatus = "CREATED"
	QuickResponseStatusDeleteInProgress QuickResponseStatus = "DELETE_IN_PROGRESS"
	QuickResponseStatusDeleteFailed     QuickResponseStatus = "DELETE_FAILED"
	QuickResponseStatusDeleted          QuickResponseStatus = "DELETED"
	QuickResponseStatusUpdateInProgress QuickResponseStatus = "UPDATE_IN_PROGRESS"
	QuickResponseStatusUpdateFailed     QuickResponseStatus = "UPDATE_FAILED"
)

// Values returns all known values for QuickResponseStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QuickResponseStatus) Values() []QuickResponseStatus {
	return []QuickResponseStatus{
		"CREATE_IN_PROGRESS",
		"CREATE_FAILED",
		"CREATED",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
		"DELETED",
		"UPDATE_IN_PROGRESS",
		"UPDATE_FAILED",
	}
}

type RecommendationSourceType string

// Enum values for RecommendationSourceType
const (
	RecommendationSourceTypeIssueDetection RecommendationSourceType = "ISSUE_DETECTION"
	RecommendationSourceTypeRuleEvaluation RecommendationSourceType = "RULE_EVALUATION"
	RecommendationSourceTypeOther          RecommendationSourceType = "OTHER"
)

// Values returns all known values for RecommendationSourceType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecommendationSourceType) Values() []RecommendationSourceType {
	return []RecommendationSourceType{
		"ISSUE_DETECTION",
		"RULE_EVALUATION",
		"OTHER",
	}
}

type RecommendationTriggerType string

// Enum values for RecommendationTriggerType
const (
	RecommendationTriggerTypeQuery      RecommendationTriggerType = "QUERY"
	RecommendationTriggerTypeGenerative RecommendationTriggerType = "GENERATIVE"
)

// Values returns all known values for RecommendationTriggerType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecommendationTriggerType) Values() []RecommendationTriggerType {
	return []RecommendationTriggerType{
		"QUERY",
		"GENERATIVE",
	}
}

type RecommendationType string

// Enum values for RecommendationType
const (
	RecommendationTypeKnowledgeContent             RecommendationType = "KNOWLEDGE_CONTENT"
	RecommendationTypeGenerativeResponse           RecommendationType = "GENERATIVE_RESPONSE"
	RecommendationTypeGenerativeAnswer             RecommendationType = "GENERATIVE_ANSWER"
	RecommendationTypeDetectedIntent               RecommendationType = "DETECTED_INTENT"
	RecommendationTypeGenerativeAnswerChunk        RecommendationType = "GENERATIVE_ANSWER_CHUNK"
	RecommendationTypeBlockedGenerativeAnswerChunk RecommendationType = "BLOCKED_GENERATIVE_ANSWER_CHUNK"
	RecommendationTypeIntentAnswerChunk            RecommendationType = "INTENT_ANSWER_CHUNK"
	RecommendationTypeBlockedIntentAnswerChunk     RecommendationType = "BLOCKED_INTENT_ANSWER_CHUNK"
)

// Values returns all known values for RecommendationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecommendationType) Values() []RecommendationType {
	return []RecommendationType{
		"KNOWLEDGE_CONTENT",
		"GENERATIVE_RESPONSE",
		"GENERATIVE_ANSWER",
		"DETECTED_INTENT",
		"GENERATIVE_ANSWER_CHUNK",
		"BLOCKED_GENERATIVE_ANSWER_CHUNK",
		"INTENT_ANSWER_CHUNK",
		"BLOCKED_INTENT_ANSWER_CHUNK",
	}
}

type ReferenceType string

// Enum values for ReferenceType
const (
	ReferenceTypeWebCrawler    ReferenceType = "WEB_CRAWLER"
	ReferenceTypeKnowledgeBase ReferenceType = "KNOWLEDGE_BASE"
)

// Values returns all known values for ReferenceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReferenceType) Values() []ReferenceType {
	return []ReferenceType{
		"WEB_CRAWLER",
		"KNOWLEDGE_BASE",
	}
}

type Relevance string

// Enum values for Relevance
const (
	RelevanceHelpful    Relevance = "HELPFUL"
	RelevanceNotHelpful Relevance = "NOT_HELPFUL"
)

// Values returns all known values for Relevance. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Relevance) Values() []Relevance {
	return []Relevance{
		"HELPFUL",
		"NOT_HELPFUL",
	}
}

type RelevanceLevel string

// Enum values for RelevanceLevel
const (
	RelevanceLevelHigh   RelevanceLevel = "HIGH"
	RelevanceLevelMedium RelevanceLevel = "MEDIUM"
	RelevanceLevelLow    RelevanceLevel = "LOW"
)

// Values returns all known values for RelevanceLevel. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RelevanceLevel) Values() []RelevanceLevel {
	return []RelevanceLevel{
		"HIGH",
		"MEDIUM",
		"LOW",
	}
}

type SessionDataNamespace string

// Enum values for SessionDataNamespace
const (
	SessionDataNamespaceCustom SessionDataNamespace = "Custom"
)

// Values returns all known values for SessionDataNamespace. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SessionDataNamespace) Values() []SessionDataNamespace {
	return []SessionDataNamespace{
		"Custom",
	}
}

type SourceContentType string

// Enum values for SourceContentType
const (
	SourceContentTypeKnowledgeContent SourceContentType = "KNOWLEDGE_CONTENT"
)

// Values returns all known values for SourceContentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SourceContentType) Values() []SourceContentType {
	return []SourceContentType{
		"KNOWLEDGE_CONTENT",
	}
}

type Status string

// Enum values for Status
const (
	StatusCreateInProgress Status = "CREATE_IN_PROGRESS"
	StatusCreateFailed     Status = "CREATE_FAILED"
	StatusActive           Status = "ACTIVE"
	StatusDeleteInProgress Status = "DELETE_IN_PROGRESS"
	StatusDeleteFailed     Status = "DELETE_FAILED"
	StatusDeleted          Status = "DELETED"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"CREATE_IN_PROGRESS",
		"CREATE_FAILED",
		"ACTIVE",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
		"DELETED",
	}
}

type SyncStatus string

// Enum values for SyncStatus
const (
	SyncStatusSyncFailed        SyncStatus = "SYNC_FAILED"
	SyncStatusSyncingInProgress SyncStatus = "SYNCING_IN_PROGRESS"
	SyncStatusSyncSuccess       SyncStatus = "SYNC_SUCCESS"
	SyncStatusCreateInProgress  SyncStatus = "CREATE_IN_PROGRESS"
)

// Values returns all known values for SyncStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SyncStatus) Values() []SyncStatus {
	return []SyncStatus{
		"SYNC_FAILED",
		"SYNCING_IN_PROGRESS",
		"SYNC_SUCCESS",
		"CREATE_IN_PROGRESS",
	}
}

type TargetType string

// Enum values for TargetType
const (
	TargetTypeRecommendation TargetType = "RECOMMENDATION"
	TargetTypeResult         TargetType = "RESULT"
)

// Values returns all known values for TargetType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetType) Values() []TargetType {
	return []TargetType{
		"RECOMMENDATION",
		"RESULT",
	}
}

type VisibilityStatus string

// Enum values for VisibilityStatus
const (
	VisibilityStatusSaved     VisibilityStatus = "SAVED"
	VisibilityStatusPublished VisibilityStatus = "PUBLISHED"
)

// Values returns all known values for VisibilityStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VisibilityStatus) Values() []VisibilityStatus {
	return []VisibilityStatus{
		"SAVED",
		"PUBLISHED",
	}
}

type WebScopeType string

// Enum values for WebScopeType
const (
	WebScopeTypeHostOnly   WebScopeType = "HOST_ONLY"
	WebScopeTypeSubdomains WebScopeType = "SUBDOMAINS"
)

// Values returns all known values for WebScopeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WebScopeType) Values() []WebScopeType {
	return []WebScopeType{
		"HOST_ONLY",
		"SUBDOMAINS",
	}
}
