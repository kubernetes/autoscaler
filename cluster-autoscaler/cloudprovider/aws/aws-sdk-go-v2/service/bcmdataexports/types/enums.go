// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type CompressionOption string

// Enum values for CompressionOption
const (
	CompressionOptionGzip    CompressionOption = "GZIP"
	CompressionOptionParquet CompressionOption = "PARQUET"
)

// Values returns all known values for CompressionOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CompressionOption) Values() []CompressionOption {
	return []CompressionOption{
		"GZIP",
		"PARQUET",
	}
}

type ExecutionStatusCode string

// Enum values for ExecutionStatusCode
const (
	ExecutionStatusCodeInitiationInProcess ExecutionStatusCode = "INITIATION_IN_PROCESS"
	ExecutionStatusCodeQueryQueued         ExecutionStatusCode = "QUERY_QUEUED"
	ExecutionStatusCodeQueryInProcess      ExecutionStatusCode = "QUERY_IN_PROCESS"
	ExecutionStatusCodeQueryFailure        ExecutionStatusCode = "QUERY_FAILURE"
	ExecutionStatusCodeDeliveryInProcess   ExecutionStatusCode = "DELIVERY_IN_PROCESS"
	ExecutionStatusCodeDeliverySuccess     ExecutionStatusCode = "DELIVERY_SUCCESS"
	ExecutionStatusCodeDeliveryFailure     ExecutionStatusCode = "DELIVERY_FAILURE"
)

// Values returns all known values for ExecutionStatusCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatusCode) Values() []ExecutionStatusCode {
	return []ExecutionStatusCode{
		"INITIATION_IN_PROCESS",
		"QUERY_QUEUED",
		"QUERY_IN_PROCESS",
		"QUERY_FAILURE",
		"DELIVERY_IN_PROCESS",
		"DELIVERY_SUCCESS",
		"DELIVERY_FAILURE",
	}
}

type ExecutionStatusReason string

// Enum values for ExecutionStatusReason
const (
	ExecutionStatusReasonInsufficientPermission ExecutionStatusReason = "INSUFFICIENT_PERMISSION"
	ExecutionStatusReasonBillOwnerChanged       ExecutionStatusReason = "BILL_OWNER_CHANGED"
	ExecutionStatusReasonInternalFailure        ExecutionStatusReason = "INTERNAL_FAILURE"
)

// Values returns all known values for ExecutionStatusReason. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatusReason) Values() []ExecutionStatusReason {
	return []ExecutionStatusReason{
		"INSUFFICIENT_PERMISSION",
		"BILL_OWNER_CHANGED",
		"INTERNAL_FAILURE",
	}
}

type ExportStatusCode string

// Enum values for ExportStatusCode
const (
	ExportStatusCodeHealthy   ExportStatusCode = "HEALTHY"
	ExportStatusCodeUnhealthy ExportStatusCode = "UNHEALTHY"
)

// Values returns all known values for ExportStatusCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExportStatusCode) Values() []ExportStatusCode {
	return []ExportStatusCode{
		"HEALTHY",
		"UNHEALTHY",
	}
}

type FormatOption string

// Enum values for FormatOption
const (
	FormatOptionTextOrCsv FormatOption = "TEXT_OR_CSV"
	FormatOptionParquet   FormatOption = "PARQUET"
)

// Values returns all known values for FormatOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FormatOption) Values() []FormatOption {
	return []FormatOption{
		"TEXT_OR_CSV",
		"PARQUET",
	}
}

type FrequencyOption string

// Enum values for FrequencyOption
const (
	FrequencyOptionSynchronous FrequencyOption = "SYNCHRONOUS"
)

// Values returns all known values for FrequencyOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FrequencyOption) Values() []FrequencyOption {
	return []FrequencyOption{
		"SYNCHRONOUS",
	}
}

type OverwriteOption string

// Enum values for OverwriteOption
const (
	OverwriteOptionCreateNewReport OverwriteOption = "CREATE_NEW_REPORT"
	OverwriteOptionOverwriteReport OverwriteOption = "OVERWRITE_REPORT"
)

// Values returns all known values for OverwriteOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OverwriteOption) Values() []OverwriteOption {
	return []OverwriteOption{
		"CREATE_NEW_REPORT",
		"OVERWRITE_REPORT",
	}
}

type S3OutputType string

// Enum values for S3OutputType
const (
	S3OutputTypeCustom S3OutputType = "CUSTOM"
)

// Values returns all known values for S3OutputType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (S3OutputType) Values() []S3OutputType {
	return []S3OutputType{
		"CUSTOM",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "unknownOperation"
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "cannotParse"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "fieldValidationFailed"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "other"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"unknownOperation",
		"cannotParse",
		"fieldValidationFailed",
		"other",
	}
}
