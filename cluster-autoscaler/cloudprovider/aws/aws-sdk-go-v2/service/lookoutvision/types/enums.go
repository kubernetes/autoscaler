// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type DatasetStatus string

// Enum values for DatasetStatus
const (
	DatasetStatusCreateInProgress               DatasetStatus = "CREATE_IN_PROGRESS"
	DatasetStatusCreateComplete                 DatasetStatus = "CREATE_COMPLETE"
	DatasetStatusCreateFailed                   DatasetStatus = "CREATE_FAILED"
	DatasetStatusUpdateInProgress               DatasetStatus = "UPDATE_IN_PROGRESS"
	DatasetStatusUpdateComplete                 DatasetStatus = "UPDATE_COMPLETE"
	DatasetStatusUpdateFailedRollbackInProgress DatasetStatus = "UPDATE_FAILED_ROLLBACK_IN_PROGRESS"
	DatasetStatusUpdateFailedRollbackComplete   DatasetStatus = "UPDATE_FAILED_ROLLBACK_COMPLETE"
	DatasetStatusDeleteInProgress               DatasetStatus = "DELETE_IN_PROGRESS"
	DatasetStatusDeleteComplete                 DatasetStatus = "DELETE_COMPLETE"
	DatasetStatusDeleteFailed                   DatasetStatus = "DELETE_FAILED"
)

// Values returns all known values for DatasetStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatasetStatus) Values() []DatasetStatus {
	return []DatasetStatus{
		"CREATE_IN_PROGRESS",
		"CREATE_COMPLETE",
		"CREATE_FAILED",
		"UPDATE_IN_PROGRESS",
		"UPDATE_COMPLETE",
		"UPDATE_FAILED_ROLLBACK_IN_PROGRESS",
		"UPDATE_FAILED_ROLLBACK_COMPLETE",
		"DELETE_IN_PROGRESS",
		"DELETE_COMPLETE",
		"DELETE_FAILED",
	}
}

type ModelHostingStatus string

// Enum values for ModelHostingStatus
const (
	ModelHostingStatusStartingHosting ModelHostingStatus = "STARTING_HOSTING"
	ModelHostingStatusHosted          ModelHostingStatus = "HOSTED"
	ModelHostingStatusHostingFailed   ModelHostingStatus = "HOSTING_FAILED"
	ModelHostingStatusStoppingHosting ModelHostingStatus = "STOPPING_HOSTING"
	ModelHostingStatusSystemUpdating  ModelHostingStatus = "SYSTEM_UPDATING"
)

// Values returns all known values for ModelHostingStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelHostingStatus) Values() []ModelHostingStatus {
	return []ModelHostingStatus{
		"STARTING_HOSTING",
		"HOSTED",
		"HOSTING_FAILED",
		"STOPPING_HOSTING",
		"SYSTEM_UPDATING",
	}
}

type ModelPackagingJobStatus string

// Enum values for ModelPackagingJobStatus
const (
	ModelPackagingJobStatusCreated   ModelPackagingJobStatus = "CREATED"
	ModelPackagingJobStatusRunning   ModelPackagingJobStatus = "RUNNING"
	ModelPackagingJobStatusSucceeded ModelPackagingJobStatus = "SUCCEEDED"
	ModelPackagingJobStatusFailed    ModelPackagingJobStatus = "FAILED"
)

// Values returns all known values for ModelPackagingJobStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackagingJobStatus) Values() []ModelPackagingJobStatus {
	return []ModelPackagingJobStatus{
		"CREATED",
		"RUNNING",
		"SUCCEEDED",
		"FAILED",
	}
}

type ModelStatus string

// Enum values for ModelStatus
const (
	ModelStatusTraining        ModelStatus = "TRAINING"
	ModelStatusTrained         ModelStatus = "TRAINED"
	ModelStatusTrainingFailed  ModelStatus = "TRAINING_FAILED"
	ModelStatusStartingHosting ModelStatus = "STARTING_HOSTING"
	ModelStatusHosted          ModelStatus = "HOSTED"
	ModelStatusHostingFailed   ModelStatus = "HOSTING_FAILED"
	ModelStatusStoppingHosting ModelStatus = "STOPPING_HOSTING"
	ModelStatusSystemUpdating  ModelStatus = "SYSTEM_UPDATING"
	ModelStatusDeleting        ModelStatus = "DELETING"
)

// Values returns all known values for ModelStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelStatus) Values() []ModelStatus {
	return []ModelStatus{
		"TRAINING",
		"TRAINED",
		"TRAINING_FAILED",
		"STARTING_HOSTING",
		"HOSTED",
		"HOSTING_FAILED",
		"STOPPING_HOSTING",
		"SYSTEM_UPDATING",
		"DELETING",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeProject         ResourceType = "PROJECT"
	ResourceTypeDataset         ResourceType = "DATASET"
	ResourceTypeModel           ResourceType = "MODEL"
	ResourceTypeTrial           ResourceType = "TRIAL"
	ResourceTypeModelPackageJob ResourceType = "MODEL_PACKAGE_JOB"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"PROJECT",
		"DATASET",
		"MODEL",
		"TRIAL",
		"MODEL_PACKAGE_JOB",
	}
}

type TargetDevice string

// Enum values for TargetDevice
const (
	TargetDeviceJetsonXavier TargetDevice = "jetson_xavier"
)

// Values returns all known values for TargetDevice. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetDevice) Values() []TargetDevice {
	return []TargetDevice{
		"jetson_xavier",
	}
}

type TargetPlatformAccelerator string

// Enum values for TargetPlatformAccelerator
const (
	TargetPlatformAcceleratorNvidia TargetPlatformAccelerator = "NVIDIA"
)

// Values returns all known values for TargetPlatformAccelerator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformAccelerator) Values() []TargetPlatformAccelerator {
	return []TargetPlatformAccelerator{
		"NVIDIA",
	}
}

type TargetPlatformArch string

// Enum values for TargetPlatformArch
const (
	TargetPlatformArchArm64 TargetPlatformArch = "ARM64"
	TargetPlatformArchX8664 TargetPlatformArch = "X86_64"
)

// Values returns all known values for TargetPlatformArch. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformArch) Values() []TargetPlatformArch {
	return []TargetPlatformArch{
		"ARM64",
		"X86_64",
	}
}

type TargetPlatformOs string

// Enum values for TargetPlatformOs
const (
	TargetPlatformOsLinux TargetPlatformOs = "LINUX"
)

// Values returns all known values for TargetPlatformOs. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformOs) Values() []TargetPlatformOs {
	return []TargetPlatformOs{
		"LINUX",
	}
}
