// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type CloudComponentState string

// Enum values for CloudComponentState
const (
	CloudComponentStateRequested  CloudComponentState = "REQUESTED"
	CloudComponentStateInitiated  CloudComponentState = "INITIATED"
	CloudComponentStateDeployable CloudComponentState = "DEPLOYABLE"
	CloudComponentStateFailed     CloudComponentState = "FAILED"
	CloudComponentStateDeprecated CloudComponentState = "DEPRECATED"
)

// Values returns all known values for CloudComponentState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CloudComponentState) Values() []CloudComponentState {
	return []CloudComponentState{
		"REQUESTED",
		"INITIATED",
		"DEPLOYABLE",
		"FAILED",
		"DEPRECATED",
	}
}

type ComponentDependencyType string

// Enum values for ComponentDependencyType
const (
	ComponentDependencyTypeHard ComponentDependencyType = "HARD"
	ComponentDependencyTypeSoft ComponentDependencyType = "SOFT"
)

// Values returns all known values for ComponentDependencyType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ComponentDependencyType) Values() []ComponentDependencyType {
	return []ComponentDependencyType{
		"HARD",
		"SOFT",
	}
}

type ComponentVisibilityScope string

// Enum values for ComponentVisibilityScope
const (
	ComponentVisibilityScopePrivate ComponentVisibilityScope = "PRIVATE"
	ComponentVisibilityScopePublic  ComponentVisibilityScope = "PUBLIC"
)

// Values returns all known values for ComponentVisibilityScope. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ComponentVisibilityScope) Values() []ComponentVisibilityScope {
	return []ComponentVisibilityScope{
		"PRIVATE",
		"PUBLIC",
	}
}

type CoreDeviceStatus string

// Enum values for CoreDeviceStatus
const (
	CoreDeviceStatusHealthy   CoreDeviceStatus = "HEALTHY"
	CoreDeviceStatusUnhealthy CoreDeviceStatus = "UNHEALTHY"
)

// Values returns all known values for CoreDeviceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CoreDeviceStatus) Values() []CoreDeviceStatus {
	return []CoreDeviceStatus{
		"HEALTHY",
		"UNHEALTHY",
	}
}

type DeploymentComponentUpdatePolicyAction string

// Enum values for DeploymentComponentUpdatePolicyAction
const (
	DeploymentComponentUpdatePolicyActionNotifyComponents     DeploymentComponentUpdatePolicyAction = "NOTIFY_COMPONENTS"
	DeploymentComponentUpdatePolicyActionSkipNotifyComponents DeploymentComponentUpdatePolicyAction = "SKIP_NOTIFY_COMPONENTS"
)

// Values returns all known values for DeploymentComponentUpdatePolicyAction. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeploymentComponentUpdatePolicyAction) Values() []DeploymentComponentUpdatePolicyAction {
	return []DeploymentComponentUpdatePolicyAction{
		"NOTIFY_COMPONENTS",
		"SKIP_NOTIFY_COMPONENTS",
	}
}

type DeploymentFailureHandlingPolicy string

// Enum values for DeploymentFailureHandlingPolicy
const (
	DeploymentFailureHandlingPolicyRollback  DeploymentFailureHandlingPolicy = "ROLLBACK"
	DeploymentFailureHandlingPolicyDoNothing DeploymentFailureHandlingPolicy = "DO_NOTHING"
)

// Values returns all known values for DeploymentFailureHandlingPolicy. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeploymentFailureHandlingPolicy) Values() []DeploymentFailureHandlingPolicy {
	return []DeploymentFailureHandlingPolicy{
		"ROLLBACK",
		"DO_NOTHING",
	}
}

type DeploymentHistoryFilter string

// Enum values for DeploymentHistoryFilter
const (
	DeploymentHistoryFilterAll        DeploymentHistoryFilter = "ALL"
	DeploymentHistoryFilterLatestOnly DeploymentHistoryFilter = "LATEST_ONLY"
)

// Values returns all known values for DeploymentHistoryFilter. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeploymentHistoryFilter) Values() []DeploymentHistoryFilter {
	return []DeploymentHistoryFilter{
		"ALL",
		"LATEST_ONLY",
	}
}

type DeploymentStatus string

// Enum values for DeploymentStatus
const (
	DeploymentStatusActive    DeploymentStatus = "ACTIVE"
	DeploymentStatusCompleted DeploymentStatus = "COMPLETED"
	DeploymentStatusCanceled  DeploymentStatus = "CANCELED"
	DeploymentStatusFailed    DeploymentStatus = "FAILED"
	DeploymentStatusInactive  DeploymentStatus = "INACTIVE"
)

// Values returns all known values for DeploymentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeploymentStatus) Values() []DeploymentStatus {
	return []DeploymentStatus{
		"ACTIVE",
		"COMPLETED",
		"CANCELED",
		"FAILED",
		"INACTIVE",
	}
}

type EffectiveDeploymentExecutionStatus string

// Enum values for EffectiveDeploymentExecutionStatus
const (
	EffectiveDeploymentExecutionStatusInProgress EffectiveDeploymentExecutionStatus = "IN_PROGRESS"
	EffectiveDeploymentExecutionStatusQueued     EffectiveDeploymentExecutionStatus = "QUEUED"
	EffectiveDeploymentExecutionStatusFailed     EffectiveDeploymentExecutionStatus = "FAILED"
	EffectiveDeploymentExecutionStatusCompleted  EffectiveDeploymentExecutionStatus = "COMPLETED"
	EffectiveDeploymentExecutionStatusTimedOut   EffectiveDeploymentExecutionStatus = "TIMED_OUT"
	EffectiveDeploymentExecutionStatusCanceled   EffectiveDeploymentExecutionStatus = "CANCELED"
	EffectiveDeploymentExecutionStatusRejected   EffectiveDeploymentExecutionStatus = "REJECTED"
	EffectiveDeploymentExecutionStatusSucceeded  EffectiveDeploymentExecutionStatus = "SUCCEEDED"
)

// Values returns all known values for EffectiveDeploymentExecutionStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EffectiveDeploymentExecutionStatus) Values() []EffectiveDeploymentExecutionStatus {
	return []EffectiveDeploymentExecutionStatus{
		"IN_PROGRESS",
		"QUEUED",
		"FAILED",
		"COMPLETED",
		"TIMED_OUT",
		"CANCELED",
		"REJECTED",
		"SUCCEEDED",
	}
}

type InstalledComponentLifecycleState string

// Enum values for InstalledComponentLifecycleState
const (
	InstalledComponentLifecycleStateNew       InstalledComponentLifecycleState = "NEW"
	InstalledComponentLifecycleStateInstalled InstalledComponentLifecycleState = "INSTALLED"
	InstalledComponentLifecycleStateStarting  InstalledComponentLifecycleState = "STARTING"
	InstalledComponentLifecycleStateRunning   InstalledComponentLifecycleState = "RUNNING"
	InstalledComponentLifecycleStateStopping  InstalledComponentLifecycleState = "STOPPING"
	InstalledComponentLifecycleStateErrored   InstalledComponentLifecycleState = "ERRORED"
	InstalledComponentLifecycleStateBroken    InstalledComponentLifecycleState = "BROKEN"
	InstalledComponentLifecycleStateFinished  InstalledComponentLifecycleState = "FINISHED"
)

// Values returns all known values for InstalledComponentLifecycleState. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstalledComponentLifecycleState) Values() []InstalledComponentLifecycleState {
	return []InstalledComponentLifecycleState{
		"NEW",
		"INSTALLED",
		"STARTING",
		"RUNNING",
		"STOPPING",
		"ERRORED",
		"BROKEN",
		"FINISHED",
	}
}

type InstalledComponentTopologyFilter string

// Enum values for InstalledComponentTopologyFilter
const (
	InstalledComponentTopologyFilterAll  InstalledComponentTopologyFilter = "ALL"
	InstalledComponentTopologyFilterRoot InstalledComponentTopologyFilter = "ROOT"
)

// Values returns all known values for InstalledComponentTopologyFilter. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstalledComponentTopologyFilter) Values() []InstalledComponentTopologyFilter {
	return []InstalledComponentTopologyFilter{
		"ALL",
		"ROOT",
	}
}

type IotEndpointType string

// Enum values for IotEndpointType
const (
	IotEndpointTypeFips     IotEndpointType = "fips"
	IotEndpointTypeStandard IotEndpointType = "standard"
)

// Values returns all known values for IotEndpointType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IotEndpointType) Values() []IotEndpointType {
	return []IotEndpointType{
		"fips",
		"standard",
	}
}

type IoTJobAbortAction string

// Enum values for IoTJobAbortAction
const (
	IoTJobAbortActionCancel IoTJobAbortAction = "CANCEL"
)

// Values returns all known values for IoTJobAbortAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IoTJobAbortAction) Values() []IoTJobAbortAction {
	return []IoTJobAbortAction{
		"CANCEL",
	}
}

type IoTJobExecutionFailureType string

// Enum values for IoTJobExecutionFailureType
const (
	IoTJobExecutionFailureTypeFailed   IoTJobExecutionFailureType = "FAILED"
	IoTJobExecutionFailureTypeRejected IoTJobExecutionFailureType = "REJECTED"
	IoTJobExecutionFailureTypeTimedOut IoTJobExecutionFailureType = "TIMED_OUT"
	IoTJobExecutionFailureTypeAll      IoTJobExecutionFailureType = "ALL"
)

// Values returns all known values for IoTJobExecutionFailureType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IoTJobExecutionFailureType) Values() []IoTJobExecutionFailureType {
	return []IoTJobExecutionFailureType{
		"FAILED",
		"REJECTED",
		"TIMED_OUT",
		"ALL",
	}
}

type LambdaEventSourceType string

// Enum values for LambdaEventSourceType
const (
	LambdaEventSourceTypePubSub  LambdaEventSourceType = "PUB_SUB"
	LambdaEventSourceTypeIotCore LambdaEventSourceType = "IOT_CORE"
)

// Values returns all known values for LambdaEventSourceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LambdaEventSourceType) Values() []LambdaEventSourceType {
	return []LambdaEventSourceType{
		"PUB_SUB",
		"IOT_CORE",
	}
}

type LambdaFilesystemPermission string

// Enum values for LambdaFilesystemPermission
const (
	LambdaFilesystemPermissionRo LambdaFilesystemPermission = "ro"
	LambdaFilesystemPermissionRw LambdaFilesystemPermission = "rw"
)

// Values returns all known values for LambdaFilesystemPermission. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LambdaFilesystemPermission) Values() []LambdaFilesystemPermission {
	return []LambdaFilesystemPermission{
		"ro",
		"rw",
	}
}

type LambdaInputPayloadEncodingType string

// Enum values for LambdaInputPayloadEncodingType
const (
	LambdaInputPayloadEncodingTypeJson   LambdaInputPayloadEncodingType = "json"
	LambdaInputPayloadEncodingTypeBinary LambdaInputPayloadEncodingType = "binary"
)

// Values returns all known values for LambdaInputPayloadEncodingType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LambdaInputPayloadEncodingType) Values() []LambdaInputPayloadEncodingType {
	return []LambdaInputPayloadEncodingType{
		"json",
		"binary",
	}
}

type LambdaIsolationMode string

// Enum values for LambdaIsolationMode
const (
	LambdaIsolationModeGreengrassContainer LambdaIsolationMode = "GreengrassContainer"
	LambdaIsolationModeNoContainer         LambdaIsolationMode = "NoContainer"
)

// Values returns all known values for LambdaIsolationMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LambdaIsolationMode) Values() []LambdaIsolationMode {
	return []LambdaIsolationMode{
		"GreengrassContainer",
		"NoContainer",
	}
}

type RecipeOutputFormat string

// Enum values for RecipeOutputFormat
const (
	RecipeOutputFormatJson RecipeOutputFormat = "JSON"
	RecipeOutputFormatYaml RecipeOutputFormat = "YAML"
)

// Values returns all known values for RecipeOutputFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecipeOutputFormat) Values() []RecipeOutputFormat {
	return []RecipeOutputFormat{
		"JSON",
		"YAML",
	}
}

type S3EndpointType string

// Enum values for S3EndpointType
const (
	S3EndpointTypeRegional S3EndpointType = "REGIONAL"
	S3EndpointTypeGlobal   S3EndpointType = "GLOBAL"
)

// Values returns all known values for S3EndpointType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (S3EndpointType) Values() []S3EndpointType {
	return []S3EndpointType{
		"REGIONAL",
		"GLOBAL",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "UNKNOWN_OPERATION"
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "CANNOT_PARSE"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "FIELD_VALIDATION_FAILED"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "OTHER"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"UNKNOWN_OPERATION",
		"CANNOT_PARSE",
		"FIELD_VALIDATION_FAILED",
		"OTHER",
	}
}

type VendorGuidance string

// Enum values for VendorGuidance
const (
	VendorGuidanceActive       VendorGuidance = "ACTIVE"
	VendorGuidanceDiscontinued VendorGuidance = "DISCONTINUED"
	VendorGuidanceDeleted      VendorGuidance = "DELETED"
)

// Values returns all known values for VendorGuidance. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VendorGuidance) Values() []VendorGuidance {
	return []VendorGuidance{
		"ACTIVE",
		"DISCONTINUED",
		"DELETED",
	}
}
