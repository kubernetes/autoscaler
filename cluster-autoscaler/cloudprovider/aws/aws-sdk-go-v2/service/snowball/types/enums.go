// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AddressType string

// Enum values for AddressType
const (
	AddressTypeCustPickup AddressType = "CUST_PICKUP"
	AddressTypeAwsShip    AddressType = "AWS_SHIP"
)

// Values returns all known values for AddressType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AddressType) Values() []AddressType {
	return []AddressType{
		"CUST_PICKUP",
		"AWS_SHIP",
	}
}

type ClusterState string

// Enum values for ClusterState
const (
	ClusterStateAwaitingQuorum ClusterState = "AwaitingQuorum"
	ClusterStatePending        ClusterState = "Pending"
	ClusterStateInUse          ClusterState = "InUse"
	ClusterStateComplete       ClusterState = "Complete"
	ClusterStateCancelled      ClusterState = "Cancelled"
)

// Values returns all known values for ClusterState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClusterState) Values() []ClusterState {
	return []ClusterState{
		"AwaitingQuorum",
		"Pending",
		"InUse",
		"Complete",
		"Cancelled",
	}
}

type DeviceServiceName string

// Enum values for DeviceServiceName
const (
	DeviceServiceNameNfsOnDeviceService DeviceServiceName = "NFS_ON_DEVICE_SERVICE"
	DeviceServiceNameS3OnDeviceService  DeviceServiceName = "S3_ON_DEVICE_SERVICE"
)

// Values returns all known values for DeviceServiceName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceServiceName) Values() []DeviceServiceName {
	return []DeviceServiceName{
		"NFS_ON_DEVICE_SERVICE",
		"S3_ON_DEVICE_SERVICE",
	}
}

type ImpactLevel string

// Enum values for ImpactLevel
const (
	ImpactLevelIl2  ImpactLevel = "IL2"
	ImpactLevelIl4  ImpactLevel = "IL4"
	ImpactLevelIl5  ImpactLevel = "IL5"
	ImpactLevelIl6  ImpactLevel = "IL6"
	ImpactLevelIl99 ImpactLevel = "IL99"
)

// Values returns all known values for ImpactLevel. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImpactLevel) Values() []ImpactLevel {
	return []ImpactLevel{
		"IL2",
		"IL4",
		"IL5",
		"IL6",
		"IL99",
	}
}

type JobState string

// Enum values for JobState
const (
	JobStateNew                    JobState = "New"
	JobStatePreparingAppliance     JobState = "PreparingAppliance"
	JobStatePreparingShipment      JobState = "PreparingShipment"
	JobStateInTransitToCustomer    JobState = "InTransitToCustomer"
	JobStateWithCustomer           JobState = "WithCustomer"
	JobStateInTransitToAws         JobState = "InTransitToAWS"
	JobStateWithAwsSortingFacility JobState = "WithAWSSortingFacility"
	JobStateWithAws                JobState = "WithAWS"
	JobStateInProgress             JobState = "InProgress"
	JobStateComplete               JobState = "Complete"
	JobStateCancelled              JobState = "Cancelled"
	JobStateListing                JobState = "Listing"
	JobStatePending                JobState = "Pending"
)

// Values returns all known values for JobState. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobState) Values() []JobState {
	return []JobState{
		"New",
		"PreparingAppliance",
		"PreparingShipment",
		"InTransitToCustomer",
		"WithCustomer",
		"InTransitToAWS",
		"WithAWSSortingFacility",
		"WithAWS",
		"InProgress",
		"Complete",
		"Cancelled",
		"Listing",
		"Pending",
	}
}

type JobType string

// Enum values for JobType
const (
	JobTypeImport   JobType = "IMPORT"
	JobTypeExport   JobType = "EXPORT"
	JobTypeLocalUse JobType = "LOCAL_USE"
)

// Values returns all known values for JobType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobType) Values() []JobType {
	return []JobType{
		"IMPORT",
		"EXPORT",
		"LOCAL_USE",
	}
}

type LongTermPricingType string

// Enum values for LongTermPricingType
const (
	LongTermPricingTypeOneYear   LongTermPricingType = "OneYear"
	LongTermPricingTypeThreeYear LongTermPricingType = "ThreeYear"
	LongTermPricingTypeOneMonth  LongTermPricingType = "OneMonth"
)

// Values returns all known values for LongTermPricingType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LongTermPricingType) Values() []LongTermPricingType {
	return []LongTermPricingType{
		"OneYear",
		"ThreeYear",
		"OneMonth",
	}
}

type RemoteManagement string

// Enum values for RemoteManagement
const (
	RemoteManagementInstalledOnly      RemoteManagement = "INSTALLED_ONLY"
	RemoteManagementInstalledAutostart RemoteManagement = "INSTALLED_AUTOSTART"
	RemoteManagementNotInstalled       RemoteManagement = "NOT_INSTALLED"
)

// Values returns all known values for RemoteManagement. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RemoteManagement) Values() []RemoteManagement {
	return []RemoteManagement{
		"INSTALLED_ONLY",
		"INSTALLED_AUTOSTART",
		"NOT_INSTALLED",
	}
}

type ServiceName string

// Enum values for ServiceName
const (
	ServiceNameKubernetes  ServiceName = "KUBERNETES"
	ServiceNameEksAnywhere ServiceName = "EKS_ANYWHERE"
)

// Values returns all known values for ServiceName. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceName) Values() []ServiceName {
	return []ServiceName{
		"KUBERNETES",
		"EKS_ANYWHERE",
	}
}

type ShipmentState string

// Enum values for ShipmentState
const (
	ShipmentStateReceived ShipmentState = "RECEIVED"
	ShipmentStateReturned ShipmentState = "RETURNED"
)

// Values returns all known values for ShipmentState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ShipmentState) Values() []ShipmentState {
	return []ShipmentState{
		"RECEIVED",
		"RETURNED",
	}
}

type ShippingLabelStatus string

// Enum values for ShippingLabelStatus
const (
	ShippingLabelStatusInProgress ShippingLabelStatus = "InProgress"
	ShippingLabelStatusTimedOut   ShippingLabelStatus = "TimedOut"
	ShippingLabelStatusSucceeded  ShippingLabelStatus = "Succeeded"
	ShippingLabelStatusFailed     ShippingLabelStatus = "Failed"
)

// Values returns all known values for ShippingLabelStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ShippingLabelStatus) Values() []ShippingLabelStatus {
	return []ShippingLabelStatus{
		"InProgress",
		"TimedOut",
		"Succeeded",
		"Failed",
	}
}

type ShippingOption string

// Enum values for ShippingOption
const (
	ShippingOptionSecondDay ShippingOption = "SECOND_DAY"
	ShippingOptionNextDay   ShippingOption = "NEXT_DAY"
	ShippingOptionExpress   ShippingOption = "EXPRESS"
	ShippingOptionStandard  ShippingOption = "STANDARD"
)

// Values returns all known values for ShippingOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ShippingOption) Values() []ShippingOption {
	return []ShippingOption{
		"SECOND_DAY",
		"NEXT_DAY",
		"EXPRESS",
		"STANDARD",
	}
}

type SnowballCapacity string

// Enum values for SnowballCapacity
const (
	SnowballCapacityT50          SnowballCapacity = "T50"
	SnowballCapacityT80          SnowballCapacity = "T80"
	SnowballCapacityT100         SnowballCapacity = "T100"
	SnowballCapacityT42          SnowballCapacity = "T42"
	SnowballCapacityT98          SnowballCapacity = "T98"
	SnowballCapacityT8           SnowballCapacity = "T8"
	SnowballCapacityT14          SnowballCapacity = "T14"
	SnowballCapacityT32          SnowballCapacity = "T32"
	SnowballCapacityNoPreference SnowballCapacity = "NoPreference"
	SnowballCapacityT240         SnowballCapacity = "T240"
	SnowballCapacityT13          SnowballCapacity = "T13"
)

// Values returns all known values for SnowballCapacity. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SnowballCapacity) Values() []SnowballCapacity {
	return []SnowballCapacity{
		"T50",
		"T80",
		"T100",
		"T42",
		"T98",
		"T8",
		"T14",
		"T32",
		"NoPreference",
		"T240",
		"T13",
	}
}

type SnowballType string

// Enum values for SnowballType
const (
	SnowballTypeStandard SnowballType = "STANDARD"
	SnowballTypeEdge     SnowballType = "EDGE"
	SnowballTypeEdgeC    SnowballType = "EDGE_C"
	SnowballTypeEdgeCg   SnowballType = "EDGE_CG"
	SnowballTypeEdgeS    SnowballType = "EDGE_S"
	SnowballTypeSnc1Hdd  SnowballType = "SNC1_HDD"
	SnowballTypeSnc1Ssd  SnowballType = "SNC1_SSD"
	SnowballTypeV35c     SnowballType = "V3_5C"
	SnowballTypeV35s     SnowballType = "V3_5S"
	SnowballTypeRack5uC  SnowballType = "RACK_5U_C"
)

// Values returns all known values for SnowballType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SnowballType) Values() []SnowballType {
	return []SnowballType{
		"STANDARD",
		"EDGE",
		"EDGE_C",
		"EDGE_CG",
		"EDGE_S",
		"SNC1_HDD",
		"SNC1_SSD",
		"V3_5C",
		"V3_5S",
		"RACK_5U_C",
	}
}

type StorageUnit string

// Enum values for StorageUnit
const (
	StorageUnitTb StorageUnit = "TB"
)

// Values returns all known values for StorageUnit. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StorageUnit) Values() []StorageUnit {
	return []StorageUnit{
		"TB",
	}
}

type TransferOption string

// Enum values for TransferOption
const (
	TransferOptionImport   TransferOption = "IMPORT"
	TransferOptionExport   TransferOption = "EXPORT"
	TransferOptionLocalUse TransferOption = "LOCAL_USE"
)

// Values returns all known values for TransferOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TransferOption) Values() []TransferOption {
	return []TransferOption{
		"IMPORT",
		"EXPORT",
		"LOCAL_USE",
	}
}
