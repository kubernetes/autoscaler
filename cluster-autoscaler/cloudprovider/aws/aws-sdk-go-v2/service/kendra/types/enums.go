// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AdditionalResultAttributeValueType string

// Enum values for AdditionalResultAttributeValueType
const (
	AdditionalResultAttributeValueTypeTextWithHighlightsValue AdditionalResultAttributeValueType = "TEXT_WITH_HIGHLIGHTS_VALUE"
)

// Values returns all known values for AdditionalResultAttributeValueType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AdditionalResultAttributeValueType) Values() []AdditionalResultAttributeValueType {
	return []AdditionalResultAttributeValueType{
		"TEXT_WITH_HIGHLIGHTS_VALUE",
	}
}

type AlfrescoEntity string

// Enum values for AlfrescoEntity
const (
	AlfrescoEntityWiki            AlfrescoEntity = "wiki"
	AlfrescoEntityBlog            AlfrescoEntity = "blog"
	AlfrescoEntityDocumentLibrary AlfrescoEntity = "documentLibrary"
)

// Values returns all known values for AlfrescoEntity. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AlfrescoEntity) Values() []AlfrescoEntity {
	return []AlfrescoEntity{
		"wiki",
		"blog",
		"documentLibrary",
	}
}

type AttributeSuggestionsMode string

// Enum values for AttributeSuggestionsMode
const (
	AttributeSuggestionsModeActive   AttributeSuggestionsMode = "ACTIVE"
	AttributeSuggestionsModeInactive AttributeSuggestionsMode = "INACTIVE"
)

// Values returns all known values for AttributeSuggestionsMode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AttributeSuggestionsMode) Values() []AttributeSuggestionsMode {
	return []AttributeSuggestionsMode{
		"ACTIVE",
		"INACTIVE",
	}
}

type ConditionOperator string

// Enum values for ConditionOperator
const (
	ConditionOperatorGreaterThan         ConditionOperator = "GreaterThan"
	ConditionOperatorGreaterThanOrEquals ConditionOperator = "GreaterThanOrEquals"
	ConditionOperatorLessThan            ConditionOperator = "LessThan"
	ConditionOperatorLessThanOrEquals    ConditionOperator = "LessThanOrEquals"
	ConditionOperatorEquals              ConditionOperator = "Equals"
	ConditionOperatorNotEquals           ConditionOperator = "NotEquals"
	ConditionOperatorContains            ConditionOperator = "Contains"
	ConditionOperatorNotContains         ConditionOperator = "NotContains"
	ConditionOperatorExists              ConditionOperator = "Exists"
	ConditionOperatorNotExists           ConditionOperator = "NotExists"
	ConditionOperatorBeginsWith          ConditionOperator = "BeginsWith"
)

// Values returns all known values for ConditionOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConditionOperator) Values() []ConditionOperator {
	return []ConditionOperator{
		"GreaterThan",
		"GreaterThanOrEquals",
		"LessThan",
		"LessThanOrEquals",
		"Equals",
		"NotEquals",
		"Contains",
		"NotContains",
		"Exists",
		"NotExists",
		"BeginsWith",
	}
}

type ConfluenceAttachmentFieldName string

// Enum values for ConfluenceAttachmentFieldName
const (
	ConfluenceAttachmentFieldNameAuthor      ConfluenceAttachmentFieldName = "AUTHOR"
	ConfluenceAttachmentFieldNameContentType ConfluenceAttachmentFieldName = "CONTENT_TYPE"
	ConfluenceAttachmentFieldNameCreatedDate ConfluenceAttachmentFieldName = "CREATED_DATE"
	ConfluenceAttachmentFieldNameDisplayUrl  ConfluenceAttachmentFieldName = "DISPLAY_URL"
	ConfluenceAttachmentFieldNameFileSize    ConfluenceAttachmentFieldName = "FILE_SIZE"
	ConfluenceAttachmentFieldNameItemType    ConfluenceAttachmentFieldName = "ITEM_TYPE"
	ConfluenceAttachmentFieldNameParentId    ConfluenceAttachmentFieldName = "PARENT_ID"
	ConfluenceAttachmentFieldNameSpaceKey    ConfluenceAttachmentFieldName = "SPACE_KEY"
	ConfluenceAttachmentFieldNameSpaceName   ConfluenceAttachmentFieldName = "SPACE_NAME"
	ConfluenceAttachmentFieldNameUrl         ConfluenceAttachmentFieldName = "URL"
	ConfluenceAttachmentFieldNameVersion     ConfluenceAttachmentFieldName = "VERSION"
)

// Values returns all known values for ConfluenceAttachmentFieldName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfluenceAttachmentFieldName) Values() []ConfluenceAttachmentFieldName {
	return []ConfluenceAttachmentFieldName{
		"AUTHOR",
		"CONTENT_TYPE",
		"CREATED_DATE",
		"DISPLAY_URL",
		"FILE_SIZE",
		"ITEM_TYPE",
		"PARENT_ID",
		"SPACE_KEY",
		"SPACE_NAME",
		"URL",
		"VERSION",
	}
}

type ConfluenceAuthenticationType string

// Enum values for ConfluenceAuthenticationType
const (
	ConfluenceAuthenticationTypeHttpBasic ConfluenceAuthenticationType = "HTTP_BASIC"
	ConfluenceAuthenticationTypePat       ConfluenceAuthenticationType = "PAT"
)

// Values returns all known values for ConfluenceAuthenticationType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfluenceAuthenticationType) Values() []ConfluenceAuthenticationType {
	return []ConfluenceAuthenticationType{
		"HTTP_BASIC",
		"PAT",
	}
}

type ConfluenceBlogFieldName string

// Enum values for ConfluenceBlogFieldName
const (
	ConfluenceBlogFieldNameAuthor      ConfluenceBlogFieldName = "AUTHOR"
	ConfluenceBlogFieldNameDisplayUrl  ConfluenceBlogFieldName = "DISPLAY_URL"
	ConfluenceBlogFieldNameItemType    ConfluenceBlogFieldName = "ITEM_TYPE"
	ConfluenceBlogFieldNameLabels      ConfluenceBlogFieldName = "LABELS"
	ConfluenceBlogFieldNamePublishDate ConfluenceBlogFieldName = "PUBLISH_DATE"
	ConfluenceBlogFieldNameSpaceKey    ConfluenceBlogFieldName = "SPACE_KEY"
	ConfluenceBlogFieldNameSpaceName   ConfluenceBlogFieldName = "SPACE_NAME"
	ConfluenceBlogFieldNameUrl         ConfluenceBlogFieldName = "URL"
	ConfluenceBlogFieldNameVersion     ConfluenceBlogFieldName = "VERSION"
)

// Values returns all known values for ConfluenceBlogFieldName. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfluenceBlogFieldName) Values() []ConfluenceBlogFieldName {
	return []ConfluenceBlogFieldName{
		"AUTHOR",
		"DISPLAY_URL",
		"ITEM_TYPE",
		"LABELS",
		"PUBLISH_DATE",
		"SPACE_KEY",
		"SPACE_NAME",
		"URL",
		"VERSION",
	}
}

type ConfluencePageFieldName string

// Enum values for ConfluencePageFieldName
const (
	ConfluencePageFieldNameAuthor        ConfluencePageFieldName = "AUTHOR"
	ConfluencePageFieldNameContentStatus ConfluencePageFieldName = "CONTENT_STATUS"
	ConfluencePageFieldNameCreatedDate   ConfluencePageFieldName = "CREATED_DATE"
	ConfluencePageFieldNameDisplayUrl    ConfluencePageFieldName = "DISPLAY_URL"
	ConfluencePageFieldNameItemType      ConfluencePageFieldName = "ITEM_TYPE"
	ConfluencePageFieldNameLabels        ConfluencePageFieldName = "LABELS"
	ConfluencePageFieldNameModifiedDate  ConfluencePageFieldName = "MODIFIED_DATE"
	ConfluencePageFieldNameParentId      ConfluencePageFieldName = "PARENT_ID"
	ConfluencePageFieldNameSpaceKey      ConfluencePageFieldName = "SPACE_KEY"
	ConfluencePageFieldNameSpaceName     ConfluencePageFieldName = "SPACE_NAME"
	ConfluencePageFieldNameUrl           ConfluencePageFieldName = "URL"
	ConfluencePageFieldNameVersion       ConfluencePageFieldName = "VERSION"
)

// Values returns all known values for ConfluencePageFieldName. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfluencePageFieldName) Values() []ConfluencePageFieldName {
	return []ConfluencePageFieldName{
		"AUTHOR",
		"CONTENT_STATUS",
		"CREATED_DATE",
		"DISPLAY_URL",
		"ITEM_TYPE",
		"LABELS",
		"MODIFIED_DATE",
		"PARENT_ID",
		"SPACE_KEY",
		"SPACE_NAME",
		"URL",
		"VERSION",
	}
}

type ConfluenceSpaceFieldName string

// Enum values for ConfluenceSpaceFieldName
const (
	ConfluenceSpaceFieldNameDisplayUrl ConfluenceSpaceFieldName = "DISPLAY_URL"
	ConfluenceSpaceFieldNameItemType   ConfluenceSpaceFieldName = "ITEM_TYPE"
	ConfluenceSpaceFieldNameSpaceKey   ConfluenceSpaceFieldName = "SPACE_KEY"
	ConfluenceSpaceFieldNameUrl        ConfluenceSpaceFieldName = "URL"
)

// Values returns all known values for ConfluenceSpaceFieldName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfluenceSpaceFieldName) Values() []ConfluenceSpaceFieldName {
	return []ConfluenceSpaceFieldName{
		"DISPLAY_URL",
		"ITEM_TYPE",
		"SPACE_KEY",
		"URL",
	}
}

type ConfluenceVersion string

// Enum values for ConfluenceVersion
const (
	ConfluenceVersionCloud  ConfluenceVersion = "CLOUD"
	ConfluenceVersionServer ConfluenceVersion = "SERVER"
)

// Values returns all known values for ConfluenceVersion. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfluenceVersion) Values() []ConfluenceVersion {
	return []ConfluenceVersion{
		"CLOUD",
		"SERVER",
	}
}

type ContentType string

// Enum values for ContentType
const (
	ContentTypePdf       ContentType = "PDF"
	ContentTypeHtml      ContentType = "HTML"
	ContentTypeMsWord    ContentType = "MS_WORD"
	ContentTypePlainText ContentType = "PLAIN_TEXT"
	ContentTypePpt       ContentType = "PPT"
	ContentTypeRtf       ContentType = "RTF"
	ContentTypeXml       ContentType = "XML"
	ContentTypeXslt      ContentType = "XSLT"
	ContentTypeMsExcel   ContentType = "MS_EXCEL"
	ContentTypeCsv       ContentType = "CSV"
	ContentTypeJson      ContentType = "JSON"
	ContentTypeMd        ContentType = "MD"
)

// Values returns all known values for ContentType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentType) Values() []ContentType {
	return []ContentType{
		"PDF",
		"HTML",
		"MS_WORD",
		"PLAIN_TEXT",
		"PPT",
		"RTF",
		"XML",
		"XSLT",
		"MS_EXCEL",
		"CSV",
		"JSON",
		"MD",
	}
}

type DatabaseEngineType string

// Enum values for DatabaseEngineType
const (
	DatabaseEngineTypeRdsAuroraMysql      DatabaseEngineType = "RDS_AURORA_MYSQL"
	DatabaseEngineTypeRdsAuroraPostgresql DatabaseEngineType = "RDS_AURORA_POSTGRESQL"
	DatabaseEngineTypeRdsMysql            DatabaseEngineType = "RDS_MYSQL"
	DatabaseEngineTypeRdsPostgresql       DatabaseEngineType = "RDS_POSTGRESQL"
)

// Values returns all known values for DatabaseEngineType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatabaseEngineType) Values() []DatabaseEngineType {
	return []DatabaseEngineType{
		"RDS_AURORA_MYSQL",
		"RDS_AURORA_POSTGRESQL",
		"RDS_MYSQL",
		"RDS_POSTGRESQL",
	}
}

type DataSourceStatus string

// Enum values for DataSourceStatus
const (
	DataSourceStatusCreating DataSourceStatus = "CREATING"
	DataSourceStatusDeleting DataSourceStatus = "DELETING"
	DataSourceStatusFailed   DataSourceStatus = "FAILED"
	DataSourceStatusUpdating DataSourceStatus = "UPDATING"
	DataSourceStatusActive   DataSourceStatus = "ACTIVE"
)

// Values returns all known values for DataSourceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataSourceStatus) Values() []DataSourceStatus {
	return []DataSourceStatus{
		"CREATING",
		"DELETING",
		"FAILED",
		"UPDATING",
		"ACTIVE",
	}
}

type DataSourceSyncJobStatus string

// Enum values for DataSourceSyncJobStatus
const (
	DataSourceSyncJobStatusFailed          DataSourceSyncJobStatus = "FAILED"
	DataSourceSyncJobStatusSucceeded       DataSourceSyncJobStatus = "SUCCEEDED"
	DataSourceSyncJobStatusSyncing         DataSourceSyncJobStatus = "SYNCING"
	DataSourceSyncJobStatusIncomplete      DataSourceSyncJobStatus = "INCOMPLETE"
	DataSourceSyncJobStatusStopping        DataSourceSyncJobStatus = "STOPPING"
	DataSourceSyncJobStatusAborted         DataSourceSyncJobStatus = "ABORTED"
	DataSourceSyncJobStatusSyncingIndexing DataSourceSyncJobStatus = "SYNCING_INDEXING"
)

// Values returns all known values for DataSourceSyncJobStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataSourceSyncJobStatus) Values() []DataSourceSyncJobStatus {
	return []DataSourceSyncJobStatus{
		"FAILED",
		"SUCCEEDED",
		"SYNCING",
		"INCOMPLETE",
		"STOPPING",
		"ABORTED",
		"SYNCING_INDEXING",
	}
}

type DataSourceType string

// Enum values for DataSourceType
const (
	DataSourceTypeS3          DataSourceType = "S3"
	DataSourceTypeSharepoint  DataSourceType = "SHAREPOINT"
	DataSourceTypeDatabase    DataSourceType = "DATABASE"
	DataSourceTypeSalesforce  DataSourceType = "SALESFORCE"
	DataSourceTypeOnedrive    DataSourceType = "ONEDRIVE"
	DataSourceTypeServicenow  DataSourceType = "SERVICENOW"
	DataSourceTypeCustom      DataSourceType = "CUSTOM"
	DataSourceTypeConfluence  DataSourceType = "CONFLUENCE"
	DataSourceTypeGoogledrive DataSourceType = "GOOGLEDRIVE"
	DataSourceTypeWebcrawler  DataSourceType = "WEBCRAWLER"
	DataSourceTypeWorkdocs    DataSourceType = "WORKDOCS"
	DataSourceTypeFsx         DataSourceType = "FSX"
	DataSourceTypeSlack       DataSourceType = "SLACK"
	DataSourceTypeBox         DataSourceType = "BOX"
	DataSourceTypeQuip        DataSourceType = "QUIP"
	DataSourceTypeJira        DataSourceType = "JIRA"
	DataSourceTypeGithub      DataSourceType = "GITHUB"
	DataSourceTypeAlfresco    DataSourceType = "ALFRESCO"
	DataSourceTypeTemplate    DataSourceType = "TEMPLATE"
)

// Values returns all known values for DataSourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataSourceType) Values() []DataSourceType {
	return []DataSourceType{
		"S3",
		"SHAREPOINT",
		"DATABASE",
		"SALESFORCE",
		"ONEDRIVE",
		"SERVICENOW",
		"CUSTOM",
		"CONFLUENCE",
		"GOOGLEDRIVE",
		"WEBCRAWLER",
		"WORKDOCS",
		"FSX",
		"SLACK",
		"BOX",
		"QUIP",
		"JIRA",
		"GITHUB",
		"ALFRESCO",
		"TEMPLATE",
	}
}

type DocumentAttributeValueType string

// Enum values for DocumentAttributeValueType
const (
	DocumentAttributeValueTypeStringValue     DocumentAttributeValueType = "STRING_VALUE"
	DocumentAttributeValueTypeStringListValue DocumentAttributeValueType = "STRING_LIST_VALUE"
	DocumentAttributeValueTypeLongValue       DocumentAttributeValueType = "LONG_VALUE"
	DocumentAttributeValueTypeDateValue       DocumentAttributeValueType = "DATE_VALUE"
)

// Values returns all known values for DocumentAttributeValueType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DocumentAttributeValueType) Values() []DocumentAttributeValueType {
	return []DocumentAttributeValueType{
		"STRING_VALUE",
		"STRING_LIST_VALUE",
		"LONG_VALUE",
		"DATE_VALUE",
	}
}

type DocumentStatus string

// Enum values for DocumentStatus
const (
	DocumentStatusNotFound     DocumentStatus = "NOT_FOUND"
	DocumentStatusProcessing   DocumentStatus = "PROCESSING"
	DocumentStatusIndexed      DocumentStatus = "INDEXED"
	DocumentStatusUpdated      DocumentStatus = "UPDATED"
	DocumentStatusFailed       DocumentStatus = "FAILED"
	DocumentStatusUpdateFailed DocumentStatus = "UPDATE_FAILED"
)

// Values returns all known values for DocumentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DocumentStatus) Values() []DocumentStatus {
	return []DocumentStatus{
		"NOT_FOUND",
		"PROCESSING",
		"INDEXED",
		"UPDATED",
		"FAILED",
		"UPDATE_FAILED",
	}
}

type EndpointType string

// Enum values for EndpointType
const (
	EndpointTypeHome EndpointType = "HOME"
)

// Values returns all known values for EndpointType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EndpointType) Values() []EndpointType {
	return []EndpointType{
		"HOME",
	}
}

type EntityType string

// Enum values for EntityType
const (
	EntityTypeUser  EntityType = "USER"
	EntityTypeGroup EntityType = "GROUP"
)

// Values returns all known values for EntityType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EntityType) Values() []EntityType {
	return []EntityType{
		"USER",
		"GROUP",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeInternalError  ErrorCode = "InternalError"
	ErrorCodeInvalidRequest ErrorCode = "InvalidRequest"
)

// Values returns all known values for ErrorCode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"InternalError",
		"InvalidRequest",
	}
}

type ExperienceStatus string

// Enum values for ExperienceStatus
const (
	ExperienceStatusCreating ExperienceStatus = "CREATING"
	ExperienceStatusActive   ExperienceStatus = "ACTIVE"
	ExperienceStatusDeleting ExperienceStatus = "DELETING"
	ExperienceStatusFailed   ExperienceStatus = "FAILED"
)

// Values returns all known values for ExperienceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExperienceStatus) Values() []ExperienceStatus {
	return []ExperienceStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
	}
}

type FaqFileFormat string

// Enum values for FaqFileFormat
const (
	FaqFileFormatCsv           FaqFileFormat = "CSV"
	FaqFileFormatCsvWithHeader FaqFileFormat = "CSV_WITH_HEADER"
	FaqFileFormatJson          FaqFileFormat = "JSON"
)

// Values returns all known values for FaqFileFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FaqFileFormat) Values() []FaqFileFormat {
	return []FaqFileFormat{
		"CSV",
		"CSV_WITH_HEADER",
		"JSON",
	}
}

type FaqStatus string

// Enum values for FaqStatus
const (
	FaqStatusCreating FaqStatus = "CREATING"
	FaqStatusUpdating FaqStatus = "UPDATING"
	FaqStatusActive   FaqStatus = "ACTIVE"
	FaqStatusDeleting FaqStatus = "DELETING"
	FaqStatusFailed   FaqStatus = "FAILED"
)

// Values returns all known values for FaqStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FaqStatus) Values() []FaqStatus {
	return []FaqStatus{
		"CREATING",
		"UPDATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
	}
}

type FeaturedResultsSetStatus string

// Enum values for FeaturedResultsSetStatus
const (
	FeaturedResultsSetStatusActive   FeaturedResultsSetStatus = "ACTIVE"
	FeaturedResultsSetStatusInactive FeaturedResultsSetStatus = "INACTIVE"
)

// Values returns all known values for FeaturedResultsSetStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FeaturedResultsSetStatus) Values() []FeaturedResultsSetStatus {
	return []FeaturedResultsSetStatus{
		"ACTIVE",
		"INACTIVE",
	}
}

type FsxFileSystemType string

// Enum values for FsxFileSystemType
const (
	FsxFileSystemTypeWindows FsxFileSystemType = "WINDOWS"
)

// Values returns all known values for FsxFileSystemType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FsxFileSystemType) Values() []FsxFileSystemType {
	return []FsxFileSystemType{
		"WINDOWS",
	}
}

type HighlightType string

// Enum values for HighlightType
const (
	HighlightTypeStandard         HighlightType = "STANDARD"
	HighlightTypeThesaurusSynonym HighlightType = "THESAURUS_SYNONYM"
)

// Values returns all known values for HighlightType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HighlightType) Values() []HighlightType {
	return []HighlightType{
		"STANDARD",
		"THESAURUS_SYNONYM",
	}
}

type IndexEdition string

// Enum values for IndexEdition
const (
	IndexEditionDeveloperEdition       IndexEdition = "DEVELOPER_EDITION"
	IndexEditionEnterpriseEdition      IndexEdition = "ENTERPRISE_EDITION"
	IndexEditionGenAiEnterpriseEdition IndexEdition = "GEN_AI_ENTERPRISE_EDITION"
)

// Values returns all known values for IndexEdition. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IndexEdition) Values() []IndexEdition {
	return []IndexEdition{
		"DEVELOPER_EDITION",
		"ENTERPRISE_EDITION",
		"GEN_AI_ENTERPRISE_EDITION",
	}
}

type IndexStatus string

// Enum values for IndexStatus
const (
	IndexStatusCreating       IndexStatus = "CREATING"
	IndexStatusActive         IndexStatus = "ACTIVE"
	IndexStatusDeleting       IndexStatus = "DELETING"
	IndexStatusFailed         IndexStatus = "FAILED"
	IndexStatusUpdating       IndexStatus = "UPDATING"
	IndexStatusSystemUpdating IndexStatus = "SYSTEM_UPDATING"
)

// Values returns all known values for IndexStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IndexStatus) Values() []IndexStatus {
	return []IndexStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
		"UPDATING",
		"SYSTEM_UPDATING",
	}
}

type Interval string

// Enum values for Interval
const (
	IntervalThisMonth    Interval = "THIS_MONTH"
	IntervalThisWeek     Interval = "THIS_WEEK"
	IntervalOneWeekAgo   Interval = "ONE_WEEK_AGO"
	IntervalTwoWeeksAgo  Interval = "TWO_WEEKS_AGO"
	IntervalOneMonthAgo  Interval = "ONE_MONTH_AGO"
	IntervalTwoMonthsAgo Interval = "TWO_MONTHS_AGO"
)

// Values returns all known values for Interval. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Interval) Values() []Interval {
	return []Interval{
		"THIS_MONTH",
		"THIS_WEEK",
		"ONE_WEEK_AGO",
		"TWO_WEEKS_AGO",
		"ONE_MONTH_AGO",
		"TWO_MONTHS_AGO",
	}
}

type IssueSubEntity string

// Enum values for IssueSubEntity
const (
	IssueSubEntityComments    IssueSubEntity = "COMMENTS"
	IssueSubEntityAttachments IssueSubEntity = "ATTACHMENTS"
	IssueSubEntityWorklogs    IssueSubEntity = "WORKLOGS"
)

// Values returns all known values for IssueSubEntity. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IssueSubEntity) Values() []IssueSubEntity {
	return []IssueSubEntity{
		"COMMENTS",
		"ATTACHMENTS",
		"WORKLOGS",
	}
}

type KeyLocation string

// Enum values for KeyLocation
const (
	KeyLocationUrl           KeyLocation = "URL"
	KeyLocationSecretManager KeyLocation = "SECRET_MANAGER"
)

// Values returns all known values for KeyLocation. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KeyLocation) Values() []KeyLocation {
	return []KeyLocation{
		"URL",
		"SECRET_MANAGER",
	}
}

type MetricType string

// Enum values for MetricType
const (
	MetricTypeQueriesByCount          MetricType = "QUERIES_BY_COUNT"
	MetricTypeQueriesByZeroClickRate  MetricType = "QUERIES_BY_ZERO_CLICK_RATE"
	MetricTypeQueriesByZeroResultRate MetricType = "QUERIES_BY_ZERO_RESULT_RATE"
	MetricTypeDocsByClickCount        MetricType = "DOCS_BY_CLICK_COUNT"
	MetricTypeAggQueryDocMetrics      MetricType = "AGG_QUERY_DOC_METRICS"
	MetricTypeTrendQueryDocMetrics    MetricType = "TREND_QUERY_DOC_METRICS"
)

// Values returns all known values for MetricType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MetricType) Values() []MetricType {
	return []MetricType{
		"QUERIES_BY_COUNT",
		"QUERIES_BY_ZERO_CLICK_RATE",
		"QUERIES_BY_ZERO_RESULT_RATE",
		"DOCS_BY_CLICK_COUNT",
		"AGG_QUERY_DOC_METRICS",
		"TREND_QUERY_DOC_METRICS",
	}
}

type MissingAttributeKeyStrategy string

// Enum values for MissingAttributeKeyStrategy
const (
	MissingAttributeKeyStrategyIgnore   MissingAttributeKeyStrategy = "IGNORE"
	MissingAttributeKeyStrategyCollapse MissingAttributeKeyStrategy = "COLLAPSE"
	MissingAttributeKeyStrategyExpand   MissingAttributeKeyStrategy = "EXPAND"
)

// Values returns all known values for MissingAttributeKeyStrategy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MissingAttributeKeyStrategy) Values() []MissingAttributeKeyStrategy {
	return []MissingAttributeKeyStrategy{
		"IGNORE",
		"COLLAPSE",
		"EXPAND",
	}
}

type Mode string

// Enum values for Mode
const (
	ModeEnabled   Mode = "ENABLED"
	ModeLearnOnly Mode = "LEARN_ONLY"
)

// Values returns all known values for Mode. Note that this can be expanded in the
// future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Mode) Values() []Mode {
	return []Mode{
		"ENABLED",
		"LEARN_ONLY",
	}
}

type Order string

// Enum values for Order
const (
	OrderAscending  Order = "ASCENDING"
	OrderDescending Order = "DESCENDING"
)

// Values returns all known values for Order. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Order) Values() []Order {
	return []Order{
		"ASCENDING",
		"DESCENDING",
	}
}

type Persona string

// Enum values for Persona
const (
	PersonaOwner  Persona = "OWNER"
	PersonaViewer Persona = "VIEWER"
)

// Values returns all known values for Persona. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Persona) Values() []Persona {
	return []Persona{
		"OWNER",
		"VIEWER",
	}
}

type PrincipalMappingStatus string

// Enum values for PrincipalMappingStatus
const (
	PrincipalMappingStatusFailed     PrincipalMappingStatus = "FAILED"
	PrincipalMappingStatusSucceeded  PrincipalMappingStatus = "SUCCEEDED"
	PrincipalMappingStatusProcessing PrincipalMappingStatus = "PROCESSING"
	PrincipalMappingStatusDeleting   PrincipalMappingStatus = "DELETING"
	PrincipalMappingStatusDeleted    PrincipalMappingStatus = "DELETED"
)

// Values returns all known values for PrincipalMappingStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PrincipalMappingStatus) Values() []PrincipalMappingStatus {
	return []PrincipalMappingStatus{
		"FAILED",
		"SUCCEEDED",
		"PROCESSING",
		"DELETING",
		"DELETED",
	}
}

type PrincipalType string

// Enum values for PrincipalType
const (
	PrincipalTypeUser  PrincipalType = "USER"
	PrincipalTypeGroup PrincipalType = "GROUP"
)

// Values returns all known values for PrincipalType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PrincipalType) Values() []PrincipalType {
	return []PrincipalType{
		"USER",
		"GROUP",
	}
}

type QueryIdentifiersEnclosingOption string

// Enum values for QueryIdentifiersEnclosingOption
const (
	QueryIdentifiersEnclosingOptionDoubleQuotes QueryIdentifiersEnclosingOption = "DOUBLE_QUOTES"
	QueryIdentifiersEnclosingOptionNone         QueryIdentifiersEnclosingOption = "NONE"
)

// Values returns all known values for QueryIdentifiersEnclosingOption. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueryIdentifiersEnclosingOption) Values() []QueryIdentifiersEnclosingOption {
	return []QueryIdentifiersEnclosingOption{
		"DOUBLE_QUOTES",
		"NONE",
	}
}

type QueryResultFormat string

// Enum values for QueryResultFormat
const (
	QueryResultFormatTable QueryResultFormat = "TABLE"
	QueryResultFormatText  QueryResultFormat = "TEXT"
)

// Values returns all known values for QueryResultFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueryResultFormat) Values() []QueryResultFormat {
	return []QueryResultFormat{
		"TABLE",
		"TEXT",
	}
}

type QueryResultType string

// Enum values for QueryResultType
const (
	QueryResultTypeDocument       QueryResultType = "DOCUMENT"
	QueryResultTypeQuestionAnswer QueryResultType = "QUESTION_ANSWER"
	QueryResultTypeAnswer         QueryResultType = "ANSWER"
)

// Values returns all known values for QueryResultType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueryResultType) Values() []QueryResultType {
	return []QueryResultType{
		"DOCUMENT",
		"QUESTION_ANSWER",
		"ANSWER",
	}
}

type QuerySuggestionsBlockListStatus string

// Enum values for QuerySuggestionsBlockListStatus
const (
	QuerySuggestionsBlockListStatusActive                QuerySuggestionsBlockListStatus = "ACTIVE"
	QuerySuggestionsBlockListStatusCreating              QuerySuggestionsBlockListStatus = "CREATING"
	QuerySuggestionsBlockListStatusDeleting              QuerySuggestionsBlockListStatus = "DELETING"
	QuerySuggestionsBlockListStatusUpdating              QuerySuggestionsBlockListStatus = "UPDATING"
	QuerySuggestionsBlockListStatusActiveButUpdateFailed QuerySuggestionsBlockListStatus = "ACTIVE_BUT_UPDATE_FAILED"
	QuerySuggestionsBlockListStatusFailed                QuerySuggestionsBlockListStatus = "FAILED"
)

// Values returns all known values for QuerySuggestionsBlockListStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QuerySuggestionsBlockListStatus) Values() []QuerySuggestionsBlockListStatus {
	return []QuerySuggestionsBlockListStatus{
		"ACTIVE",
		"CREATING",
		"DELETING",
		"UPDATING",
		"ACTIVE_BUT_UPDATE_FAILED",
		"FAILED",
	}
}

type QuerySuggestionsStatus string

// Enum values for QuerySuggestionsStatus
const (
	QuerySuggestionsStatusActive   QuerySuggestionsStatus = "ACTIVE"
	QuerySuggestionsStatusUpdating QuerySuggestionsStatus = "UPDATING"
)

// Values returns all known values for QuerySuggestionsStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QuerySuggestionsStatus) Values() []QuerySuggestionsStatus {
	return []QuerySuggestionsStatus{
		"ACTIVE",
		"UPDATING",
	}
}

type ReadAccessType string

// Enum values for ReadAccessType
const (
	ReadAccessTypeAllow ReadAccessType = "ALLOW"
	ReadAccessTypeDeny  ReadAccessType = "DENY"
)

// Values returns all known values for ReadAccessType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReadAccessType) Values() []ReadAccessType {
	return []ReadAccessType{
		"ALLOW",
		"DENY",
	}
}

type RelevanceType string

// Enum values for RelevanceType
const (
	RelevanceTypeRelevant    RelevanceType = "RELEVANT"
	RelevanceTypeNotRelevant RelevanceType = "NOT_RELEVANT"
)

// Values returns all known values for RelevanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RelevanceType) Values() []RelevanceType {
	return []RelevanceType{
		"RELEVANT",
		"NOT_RELEVANT",
	}
}

type SalesforceChatterFeedIncludeFilterType string

// Enum values for SalesforceChatterFeedIncludeFilterType
const (
	SalesforceChatterFeedIncludeFilterTypeActiveUser   SalesforceChatterFeedIncludeFilterType = "ACTIVE_USER"
	SalesforceChatterFeedIncludeFilterTypeStandardUser SalesforceChatterFeedIncludeFilterType = "STANDARD_USER"
)

// Values returns all known values for SalesforceChatterFeedIncludeFilterType.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SalesforceChatterFeedIncludeFilterType) Values() []SalesforceChatterFeedIncludeFilterType {
	return []SalesforceChatterFeedIncludeFilterType{
		"ACTIVE_USER",
		"STANDARD_USER",
	}
}

type SalesforceKnowledgeArticleState string

// Enum values for SalesforceKnowledgeArticleState
const (
	SalesforceKnowledgeArticleStateDraft     SalesforceKnowledgeArticleState = "DRAFT"
	SalesforceKnowledgeArticleStatePublished SalesforceKnowledgeArticleState = "PUBLISHED"
	SalesforceKnowledgeArticleStateArchived  SalesforceKnowledgeArticleState = "ARCHIVED"
)

// Values returns all known values for SalesforceKnowledgeArticleState. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SalesforceKnowledgeArticleState) Values() []SalesforceKnowledgeArticleState {
	return []SalesforceKnowledgeArticleState{
		"DRAFT",
		"PUBLISHED",
		"ARCHIVED",
	}
}

type SalesforceStandardObjectName string

// Enum values for SalesforceStandardObjectName
const (
	SalesforceStandardObjectNameAccount     SalesforceStandardObjectName = "ACCOUNT"
	SalesforceStandardObjectNameCampaign    SalesforceStandardObjectName = "CAMPAIGN"
	SalesforceStandardObjectNameCase        SalesforceStandardObjectName = "CASE"
	SalesforceStandardObjectNameContact     SalesforceStandardObjectName = "CONTACT"
	SalesforceStandardObjectNameContract    SalesforceStandardObjectName = "CONTRACT"
	SalesforceStandardObjectNameDocument    SalesforceStandardObjectName = "DOCUMENT"
	SalesforceStandardObjectNameGroup       SalesforceStandardObjectName = "GROUP"
	SalesforceStandardObjectNameIdea        SalesforceStandardObjectName = "IDEA"
	SalesforceStandardObjectNameLead        SalesforceStandardObjectName = "LEAD"
	SalesforceStandardObjectNameOpportunity SalesforceStandardObjectName = "OPPORTUNITY"
	SalesforceStandardObjectNamePartner     SalesforceStandardObjectName = "PARTNER"
	SalesforceStandardObjectNamePricebook   SalesforceStandardObjectName = "PRICEBOOK"
	SalesforceStandardObjectNameProduct     SalesforceStandardObjectName = "PRODUCT"
	SalesforceStandardObjectNameProfile     SalesforceStandardObjectName = "PROFILE"
	SalesforceStandardObjectNameSolution    SalesforceStandardObjectName = "SOLUTION"
	SalesforceStandardObjectNameTask        SalesforceStandardObjectName = "TASK"
	SalesforceStandardObjectNameUser        SalesforceStandardObjectName = "USER"
)

// Values returns all known values for SalesforceStandardObjectName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SalesforceStandardObjectName) Values() []SalesforceStandardObjectName {
	return []SalesforceStandardObjectName{
		"ACCOUNT",
		"CAMPAIGN",
		"CASE",
		"CONTACT",
		"CONTRACT",
		"DOCUMENT",
		"GROUP",
		"IDEA",
		"LEAD",
		"OPPORTUNITY",
		"PARTNER",
		"PRICEBOOK",
		"PRODUCT",
		"PROFILE",
		"SOLUTION",
		"TASK",
		"USER",
	}
}

type ScoreConfidence string

// Enum values for ScoreConfidence
const (
	ScoreConfidenceVeryHigh     ScoreConfidence = "VERY_HIGH"
	ScoreConfidenceHigh         ScoreConfidence = "HIGH"
	ScoreConfidenceMedium       ScoreConfidence = "MEDIUM"
	ScoreConfidenceLow          ScoreConfidence = "LOW"
	ScoreConfidenceNotAvailable ScoreConfidence = "NOT_AVAILABLE"
)

// Values returns all known values for ScoreConfidence. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScoreConfidence) Values() []ScoreConfidence {
	return []ScoreConfidence{
		"VERY_HIGH",
		"HIGH",
		"MEDIUM",
		"LOW",
		"NOT_AVAILABLE",
	}
}

type ServiceNowAuthenticationType string

// Enum values for ServiceNowAuthenticationType
const (
	ServiceNowAuthenticationTypeHttpBasic ServiceNowAuthenticationType = "HTTP_BASIC"
	ServiceNowAuthenticationTypeOauth2    ServiceNowAuthenticationType = "OAUTH2"
)

// Values returns all known values for ServiceNowAuthenticationType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceNowAuthenticationType) Values() []ServiceNowAuthenticationType {
	return []ServiceNowAuthenticationType{
		"HTTP_BASIC",
		"OAUTH2",
	}
}

type ServiceNowBuildVersionType string

// Enum values for ServiceNowBuildVersionType
const (
	ServiceNowBuildVersionTypeLondon ServiceNowBuildVersionType = "LONDON"
	ServiceNowBuildVersionTypeOthers ServiceNowBuildVersionType = "OTHERS"
)

// Values returns all known values for ServiceNowBuildVersionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceNowBuildVersionType) Values() []ServiceNowBuildVersionType {
	return []ServiceNowBuildVersionType{
		"LONDON",
		"OTHERS",
	}
}

type SharePointOnlineAuthenticationType string

// Enum values for SharePointOnlineAuthenticationType
const (
	SharePointOnlineAuthenticationTypeHttpBasic SharePointOnlineAuthenticationType = "HTTP_BASIC"
	SharePointOnlineAuthenticationTypeOauth2    SharePointOnlineAuthenticationType = "OAUTH2"
)

// Values returns all known values for SharePointOnlineAuthenticationType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SharePointOnlineAuthenticationType) Values() []SharePointOnlineAuthenticationType {
	return []SharePointOnlineAuthenticationType{
		"HTTP_BASIC",
		"OAUTH2",
	}
}

type SharePointVersion string

// Enum values for SharePointVersion
const (
	SharePointVersionSharepoint2013   SharePointVersion = "SHAREPOINT_2013"
	SharePointVersionSharepoint2016   SharePointVersion = "SHAREPOINT_2016"
	SharePointVersionSharepointOnline SharePointVersion = "SHAREPOINT_ONLINE"
	SharePointVersionSharepoint2019   SharePointVersion = "SHAREPOINT_2019"
)

// Values returns all known values for SharePointVersion. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SharePointVersion) Values() []SharePointVersion {
	return []SharePointVersion{
		"SHAREPOINT_2013",
		"SHAREPOINT_2016",
		"SHAREPOINT_ONLINE",
		"SHAREPOINT_2019",
	}
}

type SlackEntity string

// Enum values for SlackEntity
const (
	SlackEntityPublicChannel  SlackEntity = "PUBLIC_CHANNEL"
	SlackEntityPrivateChannel SlackEntity = "PRIVATE_CHANNEL"
	SlackEntityGroupMessage   SlackEntity = "GROUP_MESSAGE"
	SlackEntityDirectMessage  SlackEntity = "DIRECT_MESSAGE"
)

// Values returns all known values for SlackEntity. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlackEntity) Values() []SlackEntity {
	return []SlackEntity{
		"PUBLIC_CHANNEL",
		"PRIVATE_CHANNEL",
		"GROUP_MESSAGE",
		"DIRECT_MESSAGE",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderDesc SortOrder = "DESC"
	SortOrderAsc  SortOrder = "ASC"
)

// Values returns all known values for SortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"DESC",
		"ASC",
	}
}

type SuggestionType string

// Enum values for SuggestionType
const (
	SuggestionTypeQuery              SuggestionType = "QUERY"
	SuggestionTypeDocumentAttributes SuggestionType = "DOCUMENT_ATTRIBUTES"
)

// Values returns all known values for SuggestionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SuggestionType) Values() []SuggestionType {
	return []SuggestionType{
		"QUERY",
		"DOCUMENT_ATTRIBUTES",
	}
}

type ThesaurusStatus string

// Enum values for ThesaurusStatus
const (
	ThesaurusStatusCreating              ThesaurusStatus = "CREATING"
	ThesaurusStatusActive                ThesaurusStatus = "ACTIVE"
	ThesaurusStatusDeleting              ThesaurusStatus = "DELETING"
	ThesaurusStatusUpdating              ThesaurusStatus = "UPDATING"
	ThesaurusStatusActiveButUpdateFailed ThesaurusStatus = "ACTIVE_BUT_UPDATE_FAILED"
	ThesaurusStatusFailed                ThesaurusStatus = "FAILED"
)

// Values returns all known values for ThesaurusStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThesaurusStatus) Values() []ThesaurusStatus {
	return []ThesaurusStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"UPDATING",
		"ACTIVE_BUT_UPDATE_FAILED",
		"FAILED",
	}
}

type Type string

// Enum values for Type
const (
	TypeSaas      Type = "SAAS"
	TypeOnPremise Type = "ON_PREMISE"
)

// Values returns all known values for Type. Note that this can be expanded in the
// future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Type) Values() []Type {
	return []Type{
		"SAAS",
		"ON_PREMISE",
	}
}

type UserContextPolicy string

// Enum values for UserContextPolicy
const (
	UserContextPolicyAttributeFilter UserContextPolicy = "ATTRIBUTE_FILTER"
	UserContextPolicyUserToken       UserContextPolicy = "USER_TOKEN"
)

// Values returns all known values for UserContextPolicy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UserContextPolicy) Values() []UserContextPolicy {
	return []UserContextPolicy{
		"ATTRIBUTE_FILTER",
		"USER_TOKEN",
	}
}

type UserGroupResolutionMode string

// Enum values for UserGroupResolutionMode
const (
	UserGroupResolutionModeAwsSso UserGroupResolutionMode = "AWS_SSO"
	UserGroupResolutionModeNone   UserGroupResolutionMode = "NONE"
)

// Values returns all known values for UserGroupResolutionMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UserGroupResolutionMode) Values() []UserGroupResolutionMode {
	return []UserGroupResolutionMode{
		"AWS_SSO",
		"NONE",
	}
}

type WarningCode string

// Enum values for WarningCode
const (
	WarningCodeQueryLanguageInvalidSyntax WarningCode = "QUERY_LANGUAGE_INVALID_SYNTAX"
)

// Values returns all known values for WarningCode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WarningCode) Values() []WarningCode {
	return []WarningCode{
		"QUERY_LANGUAGE_INVALID_SYNTAX",
	}
}

type WebCrawlerMode string

// Enum values for WebCrawlerMode
const (
	WebCrawlerModeHostOnly   WebCrawlerMode = "HOST_ONLY"
	WebCrawlerModeSubdomains WebCrawlerMode = "SUBDOMAINS"
	WebCrawlerModeEverything WebCrawlerMode = "EVERYTHING"
)

// Values returns all known values for WebCrawlerMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WebCrawlerMode) Values() []WebCrawlerMode {
	return []WebCrawlerMode{
		"HOST_ONLY",
		"SUBDOMAINS",
		"EVERYTHING",
	}
}
