// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AbortAction string

// Enum values for AbortAction
const (
	AbortActionCancel AbortAction = "CANCEL"
)

// Values returns all known values for AbortAction. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AbortAction) Values() []AbortAction {
	return []AbortAction{
		"CANCEL",
	}
}

type ActionType string

// Enum values for ActionType
const (
	ActionTypePublish   ActionType = "PUBLISH"
	ActionTypeSubscribe ActionType = "SUBSCRIBE"
	ActionTypeReceive   ActionType = "RECEIVE"
	ActionTypeConnect   ActionType = "CONNECT"
)

// Values returns all known values for ActionType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActionType) Values() []ActionType {
	return []ActionType{
		"PUBLISH",
		"SUBSCRIBE",
		"RECEIVE",
		"CONNECT",
	}
}

type AggregationTypeName string

// Enum values for AggregationTypeName
const (
	AggregationTypeNameStatistics  AggregationTypeName = "Statistics"
	AggregationTypeNamePercentiles AggregationTypeName = "Percentiles"
	AggregationTypeNameCardinality AggregationTypeName = "Cardinality"
)

// Values returns all known values for AggregationTypeName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AggregationTypeName) Values() []AggregationTypeName {
	return []AggregationTypeName{
		"Statistics",
		"Percentiles",
		"Cardinality",
	}
}

type AlertTargetType string

// Enum values for AlertTargetType
const (
	AlertTargetTypeSns AlertTargetType = "SNS"
)

// Values returns all known values for AlertTargetType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AlertTargetType) Values() []AlertTargetType {
	return []AlertTargetType{
		"SNS",
	}
}

type ApplicationProtocol string

// Enum values for ApplicationProtocol
const (
	ApplicationProtocolSecureMqtt ApplicationProtocol = "SECURE_MQTT"
	ApplicationProtocolMqttWss    ApplicationProtocol = "MQTT_WSS"
	ApplicationProtocolHttps      ApplicationProtocol = "HTTPS"
	ApplicationProtocolDefault    ApplicationProtocol = "DEFAULT"
)

// Values returns all known values for ApplicationProtocol. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ApplicationProtocol) Values() []ApplicationProtocol {
	return []ApplicationProtocol{
		"SECURE_MQTT",
		"MQTT_WSS",
		"HTTPS",
		"DEFAULT",
	}
}

type AuditCheckRunStatus string

// Enum values for AuditCheckRunStatus
const (
	AuditCheckRunStatusInProgress               AuditCheckRunStatus = "IN_PROGRESS"
	AuditCheckRunStatusWaitingForDataCollection AuditCheckRunStatus = "WAITING_FOR_DATA_COLLECTION"
	AuditCheckRunStatusCanceled                 AuditCheckRunStatus = "CANCELED"
	AuditCheckRunStatusCompletedCompliant       AuditCheckRunStatus = "COMPLETED_COMPLIANT"
	AuditCheckRunStatusCompletedNonCompliant    AuditCheckRunStatus = "COMPLETED_NON_COMPLIANT"
	AuditCheckRunStatusFailed                   AuditCheckRunStatus = "FAILED"
)

// Values returns all known values for AuditCheckRunStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuditCheckRunStatus) Values() []AuditCheckRunStatus {
	return []AuditCheckRunStatus{
		"IN_PROGRESS",
		"WAITING_FOR_DATA_COLLECTION",
		"CANCELED",
		"COMPLETED_COMPLIANT",
		"COMPLETED_NON_COMPLIANT",
		"FAILED",
	}
}

type AuditFindingSeverity string

// Enum values for AuditFindingSeverity
const (
	AuditFindingSeverityCritical AuditFindingSeverity = "CRITICAL"
	AuditFindingSeverityHigh     AuditFindingSeverity = "HIGH"
	AuditFindingSeverityMedium   AuditFindingSeverity = "MEDIUM"
	AuditFindingSeverityLow      AuditFindingSeverity = "LOW"
)

// Values returns all known values for AuditFindingSeverity. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuditFindingSeverity) Values() []AuditFindingSeverity {
	return []AuditFindingSeverity{
		"CRITICAL",
		"HIGH",
		"MEDIUM",
		"LOW",
	}
}

type AuditFrequency string

// Enum values for AuditFrequency
const (
	AuditFrequencyDaily    AuditFrequency = "DAILY"
	AuditFrequencyWeekly   AuditFrequency = "WEEKLY"
	AuditFrequencyBiweekly AuditFrequency = "BIWEEKLY"
	AuditFrequencyMonthly  AuditFrequency = "MONTHLY"
)

// Values returns all known values for AuditFrequency. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuditFrequency) Values() []AuditFrequency {
	return []AuditFrequency{
		"DAILY",
		"WEEKLY",
		"BIWEEKLY",
		"MONTHLY",
	}
}

type AuditMitigationActionsExecutionStatus string

// Enum values for AuditMitigationActionsExecutionStatus
const (
	AuditMitigationActionsExecutionStatusInProgress AuditMitigationActionsExecutionStatus = "IN_PROGRESS"
	AuditMitigationActionsExecutionStatusCompleted  AuditMitigationActionsExecutionStatus = "COMPLETED"
	AuditMitigationActionsExecutionStatusFailed     AuditMitigationActionsExecutionStatus = "FAILED"
	AuditMitigationActionsExecutionStatusCanceled   AuditMitigationActionsExecutionStatus = "CANCELED"
	AuditMitigationActionsExecutionStatusSkipped    AuditMitigationActionsExecutionStatus = "SKIPPED"
	AuditMitigationActionsExecutionStatusPending    AuditMitigationActionsExecutionStatus = "PENDING"
)

// Values returns all known values for AuditMitigationActionsExecutionStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuditMitigationActionsExecutionStatus) Values() []AuditMitigationActionsExecutionStatus {
	return []AuditMitigationActionsExecutionStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
		"CANCELED",
		"SKIPPED",
		"PENDING",
	}
}

type AuditMitigationActionsTaskStatus string

// Enum values for AuditMitigationActionsTaskStatus
const (
	AuditMitigationActionsTaskStatusInProgress AuditMitigationActionsTaskStatus = "IN_PROGRESS"
	AuditMitigationActionsTaskStatusCompleted  AuditMitigationActionsTaskStatus = "COMPLETED"
	AuditMitigationActionsTaskStatusFailed     AuditMitigationActionsTaskStatus = "FAILED"
	AuditMitigationActionsTaskStatusCanceled   AuditMitigationActionsTaskStatus = "CANCELED"
)

// Values returns all known values for AuditMitigationActionsTaskStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuditMitigationActionsTaskStatus) Values() []AuditMitigationActionsTaskStatus {
	return []AuditMitigationActionsTaskStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
		"CANCELED",
	}
}

type AuditNotificationType string

// Enum values for AuditNotificationType
const (
	AuditNotificationTypeSns AuditNotificationType = "SNS"
)

// Values returns all known values for AuditNotificationType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuditNotificationType) Values() []AuditNotificationType {
	return []AuditNotificationType{
		"SNS",
	}
}

type AuditTaskStatus string

// Enum values for AuditTaskStatus
const (
	AuditTaskStatusInProgress AuditTaskStatus = "IN_PROGRESS"
	AuditTaskStatusCompleted  AuditTaskStatus = "COMPLETED"
	AuditTaskStatusFailed     AuditTaskStatus = "FAILED"
	AuditTaskStatusCanceled   AuditTaskStatus = "CANCELED"
)

// Values returns all known values for AuditTaskStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuditTaskStatus) Values() []AuditTaskStatus {
	return []AuditTaskStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
		"CANCELED",
	}
}

type AuditTaskType string

// Enum values for AuditTaskType
const (
	AuditTaskTypeOnDemandAuditTask  AuditTaskType = "ON_DEMAND_AUDIT_TASK"
	AuditTaskTypeScheduledAuditTask AuditTaskType = "SCHEDULED_AUDIT_TASK"
)

// Values returns all known values for AuditTaskType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuditTaskType) Values() []AuditTaskType {
	return []AuditTaskType{
		"ON_DEMAND_AUDIT_TASK",
		"SCHEDULED_AUDIT_TASK",
	}
}

type AuthDecision string

// Enum values for AuthDecision
const (
	AuthDecisionAllowed      AuthDecision = "ALLOWED"
	AuthDecisionExplicitDeny AuthDecision = "EXPLICIT_DENY"
	AuthDecisionImplicitDeny AuthDecision = "IMPLICIT_DENY"
)

// Values returns all known values for AuthDecision. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthDecision) Values() []AuthDecision {
	return []AuthDecision{
		"ALLOWED",
		"EXPLICIT_DENY",
		"IMPLICIT_DENY",
	}
}

type AuthenticationType string

// Enum values for AuthenticationType
const (
	AuthenticationTypeCustomAuthX509 AuthenticationType = "CUSTOM_AUTH_X509"
	AuthenticationTypeCustomAuth     AuthenticationType = "CUSTOM_AUTH"
	AuthenticationTypeAwsX509        AuthenticationType = "AWS_X509"
	AuthenticationTypeAwsSigv4       AuthenticationType = "AWS_SIGV4"
	AuthenticationTypeDefault        AuthenticationType = "DEFAULT"
)

// Values returns all known values for AuthenticationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthenticationType) Values() []AuthenticationType {
	return []AuthenticationType{
		"CUSTOM_AUTH_X509",
		"CUSTOM_AUTH",
		"AWS_X509",
		"AWS_SIGV4",
		"DEFAULT",
	}
}

type AuthorizerStatus string

// Enum values for AuthorizerStatus
const (
	AuthorizerStatusActive   AuthorizerStatus = "ACTIVE"
	AuthorizerStatusInactive AuthorizerStatus = "INACTIVE"
)

// Values returns all known values for AuthorizerStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthorizerStatus) Values() []AuthorizerStatus {
	return []AuthorizerStatus{
		"ACTIVE",
		"INACTIVE",
	}
}

type AutoRegistrationStatus string

// Enum values for AutoRegistrationStatus
const (
	AutoRegistrationStatusEnable  AutoRegistrationStatus = "ENABLE"
	AutoRegistrationStatusDisable AutoRegistrationStatus = "DISABLE"
)

// Values returns all known values for AutoRegistrationStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoRegistrationStatus) Values() []AutoRegistrationStatus {
	return []AutoRegistrationStatus{
		"ENABLE",
		"DISABLE",
	}
}

type AwsJobAbortCriteriaAbortAction string

// Enum values for AwsJobAbortCriteriaAbortAction
const (
	AwsJobAbortCriteriaAbortActionCancel AwsJobAbortCriteriaAbortAction = "CANCEL"
)

// Values returns all known values for AwsJobAbortCriteriaAbortAction. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AwsJobAbortCriteriaAbortAction) Values() []AwsJobAbortCriteriaAbortAction {
	return []AwsJobAbortCriteriaAbortAction{
		"CANCEL",
	}
}

type AwsJobAbortCriteriaFailureType string

// Enum values for AwsJobAbortCriteriaFailureType
const (
	AwsJobAbortCriteriaFailureTypeFailed   AwsJobAbortCriteriaFailureType = "FAILED"
	AwsJobAbortCriteriaFailureTypeRejected AwsJobAbortCriteriaFailureType = "REJECTED"
	AwsJobAbortCriteriaFailureTypeTimedOut AwsJobAbortCriteriaFailureType = "TIMED_OUT"
	AwsJobAbortCriteriaFailureTypeAll      AwsJobAbortCriteriaFailureType = "ALL"
)

// Values returns all known values for AwsJobAbortCriteriaFailureType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AwsJobAbortCriteriaFailureType) Values() []AwsJobAbortCriteriaFailureType {
	return []AwsJobAbortCriteriaFailureType{
		"FAILED",
		"REJECTED",
		"TIMED_OUT",
		"ALL",
	}
}

type BehaviorCriteriaType string

// Enum values for BehaviorCriteriaType
const (
	BehaviorCriteriaTypeStatic          BehaviorCriteriaType = "STATIC"
	BehaviorCriteriaTypeStatistical     BehaviorCriteriaType = "STATISTICAL"
	BehaviorCriteriaTypeMachineLearning BehaviorCriteriaType = "MACHINE_LEARNING"
)

// Values returns all known values for BehaviorCriteriaType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BehaviorCriteriaType) Values() []BehaviorCriteriaType {
	return []BehaviorCriteriaType{
		"STATIC",
		"STATISTICAL",
		"MACHINE_LEARNING",
	}
}

type CACertificateStatus string

// Enum values for CACertificateStatus
const (
	CACertificateStatusActive   CACertificateStatus = "ACTIVE"
	CACertificateStatusInactive CACertificateStatus = "INACTIVE"
)

// Values returns all known values for CACertificateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CACertificateStatus) Values() []CACertificateStatus {
	return []CACertificateStatus{
		"ACTIVE",
		"INACTIVE",
	}
}

type CACertificateUpdateAction string

// Enum values for CACertificateUpdateAction
const (
	CACertificateUpdateActionDeactivate CACertificateUpdateAction = "DEACTIVATE"
)

// Values returns all known values for CACertificateUpdateAction. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CACertificateUpdateAction) Values() []CACertificateUpdateAction {
	return []CACertificateUpdateAction{
		"DEACTIVATE",
	}
}

type CannedAccessControlList string

// Enum values for CannedAccessControlList
const (
	CannedAccessControlListPrivate                CannedAccessControlList = "private"
	CannedAccessControlListPublicRead             CannedAccessControlList = "public-read"
	CannedAccessControlListPublicReadWrite        CannedAccessControlList = "public-read-write"
	CannedAccessControlListAwsExecRead            CannedAccessControlList = "aws-exec-read"
	CannedAccessControlListAuthenticatedRead      CannedAccessControlList = "authenticated-read"
	CannedAccessControlListBucketOwnerRead        CannedAccessControlList = "bucket-owner-read"
	CannedAccessControlListBucketOwnerFullControl CannedAccessControlList = "bucket-owner-full-control"
	CannedAccessControlListLogDeliveryWrite       CannedAccessControlList = "log-delivery-write"
)

// Values returns all known values for CannedAccessControlList. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CannedAccessControlList) Values() []CannedAccessControlList {
	return []CannedAccessControlList{
		"private",
		"public-read",
		"public-read-write",
		"aws-exec-read",
		"authenticated-read",
		"bucket-owner-read",
		"bucket-owner-full-control",
		"log-delivery-write",
	}
}

type CertificateMode string

// Enum values for CertificateMode
const (
	CertificateModeDefault CertificateMode = "DEFAULT"
	CertificateModeSniOnly CertificateMode = "SNI_ONLY"
)

// Values returns all known values for CertificateMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CertificateMode) Values() []CertificateMode {
	return []CertificateMode{
		"DEFAULT",
		"SNI_ONLY",
	}
}

type CertificateProviderOperation string

// Enum values for CertificateProviderOperation
const (
	CertificateProviderOperationCreateCertificateFromCsr CertificateProviderOperation = "CreateCertificateFromCsr"
)

// Values returns all known values for CertificateProviderOperation. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CertificateProviderOperation) Values() []CertificateProviderOperation {
	return []CertificateProviderOperation{
		"CreateCertificateFromCsr",
	}
}

type CertificateStatus string

// Enum values for CertificateStatus
const (
	CertificateStatusActive            CertificateStatus = "ACTIVE"
	CertificateStatusInactive          CertificateStatus = "INACTIVE"
	CertificateStatusRevoked           CertificateStatus = "REVOKED"
	CertificateStatusPendingTransfer   CertificateStatus = "PENDING_TRANSFER"
	CertificateStatusRegisterInactive  CertificateStatus = "REGISTER_INACTIVE"
	CertificateStatusPendingActivation CertificateStatus = "PENDING_ACTIVATION"
)

// Values returns all known values for CertificateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CertificateStatus) Values() []CertificateStatus {
	return []CertificateStatus{
		"ACTIVE",
		"INACTIVE",
		"REVOKED",
		"PENDING_TRANSFER",
		"REGISTER_INACTIVE",
		"PENDING_ACTIVATION",
	}
}

type CommandExecutionStatus string

// Enum values for CommandExecutionStatus
const (
	CommandExecutionStatusCreated    CommandExecutionStatus = "CREATED"
	CommandExecutionStatusInProgress CommandExecutionStatus = "IN_PROGRESS"
	CommandExecutionStatusSucceeded  CommandExecutionStatus = "SUCCEEDED"
	CommandExecutionStatusFailed     CommandExecutionStatus = "FAILED"
	CommandExecutionStatusRejected   CommandExecutionStatus = "REJECTED"
	CommandExecutionStatusTimedOut   CommandExecutionStatus = "TIMED_OUT"
)

// Values returns all known values for CommandExecutionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CommandExecutionStatus) Values() []CommandExecutionStatus {
	return []CommandExecutionStatus{
		"CREATED",
		"IN_PROGRESS",
		"SUCCEEDED",
		"FAILED",
		"REJECTED",
		"TIMED_OUT",
	}
}

type CommandNamespace string

// Enum values for CommandNamespace
const (
	CommandNamespaceAWSIoT          CommandNamespace = "AWS-IoT"
	CommandNamespaceAWSIoTFleetWise CommandNamespace = "AWS-IoT-FleetWise"
)

// Values returns all known values for CommandNamespace. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CommandNamespace) Values() []CommandNamespace {
	return []CommandNamespace{
		"AWS-IoT",
		"AWS-IoT-FleetWise",
	}
}

type ComparisonOperator string

// Enum values for ComparisonOperator
const (
	ComparisonOperatorLessThan          ComparisonOperator = "less-than"
	ComparisonOperatorLessThanEquals    ComparisonOperator = "less-than-equals"
	ComparisonOperatorGreaterThan       ComparisonOperator = "greater-than"
	ComparisonOperatorGreaterThanEquals ComparisonOperator = "greater-than-equals"
	ComparisonOperatorInCidrSet         ComparisonOperator = "in-cidr-set"
	ComparisonOperatorNotInCidrSet      ComparisonOperator = "not-in-cidr-set"
	ComparisonOperatorInPortSet         ComparisonOperator = "in-port-set"
	ComparisonOperatorNotInPortSet      ComparisonOperator = "not-in-port-set"
	ComparisonOperatorInSet             ComparisonOperator = "in-set"
	ComparisonOperatorNotInSet          ComparisonOperator = "not-in-set"
)

// Values returns all known values for ComparisonOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ComparisonOperator) Values() []ComparisonOperator {
	return []ComparisonOperator{
		"less-than",
		"less-than-equals",
		"greater-than",
		"greater-than-equals",
		"in-cidr-set",
		"not-in-cidr-set",
		"in-port-set",
		"not-in-port-set",
		"in-set",
		"not-in-set",
	}
}

type ConfidenceLevel string

// Enum values for ConfidenceLevel
const (
	ConfidenceLevelLow    ConfidenceLevel = "LOW"
	ConfidenceLevelMedium ConfidenceLevel = "MEDIUM"
	ConfidenceLevelHigh   ConfidenceLevel = "HIGH"
)

// Values returns all known values for ConfidenceLevel. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfidenceLevel) Values() []ConfidenceLevel {
	return []ConfidenceLevel{
		"LOW",
		"MEDIUM",
		"HIGH",
	}
}

type ConfigName string

// Enum values for ConfigName
const (
	ConfigNameCertAgeThresholdInDays        ConfigName = "CERT_AGE_THRESHOLD_IN_DAYS"
	ConfigNameCertExpirationThresholdInDays ConfigName = "CERT_EXPIRATION_THRESHOLD_IN_DAYS"
)

// Values returns all known values for ConfigName. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfigName) Values() []ConfigName {
	return []ConfigName{
		"CERT_AGE_THRESHOLD_IN_DAYS",
		"CERT_EXPIRATION_THRESHOLD_IN_DAYS",
	}
}

type CustomMetricType string

// Enum values for CustomMetricType
const (
	CustomMetricTypeStringList    CustomMetricType = "string-list"
	CustomMetricTypeIpAddressList CustomMetricType = "ip-address-list"
	CustomMetricTypeNumberList    CustomMetricType = "number-list"
	CustomMetricTypeNumber        CustomMetricType = "number"
)

// Values returns all known values for CustomMetricType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CustomMetricType) Values() []CustomMetricType {
	return []CustomMetricType{
		"string-list",
		"ip-address-list",
		"number-list",
		"number",
	}
}

type DayOfWeek string

// Enum values for DayOfWeek
const (
	DayOfWeekSun DayOfWeek = "SUN"
	DayOfWeekMon DayOfWeek = "MON"
	DayOfWeekTue DayOfWeek = "TUE"
	DayOfWeekWed DayOfWeek = "WED"
	DayOfWeekThu DayOfWeek = "THU"
	DayOfWeekFri DayOfWeek = "FRI"
	DayOfWeekSat DayOfWeek = "SAT"
)

// Values returns all known values for DayOfWeek. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DayOfWeek) Values() []DayOfWeek {
	return []DayOfWeek{
		"SUN",
		"MON",
		"TUE",
		"WED",
		"THU",
		"FRI",
		"SAT",
	}
}

type DetectMitigationActionExecutionStatus string

// Enum values for DetectMitigationActionExecutionStatus
const (
	DetectMitigationActionExecutionStatusInProgress DetectMitigationActionExecutionStatus = "IN_PROGRESS"
	DetectMitigationActionExecutionStatusSuccessful DetectMitigationActionExecutionStatus = "SUCCESSFUL"
	DetectMitigationActionExecutionStatusFailed     DetectMitigationActionExecutionStatus = "FAILED"
	DetectMitigationActionExecutionStatusSkipped    DetectMitigationActionExecutionStatus = "SKIPPED"
)

// Values returns all known values for DetectMitigationActionExecutionStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DetectMitigationActionExecutionStatus) Values() []DetectMitigationActionExecutionStatus {
	return []DetectMitigationActionExecutionStatus{
		"IN_PROGRESS",
		"SUCCESSFUL",
		"FAILED",
		"SKIPPED",
	}
}

type DetectMitigationActionsTaskStatus string

// Enum values for DetectMitigationActionsTaskStatus
const (
	DetectMitigationActionsTaskStatusInProgress DetectMitigationActionsTaskStatus = "IN_PROGRESS"
	DetectMitigationActionsTaskStatusSuccessful DetectMitigationActionsTaskStatus = "SUCCESSFUL"
	DetectMitigationActionsTaskStatusFailed     DetectMitigationActionsTaskStatus = "FAILED"
	DetectMitigationActionsTaskStatusCanceled   DetectMitigationActionsTaskStatus = "CANCELED"
)

// Values returns all known values for DetectMitigationActionsTaskStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DetectMitigationActionsTaskStatus) Values() []DetectMitigationActionsTaskStatus {
	return []DetectMitigationActionsTaskStatus{
		"IN_PROGRESS",
		"SUCCESSFUL",
		"FAILED",
		"CANCELED",
	}
}

type DeviceCertificateUpdateAction string

// Enum values for DeviceCertificateUpdateAction
const (
	DeviceCertificateUpdateActionDeactivate DeviceCertificateUpdateAction = "DEACTIVATE"
)

// Values returns all known values for DeviceCertificateUpdateAction. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceCertificateUpdateAction) Values() []DeviceCertificateUpdateAction {
	return []DeviceCertificateUpdateAction{
		"DEACTIVATE",
	}
}

type DeviceDefenderIndexingMode string

// Enum values for DeviceDefenderIndexingMode
const (
	DeviceDefenderIndexingModeOff        DeviceDefenderIndexingMode = "OFF"
	DeviceDefenderIndexingModeViolations DeviceDefenderIndexingMode = "VIOLATIONS"
)

// Values returns all known values for DeviceDefenderIndexingMode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceDefenderIndexingMode) Values() []DeviceDefenderIndexingMode {
	return []DeviceDefenderIndexingMode{
		"OFF",
		"VIOLATIONS",
	}
}

type DimensionType string

// Enum values for DimensionType
const (
	DimensionTypeTopicFilter DimensionType = "TOPIC_FILTER"
)

// Values returns all known values for DimensionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DimensionType) Values() []DimensionType {
	return []DimensionType{
		"TOPIC_FILTER",
	}
}

type DimensionValueOperator string

// Enum values for DimensionValueOperator
const (
	DimensionValueOperatorIn    DimensionValueOperator = "IN"
	DimensionValueOperatorNotIn DimensionValueOperator = "NOT_IN"
)

// Values returns all known values for DimensionValueOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DimensionValueOperator) Values() []DimensionValueOperator {
	return []DimensionValueOperator{
		"IN",
		"NOT_IN",
	}
}

type DisconnectReasonValue string

// Enum values for DisconnectReasonValue
const (
	DisconnectReasonValueAuthError                 DisconnectReasonValue = "AUTH_ERROR"
	DisconnectReasonValueClientInitiatedDisconnect DisconnectReasonValue = "CLIENT_INITIATED_DISCONNECT"
	DisconnectReasonValueClientError               DisconnectReasonValue = "CLIENT_ERROR"
	DisconnectReasonValueConnectionLost            DisconnectReasonValue = "CONNECTION_LOST"
	DisconnectReasonValueDuplicateClientid         DisconnectReasonValue = "DUPLICATE_CLIENTID"
	DisconnectReasonValueForbiddenAccess           DisconnectReasonValue = "FORBIDDEN_ACCESS"
	DisconnectReasonValueMqttKeepAliveTimeout      DisconnectReasonValue = "MQTT_KEEP_ALIVE_TIMEOUT"
	DisconnectReasonValueServerError               DisconnectReasonValue = "SERVER_ERROR"
	DisconnectReasonValueServerInitiatedDisconnect DisconnectReasonValue = "SERVER_INITIATED_DISCONNECT"
	DisconnectReasonValueThrottled                 DisconnectReasonValue = "THROTTLED"
	DisconnectReasonValueWebsocketTtlExpiration    DisconnectReasonValue = "WEBSOCKET_TTL_EXPIRATION"
	DisconnectReasonValueCustomauthTtlExpiration   DisconnectReasonValue = "CUSTOMAUTH_TTL_EXPIRATION"
	DisconnectReasonValueUnknown                   DisconnectReasonValue = "UNKNOWN"
	DisconnectReasonValueNone                      DisconnectReasonValue = "NONE"
)

// Values returns all known values for DisconnectReasonValue. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DisconnectReasonValue) Values() []DisconnectReasonValue {
	return []DisconnectReasonValue{
		"AUTH_ERROR",
		"CLIENT_INITIATED_DISCONNECT",
		"CLIENT_ERROR",
		"CONNECTION_LOST",
		"DUPLICATE_CLIENTID",
		"FORBIDDEN_ACCESS",
		"MQTT_KEEP_ALIVE_TIMEOUT",
		"SERVER_ERROR",
		"SERVER_INITIATED_DISCONNECT",
		"THROTTLED",
		"WEBSOCKET_TTL_EXPIRATION",
		"CUSTOMAUTH_TTL_EXPIRATION",
		"UNKNOWN",
		"NONE",
	}
}

type DomainConfigurationStatus string

// Enum values for DomainConfigurationStatus
const (
	DomainConfigurationStatusEnabled  DomainConfigurationStatus = "ENABLED"
	DomainConfigurationStatusDisabled DomainConfigurationStatus = "DISABLED"
)

// Values returns all known values for DomainConfigurationStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DomainConfigurationStatus) Values() []DomainConfigurationStatus {
	return []DomainConfigurationStatus{
		"ENABLED",
		"DISABLED",
	}
}

type DomainType string

// Enum values for DomainType
const (
	DomainTypeEndpoint        DomainType = "ENDPOINT"
	DomainTypeAwsManaged      DomainType = "AWS_MANAGED"
	DomainTypeCustomerManaged DomainType = "CUSTOMER_MANAGED"
)

// Values returns all known values for DomainType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DomainType) Values() []DomainType {
	return []DomainType{
		"ENDPOINT",
		"AWS_MANAGED",
		"CUSTOMER_MANAGED",
	}
}

type DynamicGroupStatus string

// Enum values for DynamicGroupStatus
const (
	DynamicGroupStatusActive     DynamicGroupStatus = "ACTIVE"
	DynamicGroupStatusBuilding   DynamicGroupStatus = "BUILDING"
	DynamicGroupStatusRebuilding DynamicGroupStatus = "REBUILDING"
)

// Values returns all known values for DynamicGroupStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DynamicGroupStatus) Values() []DynamicGroupStatus {
	return []DynamicGroupStatus{
		"ACTIVE",
		"BUILDING",
		"REBUILDING",
	}
}

type DynamoKeyType string

// Enum values for DynamoKeyType
const (
	DynamoKeyTypeString DynamoKeyType = "STRING"
	DynamoKeyTypeNumber DynamoKeyType = "NUMBER"
)

// Values returns all known values for DynamoKeyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DynamoKeyType) Values() []DynamoKeyType {
	return []DynamoKeyType{
		"STRING",
		"NUMBER",
	}
}

type EventType string

// Enum values for EventType
const (
	EventTypeThing                EventType = "THING"
	EventTypeThingGroup           EventType = "THING_GROUP"
	EventTypeThingType            EventType = "THING_TYPE"
	EventTypeThingGroupMembership EventType = "THING_GROUP_MEMBERSHIP"
	EventTypeThingGroupHierarchy  EventType = "THING_GROUP_HIERARCHY"
	EventTypeThingTypeAssociation EventType = "THING_TYPE_ASSOCIATION"
	EventTypeJob                  EventType = "JOB"
	EventTypeJobExecution         EventType = "JOB_EXECUTION"
	EventTypePolicy               EventType = "POLICY"
	EventTypeCertificate          EventType = "CERTIFICATE"
	EventTypeCaCertificate        EventType = "CA_CERTIFICATE"
)

// Values returns all known values for EventType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventType) Values() []EventType {
	return []EventType{
		"THING",
		"THING_GROUP",
		"THING_TYPE",
		"THING_GROUP_MEMBERSHIP",
		"THING_GROUP_HIERARCHY",
		"THING_TYPE_ASSOCIATION",
		"JOB",
		"JOB_EXECUTION",
		"POLICY",
		"CERTIFICATE",
		"CA_CERTIFICATE",
	}
}

type FieldType string

// Enum values for FieldType
const (
	FieldTypeNumber  FieldType = "Number"
	FieldTypeString  FieldType = "String"
	FieldTypeBoolean FieldType = "Boolean"
)

// Values returns all known values for FieldType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FieldType) Values() []FieldType {
	return []FieldType{
		"Number",
		"String",
		"Boolean",
	}
}

type FleetMetricUnit string

// Enum values for FleetMetricUnit
const (
	FleetMetricUnitSeconds         FleetMetricUnit = "Seconds"
	FleetMetricUnitMicroseconds    FleetMetricUnit = "Microseconds"
	FleetMetricUnitMilliseconds    FleetMetricUnit = "Milliseconds"
	FleetMetricUnitBytes           FleetMetricUnit = "Bytes"
	FleetMetricUnitKilobytes       FleetMetricUnit = "Kilobytes"
	FleetMetricUnitMegabytes       FleetMetricUnit = "Megabytes"
	FleetMetricUnitGigabytes       FleetMetricUnit = "Gigabytes"
	FleetMetricUnitTerabytes       FleetMetricUnit = "Terabytes"
	FleetMetricUnitBits            FleetMetricUnit = "Bits"
	FleetMetricUnitKilobits        FleetMetricUnit = "Kilobits"
	FleetMetricUnitMegabits        FleetMetricUnit = "Megabits"
	FleetMetricUnitGigabits        FleetMetricUnit = "Gigabits"
	FleetMetricUnitTerabits        FleetMetricUnit = "Terabits"
	FleetMetricUnitPercent         FleetMetricUnit = "Percent"
	FleetMetricUnitCount           FleetMetricUnit = "Count"
	FleetMetricUnitBytesSecond     FleetMetricUnit = "Bytes/Second"
	FleetMetricUnitKilobytesSecond FleetMetricUnit = "Kilobytes/Second"
	FleetMetricUnitMegabytesSecond FleetMetricUnit = "Megabytes/Second"
	FleetMetricUnitGigabytesSecond FleetMetricUnit = "Gigabytes/Second"
	FleetMetricUnitTerabytesSecond FleetMetricUnit = "Terabytes/Second"
	FleetMetricUnitBitsSecond      FleetMetricUnit = "Bits/Second"
	FleetMetricUnitKilobitsSecond  FleetMetricUnit = "Kilobits/Second"
	FleetMetricUnitMegabitsSecond  FleetMetricUnit = "Megabits/Second"
	FleetMetricUnitGigabitsSecond  FleetMetricUnit = "Gigabits/Second"
	FleetMetricUnitTerabitsSecond  FleetMetricUnit = "Terabits/Second"
	FleetMetricUnitCountSecond     FleetMetricUnit = "Count/Second"
	FleetMetricUnitNone            FleetMetricUnit = "None"
)

// Values returns all known values for FleetMetricUnit. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FleetMetricUnit) Values() []FleetMetricUnit {
	return []FleetMetricUnit{
		"Seconds",
		"Microseconds",
		"Milliseconds",
		"Bytes",
		"Kilobytes",
		"Megabytes",
		"Gigabytes",
		"Terabytes",
		"Bits",
		"Kilobits",
		"Megabits",
		"Gigabits",
		"Terabits",
		"Percent",
		"Count",
		"Bytes/Second",
		"Kilobytes/Second",
		"Megabytes/Second",
		"Gigabytes/Second",
		"Terabytes/Second",
		"Bits/Second",
		"Kilobits/Second",
		"Megabits/Second",
		"Gigabits/Second",
		"Terabits/Second",
		"Count/Second",
		"None",
	}
}

type IndexStatus string

// Enum values for IndexStatus
const (
	IndexStatusActive     IndexStatus = "ACTIVE"
	IndexStatusBuilding   IndexStatus = "BUILDING"
	IndexStatusRebuilding IndexStatus = "REBUILDING"
)

// Values returns all known values for IndexStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IndexStatus) Values() []IndexStatus {
	return []IndexStatus{
		"ACTIVE",
		"BUILDING",
		"REBUILDING",
	}
}

type JobEndBehavior string

// Enum values for JobEndBehavior
const (
	JobEndBehaviorStopRollout JobEndBehavior = "STOP_ROLLOUT"
	JobEndBehaviorCancel      JobEndBehavior = "CANCEL"
	JobEndBehaviorForceCancel JobEndBehavior = "FORCE_CANCEL"
)

// Values returns all known values for JobEndBehavior. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobEndBehavior) Values() []JobEndBehavior {
	return []JobEndBehavior{
		"STOP_ROLLOUT",
		"CANCEL",
		"FORCE_CANCEL",
	}
}

type JobExecutionFailureType string

// Enum values for JobExecutionFailureType
const (
	JobExecutionFailureTypeFailed   JobExecutionFailureType = "FAILED"
	JobExecutionFailureTypeRejected JobExecutionFailureType = "REJECTED"
	JobExecutionFailureTypeTimedOut JobExecutionFailureType = "TIMED_OUT"
	JobExecutionFailureTypeAll      JobExecutionFailureType = "ALL"
)

// Values returns all known values for JobExecutionFailureType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobExecutionFailureType) Values() []JobExecutionFailureType {
	return []JobExecutionFailureType{
		"FAILED",
		"REJECTED",
		"TIMED_OUT",
		"ALL",
	}
}

type JobExecutionStatus string

// Enum values for JobExecutionStatus
const (
	JobExecutionStatusQueued     JobExecutionStatus = "QUEUED"
	JobExecutionStatusInProgress JobExecutionStatus = "IN_PROGRESS"
	JobExecutionStatusSucceeded  JobExecutionStatus = "SUCCEEDED"
	JobExecutionStatusFailed     JobExecutionStatus = "FAILED"
	JobExecutionStatusTimedOut   JobExecutionStatus = "TIMED_OUT"
	JobExecutionStatusRejected   JobExecutionStatus = "REJECTED"
	JobExecutionStatusRemoved    JobExecutionStatus = "REMOVED"
	JobExecutionStatusCanceled   JobExecutionStatus = "CANCELED"
)

// Values returns all known values for JobExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobExecutionStatus) Values() []JobExecutionStatus {
	return []JobExecutionStatus{
		"QUEUED",
		"IN_PROGRESS",
		"SUCCEEDED",
		"FAILED",
		"TIMED_OUT",
		"REJECTED",
		"REMOVED",
		"CANCELED",
	}
}

type JobStatus string

// Enum values for JobStatus
const (
	JobStatusInProgress         JobStatus = "IN_PROGRESS"
	JobStatusCanceled           JobStatus = "CANCELED"
	JobStatusCompleted          JobStatus = "COMPLETED"
	JobStatusDeletionInProgress JobStatus = "DELETION_IN_PROGRESS"
	JobStatusScheduled          JobStatus = "SCHEDULED"
)

// Values returns all known values for JobStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobStatus) Values() []JobStatus {
	return []JobStatus{
		"IN_PROGRESS",
		"CANCELED",
		"COMPLETED",
		"DELETION_IN_PROGRESS",
		"SCHEDULED",
	}
}

type LogLevel string

// Enum values for LogLevel
const (
	LogLevelDebug    LogLevel = "DEBUG"
	LogLevelInfo     LogLevel = "INFO"
	LogLevelError    LogLevel = "ERROR"
	LogLevelWarn     LogLevel = "WARN"
	LogLevelDisabled LogLevel = "DISABLED"
)

// Values returns all known values for LogLevel. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LogLevel) Values() []LogLevel {
	return []LogLevel{
		"DEBUG",
		"INFO",
		"ERROR",
		"WARN",
		"DISABLED",
	}
}

type LogTargetType string

// Enum values for LogTargetType
const (
	LogTargetTypeDefault     LogTargetType = "DEFAULT"
	LogTargetTypeThingGroup  LogTargetType = "THING_GROUP"
	LogTargetTypeClientId    LogTargetType = "CLIENT_ID"
	LogTargetTypeSourceIp    LogTargetType = "SOURCE_IP"
	LogTargetTypePrincipalId LogTargetType = "PRINCIPAL_ID"
)

// Values returns all known values for LogTargetType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LogTargetType) Values() []LogTargetType {
	return []LogTargetType{
		"DEFAULT",
		"THING_GROUP",
		"CLIENT_ID",
		"SOURCE_IP",
		"PRINCIPAL_ID",
	}
}

type MessageFormat string

// Enum values for MessageFormat
const (
	MessageFormatRaw  MessageFormat = "RAW"
	MessageFormatJson MessageFormat = "JSON"
)

// Values returns all known values for MessageFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageFormat) Values() []MessageFormat {
	return []MessageFormat{
		"RAW",
		"JSON",
	}
}

type MitigationActionType string

// Enum values for MitigationActionType
const (
	MitigationActionTypeUpdateDeviceCertificate     MitigationActionType = "UPDATE_DEVICE_CERTIFICATE"
	MitigationActionTypeUpdateCaCertificate         MitigationActionType = "UPDATE_CA_CERTIFICATE"
	MitigationActionTypeAddThingsToThingGroup       MitigationActionType = "ADD_THINGS_TO_THING_GROUP"
	MitigationActionTypeReplaceDefaultPolicyVersion MitigationActionType = "REPLACE_DEFAULT_POLICY_VERSION"
	MitigationActionTypeEnableIotLogging            MitigationActionType = "ENABLE_IOT_LOGGING"
	MitigationActionTypePublishFindingToSns         MitigationActionType = "PUBLISH_FINDING_TO_SNS"
)

// Values returns all known values for MitigationActionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MitigationActionType) Values() []MitigationActionType {
	return []MitigationActionType{
		"UPDATE_DEVICE_CERTIFICATE",
		"UPDATE_CA_CERTIFICATE",
		"ADD_THINGS_TO_THING_GROUP",
		"REPLACE_DEFAULT_POLICY_VERSION",
		"ENABLE_IOT_LOGGING",
		"PUBLISH_FINDING_TO_SNS",
	}
}

type ModelStatus string

// Enum values for ModelStatus
const (
	ModelStatusPendingBuild ModelStatus = "PENDING_BUILD"
	ModelStatusActive       ModelStatus = "ACTIVE"
	ModelStatusExpired      ModelStatus = "EXPIRED"
)

// Values returns all known values for ModelStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelStatus) Values() []ModelStatus {
	return []ModelStatus{
		"PENDING_BUILD",
		"ACTIVE",
		"EXPIRED",
	}
}

type NamedShadowIndexingMode string

// Enum values for NamedShadowIndexingMode
const (
	NamedShadowIndexingModeOff NamedShadowIndexingMode = "OFF"
	NamedShadowIndexingModeOn  NamedShadowIndexingMode = "ON"
)

// Values returns all known values for NamedShadowIndexingMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NamedShadowIndexingMode) Values() []NamedShadowIndexingMode {
	return []NamedShadowIndexingMode{
		"OFF",
		"ON",
	}
}

type OTAUpdateStatus string

// Enum values for OTAUpdateStatus
const (
	OTAUpdateStatusCreatePending    OTAUpdateStatus = "CREATE_PENDING"
	OTAUpdateStatusCreateInProgress OTAUpdateStatus = "CREATE_IN_PROGRESS"
	OTAUpdateStatusCreateComplete   OTAUpdateStatus = "CREATE_COMPLETE"
	OTAUpdateStatusCreateFailed     OTAUpdateStatus = "CREATE_FAILED"
	OTAUpdateStatusDeleteInProgress OTAUpdateStatus = "DELETE_IN_PROGRESS"
	OTAUpdateStatusDeleteFailed     OTAUpdateStatus = "DELETE_FAILED"
)

// Values returns all known values for OTAUpdateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OTAUpdateStatus) Values() []OTAUpdateStatus {
	return []OTAUpdateStatus{
		"CREATE_PENDING",
		"CREATE_IN_PROGRESS",
		"CREATE_COMPLETE",
		"CREATE_FAILED",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
	}
}

type PackageVersionAction string

// Enum values for PackageVersionAction
const (
	PackageVersionActionPublish   PackageVersionAction = "PUBLISH"
	PackageVersionActionDeprecate PackageVersionAction = "DEPRECATE"
)

// Values returns all known values for PackageVersionAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PackageVersionAction) Values() []PackageVersionAction {
	return []PackageVersionAction{
		"PUBLISH",
		"DEPRECATE",
	}
}

type PackageVersionStatus string

// Enum values for PackageVersionStatus
const (
	PackageVersionStatusDraft      PackageVersionStatus = "DRAFT"
	PackageVersionStatusPublished  PackageVersionStatus = "PUBLISHED"
	PackageVersionStatusDeprecated PackageVersionStatus = "DEPRECATED"
)

// Values returns all known values for PackageVersionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PackageVersionStatus) Values() []PackageVersionStatus {
	return []PackageVersionStatus{
		"DRAFT",
		"PUBLISHED",
		"DEPRECATED",
	}
}

type PolicyTemplateName string

// Enum values for PolicyTemplateName
const (
	PolicyTemplateNameBlankPolicy PolicyTemplateName = "BLANK_POLICY"
)

// Values returns all known values for PolicyTemplateName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PolicyTemplateName) Values() []PolicyTemplateName {
	return []PolicyTemplateName{
		"BLANK_POLICY",
	}
}

type Protocol string

// Enum values for Protocol
const (
	ProtocolMqtt Protocol = "MQTT"
	ProtocolHttp Protocol = "HTTP"
)

// Values returns all known values for Protocol. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Protocol) Values() []Protocol {
	return []Protocol{
		"MQTT",
		"HTTP",
	}
}

type ReportType string

// Enum values for ReportType
const (
	ReportTypeErrors  ReportType = "ERRORS"
	ReportTypeResults ReportType = "RESULTS"
)

// Values returns all known values for ReportType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReportType) Values() []ReportType {
	return []ReportType{
		"ERRORS",
		"RESULTS",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeDeviceCertificate   ResourceType = "DEVICE_CERTIFICATE"
	ResourceTypeCaCertificate       ResourceType = "CA_CERTIFICATE"
	ResourceTypeIotPolicy           ResourceType = "IOT_POLICY"
	ResourceTypeCognitoIdentityPool ResourceType = "COGNITO_IDENTITY_POOL"
	ResourceTypeClientId            ResourceType = "CLIENT_ID"
	ResourceTypeAccountSettings     ResourceType = "ACCOUNT_SETTINGS"
	ResourceTypeRoleAlias           ResourceType = "ROLE_ALIAS"
	ResourceTypeIamRole             ResourceType = "IAM_ROLE"
	ResourceTypeIssuerCertificate   ResourceType = "ISSUER_CERTIFICATE"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"DEVICE_CERTIFICATE",
		"CA_CERTIFICATE",
		"IOT_POLICY",
		"COGNITO_IDENTITY_POOL",
		"CLIENT_ID",
		"ACCOUNT_SETTINGS",
		"ROLE_ALIAS",
		"IAM_ROLE",
		"ISSUER_CERTIFICATE",
	}
}

type RetryableFailureType string

// Enum values for RetryableFailureType
const (
	RetryableFailureTypeFailed   RetryableFailureType = "FAILED"
	RetryableFailureTypeTimedOut RetryableFailureType = "TIMED_OUT"
	RetryableFailureTypeAll      RetryableFailureType = "ALL"
)

// Values returns all known values for RetryableFailureType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RetryableFailureType) Values() []RetryableFailureType {
	return []RetryableFailureType{
		"FAILED",
		"TIMED_OUT",
		"ALL",
	}
}

type SbomValidationErrorCode string

// Enum values for SbomValidationErrorCode
const (
	SbomValidationErrorCodeIncompatibleFormat    SbomValidationErrorCode = "INCOMPATIBLE_FORMAT"
	SbomValidationErrorCodeFileSizeLimitExceeded SbomValidationErrorCode = "FILE_SIZE_LIMIT_EXCEEDED"
)

// Values returns all known values for SbomValidationErrorCode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SbomValidationErrorCode) Values() []SbomValidationErrorCode {
	return []SbomValidationErrorCode{
		"INCOMPATIBLE_FORMAT",
		"FILE_SIZE_LIMIT_EXCEEDED",
	}
}

type SbomValidationResult string

// Enum values for SbomValidationResult
const (
	SbomValidationResultFailed    SbomValidationResult = "FAILED"
	SbomValidationResultSucceeded SbomValidationResult = "SUCCEEDED"
)

// Values returns all known values for SbomValidationResult. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SbomValidationResult) Values() []SbomValidationResult {
	return []SbomValidationResult{
		"FAILED",
		"SUCCEEDED",
	}
}

type SbomValidationStatus string

// Enum values for SbomValidationStatus
const (
	SbomValidationStatusInProgress SbomValidationStatus = "IN_PROGRESS"
	SbomValidationStatusFailed     SbomValidationStatus = "FAILED"
	SbomValidationStatusSucceeded  SbomValidationStatus = "SUCCEEDED"
)

// Values returns all known values for SbomValidationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SbomValidationStatus) Values() []SbomValidationStatus {
	return []SbomValidationStatus{
		"IN_PROGRESS",
		"FAILED",
		"SUCCEEDED",
	}
}

type ServerCertificateStatus string

// Enum values for ServerCertificateStatus
const (
	ServerCertificateStatusInvalid ServerCertificateStatus = "INVALID"
	ServerCertificateStatusValid   ServerCertificateStatus = "VALID"
)

// Values returns all known values for ServerCertificateStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServerCertificateStatus) Values() []ServerCertificateStatus {
	return []ServerCertificateStatus{
		"INVALID",
		"VALID",
	}
}

type ServiceType string

// Enum values for ServiceType
const (
	ServiceTypeData               ServiceType = "DATA"
	ServiceTypeCredentialProvider ServiceType = "CREDENTIAL_PROVIDER"
	ServiceTypeJobs               ServiceType = "JOBS"
)

// Values returns all known values for ServiceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceType) Values() []ServiceType {
	return []ServiceType{
		"DATA",
		"CREDENTIAL_PROVIDER",
		"JOBS",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "ASCENDING"
	SortOrderDescending SortOrder = "DESCENDING"
)

// Values returns all known values for SortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"ASCENDING",
		"DESCENDING",
	}
}

type Status string

// Enum values for Status
const (
	StatusInProgress Status = "InProgress"
	StatusCompleted  Status = "Completed"
	StatusFailed     Status = "Failed"
	StatusCancelled  Status = "Cancelled"
	StatusCancelling Status = "Cancelling"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"InProgress",
		"Completed",
		"Failed",
		"Cancelled",
		"Cancelling",
	}
}

type TargetFieldOrder string

// Enum values for TargetFieldOrder
const (
	TargetFieldOrderLatLon TargetFieldOrder = "LatLon"
	TargetFieldOrderLonLat TargetFieldOrder = "LonLat"
)

// Values returns all known values for TargetFieldOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetFieldOrder) Values() []TargetFieldOrder {
	return []TargetFieldOrder{
		"LatLon",
		"LonLat",
	}
}

type TargetSelection string

// Enum values for TargetSelection
const (
	TargetSelectionContinuous TargetSelection = "CONTINUOUS"
	TargetSelectionSnapshot   TargetSelection = "SNAPSHOT"
)

// Values returns all known values for TargetSelection. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetSelection) Values() []TargetSelection {
	return []TargetSelection{
		"CONTINUOUS",
		"SNAPSHOT",
	}
}

type TemplateType string

// Enum values for TemplateType
const (
	TemplateTypeFleetProvisioning TemplateType = "FLEET_PROVISIONING"
	TemplateTypeJitp              TemplateType = "JITP"
)

// Values returns all known values for TemplateType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TemplateType) Values() []TemplateType {
	return []TemplateType{
		"FLEET_PROVISIONING",
		"JITP",
	}
}

type ThingConnectivityIndexingMode string

// Enum values for ThingConnectivityIndexingMode
const (
	ThingConnectivityIndexingModeOff    ThingConnectivityIndexingMode = "OFF"
	ThingConnectivityIndexingModeStatus ThingConnectivityIndexingMode = "STATUS"
)

// Values returns all known values for ThingConnectivityIndexingMode. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThingConnectivityIndexingMode) Values() []ThingConnectivityIndexingMode {
	return []ThingConnectivityIndexingMode{
		"OFF",
		"STATUS",
	}
}

type ThingGroupIndexingMode string

// Enum values for ThingGroupIndexingMode
const (
	ThingGroupIndexingModeOff ThingGroupIndexingMode = "OFF"
	ThingGroupIndexingModeOn  ThingGroupIndexingMode = "ON"
)

// Values returns all known values for ThingGroupIndexingMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThingGroupIndexingMode) Values() []ThingGroupIndexingMode {
	return []ThingGroupIndexingMode{
		"OFF",
		"ON",
	}
}

type ThingIndexingMode string

// Enum values for ThingIndexingMode
const (
	ThingIndexingModeOff               ThingIndexingMode = "OFF"
	ThingIndexingModeRegistry          ThingIndexingMode = "REGISTRY"
	ThingIndexingModeRegistryAndShadow ThingIndexingMode = "REGISTRY_AND_SHADOW"
)

// Values returns all known values for ThingIndexingMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThingIndexingMode) Values() []ThingIndexingMode {
	return []ThingIndexingMode{
		"OFF",
		"REGISTRY",
		"REGISTRY_AND_SHADOW",
	}
}

type ThingPrincipalType string

// Enum values for ThingPrincipalType
const (
	ThingPrincipalTypeExclusiveThing    ThingPrincipalType = "EXCLUSIVE_THING"
	ThingPrincipalTypeNonExclusiveThing ThingPrincipalType = "NON_EXCLUSIVE_THING"
)

// Values returns all known values for ThingPrincipalType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThingPrincipalType) Values() []ThingPrincipalType {
	return []ThingPrincipalType{
		"EXCLUSIVE_THING",
		"NON_EXCLUSIVE_THING",
	}
}

type TopicRuleDestinationStatus string

// Enum values for TopicRuleDestinationStatus
const (
	TopicRuleDestinationStatusEnabled    TopicRuleDestinationStatus = "ENABLED"
	TopicRuleDestinationStatusInProgress TopicRuleDestinationStatus = "IN_PROGRESS"
	TopicRuleDestinationStatusDisabled   TopicRuleDestinationStatus = "DISABLED"
	TopicRuleDestinationStatusError      TopicRuleDestinationStatus = "ERROR"
	TopicRuleDestinationStatusDeleting   TopicRuleDestinationStatus = "DELETING"
)

// Values returns all known values for TopicRuleDestinationStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TopicRuleDestinationStatus) Values() []TopicRuleDestinationStatus {
	return []TopicRuleDestinationStatus{
		"ENABLED",
		"IN_PROGRESS",
		"DISABLED",
		"ERROR",
		"DELETING",
	}
}

type VerificationState string

// Enum values for VerificationState
const (
	VerificationStateFalsePositive  VerificationState = "FALSE_POSITIVE"
	VerificationStateBenignPositive VerificationState = "BENIGN_POSITIVE"
	VerificationStateTruePositive   VerificationState = "TRUE_POSITIVE"
	VerificationStateUnknown        VerificationState = "UNKNOWN"
)

// Values returns all known values for VerificationState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VerificationState) Values() []VerificationState {
	return []VerificationState{
		"FALSE_POSITIVE",
		"BENIGN_POSITIVE",
		"TRUE_POSITIVE",
		"UNKNOWN",
	}
}

type ViolationEventType string

// Enum values for ViolationEventType
const (
	ViolationEventTypeInAlarm          ViolationEventType = "in-alarm"
	ViolationEventTypeAlarmCleared     ViolationEventType = "alarm-cleared"
	ViolationEventTypeAlarmInvalidated ViolationEventType = "alarm-invalidated"
)

// Values returns all known values for ViolationEventType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ViolationEventType) Values() []ViolationEventType {
	return []ViolationEventType{
		"in-alarm",
		"alarm-cleared",
		"alarm-invalidated",
	}
}
