// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	smithydocument "k8s.io/autoscaler/cluster-autoscaler/cloudprovider/aws/smithy-go/document"
	"time"
)

// Configuration specifying how data should be encrypted. This structure defines
// the encryption algorithm and optional KMS key to be used for server-side
// encryption.
type EncryptionConfiguration struct {

	// The server-side encryption algorithm to use. Valid values are AES256 for
	// S3-managed encryption keys, or aws:kms for Amazon Web Services KMS-managed
	// encryption keys. If you choose SSE-KMS encryption you must grant the S3 Tables
	// maintenance principal access to your KMS key. For more information, see [Permissions requirements for S3 Tables SSE-KMS encryption].
	//
	// [Permissions requirements for S3 Tables SSE-KMS encryption]: https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-kms-permissions.html
	//
	// This member is required.
	SseAlgorithm SSEAlgorithm

	// The Amazon Resource Name (ARN) of the KMS key to use for encryption. This field
	// is required only when sseAlgorithm is set to aws:kms .
	KmsKeyArn *string

	noSmithyDocumentSerde
}

// Contains details about the compaction settings for an Iceberg table.
type IcebergCompactionSettings struct {

	// The target file size for the table in MB.
	TargetFileSizeMB *int32

	noSmithyDocumentSerde
}

// Contains details about the metadata for an Iceberg table.
type IcebergMetadata struct {

	// The schema for an Iceberg table.
	//
	// This member is required.
	Schema *IcebergSchema

	noSmithyDocumentSerde
}

// Contains details about the schema for an Iceberg table.
type IcebergSchema struct {

	// The schema fields for the table
	//
	// This member is required.
	Fields []SchemaField

	noSmithyDocumentSerde
}

// Contains details about the snapshot management settings for an Iceberg table.
// The oldest snapshot expires when its age exceeds the maxSnapshotAgeHours and
// the total number of snapshots exceeds the value for the minimum number of
// snapshots to keep minSnapshotsToKeep .
type IcebergSnapshotManagementSettings struct {

	// The maximum age of a snapshot before it can be expired.
	MaxSnapshotAgeHours *int32

	// The minimum number of snapshots to keep.
	MinSnapshotsToKeep *int32

	noSmithyDocumentSerde
}

// Contains details about the unreferenced file removal settings for an Iceberg
// table bucket.
type IcebergUnreferencedFileRemovalSettings struct {

	// The number of days an object has to be non-current before it is deleted.
	NonCurrentDays *int32

	// The number of days an object has to be unreferenced before it is marked as
	// non-current.
	UnreferencedDays *int32

	noSmithyDocumentSerde
}

// Contains details about a namespace.
type NamespaceSummary struct {

	// The date and time the namespace was created at.
	//
	// This member is required.
	CreatedAt *time.Time

	// The ID of the account that created the namespace.
	//
	// This member is required.
	CreatedBy *string

	// The name of the namespace.
	//
	// This member is required.
	Namespace []string

	// The ID of the account that owns the namespace.
	//
	// This member is required.
	OwnerAccountId *string

	// The system-assigned unique identifier for the namespace.
	NamespaceId *string

	// The system-assigned unique identifier for the table bucket that contains this
	// namespace.
	TableBucketId *string

	noSmithyDocumentSerde
}

// Contains details about a schema field.
type SchemaField struct {

	// The name of the field.
	//
	// This member is required.
	Name *string

	// The field type. S3 Tables supports all Apache Iceberg primitive types. For more
	// information, see the [Apache Iceberg documentation].
	//
	// [Apache Iceberg documentation]: https://iceberg.apache.org/spec/#primitive-types
	//
	// This member is required.
	Type *string

	// A Boolean value that specifies whether values are required for each row in this
	// field. By default, this is false and null values are allowed in the field. If
	// this is true the field does not allow null values.
	Required bool

	noSmithyDocumentSerde
}

// Details about the values that define the maintenance configuration for a table
// bucket.
type TableBucketMaintenanceConfigurationValue struct {

	// Contains details about the settings of the maintenance configuration.
	Settings TableBucketMaintenanceSettings

	// The status of the maintenance configuration.
	Status MaintenanceStatus

	noSmithyDocumentSerde
}

// Contains details about the maintenance settings for the table bucket.
//
// The following types satisfy this interface:
//
//	TableBucketMaintenanceSettingsMemberIcebergUnreferencedFileRemoval
type TableBucketMaintenanceSettings interface {
	isTableBucketMaintenanceSettings()
}

// The unreferenced file removal settings for the table bucket.
type TableBucketMaintenanceSettingsMemberIcebergUnreferencedFileRemoval struct {
	Value IcebergUnreferencedFileRemovalSettings

	noSmithyDocumentSerde
}

func (*TableBucketMaintenanceSettingsMemberIcebergUnreferencedFileRemoval) isTableBucketMaintenanceSettings() {
}

// Contains details about a table bucket.
type TableBucketSummary struct {

	// The Amazon Resource Name (ARN) of the table bucket.
	//
	// This member is required.
	Arn *string

	// The date and time the table bucket was created at.
	//
	// This member is required.
	CreatedAt *time.Time

	// The name of the table bucket.
	//
	// This member is required.
	Name *string

	// The ID of the account that owns the table bucket.
	//
	// This member is required.
	OwnerAccountId *string

	// The system-assigned unique identifier for the table bucket.
	TableBucketId *string

	noSmithyDocumentSerde
}

// Contains the values that define a maintenance configuration for a table.
type TableMaintenanceConfigurationValue struct {

	// Contains details about the settings for the maintenance configuration.
	Settings TableMaintenanceSettings

	// The status of the maintenance configuration.
	Status MaintenanceStatus

	noSmithyDocumentSerde
}

// Details about the status of a maintenance job.
type TableMaintenanceJobStatusValue struct {

	// The status of the job.
	//
	// This member is required.
	Status JobStatus

	// The failure message of a failed job.
	FailureMessage *string

	// The date and time that the maintenance job was last run.
	LastRunTimestamp *time.Time

	noSmithyDocumentSerde
}

// Contains details about maintenance settings for the table.
//
// The following types satisfy this interface:
//
//	TableMaintenanceSettingsMemberIcebergCompaction
//	TableMaintenanceSettingsMemberIcebergSnapshotManagement
type TableMaintenanceSettings interface {
	isTableMaintenanceSettings()
}

// Contains details about the Iceberg compaction settings for the table.
type TableMaintenanceSettingsMemberIcebergCompaction struct {
	Value IcebergCompactionSettings

	noSmithyDocumentSerde
}

func (*TableMaintenanceSettingsMemberIcebergCompaction) isTableMaintenanceSettings() {}

// Contains details about the Iceberg snapshot management settings for the table.
type TableMaintenanceSettingsMemberIcebergSnapshotManagement struct {
	Value IcebergSnapshotManagementSettings

	noSmithyDocumentSerde
}

func (*TableMaintenanceSettingsMemberIcebergSnapshotManagement) isTableMaintenanceSettings() {}

// Contains details about the table metadata.
//
// The following types satisfy this interface:
//
//	TableMetadataMemberIceberg
type TableMetadata interface {
	isTableMetadata()
}

// Contains details about the metadata of an Iceberg table.
type TableMetadataMemberIceberg struct {
	Value IcebergMetadata

	noSmithyDocumentSerde
}

func (*TableMetadataMemberIceberg) isTableMetadata() {}

// Contains details about a table.
type TableSummary struct {

	// The date and time the table was created at.
	//
	// This member is required.
	CreatedAt *time.Time

	// The date and time the table was last modified at.
	//
	// This member is required.
	ModifiedAt *time.Time

	// The name of the table.
	//
	// This member is required.
	Name *string

	// The name of the namespace.
	//
	// This member is required.
	Namespace []string

	// The Amazon Resource Name (ARN) of the table.
	//
	// This member is required.
	TableARN *string

	// The type of the table.
	//
	// This member is required.
	Type TableType

	// The unique identifier for the namespace that contains this table.
	NamespaceId *string

	// The unique identifier for the table bucket that contains this table.
	TableBucketId *string

	noSmithyDocumentSerde
}

type noSmithyDocumentSerde = smithydocument.NoSerde

// UnknownUnionMember is returned when a union member is returned over the wire,
// but has an unknown tag.
type UnknownUnionMember struct {
	Tag   string
	Value []byte

	noSmithyDocumentSerde
}

func (*UnknownUnionMember) isTableBucketMaintenanceSettings() {}
func (*UnknownUnionMember) isTableMaintenanceSettings()       {}
func (*UnknownUnionMember) isTableMetadata()                  {}
