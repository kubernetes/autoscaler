// Code generated by smithy-go-codegen DO NOT EDIT.

package socialmessaging

import (
	"context"
	"fmt"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/aws/aws-sdk-go-v2/service/socialmessaging/types"
	smithy "k8s.io/autoscaler/cluster-autoscaler/cloudprovider/aws/smithy-go"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/aws/smithy-go/middleware"
)

type validateOpAssociateWhatsAppBusinessAccount struct {
}

func (*validateOpAssociateWhatsAppBusinessAccount) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpAssociateWhatsAppBusinessAccount) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*AssociateWhatsAppBusinessAccountInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpAssociateWhatsAppBusinessAccountInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpDeleteWhatsAppMessageMedia struct {
}

func (*validateOpDeleteWhatsAppMessageMedia) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpDeleteWhatsAppMessageMedia) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*DeleteWhatsAppMessageMediaInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpDeleteWhatsAppMessageMediaInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpDisassociateWhatsAppBusinessAccount struct {
}

func (*validateOpDisassociateWhatsAppBusinessAccount) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpDisassociateWhatsAppBusinessAccount) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*DisassociateWhatsAppBusinessAccountInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpDisassociateWhatsAppBusinessAccountInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetLinkedWhatsAppBusinessAccount struct {
}

func (*validateOpGetLinkedWhatsAppBusinessAccount) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetLinkedWhatsAppBusinessAccount) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetLinkedWhatsAppBusinessAccountInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetLinkedWhatsAppBusinessAccountInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetLinkedWhatsAppBusinessAccountPhoneNumber struct {
}

func (*validateOpGetLinkedWhatsAppBusinessAccountPhoneNumber) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetLinkedWhatsAppBusinessAccountPhoneNumber) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetLinkedWhatsAppBusinessAccountPhoneNumberInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetLinkedWhatsAppBusinessAccountPhoneNumberInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetWhatsAppMessageMedia struct {
}

func (*validateOpGetWhatsAppMessageMedia) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetWhatsAppMessageMedia) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetWhatsAppMessageMediaInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetWhatsAppMessageMediaInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpListTagsForResource struct {
}

func (*validateOpListTagsForResource) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpListTagsForResource) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*ListTagsForResourceInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpListTagsForResourceInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpPostWhatsAppMessageMedia struct {
}

func (*validateOpPostWhatsAppMessageMedia) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpPostWhatsAppMessageMedia) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*PostWhatsAppMessageMediaInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpPostWhatsAppMessageMediaInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpPutWhatsAppBusinessAccountEventDestinations struct {
}

func (*validateOpPutWhatsAppBusinessAccountEventDestinations) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpPutWhatsAppBusinessAccountEventDestinations) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*PutWhatsAppBusinessAccountEventDestinationsInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpPutWhatsAppBusinessAccountEventDestinationsInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpSendWhatsAppMessage struct {
}

func (*validateOpSendWhatsAppMessage) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpSendWhatsAppMessage) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*SendWhatsAppMessageInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpSendWhatsAppMessageInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpTagResource struct {
}

func (*validateOpTagResource) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpTagResource) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*TagResourceInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpTagResourceInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpUntagResource struct {
}

func (*validateOpUntagResource) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpUntagResource) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*UntagResourceInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpUntagResourceInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

func addOpAssociateWhatsAppBusinessAccountValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpAssociateWhatsAppBusinessAccount{}, middleware.After)
}

func addOpDeleteWhatsAppMessageMediaValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpDeleteWhatsAppMessageMedia{}, middleware.After)
}

func addOpDisassociateWhatsAppBusinessAccountValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpDisassociateWhatsAppBusinessAccount{}, middleware.After)
}

func addOpGetLinkedWhatsAppBusinessAccountValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetLinkedWhatsAppBusinessAccount{}, middleware.After)
}

func addOpGetLinkedWhatsAppBusinessAccountPhoneNumberValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetLinkedWhatsAppBusinessAccountPhoneNumber{}, middleware.After)
}

func addOpGetWhatsAppMessageMediaValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetWhatsAppMessageMedia{}, middleware.After)
}

func addOpListTagsForResourceValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpListTagsForResource{}, middleware.After)
}

func addOpPostWhatsAppMessageMediaValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpPostWhatsAppMessageMedia{}, middleware.After)
}

func addOpPutWhatsAppBusinessAccountEventDestinationsValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpPutWhatsAppBusinessAccountEventDestinations{}, middleware.After)
}

func addOpSendWhatsAppMessageValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpSendWhatsAppMessage{}, middleware.After)
}

func addOpTagResourceValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpTagResource{}, middleware.After)
}

func addOpUntagResourceValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpUntagResource{}, middleware.After)
}

func validateS3File(v *types.S3File) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "S3File"}
	if v.BucketName == nil {
		invalidParams.Add(smithy.NewErrParamRequired("BucketName"))
	}
	if v.Key == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Key"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateS3PresignedUrl(v *types.S3PresignedUrl) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "S3PresignedUrl"}
	if v.Url == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Url"))
	}
	if v.Headers == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Headers"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateTag(v *types.Tag) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "Tag"}
	if v.Key == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Key"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateTagList(v []types.Tag) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "TagList"}
	for i := range v {
		if err := validateTag(&v[i]); err != nil {
			invalidParams.AddNested(fmt.Sprintf("[%d]", i), err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateWabaPhoneNumberSetupFinalization(v *types.WabaPhoneNumberSetupFinalization) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "WabaPhoneNumberSetupFinalization"}
	if v.Id == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Id"))
	}
	if v.TwoFactorPin == nil {
		invalidParams.Add(smithy.NewErrParamRequired("TwoFactorPin"))
	}
	if v.Tags != nil {
		if err := validateTagList(v.Tags); err != nil {
			invalidParams.AddNested("Tags", err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateWabaPhoneNumberSetupFinalizationList(v []types.WabaPhoneNumberSetupFinalization) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "WabaPhoneNumberSetupFinalizationList"}
	for i := range v {
		if err := validateWabaPhoneNumberSetupFinalization(&v[i]); err != nil {
			invalidParams.AddNested(fmt.Sprintf("[%d]", i), err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateWabaSetupFinalization(v *types.WabaSetupFinalization) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "WabaSetupFinalization"}
	if v.EventDestinations != nil {
		if err := validateWhatsAppBusinessAccountEventDestinations(v.EventDestinations); err != nil {
			invalidParams.AddNested("EventDestinations", err.(smithy.InvalidParamsError))
		}
	}
	if v.Tags != nil {
		if err := validateTagList(v.Tags); err != nil {
			invalidParams.AddNested("Tags", err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateWhatsAppBusinessAccountEventDestination(v *types.WhatsAppBusinessAccountEventDestination) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "WhatsAppBusinessAccountEventDestination"}
	if v.EventDestinationArn == nil {
		invalidParams.Add(smithy.NewErrParamRequired("EventDestinationArn"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateWhatsAppBusinessAccountEventDestinations(v []types.WhatsAppBusinessAccountEventDestination) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "WhatsAppBusinessAccountEventDestinations"}
	for i := range v {
		if err := validateWhatsAppBusinessAccountEventDestination(&v[i]); err != nil {
			invalidParams.AddNested(fmt.Sprintf("[%d]", i), err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateWhatsAppSetupFinalization(v *types.WhatsAppSetupFinalization) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "WhatsAppSetupFinalization"}
	if v.AssociateInProgressToken == nil {
		invalidParams.Add(smithy.NewErrParamRequired("AssociateInProgressToken"))
	}
	if v.PhoneNumbers == nil {
		invalidParams.Add(smithy.NewErrParamRequired("PhoneNumbers"))
	} else if v.PhoneNumbers != nil {
		if err := validateWabaPhoneNumberSetupFinalizationList(v.PhoneNumbers); err != nil {
			invalidParams.AddNested("PhoneNumbers", err.(smithy.InvalidParamsError))
		}
	}
	if v.Waba != nil {
		if err := validateWabaSetupFinalization(v.Waba); err != nil {
			invalidParams.AddNested("Waba", err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateWhatsAppSignupCallback(v *types.WhatsAppSignupCallback) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "WhatsAppSignupCallback"}
	if v.AccessToken == nil {
		invalidParams.Add(smithy.NewErrParamRequired("AccessToken"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpAssociateWhatsAppBusinessAccountInput(v *AssociateWhatsAppBusinessAccountInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "AssociateWhatsAppBusinessAccountInput"}
	if v.SignupCallback != nil {
		if err := validateWhatsAppSignupCallback(v.SignupCallback); err != nil {
			invalidParams.AddNested("SignupCallback", err.(smithy.InvalidParamsError))
		}
	}
	if v.SetupFinalization != nil {
		if err := validateWhatsAppSetupFinalization(v.SetupFinalization); err != nil {
			invalidParams.AddNested("SetupFinalization", err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpDeleteWhatsAppMessageMediaInput(v *DeleteWhatsAppMessageMediaInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "DeleteWhatsAppMessageMediaInput"}
	if v.MediaId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("MediaId"))
	}
	if v.OriginationPhoneNumberId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OriginationPhoneNumberId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpDisassociateWhatsAppBusinessAccountInput(v *DisassociateWhatsAppBusinessAccountInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "DisassociateWhatsAppBusinessAccountInput"}
	if v.Id == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Id"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetLinkedWhatsAppBusinessAccountInput(v *GetLinkedWhatsAppBusinessAccountInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetLinkedWhatsAppBusinessAccountInput"}
	if v.Id == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Id"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetLinkedWhatsAppBusinessAccountPhoneNumberInput(v *GetLinkedWhatsAppBusinessAccountPhoneNumberInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetLinkedWhatsAppBusinessAccountPhoneNumberInput"}
	if v.Id == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Id"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetWhatsAppMessageMediaInput(v *GetWhatsAppMessageMediaInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetWhatsAppMessageMediaInput"}
	if v.MediaId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("MediaId"))
	}
	if v.OriginationPhoneNumberId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OriginationPhoneNumberId"))
	}
	if v.DestinationS3PresignedUrl != nil {
		if err := validateS3PresignedUrl(v.DestinationS3PresignedUrl); err != nil {
			invalidParams.AddNested("DestinationS3PresignedUrl", err.(smithy.InvalidParamsError))
		}
	}
	if v.DestinationS3File != nil {
		if err := validateS3File(v.DestinationS3File); err != nil {
			invalidParams.AddNested("DestinationS3File", err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpListTagsForResourceInput(v *ListTagsForResourceInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "ListTagsForResourceInput"}
	if v.ResourceArn == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ResourceArn"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpPostWhatsAppMessageMediaInput(v *PostWhatsAppMessageMediaInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "PostWhatsAppMessageMediaInput"}
	if v.OriginationPhoneNumberId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OriginationPhoneNumberId"))
	}
	if v.SourceS3PresignedUrl != nil {
		if err := validateS3PresignedUrl(v.SourceS3PresignedUrl); err != nil {
			invalidParams.AddNested("SourceS3PresignedUrl", err.(smithy.InvalidParamsError))
		}
	}
	if v.SourceS3File != nil {
		if err := validateS3File(v.SourceS3File); err != nil {
			invalidParams.AddNested("SourceS3File", err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpPutWhatsAppBusinessAccountEventDestinationsInput(v *PutWhatsAppBusinessAccountEventDestinationsInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "PutWhatsAppBusinessAccountEventDestinationsInput"}
	if v.Id == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Id"))
	}
	if v.EventDestinations == nil {
		invalidParams.Add(smithy.NewErrParamRequired("EventDestinations"))
	} else if v.EventDestinations != nil {
		if err := validateWhatsAppBusinessAccountEventDestinations(v.EventDestinations); err != nil {
			invalidParams.AddNested("EventDestinations", err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpSendWhatsAppMessageInput(v *SendWhatsAppMessageInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "SendWhatsAppMessageInput"}
	if v.OriginationPhoneNumberId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OriginationPhoneNumberId"))
	}
	if v.Message == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Message"))
	}
	if v.MetaApiVersion == nil {
		invalidParams.Add(smithy.NewErrParamRequired("MetaApiVersion"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpTagResourceInput(v *TagResourceInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "TagResourceInput"}
	if v.ResourceArn == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ResourceArn"))
	}
	if v.Tags == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Tags"))
	} else if v.Tags != nil {
		if err := validateTagList(v.Tags); err != nil {
			invalidParams.AddNested("Tags", err.(smithy.InvalidParamsError))
		}
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpUntagResourceInput(v *UntagResourceInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "UntagResourceInput"}
	if v.ResourceArn == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ResourceArn"))
	}
	if v.TagKeys == nil {
		invalidParams.Add(smithy.NewErrParamRequired("TagKeys"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}
