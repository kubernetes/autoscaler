// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActionStatus string

// Enum values for ActionStatus
const (
	ActionStatusUnknown    ActionStatus = "Unknown"
	ActionStatusInProgress ActionStatus = "InProgress"
	ActionStatusCompleted  ActionStatus = "Completed"
	ActionStatusFailed     ActionStatus = "Failed"
	ActionStatusStopping   ActionStatus = "Stopping"
	ActionStatusStopped    ActionStatus = "Stopped"
)

// Values returns all known values for ActionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActionStatus) Values() []ActionStatus {
	return []ActionStatus{
		"Unknown",
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type ActivationState string

// Enum values for ActivationState
const (
	ActivationStateEnabled  ActivationState = "Enabled"
	ActivationStateDisabled ActivationState = "Disabled"
)

// Values returns all known values for ActivationState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActivationState) Values() []ActivationState {
	return []ActivationState{
		"Enabled",
		"Disabled",
	}
}

type AdditionalS3DataSourceDataType string

// Enum values for AdditionalS3DataSourceDataType
const (
	AdditionalS3DataSourceDataTypeS3object AdditionalS3DataSourceDataType = "S3Object"
	AdditionalS3DataSourceDataTypeS3prefix AdditionalS3DataSourceDataType = "S3Prefix"
)

// Values returns all known values for AdditionalS3DataSourceDataType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AdditionalS3DataSourceDataType) Values() []AdditionalS3DataSourceDataType {
	return []AdditionalS3DataSourceDataType{
		"S3Object",
		"S3Prefix",
	}
}

type AggregationTransformationValue string

// Enum values for AggregationTransformationValue
const (
	AggregationTransformationValueSum   AggregationTransformationValue = "sum"
	AggregationTransformationValueAvg   AggregationTransformationValue = "avg"
	AggregationTransformationValueFirst AggregationTransformationValue = "first"
	AggregationTransformationValueMin   AggregationTransformationValue = "min"
	AggregationTransformationValueMax   AggregationTransformationValue = "max"
)

// Values returns all known values for AggregationTransformationValue. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AggregationTransformationValue) Values() []AggregationTransformationValue {
	return []AggregationTransformationValue{
		"sum",
		"avg",
		"first",
		"min",
		"max",
	}
}

type AlgorithmSortBy string

// Enum values for AlgorithmSortBy
const (
	AlgorithmSortByName         AlgorithmSortBy = "Name"
	AlgorithmSortByCreationTime AlgorithmSortBy = "CreationTime"
)

// Values returns all known values for AlgorithmSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AlgorithmSortBy) Values() []AlgorithmSortBy {
	return []AlgorithmSortBy{
		"Name",
		"CreationTime",
	}
}

type AlgorithmStatus string

// Enum values for AlgorithmStatus
const (
	AlgorithmStatusPending    AlgorithmStatus = "Pending"
	AlgorithmStatusInProgress AlgorithmStatus = "InProgress"
	AlgorithmStatusCompleted  AlgorithmStatus = "Completed"
	AlgorithmStatusFailed     AlgorithmStatus = "Failed"
	AlgorithmStatusDeleting   AlgorithmStatus = "Deleting"
)

// Values returns all known values for AlgorithmStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AlgorithmStatus) Values() []AlgorithmStatus {
	return []AlgorithmStatus{
		"Pending",
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
	}
}

type AppImageConfigSortKey string

// Enum values for AppImageConfigSortKey
const (
	AppImageConfigSortKeyCreationTime     AppImageConfigSortKey = "CreationTime"
	AppImageConfigSortKeyLastModifiedTime AppImageConfigSortKey = "LastModifiedTime"
	AppImageConfigSortKeyName             AppImageConfigSortKey = "Name"
)

// Values returns all known values for AppImageConfigSortKey. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppImageConfigSortKey) Values() []AppImageConfigSortKey {
	return []AppImageConfigSortKey{
		"CreationTime",
		"LastModifiedTime",
		"Name",
	}
}

type AppInstanceType string

// Enum values for AppInstanceType
const (
	AppInstanceTypeSystem                  AppInstanceType = "system"
	AppInstanceTypeMlT3Micro               AppInstanceType = "ml.t3.micro"
	AppInstanceTypeMlT3Small               AppInstanceType = "ml.t3.small"
	AppInstanceTypeMlT3Medium              AppInstanceType = "ml.t3.medium"
	AppInstanceTypeMlT3Large               AppInstanceType = "ml.t3.large"
	AppInstanceTypeMlT3Xlarge              AppInstanceType = "ml.t3.xlarge"
	AppInstanceTypeMlT32xlarge             AppInstanceType = "ml.t3.2xlarge"
	AppInstanceTypeMlM5Large               AppInstanceType = "ml.m5.large"
	AppInstanceTypeMlM5Xlarge              AppInstanceType = "ml.m5.xlarge"
	AppInstanceTypeMlM52xlarge             AppInstanceType = "ml.m5.2xlarge"
	AppInstanceTypeMlM54xlarge             AppInstanceType = "ml.m5.4xlarge"
	AppInstanceTypeMlM58xlarge             AppInstanceType = "ml.m5.8xlarge"
	AppInstanceTypeMlM512xlarge            AppInstanceType = "ml.m5.12xlarge"
	AppInstanceTypeMlM516xlarge            AppInstanceType = "ml.m5.16xlarge"
	AppInstanceTypeMlM524xlarge            AppInstanceType = "ml.m5.24xlarge"
	AppInstanceTypeMlM5dLarge              AppInstanceType = "ml.m5d.large"
	AppInstanceTypeMlM5dXlarge             AppInstanceType = "ml.m5d.xlarge"
	AppInstanceTypeMlM5d2xlarge            AppInstanceType = "ml.m5d.2xlarge"
	AppInstanceTypeMlM5d4xlarge            AppInstanceType = "ml.m5d.4xlarge"
	AppInstanceTypeMlM5d8xlarge            AppInstanceType = "ml.m5d.8xlarge"
	AppInstanceTypeMlM5d12xlarge           AppInstanceType = "ml.m5d.12xlarge"
	AppInstanceTypeMlM5d16xlarge           AppInstanceType = "ml.m5d.16xlarge"
	AppInstanceTypeMlM5d24xlarge           AppInstanceType = "ml.m5d.24xlarge"
	AppInstanceTypeMlC5Large               AppInstanceType = "ml.c5.large"
	AppInstanceTypeMlC5Xlarge              AppInstanceType = "ml.c5.xlarge"
	AppInstanceTypeMlC52xlarge             AppInstanceType = "ml.c5.2xlarge"
	AppInstanceTypeMlC54xlarge             AppInstanceType = "ml.c5.4xlarge"
	AppInstanceTypeMlC59xlarge             AppInstanceType = "ml.c5.9xlarge"
	AppInstanceTypeMlC512xlarge            AppInstanceType = "ml.c5.12xlarge"
	AppInstanceTypeMlC518xlarge            AppInstanceType = "ml.c5.18xlarge"
	AppInstanceTypeMlC524xlarge            AppInstanceType = "ml.c5.24xlarge"
	AppInstanceTypeMlP32xlarge             AppInstanceType = "ml.p3.2xlarge"
	AppInstanceTypeMlP38xlarge             AppInstanceType = "ml.p3.8xlarge"
	AppInstanceTypeMlP316xlarge            AppInstanceType = "ml.p3.16xlarge"
	AppInstanceTypeMlP3dn24xlarge          AppInstanceType = "ml.p3dn.24xlarge"
	AppInstanceTypeMlG4dnXlarge            AppInstanceType = "ml.g4dn.xlarge"
	AppInstanceTypeMlG4dn2xlarge           AppInstanceType = "ml.g4dn.2xlarge"
	AppInstanceTypeMlG4dn4xlarge           AppInstanceType = "ml.g4dn.4xlarge"
	AppInstanceTypeMlG4dn8xlarge           AppInstanceType = "ml.g4dn.8xlarge"
	AppInstanceTypeMlG4dn12xlarge          AppInstanceType = "ml.g4dn.12xlarge"
	AppInstanceTypeMlG4dn16xlarge          AppInstanceType = "ml.g4dn.16xlarge"
	AppInstanceTypeMlR5Large               AppInstanceType = "ml.r5.large"
	AppInstanceTypeMlR5Xlarge              AppInstanceType = "ml.r5.xlarge"
	AppInstanceTypeMlR52xlarge             AppInstanceType = "ml.r5.2xlarge"
	AppInstanceTypeMlR54xlarge             AppInstanceType = "ml.r5.4xlarge"
	AppInstanceTypeMlR58xlarge             AppInstanceType = "ml.r5.8xlarge"
	AppInstanceTypeMlR512xlarge            AppInstanceType = "ml.r5.12xlarge"
	AppInstanceTypeMlR516xlarge            AppInstanceType = "ml.r5.16xlarge"
	AppInstanceTypeMlR524xlarge            AppInstanceType = "ml.r5.24xlarge"
	AppInstanceTypeMlG5Xlarge              AppInstanceType = "ml.g5.xlarge"
	AppInstanceTypeMlG52xlarge             AppInstanceType = "ml.g5.2xlarge"
	AppInstanceTypeMlG54xlarge             AppInstanceType = "ml.g5.4xlarge"
	AppInstanceTypeMlG58xlarge             AppInstanceType = "ml.g5.8xlarge"
	AppInstanceTypeMlG516xlarge            AppInstanceType = "ml.g5.16xlarge"
	AppInstanceTypeMlG512xlarge            AppInstanceType = "ml.g5.12xlarge"
	AppInstanceTypeMlG524xlarge            AppInstanceType = "ml.g5.24xlarge"
	AppInstanceTypeMlG548xlarge            AppInstanceType = "ml.g5.48xlarge"
	AppInstanceTypeMlG6Xlarge              AppInstanceType = "ml.g6.xlarge"
	AppInstanceTypeMlG62xlarge             AppInstanceType = "ml.g6.2xlarge"
	AppInstanceTypeMlG64xlarge             AppInstanceType = "ml.g6.4xlarge"
	AppInstanceTypeMlG68xlarge             AppInstanceType = "ml.g6.8xlarge"
	AppInstanceTypeMlG612xlarge            AppInstanceType = "ml.g6.12xlarge"
	AppInstanceTypeMlG616xlarge            AppInstanceType = "ml.g6.16xlarge"
	AppInstanceTypeMlG624xlarge            AppInstanceType = "ml.g6.24xlarge"
	AppInstanceTypeMlG648xlarge            AppInstanceType = "ml.g6.48xlarge"
	AppInstanceTypeMlG6eXlarge             AppInstanceType = "ml.g6e.xlarge"
	AppInstanceTypeMlG6e2xlarge            AppInstanceType = "ml.g6e.2xlarge"
	AppInstanceTypeMlG6e4xlarge            AppInstanceType = "ml.g6e.4xlarge"
	AppInstanceTypeMlG6e8xlarge            AppInstanceType = "ml.g6e.8xlarge"
	AppInstanceTypeMlG6e12xlarge           AppInstanceType = "ml.g6e.12xlarge"
	AppInstanceTypeMlG6e16xlarge           AppInstanceType = "ml.g6e.16xlarge"
	AppInstanceTypeMlG6e24xlarge           AppInstanceType = "ml.g6e.24xlarge"
	AppInstanceTypeMlG6e48xlarge           AppInstanceType = "ml.g6e.48xlarge"
	AppInstanceTypeMlGeospatialInteractive AppInstanceType = "ml.geospatial.interactive"
	AppInstanceTypeMlP4d24xlarge           AppInstanceType = "ml.p4d.24xlarge"
	AppInstanceTypeMlP4de24xlarge          AppInstanceType = "ml.p4de.24xlarge"
	AppInstanceTypeMlTrn12xlarge           AppInstanceType = "ml.trn1.2xlarge"
	AppInstanceTypeMlTrn132xlarge          AppInstanceType = "ml.trn1.32xlarge"
	AppInstanceTypeMlTrn1n32xlarge         AppInstanceType = "ml.trn1n.32xlarge"
	AppInstanceTypeMlP548xlarge            AppInstanceType = "ml.p5.48xlarge"
	AppInstanceTypeMlP5en48xlarge          AppInstanceType = "ml.p5en.48xlarge"
	AppInstanceTypeMlM6iLarge              AppInstanceType = "ml.m6i.large"
	AppInstanceTypeMlM6iXlarge             AppInstanceType = "ml.m6i.xlarge"
	AppInstanceTypeMlM6i2xlarge            AppInstanceType = "ml.m6i.2xlarge"
	AppInstanceTypeMlM6i4xlarge            AppInstanceType = "ml.m6i.4xlarge"
	AppInstanceTypeMlM6i8xlarge            AppInstanceType = "ml.m6i.8xlarge"
	AppInstanceTypeMlM6i12xlarge           AppInstanceType = "ml.m6i.12xlarge"
	AppInstanceTypeMlM6i16xlarge           AppInstanceType = "ml.m6i.16xlarge"
	AppInstanceTypeMlM6i24xlarge           AppInstanceType = "ml.m6i.24xlarge"
	AppInstanceTypeMlM6i32xlarge           AppInstanceType = "ml.m6i.32xlarge"
	AppInstanceTypeMlM7iLarge              AppInstanceType = "ml.m7i.large"
	AppInstanceTypeMlM7iXlarge             AppInstanceType = "ml.m7i.xlarge"
	AppInstanceTypeMlM7i2xlarge            AppInstanceType = "ml.m7i.2xlarge"
	AppInstanceTypeMlM7i4xlarge            AppInstanceType = "ml.m7i.4xlarge"
	AppInstanceTypeMlM7i8xlarge            AppInstanceType = "ml.m7i.8xlarge"
	AppInstanceTypeMlM7i12xlarge           AppInstanceType = "ml.m7i.12xlarge"
	AppInstanceTypeMlM7i16xlarge           AppInstanceType = "ml.m7i.16xlarge"
	AppInstanceTypeMlM7i24xlarge           AppInstanceType = "ml.m7i.24xlarge"
	AppInstanceTypeMlM7i48xlarge           AppInstanceType = "ml.m7i.48xlarge"
	AppInstanceTypeMlC6iLarge              AppInstanceType = "ml.c6i.large"
	AppInstanceTypeMlC6iXlarge             AppInstanceType = "ml.c6i.xlarge"
	AppInstanceTypeMlC6i2xlarge            AppInstanceType = "ml.c6i.2xlarge"
	AppInstanceTypeMlC6i4xlarge            AppInstanceType = "ml.c6i.4xlarge"
	AppInstanceTypeMlC6i8xlarge            AppInstanceType = "ml.c6i.8xlarge"
	AppInstanceTypeMlC6i12xlarge           AppInstanceType = "ml.c6i.12xlarge"
	AppInstanceTypeMlC6i16xlarge           AppInstanceType = "ml.c6i.16xlarge"
	AppInstanceTypeMlC6i24xlarge           AppInstanceType = "ml.c6i.24xlarge"
	AppInstanceTypeMlC6i32xlarge           AppInstanceType = "ml.c6i.32xlarge"
	AppInstanceTypeMlC7iLarge              AppInstanceType = "ml.c7i.large"
	AppInstanceTypeMlC7iXlarge             AppInstanceType = "ml.c7i.xlarge"
	AppInstanceTypeMlC7i2xlarge            AppInstanceType = "ml.c7i.2xlarge"
	AppInstanceTypeMlC7i4xlarge            AppInstanceType = "ml.c7i.4xlarge"
	AppInstanceTypeMlC7i8xlarge            AppInstanceType = "ml.c7i.8xlarge"
	AppInstanceTypeMlC7i12xlarge           AppInstanceType = "ml.c7i.12xlarge"
	AppInstanceTypeMlC7i16xlarge           AppInstanceType = "ml.c7i.16xlarge"
	AppInstanceTypeMlC7i24xlarge           AppInstanceType = "ml.c7i.24xlarge"
	AppInstanceTypeMlC7i48xlarge           AppInstanceType = "ml.c7i.48xlarge"
	AppInstanceTypeMlR6iLarge              AppInstanceType = "ml.r6i.large"
	AppInstanceTypeMlR6iXlarge             AppInstanceType = "ml.r6i.xlarge"
	AppInstanceTypeMlR6i2xlarge            AppInstanceType = "ml.r6i.2xlarge"
	AppInstanceTypeMlR6i4xlarge            AppInstanceType = "ml.r6i.4xlarge"
	AppInstanceTypeMlR6i8xlarge            AppInstanceType = "ml.r6i.8xlarge"
	AppInstanceTypeMlR6i12xlarge           AppInstanceType = "ml.r6i.12xlarge"
	AppInstanceTypeMlR6i16xlarge           AppInstanceType = "ml.r6i.16xlarge"
	AppInstanceTypeMlR6i24xlarge           AppInstanceType = "ml.r6i.24xlarge"
	AppInstanceTypeMlR6i32xlarge           AppInstanceType = "ml.r6i.32xlarge"
	AppInstanceTypeMlR7iLarge              AppInstanceType = "ml.r7i.large"
	AppInstanceTypeMlR7iXlarge             AppInstanceType = "ml.r7i.xlarge"
	AppInstanceTypeMlR7i2xlarge            AppInstanceType = "ml.r7i.2xlarge"
	AppInstanceTypeMlR7i4xlarge            AppInstanceType = "ml.r7i.4xlarge"
	AppInstanceTypeMlR7i8xlarge            AppInstanceType = "ml.r7i.8xlarge"
	AppInstanceTypeMlR7i12xlarge           AppInstanceType = "ml.r7i.12xlarge"
	AppInstanceTypeMlR7i16xlarge           AppInstanceType = "ml.r7i.16xlarge"
	AppInstanceTypeMlR7i24xlarge           AppInstanceType = "ml.r7i.24xlarge"
	AppInstanceTypeMlR7i48xlarge           AppInstanceType = "ml.r7i.48xlarge"
	AppInstanceTypeMlM6idLarge             AppInstanceType = "ml.m6id.large"
	AppInstanceTypeMlM6idXlarge            AppInstanceType = "ml.m6id.xlarge"
	AppInstanceTypeMlM6id2xlarge           AppInstanceType = "ml.m6id.2xlarge"
	AppInstanceTypeMlM6id4xlarge           AppInstanceType = "ml.m6id.4xlarge"
	AppInstanceTypeMlM6id8xlarge           AppInstanceType = "ml.m6id.8xlarge"
	AppInstanceTypeMlM6id12xlarge          AppInstanceType = "ml.m6id.12xlarge"
	AppInstanceTypeMlM6id16xlarge          AppInstanceType = "ml.m6id.16xlarge"
	AppInstanceTypeMlM6id24xlarge          AppInstanceType = "ml.m6id.24xlarge"
	AppInstanceTypeMlM6id32xlarge          AppInstanceType = "ml.m6id.32xlarge"
	AppInstanceTypeMlC6idLarge             AppInstanceType = "ml.c6id.large"
	AppInstanceTypeMlC6idXlarge            AppInstanceType = "ml.c6id.xlarge"
	AppInstanceTypeMlC6id2xlarge           AppInstanceType = "ml.c6id.2xlarge"
	AppInstanceTypeMlC6id4xlarge           AppInstanceType = "ml.c6id.4xlarge"
	AppInstanceTypeMlC6id8xlarge           AppInstanceType = "ml.c6id.8xlarge"
	AppInstanceTypeMlC6id12xlarge          AppInstanceType = "ml.c6id.12xlarge"
	AppInstanceTypeMlC6id16xlarge          AppInstanceType = "ml.c6id.16xlarge"
	AppInstanceTypeMlC6id24xlarge          AppInstanceType = "ml.c6id.24xlarge"
	AppInstanceTypeMlC6id32xlarge          AppInstanceType = "ml.c6id.32xlarge"
	AppInstanceTypeMlR6idLarge             AppInstanceType = "ml.r6id.large"
	AppInstanceTypeMlR6idXlarge            AppInstanceType = "ml.r6id.xlarge"
	AppInstanceTypeMlR6id2xlarge           AppInstanceType = "ml.r6id.2xlarge"
	AppInstanceTypeMlR6id4xlarge           AppInstanceType = "ml.r6id.4xlarge"
	AppInstanceTypeMlR6id8xlarge           AppInstanceType = "ml.r6id.8xlarge"
	AppInstanceTypeMlR6id12xlarge          AppInstanceType = "ml.r6id.12xlarge"
	AppInstanceTypeMlR6id16xlarge          AppInstanceType = "ml.r6id.16xlarge"
	AppInstanceTypeMlR6id24xlarge          AppInstanceType = "ml.r6id.24xlarge"
	AppInstanceTypeMlR6id32xlarge          AppInstanceType = "ml.r6id.32xlarge"
)

// Values returns all known values for AppInstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppInstanceType) Values() []AppInstanceType {
	return []AppInstanceType{
		"system",
		"ml.t3.micro",
		"ml.t3.small",
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.8xlarge",
		"ml.m5.12xlarge",
		"ml.m5.16xlarge",
		"ml.m5.24xlarge",
		"ml.m5d.large",
		"ml.m5d.xlarge",
		"ml.m5d.2xlarge",
		"ml.m5d.4xlarge",
		"ml.m5d.8xlarge",
		"ml.m5d.12xlarge",
		"ml.m5d.16xlarge",
		"ml.m5d.24xlarge",
		"ml.c5.large",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.12xlarge",
		"ml.c5.18xlarge",
		"ml.c5.24xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.p3dn.24xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.8xlarge",
		"ml.r5.12xlarge",
		"ml.r5.16xlarge",
		"ml.r5.24xlarge",
		"ml.g5.xlarge",
		"ml.g5.2xlarge",
		"ml.g5.4xlarge",
		"ml.g5.8xlarge",
		"ml.g5.16xlarge",
		"ml.g5.12xlarge",
		"ml.g5.24xlarge",
		"ml.g5.48xlarge",
		"ml.g6.xlarge",
		"ml.g6.2xlarge",
		"ml.g6.4xlarge",
		"ml.g6.8xlarge",
		"ml.g6.12xlarge",
		"ml.g6.16xlarge",
		"ml.g6.24xlarge",
		"ml.g6.48xlarge",
		"ml.g6e.xlarge",
		"ml.g6e.2xlarge",
		"ml.g6e.4xlarge",
		"ml.g6e.8xlarge",
		"ml.g6e.12xlarge",
		"ml.g6e.16xlarge",
		"ml.g6e.24xlarge",
		"ml.g6e.48xlarge",
		"ml.geospatial.interactive",
		"ml.p4d.24xlarge",
		"ml.p4de.24xlarge",
		"ml.trn1.2xlarge",
		"ml.trn1.32xlarge",
		"ml.trn1n.32xlarge",
		"ml.p5.48xlarge",
		"ml.p5en.48xlarge",
		"ml.m6i.large",
		"ml.m6i.xlarge",
		"ml.m6i.2xlarge",
		"ml.m6i.4xlarge",
		"ml.m6i.8xlarge",
		"ml.m6i.12xlarge",
		"ml.m6i.16xlarge",
		"ml.m6i.24xlarge",
		"ml.m6i.32xlarge",
		"ml.m7i.large",
		"ml.m7i.xlarge",
		"ml.m7i.2xlarge",
		"ml.m7i.4xlarge",
		"ml.m7i.8xlarge",
		"ml.m7i.12xlarge",
		"ml.m7i.16xlarge",
		"ml.m7i.24xlarge",
		"ml.m7i.48xlarge",
		"ml.c6i.large",
		"ml.c6i.xlarge",
		"ml.c6i.2xlarge",
		"ml.c6i.4xlarge",
		"ml.c6i.8xlarge",
		"ml.c6i.12xlarge",
		"ml.c6i.16xlarge",
		"ml.c6i.24xlarge",
		"ml.c6i.32xlarge",
		"ml.c7i.large",
		"ml.c7i.xlarge",
		"ml.c7i.2xlarge",
		"ml.c7i.4xlarge",
		"ml.c7i.8xlarge",
		"ml.c7i.12xlarge",
		"ml.c7i.16xlarge",
		"ml.c7i.24xlarge",
		"ml.c7i.48xlarge",
		"ml.r6i.large",
		"ml.r6i.xlarge",
		"ml.r6i.2xlarge",
		"ml.r6i.4xlarge",
		"ml.r6i.8xlarge",
		"ml.r6i.12xlarge",
		"ml.r6i.16xlarge",
		"ml.r6i.24xlarge",
		"ml.r6i.32xlarge",
		"ml.r7i.large",
		"ml.r7i.xlarge",
		"ml.r7i.2xlarge",
		"ml.r7i.4xlarge",
		"ml.r7i.8xlarge",
		"ml.r7i.12xlarge",
		"ml.r7i.16xlarge",
		"ml.r7i.24xlarge",
		"ml.r7i.48xlarge",
		"ml.m6id.large",
		"ml.m6id.xlarge",
		"ml.m6id.2xlarge",
		"ml.m6id.4xlarge",
		"ml.m6id.8xlarge",
		"ml.m6id.12xlarge",
		"ml.m6id.16xlarge",
		"ml.m6id.24xlarge",
		"ml.m6id.32xlarge",
		"ml.c6id.large",
		"ml.c6id.xlarge",
		"ml.c6id.2xlarge",
		"ml.c6id.4xlarge",
		"ml.c6id.8xlarge",
		"ml.c6id.12xlarge",
		"ml.c6id.16xlarge",
		"ml.c6id.24xlarge",
		"ml.c6id.32xlarge",
		"ml.r6id.large",
		"ml.r6id.xlarge",
		"ml.r6id.2xlarge",
		"ml.r6id.4xlarge",
		"ml.r6id.8xlarge",
		"ml.r6id.12xlarge",
		"ml.r6id.16xlarge",
		"ml.r6id.24xlarge",
		"ml.r6id.32xlarge",
	}
}

type AppNetworkAccessType string

// Enum values for AppNetworkAccessType
const (
	AppNetworkAccessTypePublicInternetOnly AppNetworkAccessType = "PublicInternetOnly"
	AppNetworkAccessTypeVpcOnly            AppNetworkAccessType = "VpcOnly"
)

// Values returns all known values for AppNetworkAccessType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppNetworkAccessType) Values() []AppNetworkAccessType {
	return []AppNetworkAccessType{
		"PublicInternetOnly",
		"VpcOnly",
	}
}

type AppSecurityGroupManagement string

// Enum values for AppSecurityGroupManagement
const (
	AppSecurityGroupManagementService  AppSecurityGroupManagement = "Service"
	AppSecurityGroupManagementCustomer AppSecurityGroupManagement = "Customer"
)

// Values returns all known values for AppSecurityGroupManagement. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppSecurityGroupManagement) Values() []AppSecurityGroupManagement {
	return []AppSecurityGroupManagement{
		"Service",
		"Customer",
	}
}

type AppSortKey string

// Enum values for AppSortKey
const (
	AppSortKeyCreationTime AppSortKey = "CreationTime"
)

// Values returns all known values for AppSortKey. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppSortKey) Values() []AppSortKey {
	return []AppSortKey{
		"CreationTime",
	}
}

type AppStatus string

// Enum values for AppStatus
const (
	AppStatusDeleted   AppStatus = "Deleted"
	AppStatusDeleting  AppStatus = "Deleting"
	AppStatusFailed    AppStatus = "Failed"
	AppStatusInService AppStatus = "InService"
	AppStatusPending   AppStatus = "Pending"
)

// Values returns all known values for AppStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppStatus) Values() []AppStatus {
	return []AppStatus{
		"Deleted",
		"Deleting",
		"Failed",
		"InService",
		"Pending",
	}
}

type AppType string

// Enum values for AppType
const (
	AppTypeJupyterServer    AppType = "JupyterServer"
	AppTypeKernelGateway    AppType = "KernelGateway"
	AppTypeDetailedProfiler AppType = "DetailedProfiler"
	AppTypeTensorBoard      AppType = "TensorBoard"
	AppTypeCodeEditor       AppType = "CodeEditor"
	AppTypeJupyterLab       AppType = "JupyterLab"
	AppTypeRStudioServerPro AppType = "RStudioServerPro"
	AppTypeRSessionGateway  AppType = "RSessionGateway"
	AppTypeCanvas           AppType = "Canvas"
)

// Values returns all known values for AppType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppType) Values() []AppType {
	return []AppType{
		"JupyterServer",
		"KernelGateway",
		"DetailedProfiler",
		"TensorBoard",
		"CodeEditor",
		"JupyterLab",
		"RStudioServerPro",
		"RSessionGateway",
		"Canvas",
	}
}

type ArtifactSourceIdType string

// Enum values for ArtifactSourceIdType
const (
	ArtifactSourceIdTypeMd5Hash   ArtifactSourceIdType = "MD5Hash"
	ArtifactSourceIdTypeS3Etag    ArtifactSourceIdType = "S3ETag"
	ArtifactSourceIdTypeS3Version ArtifactSourceIdType = "S3Version"
	ArtifactSourceIdTypeCustom    ArtifactSourceIdType = "Custom"
)

// Values returns all known values for ArtifactSourceIdType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArtifactSourceIdType) Values() []ArtifactSourceIdType {
	return []ArtifactSourceIdType{
		"MD5Hash",
		"S3ETag",
		"S3Version",
		"Custom",
	}
}

type AssemblyType string

// Enum values for AssemblyType
const (
	AssemblyTypeNone AssemblyType = "None"
	AssemblyTypeLine AssemblyType = "Line"
)

// Values returns all known values for AssemblyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssemblyType) Values() []AssemblyType {
	return []AssemblyType{
		"None",
		"Line",
	}
}

type AssociationEdgeType string

// Enum values for AssociationEdgeType
const (
	AssociationEdgeTypeContributedTo  AssociationEdgeType = "ContributedTo"
	AssociationEdgeTypeAssociatedWith AssociationEdgeType = "AssociatedWith"
	AssociationEdgeTypeDerivedFrom    AssociationEdgeType = "DerivedFrom"
	AssociationEdgeTypeProduced       AssociationEdgeType = "Produced"
	AssociationEdgeTypeSameAs         AssociationEdgeType = "SameAs"
)

// Values returns all known values for AssociationEdgeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssociationEdgeType) Values() []AssociationEdgeType {
	return []AssociationEdgeType{
		"ContributedTo",
		"AssociatedWith",
		"DerivedFrom",
		"Produced",
		"SameAs",
	}
}

type AsyncNotificationTopicTypes string

// Enum values for AsyncNotificationTopicTypes
const (
	AsyncNotificationTopicTypesSuccessNotificationTopic AsyncNotificationTopicTypes = "SUCCESS_NOTIFICATION_TOPIC"
	AsyncNotificationTopicTypesErrorNotificationTopic   AsyncNotificationTopicTypes = "ERROR_NOTIFICATION_TOPIC"
)

// Values returns all known values for AsyncNotificationTopicTypes. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AsyncNotificationTopicTypes) Values() []AsyncNotificationTopicTypes {
	return []AsyncNotificationTopicTypes{
		"SUCCESS_NOTIFICATION_TOPIC",
		"ERROR_NOTIFICATION_TOPIC",
	}
}

type AthenaResultCompressionType string

// Enum values for AthenaResultCompressionType
const (
	AthenaResultCompressionTypeGzip   AthenaResultCompressionType = "GZIP"
	AthenaResultCompressionTypeSnappy AthenaResultCompressionType = "SNAPPY"
	AthenaResultCompressionTypeZlib   AthenaResultCompressionType = "ZLIB"
)

// Values returns all known values for AthenaResultCompressionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AthenaResultCompressionType) Values() []AthenaResultCompressionType {
	return []AthenaResultCompressionType{
		"GZIP",
		"SNAPPY",
		"ZLIB",
	}
}

type AthenaResultFormat string

// Enum values for AthenaResultFormat
const (
	AthenaResultFormatParquet  AthenaResultFormat = "PARQUET"
	AthenaResultFormatOrc      AthenaResultFormat = "ORC"
	AthenaResultFormatAvro     AthenaResultFormat = "AVRO"
	AthenaResultFormatJson     AthenaResultFormat = "JSON"
	AthenaResultFormatTextfile AthenaResultFormat = "TEXTFILE"
)

// Values returns all known values for AthenaResultFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AthenaResultFormat) Values() []AthenaResultFormat {
	return []AthenaResultFormat{
		"PARQUET",
		"ORC",
		"AVRO",
		"JSON",
		"TEXTFILE",
	}
}

type AuthMode string

// Enum values for AuthMode
const (
	AuthModeSso AuthMode = "SSO"
	AuthModeIam AuthMode = "IAM"
)

// Values returns all known values for AuthMode. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthMode) Values() []AuthMode {
	return []AuthMode{
		"SSO",
		"IAM",
	}
}

type AutoMLAlgorithm string

// Enum values for AutoMLAlgorithm
const (
	AutoMLAlgorithmXgboost       AutoMLAlgorithm = "xgboost"
	AutoMLAlgorithmLinearLearner AutoMLAlgorithm = "linear-learner"
	AutoMLAlgorithmMlp           AutoMLAlgorithm = "mlp"
	AutoMLAlgorithmLightgbm      AutoMLAlgorithm = "lightgbm"
	AutoMLAlgorithmCatboost      AutoMLAlgorithm = "catboost"
	AutoMLAlgorithmRandomforest  AutoMLAlgorithm = "randomforest"
	AutoMLAlgorithmExtraTrees    AutoMLAlgorithm = "extra-trees"
	AutoMLAlgorithmNnTorch       AutoMLAlgorithm = "nn-torch"
	AutoMLAlgorithmFastai        AutoMLAlgorithm = "fastai"
	AutoMLAlgorithmCnnQr         AutoMLAlgorithm = "cnn-qr"
	AutoMLAlgorithmDeepar        AutoMLAlgorithm = "deepar"
	AutoMLAlgorithmProphet       AutoMLAlgorithm = "prophet"
	AutoMLAlgorithmNpts          AutoMLAlgorithm = "npts"
	AutoMLAlgorithmArima         AutoMLAlgorithm = "arima"
	AutoMLAlgorithmEts           AutoMLAlgorithm = "ets"
)

// Values returns all known values for AutoMLAlgorithm. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLAlgorithm) Values() []AutoMLAlgorithm {
	return []AutoMLAlgorithm{
		"xgboost",
		"linear-learner",
		"mlp",
		"lightgbm",
		"catboost",
		"randomforest",
		"extra-trees",
		"nn-torch",
		"fastai",
		"cnn-qr",
		"deepar",
		"prophet",
		"npts",
		"arima",
		"ets",
	}
}

type AutoMLChannelType string

// Enum values for AutoMLChannelType
const (
	AutoMLChannelTypeTraining   AutoMLChannelType = "training"
	AutoMLChannelTypeValidation AutoMLChannelType = "validation"
)

// Values returns all known values for AutoMLChannelType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLChannelType) Values() []AutoMLChannelType {
	return []AutoMLChannelType{
		"training",
		"validation",
	}
}

type AutoMLJobObjectiveType string

// Enum values for AutoMLJobObjectiveType
const (
	AutoMLJobObjectiveTypeMaximize AutoMLJobObjectiveType = "Maximize"
	AutoMLJobObjectiveTypeMinimize AutoMLJobObjectiveType = "Minimize"
)

// Values returns all known values for AutoMLJobObjectiveType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLJobObjectiveType) Values() []AutoMLJobObjectiveType {
	return []AutoMLJobObjectiveType{
		"Maximize",
		"Minimize",
	}
}

type AutoMLJobSecondaryStatus string

// Enum values for AutoMLJobSecondaryStatus
const (
	AutoMLJobSecondaryStatusStarting                       AutoMLJobSecondaryStatus = "Starting"
	AutoMLJobSecondaryStatusMaxCandidatesReached           AutoMLJobSecondaryStatus = "MaxCandidatesReached"
	AutoMLJobSecondaryStatusFailed                         AutoMLJobSecondaryStatus = "Failed"
	AutoMLJobSecondaryStatusStopped                        AutoMLJobSecondaryStatus = "Stopped"
	AutoMLJobSecondaryStatusMaxAutoMlJobRuntimeReached     AutoMLJobSecondaryStatus = "MaxAutoMLJobRuntimeReached"
	AutoMLJobSecondaryStatusStopping                       AutoMLJobSecondaryStatus = "Stopping"
	AutoMLJobSecondaryStatusCandidateDefinitionsGenerated  AutoMLJobSecondaryStatus = "CandidateDefinitionsGenerated"
	AutoMLJobSecondaryStatusCompleted                      AutoMLJobSecondaryStatus = "Completed"
	AutoMLJobSecondaryStatusExplainabilityError            AutoMLJobSecondaryStatus = "ExplainabilityError"
	AutoMLJobSecondaryStatusDeployingModel                 AutoMLJobSecondaryStatus = "DeployingModel"
	AutoMLJobSecondaryStatusModelDeploymentError           AutoMLJobSecondaryStatus = "ModelDeploymentError"
	AutoMLJobSecondaryStatusGeneratingModelInsightsReport  AutoMLJobSecondaryStatus = "GeneratingModelInsightsReport"
	AutoMLJobSecondaryStatusModelInsightsError             AutoMLJobSecondaryStatus = "ModelInsightsError"
	AutoMLJobSecondaryStatusAnalyzingData                  AutoMLJobSecondaryStatus = "AnalyzingData"
	AutoMLJobSecondaryStatusFeatureEngineering             AutoMLJobSecondaryStatus = "FeatureEngineering"
	AutoMLJobSecondaryStatusModelTuning                    AutoMLJobSecondaryStatus = "ModelTuning"
	AutoMLJobSecondaryStatusGeneratingExplainabilityReport AutoMLJobSecondaryStatus = "GeneratingExplainabilityReport"
	AutoMLJobSecondaryStatusTrainingModels                 AutoMLJobSecondaryStatus = "TrainingModels"
	AutoMLJobSecondaryStatusPreTraining                    AutoMLJobSecondaryStatus = "PreTraining"
)

// Values returns all known values for AutoMLJobSecondaryStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLJobSecondaryStatus) Values() []AutoMLJobSecondaryStatus {
	return []AutoMLJobSecondaryStatus{
		"Starting",
		"MaxCandidatesReached",
		"Failed",
		"Stopped",
		"MaxAutoMLJobRuntimeReached",
		"Stopping",
		"CandidateDefinitionsGenerated",
		"Completed",
		"ExplainabilityError",
		"DeployingModel",
		"ModelDeploymentError",
		"GeneratingModelInsightsReport",
		"ModelInsightsError",
		"AnalyzingData",
		"FeatureEngineering",
		"ModelTuning",
		"GeneratingExplainabilityReport",
		"TrainingModels",
		"PreTraining",
	}
}

type AutoMLJobStatus string

// Enum values for AutoMLJobStatus
const (
	AutoMLJobStatusCompleted  AutoMLJobStatus = "Completed"
	AutoMLJobStatusInProgress AutoMLJobStatus = "InProgress"
	AutoMLJobStatusFailed     AutoMLJobStatus = "Failed"
	AutoMLJobStatusStopped    AutoMLJobStatus = "Stopped"
	AutoMLJobStatusStopping   AutoMLJobStatus = "Stopping"
)

// Values returns all known values for AutoMLJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLJobStatus) Values() []AutoMLJobStatus {
	return []AutoMLJobStatus{
		"Completed",
		"InProgress",
		"Failed",
		"Stopped",
		"Stopping",
	}
}

type AutoMLMetricEnum string

// Enum values for AutoMLMetricEnum
const (
	AutoMLMetricEnumAccuracy                    AutoMLMetricEnum = "Accuracy"
	AutoMLMetricEnumMse                         AutoMLMetricEnum = "MSE"
	AutoMLMetricEnumF1                          AutoMLMetricEnum = "F1"
	AutoMLMetricEnumF1Macro                     AutoMLMetricEnum = "F1macro"
	AutoMLMetricEnumAuc                         AutoMLMetricEnum = "AUC"
	AutoMLMetricEnumRmse                        AutoMLMetricEnum = "RMSE"
	AutoMLMetricEnumBalancedAccuracy            AutoMLMetricEnum = "BalancedAccuracy"
	AutoMLMetricEnumR2                          AutoMLMetricEnum = "R2"
	AutoMLMetricEnumRecall                      AutoMLMetricEnum = "Recall"
	AutoMLMetricEnumRecallMacro                 AutoMLMetricEnum = "RecallMacro"
	AutoMLMetricEnumPrecision                   AutoMLMetricEnum = "Precision"
	AutoMLMetricEnumPrecisionMacro              AutoMLMetricEnum = "PrecisionMacro"
	AutoMLMetricEnumMae                         AutoMLMetricEnum = "MAE"
	AutoMLMetricEnumMape                        AutoMLMetricEnum = "MAPE"
	AutoMLMetricEnumMase                        AutoMLMetricEnum = "MASE"
	AutoMLMetricEnumWape                        AutoMLMetricEnum = "WAPE"
	AutoMLMetricEnumAverageWeightedQuantileLoss AutoMLMetricEnum = "AverageWeightedQuantileLoss"
)

// Values returns all known values for AutoMLMetricEnum. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLMetricEnum) Values() []AutoMLMetricEnum {
	return []AutoMLMetricEnum{
		"Accuracy",
		"MSE",
		"F1",
		"F1macro",
		"AUC",
		"RMSE",
		"BalancedAccuracy",
		"R2",
		"Recall",
		"RecallMacro",
		"Precision",
		"PrecisionMacro",
		"MAE",
		"MAPE",
		"MASE",
		"WAPE",
		"AverageWeightedQuantileLoss",
	}
}

type AutoMLMetricExtendedEnum string

// Enum values for AutoMLMetricExtendedEnum
const (
	AutoMLMetricExtendedEnumAccuracy                    AutoMLMetricExtendedEnum = "Accuracy"
	AutoMLMetricExtendedEnumMse                         AutoMLMetricExtendedEnum = "MSE"
	AutoMLMetricExtendedEnumF1                          AutoMLMetricExtendedEnum = "F1"
	AutoMLMetricExtendedEnumF1Macro                     AutoMLMetricExtendedEnum = "F1macro"
	AutoMLMetricExtendedEnumAuc                         AutoMLMetricExtendedEnum = "AUC"
	AutoMLMetricExtendedEnumRmse                        AutoMLMetricExtendedEnum = "RMSE"
	AutoMLMetricExtendedEnumMae                         AutoMLMetricExtendedEnum = "MAE"
	AutoMLMetricExtendedEnumR2                          AutoMLMetricExtendedEnum = "R2"
	AutoMLMetricExtendedEnumBalancedAccuracy            AutoMLMetricExtendedEnum = "BalancedAccuracy"
	AutoMLMetricExtendedEnumPrecision                   AutoMLMetricExtendedEnum = "Precision"
	AutoMLMetricExtendedEnumPrecisionMacro              AutoMLMetricExtendedEnum = "PrecisionMacro"
	AutoMLMetricExtendedEnumRecall                      AutoMLMetricExtendedEnum = "Recall"
	AutoMLMetricExtendedEnumRecallMacro                 AutoMLMetricExtendedEnum = "RecallMacro"
	AutoMLMetricExtendedEnumLogLoss                     AutoMLMetricExtendedEnum = "LogLoss"
	AutoMLMetricExtendedEnumInferenceLatency            AutoMLMetricExtendedEnum = "InferenceLatency"
	AutoMLMetricExtendedEnumMape                        AutoMLMetricExtendedEnum = "MAPE"
	AutoMLMetricExtendedEnumMase                        AutoMLMetricExtendedEnum = "MASE"
	AutoMLMetricExtendedEnumWape                        AutoMLMetricExtendedEnum = "WAPE"
	AutoMLMetricExtendedEnumAverageWeightedQuantileLoss AutoMLMetricExtendedEnum = "AverageWeightedQuantileLoss"
	AutoMLMetricExtendedEnumRouge1                      AutoMLMetricExtendedEnum = "Rouge1"
	AutoMLMetricExtendedEnumRouge2                      AutoMLMetricExtendedEnum = "Rouge2"
	AutoMLMetricExtendedEnumRougel                      AutoMLMetricExtendedEnum = "RougeL"
	AutoMLMetricExtendedEnumRougelSum                   AutoMLMetricExtendedEnum = "RougeLSum"
	AutoMLMetricExtendedEnumPerplexity                  AutoMLMetricExtendedEnum = "Perplexity"
	AutoMLMetricExtendedEnumValidationLoss              AutoMLMetricExtendedEnum = "ValidationLoss"
	AutoMLMetricExtendedEnumTrainingLoss                AutoMLMetricExtendedEnum = "TrainingLoss"
)

// Values returns all known values for AutoMLMetricExtendedEnum. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLMetricExtendedEnum) Values() []AutoMLMetricExtendedEnum {
	return []AutoMLMetricExtendedEnum{
		"Accuracy",
		"MSE",
		"F1",
		"F1macro",
		"AUC",
		"RMSE",
		"MAE",
		"R2",
		"BalancedAccuracy",
		"Precision",
		"PrecisionMacro",
		"Recall",
		"RecallMacro",
		"LogLoss",
		"InferenceLatency",
		"MAPE",
		"MASE",
		"WAPE",
		"AverageWeightedQuantileLoss",
		"Rouge1",
		"Rouge2",
		"RougeL",
		"RougeLSum",
		"Perplexity",
		"ValidationLoss",
		"TrainingLoss",
	}
}

type AutoMLMode string

// Enum values for AutoMLMode
const (
	AutoMLModeAuto                 AutoMLMode = "AUTO"
	AutoMLModeEnsembling           AutoMLMode = "ENSEMBLING"
	AutoMLModeHyperparameterTuning AutoMLMode = "HYPERPARAMETER_TUNING"
)

// Values returns all known values for AutoMLMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLMode) Values() []AutoMLMode {
	return []AutoMLMode{
		"AUTO",
		"ENSEMBLING",
		"HYPERPARAMETER_TUNING",
	}
}

type AutoMLProblemTypeConfigName string

// Enum values for AutoMLProblemTypeConfigName
const (
	AutoMLProblemTypeConfigNameImageClassification   AutoMLProblemTypeConfigName = "ImageClassification"
	AutoMLProblemTypeConfigNameTextClassification    AutoMLProblemTypeConfigName = "TextClassification"
	AutoMLProblemTypeConfigNameTimeseriesForecasting AutoMLProblemTypeConfigName = "TimeSeriesForecasting"
	AutoMLProblemTypeConfigNameTabular               AutoMLProblemTypeConfigName = "Tabular"
	AutoMLProblemTypeConfigNameTextGeneration        AutoMLProblemTypeConfigName = "TextGeneration"
)

// Values returns all known values for AutoMLProblemTypeConfigName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLProblemTypeConfigName) Values() []AutoMLProblemTypeConfigName {
	return []AutoMLProblemTypeConfigName{
		"ImageClassification",
		"TextClassification",
		"TimeSeriesForecasting",
		"Tabular",
		"TextGeneration",
	}
}

type AutoMLProcessingUnit string

// Enum values for AutoMLProcessingUnit
const (
	AutoMLProcessingUnitCpu AutoMLProcessingUnit = "CPU"
	AutoMLProcessingUnitGpu AutoMLProcessingUnit = "GPU"
)

// Values returns all known values for AutoMLProcessingUnit. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLProcessingUnit) Values() []AutoMLProcessingUnit {
	return []AutoMLProcessingUnit{
		"CPU",
		"GPU",
	}
}

type AutoMLS3DataType string

// Enum values for AutoMLS3DataType
const (
	AutoMLS3DataTypeManifestFile          AutoMLS3DataType = "ManifestFile"
	AutoMLS3DataTypeS3Prefix              AutoMLS3DataType = "S3Prefix"
	AutoMLS3DataTypeAugmentedManifestFile AutoMLS3DataType = "AugmentedManifestFile"
)

// Values returns all known values for AutoMLS3DataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLS3DataType) Values() []AutoMLS3DataType {
	return []AutoMLS3DataType{
		"ManifestFile",
		"S3Prefix",
		"AugmentedManifestFile",
	}
}

type AutoMLSortBy string

// Enum values for AutoMLSortBy
const (
	AutoMLSortByName         AutoMLSortBy = "Name"
	AutoMLSortByCreationTime AutoMLSortBy = "CreationTime"
	AutoMLSortByStatus       AutoMLSortBy = "Status"
)

// Values returns all known values for AutoMLSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLSortBy) Values() []AutoMLSortBy {
	return []AutoMLSortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type AutoMLSortOrder string

// Enum values for AutoMLSortOrder
const (
	AutoMLSortOrderAscending  AutoMLSortOrder = "Ascending"
	AutoMLSortOrderDescending AutoMLSortOrder = "Descending"
)

// Values returns all known values for AutoMLSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLSortOrder) Values() []AutoMLSortOrder {
	return []AutoMLSortOrder{
		"Ascending",
		"Descending",
	}
}

type AutoMountHomeEFS string

// Enum values for AutoMountHomeEFS
const (
	AutoMountHomeEFSEnabled         AutoMountHomeEFS = "Enabled"
	AutoMountHomeEFSDisabled        AutoMountHomeEFS = "Disabled"
	AutoMountHomeEFSDefaultAsDomain AutoMountHomeEFS = "DefaultAsDomain"
)

// Values returns all known values for AutoMountHomeEFS. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoMountHomeEFS) Values() []AutoMountHomeEFS {
	return []AutoMountHomeEFS{
		"Enabled",
		"Disabled",
		"DefaultAsDomain",
	}
}

type AutotuneMode string

// Enum values for AutotuneMode
const (
	AutotuneModeEnabled AutotuneMode = "Enabled"
)

// Values returns all known values for AutotuneMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutotuneMode) Values() []AutotuneMode {
	return []AutotuneMode{
		"Enabled",
	}
}

type AwsManagedHumanLoopRequestSource string

// Enum values for AwsManagedHumanLoopRequestSource
const (
	AwsManagedHumanLoopRequestSourceRekognitionDetectModerationLabelsImageV3 AwsManagedHumanLoopRequestSource = "AWS/Rekognition/DetectModerationLabels/Image/V3"
	AwsManagedHumanLoopRequestSourceTextractAnalyzeDocumentFormsV1           AwsManagedHumanLoopRequestSource = "AWS/Textract/AnalyzeDocument/Forms/V1"
)

// Values returns all known values for AwsManagedHumanLoopRequestSource. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AwsManagedHumanLoopRequestSource) Values() []AwsManagedHumanLoopRequestSource {
	return []AwsManagedHumanLoopRequestSource{
		"AWS/Rekognition/DetectModerationLabels/Image/V3",
		"AWS/Textract/AnalyzeDocument/Forms/V1",
	}
}

type BatchDeleteClusterNodesErrorCode string

// Enum values for BatchDeleteClusterNodesErrorCode
const (
	BatchDeleteClusterNodesErrorCodeNodeIdNotFound    BatchDeleteClusterNodesErrorCode = "NodeIdNotFound"
	BatchDeleteClusterNodesErrorCodeInvalidNodeStatus BatchDeleteClusterNodesErrorCode = "InvalidNodeStatus"
	BatchDeleteClusterNodesErrorCodeNodeIdInUse       BatchDeleteClusterNodesErrorCode = "NodeIdInUse"
)

// Values returns all known values for BatchDeleteClusterNodesErrorCode. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchDeleteClusterNodesErrorCode) Values() []BatchDeleteClusterNodesErrorCode {
	return []BatchDeleteClusterNodesErrorCode{
		"NodeIdNotFound",
		"InvalidNodeStatus",
		"NodeIdInUse",
	}
}

type BatchStrategy string

// Enum values for BatchStrategy
const (
	BatchStrategyMultiRecord  BatchStrategy = "MultiRecord"
	BatchStrategySingleRecord BatchStrategy = "SingleRecord"
)

// Values returns all known values for BatchStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchStrategy) Values() []BatchStrategy {
	return []BatchStrategy{
		"MultiRecord",
		"SingleRecord",
	}
}

type BooleanOperator string

// Enum values for BooleanOperator
const (
	BooleanOperatorAnd BooleanOperator = "And"
	BooleanOperatorOr  BooleanOperator = "Or"
)

// Values returns all known values for BooleanOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BooleanOperator) Values() []BooleanOperator {
	return []BooleanOperator{
		"And",
		"Or",
	}
}

type CandidateSortBy string

// Enum values for CandidateSortBy
const (
	CandidateSortByCreationTime              CandidateSortBy = "CreationTime"
	CandidateSortByStatus                    CandidateSortBy = "Status"
	CandidateSortByFinalObjectiveMetricValue CandidateSortBy = "FinalObjectiveMetricValue"
)

// Values returns all known values for CandidateSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CandidateSortBy) Values() []CandidateSortBy {
	return []CandidateSortBy{
		"CreationTime",
		"Status",
		"FinalObjectiveMetricValue",
	}
}

type CandidateStatus string

// Enum values for CandidateStatus
const (
	CandidateStatusCompleted  CandidateStatus = "Completed"
	CandidateStatusInProgress CandidateStatus = "InProgress"
	CandidateStatusFailed     CandidateStatus = "Failed"
	CandidateStatusStopped    CandidateStatus = "Stopped"
	CandidateStatusStopping   CandidateStatus = "Stopping"
)

// Values returns all known values for CandidateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CandidateStatus) Values() []CandidateStatus {
	return []CandidateStatus{
		"Completed",
		"InProgress",
		"Failed",
		"Stopped",
		"Stopping",
	}
}

type CandidateStepType string

// Enum values for CandidateStepType
const (
	CandidateStepTypeTraining   CandidateStepType = "AWS::SageMaker::TrainingJob"
	CandidateStepTypeTransform  CandidateStepType = "AWS::SageMaker::TransformJob"
	CandidateStepTypeProcessing CandidateStepType = "AWS::SageMaker::ProcessingJob"
)

// Values returns all known values for CandidateStepType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CandidateStepType) Values() []CandidateStepType {
	return []CandidateStepType{
		"AWS::SageMaker::TrainingJob",
		"AWS::SageMaker::TransformJob",
		"AWS::SageMaker::ProcessingJob",
	}
}

type CapacityReservationPreference string

// Enum values for CapacityReservationPreference
const (
	CapacityReservationPreferenceCapacityReservationsOnly CapacityReservationPreference = "capacity-reservations-only"
)

// Values returns all known values for CapacityReservationPreference. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CapacityReservationPreference) Values() []CapacityReservationPreference {
	return []CapacityReservationPreference{
		"capacity-reservations-only",
	}
}

type CapacitySizeType string

// Enum values for CapacitySizeType
const (
	CapacitySizeTypeInstanceCount   CapacitySizeType = "INSTANCE_COUNT"
	CapacitySizeTypeCapacityPercent CapacitySizeType = "CAPACITY_PERCENT"
)

// Values returns all known values for CapacitySizeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CapacitySizeType) Values() []CapacitySizeType {
	return []CapacitySizeType{
		"INSTANCE_COUNT",
		"CAPACITY_PERCENT",
	}
}

type CaptureMode string

// Enum values for CaptureMode
const (
	CaptureModeInput          CaptureMode = "Input"
	CaptureModeOutput         CaptureMode = "Output"
	CaptureModeInputAndOutput CaptureMode = "InputAndOutput"
)

// Values returns all known values for CaptureMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CaptureMode) Values() []CaptureMode {
	return []CaptureMode{
		"Input",
		"Output",
		"InputAndOutput",
	}
}

type CaptureStatus string

// Enum values for CaptureStatus
const (
	CaptureStatusStarted CaptureStatus = "Started"
	CaptureStatusStopped CaptureStatus = "Stopped"
)

// Values returns all known values for CaptureStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CaptureStatus) Values() []CaptureStatus {
	return []CaptureStatus{
		"Started",
		"Stopped",
	}
}

type ClarifyFeatureType string

// Enum values for ClarifyFeatureType
const (
	ClarifyFeatureTypeNumerical   ClarifyFeatureType = "numerical"
	ClarifyFeatureTypeCategorical ClarifyFeatureType = "categorical"
	ClarifyFeatureTypeText        ClarifyFeatureType = "text"
)

// Values returns all known values for ClarifyFeatureType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClarifyFeatureType) Values() []ClarifyFeatureType {
	return []ClarifyFeatureType{
		"numerical",
		"categorical",
		"text",
	}
}

type ClarifyTextGranularity string

// Enum values for ClarifyTextGranularity
const (
	ClarifyTextGranularityToken     ClarifyTextGranularity = "token"
	ClarifyTextGranularitySentence  ClarifyTextGranularity = "sentence"
	ClarifyTextGranularityParagraph ClarifyTextGranularity = "paragraph"
)

// Values returns all known values for ClarifyTextGranularity. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClarifyTextGranularity) Values() []ClarifyTextGranularity {
	return []ClarifyTextGranularity{
		"token",
		"sentence",
		"paragraph",
	}
}

type ClarifyTextLanguage string

// Enum values for ClarifyTextLanguage
const (
	ClarifyTextLanguageAfrikaans       ClarifyTextLanguage = "af"
	ClarifyTextLanguageAlbanian        ClarifyTextLanguage = "sq"
	ClarifyTextLanguageArabic          ClarifyTextLanguage = "ar"
	ClarifyTextLanguageArmenian        ClarifyTextLanguage = "hy"
	ClarifyTextLanguageBasque          ClarifyTextLanguage = "eu"
	ClarifyTextLanguageBengali         ClarifyTextLanguage = "bn"
	ClarifyTextLanguageBulgarian       ClarifyTextLanguage = "bg"
	ClarifyTextLanguageCatalan         ClarifyTextLanguage = "ca"
	ClarifyTextLanguageChinese         ClarifyTextLanguage = "zh"
	ClarifyTextLanguageCroatian        ClarifyTextLanguage = "hr"
	ClarifyTextLanguageCzech           ClarifyTextLanguage = "cs"
	ClarifyTextLanguageDanish          ClarifyTextLanguage = "da"
	ClarifyTextLanguageDutch           ClarifyTextLanguage = "nl"
	ClarifyTextLanguageEnglish         ClarifyTextLanguage = "en"
	ClarifyTextLanguageEstonian        ClarifyTextLanguage = "et"
	ClarifyTextLanguageFinnish         ClarifyTextLanguage = "fi"
	ClarifyTextLanguageFrench          ClarifyTextLanguage = "fr"
	ClarifyTextLanguageGerman          ClarifyTextLanguage = "de"
	ClarifyTextLanguageGreek           ClarifyTextLanguage = "el"
	ClarifyTextLanguageGujarati        ClarifyTextLanguage = "gu"
	ClarifyTextLanguageHebrew          ClarifyTextLanguage = "he"
	ClarifyTextLanguageHindi           ClarifyTextLanguage = "hi"
	ClarifyTextLanguageHungarian       ClarifyTextLanguage = "hu"
	ClarifyTextLanguageIcelandic       ClarifyTextLanguage = "is"
	ClarifyTextLanguageIndonesian      ClarifyTextLanguage = "id"
	ClarifyTextLanguageIrish           ClarifyTextLanguage = "ga"
	ClarifyTextLanguageItalian         ClarifyTextLanguage = "it"
	ClarifyTextLanguageKannada         ClarifyTextLanguage = "kn"
	ClarifyTextLanguageKyrgyz          ClarifyTextLanguage = "ky"
	ClarifyTextLanguageLatvian         ClarifyTextLanguage = "lv"
	ClarifyTextLanguageLithuanian      ClarifyTextLanguage = "lt"
	ClarifyTextLanguageLuxembourgish   ClarifyTextLanguage = "lb"
	ClarifyTextLanguageMacedonian      ClarifyTextLanguage = "mk"
	ClarifyTextLanguageMalayalam       ClarifyTextLanguage = "ml"
	ClarifyTextLanguageMarathi         ClarifyTextLanguage = "mr"
	ClarifyTextLanguageNepali          ClarifyTextLanguage = "ne"
	ClarifyTextLanguageNorwegianBokmal ClarifyTextLanguage = "nb"
	ClarifyTextLanguagePersian         ClarifyTextLanguage = "fa"
	ClarifyTextLanguagePolish          ClarifyTextLanguage = "pl"
	ClarifyTextLanguagePortuguese      ClarifyTextLanguage = "pt"
	ClarifyTextLanguageRomanian        ClarifyTextLanguage = "ro"
	ClarifyTextLanguageRussian         ClarifyTextLanguage = "ru"
	ClarifyTextLanguageSanskrit        ClarifyTextLanguage = "sa"
	ClarifyTextLanguageSerbian         ClarifyTextLanguage = "sr"
	ClarifyTextLanguageSetswana        ClarifyTextLanguage = "tn"
	ClarifyTextLanguageSinhala         ClarifyTextLanguage = "si"
	ClarifyTextLanguageSlovak          ClarifyTextLanguage = "sk"
	ClarifyTextLanguageSlovenian       ClarifyTextLanguage = "sl"
	ClarifyTextLanguageSpanish         ClarifyTextLanguage = "es"
	ClarifyTextLanguageSwedish         ClarifyTextLanguage = "sv"
	ClarifyTextLanguageTagalog         ClarifyTextLanguage = "tl"
	ClarifyTextLanguageTamil           ClarifyTextLanguage = "ta"
	ClarifyTextLanguageTatar           ClarifyTextLanguage = "tt"
	ClarifyTextLanguageTelugu          ClarifyTextLanguage = "te"
	ClarifyTextLanguageTurkish         ClarifyTextLanguage = "tr"
	ClarifyTextLanguageUkrainian       ClarifyTextLanguage = "uk"
	ClarifyTextLanguageUrdu            ClarifyTextLanguage = "ur"
	ClarifyTextLanguageYoruba          ClarifyTextLanguage = "yo"
	ClarifyTextLanguageLigurian        ClarifyTextLanguage = "lij"
	ClarifyTextLanguageMultiLanguage   ClarifyTextLanguage = "xx"
)

// Values returns all known values for ClarifyTextLanguage. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClarifyTextLanguage) Values() []ClarifyTextLanguage {
	return []ClarifyTextLanguage{
		"af",
		"sq",
		"ar",
		"hy",
		"eu",
		"bn",
		"bg",
		"ca",
		"zh",
		"hr",
		"cs",
		"da",
		"nl",
		"en",
		"et",
		"fi",
		"fr",
		"de",
		"el",
		"gu",
		"he",
		"hi",
		"hu",
		"is",
		"id",
		"ga",
		"it",
		"kn",
		"ky",
		"lv",
		"lt",
		"lb",
		"mk",
		"ml",
		"mr",
		"ne",
		"nb",
		"fa",
		"pl",
		"pt",
		"ro",
		"ru",
		"sa",
		"sr",
		"tn",
		"si",
		"sk",
		"sl",
		"es",
		"sv",
		"tl",
		"ta",
		"tt",
		"te",
		"tr",
		"uk",
		"ur",
		"yo",
		"lij",
		"xx",
	}
}

type ClusterInstanceStatus string

// Enum values for ClusterInstanceStatus
const (
	ClusterInstanceStatusRunning                   ClusterInstanceStatus = "Running"
	ClusterInstanceStatusFailure                   ClusterInstanceStatus = "Failure"
	ClusterInstanceStatusPending                   ClusterInstanceStatus = "Pending"
	ClusterInstanceStatusShuttingDown              ClusterInstanceStatus = "ShuttingDown"
	ClusterInstanceStatusSystemUpdating            ClusterInstanceStatus = "SystemUpdating"
	ClusterInstanceStatusDeepHealthCheckInProgress ClusterInstanceStatus = "DeepHealthCheckInProgress"
)

// Values returns all known values for ClusterInstanceStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClusterInstanceStatus) Values() []ClusterInstanceStatus {
	return []ClusterInstanceStatus{
		"Running",
		"Failure",
		"Pending",
		"ShuttingDown",
		"SystemUpdating",
		"DeepHealthCheckInProgress",
	}
}

type ClusterInstanceType string

// Enum values for ClusterInstanceType
const (
	ClusterInstanceTypeMlP4d24xlarge   ClusterInstanceType = "ml.p4d.24xlarge"
	ClusterInstanceTypeMlP4de24xlarge  ClusterInstanceType = "ml.p4de.24xlarge"
	ClusterInstanceTypeMlP548xlarge    ClusterInstanceType = "ml.p5.48xlarge"
	ClusterInstanceTypeMlTrn132xlarge  ClusterInstanceType = "ml.trn1.32xlarge"
	ClusterInstanceTypeMlTrn1n32xlarge ClusterInstanceType = "ml.trn1n.32xlarge"
	ClusterInstanceTypeMlG5Xlarge      ClusterInstanceType = "ml.g5.xlarge"
	ClusterInstanceTypeMlG52xlarge     ClusterInstanceType = "ml.g5.2xlarge"
	ClusterInstanceTypeMlG54xlarge     ClusterInstanceType = "ml.g5.4xlarge"
	ClusterInstanceTypeMlG58xlarge     ClusterInstanceType = "ml.g5.8xlarge"
	ClusterInstanceTypeMlG512xlarge    ClusterInstanceType = "ml.g5.12xlarge"
	ClusterInstanceTypeMlG516xlarge    ClusterInstanceType = "ml.g5.16xlarge"
	ClusterInstanceTypeMlG524xlarge    ClusterInstanceType = "ml.g5.24xlarge"
	ClusterInstanceTypeMlG548xlarge    ClusterInstanceType = "ml.g5.48xlarge"
	ClusterInstanceTypeMlC5Large       ClusterInstanceType = "ml.c5.large"
	ClusterInstanceTypeMlC5Xlarge      ClusterInstanceType = "ml.c5.xlarge"
	ClusterInstanceTypeMlC52xlarge     ClusterInstanceType = "ml.c5.2xlarge"
	ClusterInstanceTypeMlC54xlarge     ClusterInstanceType = "ml.c5.4xlarge"
	ClusterInstanceTypeMlC59xlarge     ClusterInstanceType = "ml.c5.9xlarge"
	ClusterInstanceTypeMlC512xlarge    ClusterInstanceType = "ml.c5.12xlarge"
	ClusterInstanceTypeMlC518xlarge    ClusterInstanceType = "ml.c5.18xlarge"
	ClusterInstanceTypeMlC524xlarge    ClusterInstanceType = "ml.c5.24xlarge"
	ClusterInstanceTypeMlC5nLarge      ClusterInstanceType = "ml.c5n.large"
	ClusterInstanceTypeMlC5n2xlarge    ClusterInstanceType = "ml.c5n.2xlarge"
	ClusterInstanceTypeMlC5n4xlarge    ClusterInstanceType = "ml.c5n.4xlarge"
	ClusterInstanceTypeMlC5n9xlarge    ClusterInstanceType = "ml.c5n.9xlarge"
	ClusterInstanceTypeMlC5n18xlarge   ClusterInstanceType = "ml.c5n.18xlarge"
	ClusterInstanceTypeMlM5Large       ClusterInstanceType = "ml.m5.large"
	ClusterInstanceTypeMlM5Xlarge      ClusterInstanceType = "ml.m5.xlarge"
	ClusterInstanceTypeMlM52xlarge     ClusterInstanceType = "ml.m5.2xlarge"
	ClusterInstanceTypeMlM54xlarge     ClusterInstanceType = "ml.m5.4xlarge"
	ClusterInstanceTypeMlM58xlarge     ClusterInstanceType = "ml.m5.8xlarge"
	ClusterInstanceTypeMlM512xlarge    ClusterInstanceType = "ml.m5.12xlarge"
	ClusterInstanceTypeMlM516xlarge    ClusterInstanceType = "ml.m5.16xlarge"
	ClusterInstanceTypeMlM524xlarge    ClusterInstanceType = "ml.m5.24xlarge"
	ClusterInstanceTypeMlT3Medium      ClusterInstanceType = "ml.t3.medium"
	ClusterInstanceTypeMlT3Large       ClusterInstanceType = "ml.t3.large"
	ClusterInstanceTypeMlT3Xlarge      ClusterInstanceType = "ml.t3.xlarge"
	ClusterInstanceTypeMlT32xlarge     ClusterInstanceType = "ml.t3.2xlarge"
	ClusterInstanceTypeMlG6Xlarge      ClusterInstanceType = "ml.g6.xlarge"
	ClusterInstanceTypeMlG62xlarge     ClusterInstanceType = "ml.g6.2xlarge"
	ClusterInstanceTypeMlG64xlarge     ClusterInstanceType = "ml.g6.4xlarge"
	ClusterInstanceTypeMlG68xlarge     ClusterInstanceType = "ml.g6.8xlarge"
	ClusterInstanceTypeMlG616xlarge    ClusterInstanceType = "ml.g6.16xlarge"
	ClusterInstanceTypeMlG612xlarge    ClusterInstanceType = "ml.g6.12xlarge"
	ClusterInstanceTypeMlG624xlarge    ClusterInstanceType = "ml.g6.24xlarge"
	ClusterInstanceTypeMlG648xlarge    ClusterInstanceType = "ml.g6.48xlarge"
	ClusterInstanceTypeMlGr64xlarge    ClusterInstanceType = "ml.gr6.4xlarge"
	ClusterInstanceTypeMlGr68xlarge    ClusterInstanceType = "ml.gr6.8xlarge"
	ClusterInstanceTypeMlG6eXlarge     ClusterInstanceType = "ml.g6e.xlarge"
	ClusterInstanceTypeMlG6e2xlarge    ClusterInstanceType = "ml.g6e.2xlarge"
	ClusterInstanceTypeMlG6e4xlarge    ClusterInstanceType = "ml.g6e.4xlarge"
	ClusterInstanceTypeMlG6e8xlarge    ClusterInstanceType = "ml.g6e.8xlarge"
	ClusterInstanceTypeMlG6e16xlarge   ClusterInstanceType = "ml.g6e.16xlarge"
	ClusterInstanceTypeMlG6e12xlarge   ClusterInstanceType = "ml.g6e.12xlarge"
	ClusterInstanceTypeMlG6e24xlarge   ClusterInstanceType = "ml.g6e.24xlarge"
	ClusterInstanceTypeMlG6e48xlarge   ClusterInstanceType = "ml.g6e.48xlarge"
	ClusterInstanceTypeMlP5e48xlarge   ClusterInstanceType = "ml.p5e.48xlarge"
	ClusterInstanceTypeMlP5en48xlarge  ClusterInstanceType = "ml.p5en.48xlarge"
	ClusterInstanceTypeMlTrn248xlarge  ClusterInstanceType = "ml.trn2.48xlarge"
	ClusterInstanceTypeMlC6iLarge      ClusterInstanceType = "ml.c6i.large"
	ClusterInstanceTypeMlC6iXlarge     ClusterInstanceType = "ml.c6i.xlarge"
	ClusterInstanceTypeMlC6i2xlarge    ClusterInstanceType = "ml.c6i.2xlarge"
	ClusterInstanceTypeMlC6i4xlarge    ClusterInstanceType = "ml.c6i.4xlarge"
	ClusterInstanceTypeMlC6i8xlarge    ClusterInstanceType = "ml.c6i.8xlarge"
	ClusterInstanceTypeMlC6i12xlarge   ClusterInstanceType = "ml.c6i.12xlarge"
	ClusterInstanceTypeMlC6i16xlarge   ClusterInstanceType = "ml.c6i.16xlarge"
	ClusterInstanceTypeMlC6i24xlarge   ClusterInstanceType = "ml.c6i.24xlarge"
	ClusterInstanceTypeMlC6i32xlarge   ClusterInstanceType = "ml.c6i.32xlarge"
	ClusterInstanceTypeMlM6iLarge      ClusterInstanceType = "ml.m6i.large"
	ClusterInstanceTypeMlM6iXlarge     ClusterInstanceType = "ml.m6i.xlarge"
	ClusterInstanceTypeMlM6i2xlarge    ClusterInstanceType = "ml.m6i.2xlarge"
	ClusterInstanceTypeMlM6i4xlarge    ClusterInstanceType = "ml.m6i.4xlarge"
	ClusterInstanceTypeMlM6i8xlarge    ClusterInstanceType = "ml.m6i.8xlarge"
	ClusterInstanceTypeMlM6i12xlarge   ClusterInstanceType = "ml.m6i.12xlarge"
	ClusterInstanceTypeMlM6i16xlarge   ClusterInstanceType = "ml.m6i.16xlarge"
	ClusterInstanceTypeMlM6i24xlarge   ClusterInstanceType = "ml.m6i.24xlarge"
	ClusterInstanceTypeMlM6i32xlarge   ClusterInstanceType = "ml.m6i.32xlarge"
	ClusterInstanceTypeMlR6iLarge      ClusterInstanceType = "ml.r6i.large"
	ClusterInstanceTypeMlR6iXlarge     ClusterInstanceType = "ml.r6i.xlarge"
	ClusterInstanceTypeMlR6i2xlarge    ClusterInstanceType = "ml.r6i.2xlarge"
	ClusterInstanceTypeMlR6i4xlarge    ClusterInstanceType = "ml.r6i.4xlarge"
	ClusterInstanceTypeMlR6i8xlarge    ClusterInstanceType = "ml.r6i.8xlarge"
	ClusterInstanceTypeMlR6i12xlarge   ClusterInstanceType = "ml.r6i.12xlarge"
	ClusterInstanceTypeMlR6i16xlarge   ClusterInstanceType = "ml.r6i.16xlarge"
	ClusterInstanceTypeMlR6i24xlarge   ClusterInstanceType = "ml.r6i.24xlarge"
	ClusterInstanceTypeMlR6i32xlarge   ClusterInstanceType = "ml.r6i.32xlarge"
	ClusterInstanceTypeMlI3enLarge     ClusterInstanceType = "ml.i3en.large"
	ClusterInstanceTypeMlI3enXlarge    ClusterInstanceType = "ml.i3en.xlarge"
	ClusterInstanceTypeMlI3en2xlarge   ClusterInstanceType = "ml.i3en.2xlarge"
	ClusterInstanceTypeMlI3en3xlarge   ClusterInstanceType = "ml.i3en.3xlarge"
	ClusterInstanceTypeMlI3en6xlarge   ClusterInstanceType = "ml.i3en.6xlarge"
	ClusterInstanceTypeMlI3en12xlarge  ClusterInstanceType = "ml.i3en.12xlarge"
	ClusterInstanceTypeMlI3en24xlarge  ClusterInstanceType = "ml.i3en.24xlarge"
	ClusterInstanceTypeMlM7iLarge      ClusterInstanceType = "ml.m7i.large"
	ClusterInstanceTypeMlM7iXlarge     ClusterInstanceType = "ml.m7i.xlarge"
	ClusterInstanceTypeMlM7i2xlarge    ClusterInstanceType = "ml.m7i.2xlarge"
	ClusterInstanceTypeMlM7i4xlarge    ClusterInstanceType = "ml.m7i.4xlarge"
	ClusterInstanceTypeMlM7i8xlarge    ClusterInstanceType = "ml.m7i.8xlarge"
	ClusterInstanceTypeMlM7i12xlarge   ClusterInstanceType = "ml.m7i.12xlarge"
	ClusterInstanceTypeMlM7i16xlarge   ClusterInstanceType = "ml.m7i.16xlarge"
	ClusterInstanceTypeMlM7i24xlarge   ClusterInstanceType = "ml.m7i.24xlarge"
	ClusterInstanceTypeMlM7i48xlarge   ClusterInstanceType = "ml.m7i.48xlarge"
	ClusterInstanceTypeMlR7iLarge      ClusterInstanceType = "ml.r7i.large"
	ClusterInstanceTypeMlR7iXlarge     ClusterInstanceType = "ml.r7i.xlarge"
	ClusterInstanceTypeMlR7i2xlarge    ClusterInstanceType = "ml.r7i.2xlarge"
	ClusterInstanceTypeMlR7i4xlarge    ClusterInstanceType = "ml.r7i.4xlarge"
	ClusterInstanceTypeMlR7i8xlarge    ClusterInstanceType = "ml.r7i.8xlarge"
	ClusterInstanceTypeMlR7i12xlarge   ClusterInstanceType = "ml.r7i.12xlarge"
	ClusterInstanceTypeMlR7i16xlarge   ClusterInstanceType = "ml.r7i.16xlarge"
	ClusterInstanceTypeMlR7i24xlarge   ClusterInstanceType = "ml.r7i.24xlarge"
	ClusterInstanceTypeMlR7i48xlarge   ClusterInstanceType = "ml.r7i.48xlarge"
)

// Values returns all known values for ClusterInstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClusterInstanceType) Values() []ClusterInstanceType {
	return []ClusterInstanceType{
		"ml.p4d.24xlarge",
		"ml.p4de.24xlarge",
		"ml.p5.48xlarge",
		"ml.trn1.32xlarge",
		"ml.trn1n.32xlarge",
		"ml.g5.xlarge",
		"ml.g5.2xlarge",
		"ml.g5.4xlarge",
		"ml.g5.8xlarge",
		"ml.g5.12xlarge",
		"ml.g5.16xlarge",
		"ml.g5.24xlarge",
		"ml.g5.48xlarge",
		"ml.c5.large",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.12xlarge",
		"ml.c5.18xlarge",
		"ml.c5.24xlarge",
		"ml.c5n.large",
		"ml.c5n.2xlarge",
		"ml.c5n.4xlarge",
		"ml.c5n.9xlarge",
		"ml.c5n.18xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.8xlarge",
		"ml.m5.12xlarge",
		"ml.m5.16xlarge",
		"ml.m5.24xlarge",
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.g6.xlarge",
		"ml.g6.2xlarge",
		"ml.g6.4xlarge",
		"ml.g6.8xlarge",
		"ml.g6.16xlarge",
		"ml.g6.12xlarge",
		"ml.g6.24xlarge",
		"ml.g6.48xlarge",
		"ml.gr6.4xlarge",
		"ml.gr6.8xlarge",
		"ml.g6e.xlarge",
		"ml.g6e.2xlarge",
		"ml.g6e.4xlarge",
		"ml.g6e.8xlarge",
		"ml.g6e.16xlarge",
		"ml.g6e.12xlarge",
		"ml.g6e.24xlarge",
		"ml.g6e.48xlarge",
		"ml.p5e.48xlarge",
		"ml.p5en.48xlarge",
		"ml.trn2.48xlarge",
		"ml.c6i.large",
		"ml.c6i.xlarge",
		"ml.c6i.2xlarge",
		"ml.c6i.4xlarge",
		"ml.c6i.8xlarge",
		"ml.c6i.12xlarge",
		"ml.c6i.16xlarge",
		"ml.c6i.24xlarge",
		"ml.c6i.32xlarge",
		"ml.m6i.large",
		"ml.m6i.xlarge",
		"ml.m6i.2xlarge",
		"ml.m6i.4xlarge",
		"ml.m6i.8xlarge",
		"ml.m6i.12xlarge",
		"ml.m6i.16xlarge",
		"ml.m6i.24xlarge",
		"ml.m6i.32xlarge",
		"ml.r6i.large",
		"ml.r6i.xlarge",
		"ml.r6i.2xlarge",
		"ml.r6i.4xlarge",
		"ml.r6i.8xlarge",
		"ml.r6i.12xlarge",
		"ml.r6i.16xlarge",
		"ml.r6i.24xlarge",
		"ml.r6i.32xlarge",
		"ml.i3en.large",
		"ml.i3en.xlarge",
		"ml.i3en.2xlarge",
		"ml.i3en.3xlarge",
		"ml.i3en.6xlarge",
		"ml.i3en.12xlarge",
		"ml.i3en.24xlarge",
		"ml.m7i.large",
		"ml.m7i.xlarge",
		"ml.m7i.2xlarge",
		"ml.m7i.4xlarge",
		"ml.m7i.8xlarge",
		"ml.m7i.12xlarge",
		"ml.m7i.16xlarge",
		"ml.m7i.24xlarge",
		"ml.m7i.48xlarge",
		"ml.r7i.large",
		"ml.r7i.xlarge",
		"ml.r7i.2xlarge",
		"ml.r7i.4xlarge",
		"ml.r7i.8xlarge",
		"ml.r7i.12xlarge",
		"ml.r7i.16xlarge",
		"ml.r7i.24xlarge",
		"ml.r7i.48xlarge",
	}
}

type ClusterNodeRecovery string

// Enum values for ClusterNodeRecovery
const (
	ClusterNodeRecoveryAutomatic ClusterNodeRecovery = "Automatic"
	ClusterNodeRecoveryNone      ClusterNodeRecovery = "None"
)

// Values returns all known values for ClusterNodeRecovery. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClusterNodeRecovery) Values() []ClusterNodeRecovery {
	return []ClusterNodeRecovery{
		"Automatic",
		"None",
	}
}

type ClusterSortBy string

// Enum values for ClusterSortBy
const (
	ClusterSortByCreationTime ClusterSortBy = "CREATION_TIME"
	ClusterSortByName         ClusterSortBy = "NAME"
)

// Values returns all known values for ClusterSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClusterSortBy) Values() []ClusterSortBy {
	return []ClusterSortBy{
		"CREATION_TIME",
		"NAME",
	}
}

type ClusterStatus string

// Enum values for ClusterStatus
const (
	ClusterStatusCreating       ClusterStatus = "Creating"
	ClusterStatusDeleting       ClusterStatus = "Deleting"
	ClusterStatusFailed         ClusterStatus = "Failed"
	ClusterStatusInservice      ClusterStatus = "InService"
	ClusterStatusRollingback    ClusterStatus = "RollingBack"
	ClusterStatusSystemupdating ClusterStatus = "SystemUpdating"
	ClusterStatusUpdating       ClusterStatus = "Updating"
)

// Values returns all known values for ClusterStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClusterStatus) Values() []ClusterStatus {
	return []ClusterStatus{
		"Creating",
		"Deleting",
		"Failed",
		"InService",
		"RollingBack",
		"SystemUpdating",
		"Updating",
	}
}

type CodeRepositorySortBy string

// Enum values for CodeRepositorySortBy
const (
	CodeRepositorySortByName             CodeRepositorySortBy = "Name"
	CodeRepositorySortByCreationTime     CodeRepositorySortBy = "CreationTime"
	CodeRepositorySortByLastModifiedTime CodeRepositorySortBy = "LastModifiedTime"
)

// Values returns all known values for CodeRepositorySortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CodeRepositorySortBy) Values() []CodeRepositorySortBy {
	return []CodeRepositorySortBy{
		"Name",
		"CreationTime",
		"LastModifiedTime",
	}
}

type CodeRepositorySortOrder string

// Enum values for CodeRepositorySortOrder
const (
	CodeRepositorySortOrderAscending  CodeRepositorySortOrder = "Ascending"
	CodeRepositorySortOrderDescending CodeRepositorySortOrder = "Descending"
)

// Values returns all known values for CodeRepositorySortOrder. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CodeRepositorySortOrder) Values() []CodeRepositorySortOrder {
	return []CodeRepositorySortOrder{
		"Ascending",
		"Descending",
	}
}

type CollectionType string

// Enum values for CollectionType
const (
	CollectionTypeList   CollectionType = "List"
	CollectionTypeSet    CollectionType = "Set"
	CollectionTypeVector CollectionType = "Vector"
)

// Values returns all known values for CollectionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CollectionType) Values() []CollectionType {
	return []CollectionType{
		"List",
		"Set",
		"Vector",
	}
}

type CompilationJobStatus string

// Enum values for CompilationJobStatus
const (
	CompilationJobStatusInprogress CompilationJobStatus = "INPROGRESS"
	CompilationJobStatusCompleted  CompilationJobStatus = "COMPLETED"
	CompilationJobStatusFailed     CompilationJobStatus = "FAILED"
	CompilationJobStatusStarting   CompilationJobStatus = "STARTING"
	CompilationJobStatusStopping   CompilationJobStatus = "STOPPING"
	CompilationJobStatusStopped    CompilationJobStatus = "STOPPED"
)

// Values returns all known values for CompilationJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CompilationJobStatus) Values() []CompilationJobStatus {
	return []CompilationJobStatus{
		"INPROGRESS",
		"COMPLETED",
		"FAILED",
		"STARTING",
		"STOPPING",
		"STOPPED",
	}
}

type CompleteOnConvergence string

// Enum values for CompleteOnConvergence
const (
	CompleteOnConvergenceDisabled CompleteOnConvergence = "Disabled"
	CompleteOnConvergenceEnabled  CompleteOnConvergence = "Enabled"
)

// Values returns all known values for CompleteOnConvergence. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CompleteOnConvergence) Values() []CompleteOnConvergence {
	return []CompleteOnConvergence{
		"Disabled",
		"Enabled",
	}
}

type CompressionType string

// Enum values for CompressionType
const (
	CompressionTypeNone CompressionType = "None"
	CompressionTypeGzip CompressionType = "Gzip"
)

// Values returns all known values for CompressionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CompressionType) Values() []CompressionType {
	return []CompressionType{
		"None",
		"Gzip",
	}
}

type ConditionOutcome string

// Enum values for ConditionOutcome
const (
	ConditionOutcomeTrue  ConditionOutcome = "True"
	ConditionOutcomeFalse ConditionOutcome = "False"
)

// Values returns all known values for ConditionOutcome. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConditionOutcome) Values() []ConditionOutcome {
	return []ConditionOutcome{
		"True",
		"False",
	}
}

type ContainerMode string

// Enum values for ContainerMode
const (
	ContainerModeSingleModel ContainerMode = "SingleModel"
	ContainerModeMultiModel  ContainerMode = "MultiModel"
)

// Values returns all known values for ContainerMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContainerMode) Values() []ContainerMode {
	return []ContainerMode{
		"SingleModel",
		"MultiModel",
	}
}

type ContentClassifier string

// Enum values for ContentClassifier
const (
	ContentClassifierFreeOfPersonallyIdentifiableInformation ContentClassifier = "FreeOfPersonallyIdentifiableInformation"
	ContentClassifierFreeOfAdultContent                      ContentClassifier = "FreeOfAdultContent"
)

// Values returns all known values for ContentClassifier. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentClassifier) Values() []ContentClassifier {
	return []ContentClassifier{
		"FreeOfPersonallyIdentifiableInformation",
		"FreeOfAdultContent",
	}
}

type CrossAccountFilterOption string

// Enum values for CrossAccountFilterOption
const (
	CrossAccountFilterOptionSameAccount  CrossAccountFilterOption = "SameAccount"
	CrossAccountFilterOptionCrossAccount CrossAccountFilterOption = "CrossAccount"
)

// Values returns all known values for CrossAccountFilterOption. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CrossAccountFilterOption) Values() []CrossAccountFilterOption {
	return []CrossAccountFilterOption{
		"SameAccount",
		"CrossAccount",
	}
}

type DataDistributionType string

// Enum values for DataDistributionType
const (
	DataDistributionTypeFullyreplicated DataDistributionType = "FullyReplicated"
	DataDistributionTypeShardedbys3key  DataDistributionType = "ShardedByS3Key"
)

// Values returns all known values for DataDistributionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataDistributionType) Values() []DataDistributionType {
	return []DataDistributionType{
		"FullyReplicated",
		"ShardedByS3Key",
	}
}

type DataSourceName string

// Enum values for DataSourceName
const (
	DataSourceNameSalesforceGenie DataSourceName = "SalesforceGenie"
	DataSourceNameSnowflake       DataSourceName = "Snowflake"
)

// Values returns all known values for DataSourceName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataSourceName) Values() []DataSourceName {
	return []DataSourceName{
		"SalesforceGenie",
		"Snowflake",
	}
}

type DeepHealthCheckType string

// Enum values for DeepHealthCheckType
const (
	DeepHealthCheckTypeInstanceStress       DeepHealthCheckType = "InstanceStress"
	DeepHealthCheckTypeInstanceConnectivity DeepHealthCheckType = "InstanceConnectivity"
)

// Values returns all known values for DeepHealthCheckType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeepHealthCheckType) Values() []DeepHealthCheckType {
	return []DeepHealthCheckType{
		"InstanceStress",
		"InstanceConnectivity",
	}
}

type DetailedAlgorithmStatus string

// Enum values for DetailedAlgorithmStatus
const (
	DetailedAlgorithmStatusNotStarted DetailedAlgorithmStatus = "NotStarted"
	DetailedAlgorithmStatusInProgress DetailedAlgorithmStatus = "InProgress"
	DetailedAlgorithmStatusCompleted  DetailedAlgorithmStatus = "Completed"
	DetailedAlgorithmStatusFailed     DetailedAlgorithmStatus = "Failed"
)

// Values returns all known values for DetailedAlgorithmStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DetailedAlgorithmStatus) Values() []DetailedAlgorithmStatus {
	return []DetailedAlgorithmStatus{
		"NotStarted",
		"InProgress",
		"Completed",
		"Failed",
	}
}

type DetailedModelPackageStatus string

// Enum values for DetailedModelPackageStatus
const (
	DetailedModelPackageStatusNotStarted DetailedModelPackageStatus = "NotStarted"
	DetailedModelPackageStatusInProgress DetailedModelPackageStatus = "InProgress"
	DetailedModelPackageStatusCompleted  DetailedModelPackageStatus = "Completed"
	DetailedModelPackageStatusFailed     DetailedModelPackageStatus = "Failed"
)

// Values returns all known values for DetailedModelPackageStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DetailedModelPackageStatus) Values() []DetailedModelPackageStatus {
	return []DetailedModelPackageStatus{
		"NotStarted",
		"InProgress",
		"Completed",
		"Failed",
	}
}

type DeviceDeploymentStatus string

// Enum values for DeviceDeploymentStatus
const (
	DeviceDeploymentStatusReadyToDeploy DeviceDeploymentStatus = "READYTODEPLOY"
	DeviceDeploymentStatusInProgress    DeviceDeploymentStatus = "INPROGRESS"
	DeviceDeploymentStatusDeployed      DeviceDeploymentStatus = "DEPLOYED"
	DeviceDeploymentStatusFailed        DeviceDeploymentStatus = "FAILED"
	DeviceDeploymentStatusStopping      DeviceDeploymentStatus = "STOPPING"
	DeviceDeploymentStatusStopped       DeviceDeploymentStatus = "STOPPED"
)

// Values returns all known values for DeviceDeploymentStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceDeploymentStatus) Values() []DeviceDeploymentStatus {
	return []DeviceDeploymentStatus{
		"READYTODEPLOY",
		"INPROGRESS",
		"DEPLOYED",
		"FAILED",
		"STOPPING",
		"STOPPED",
	}
}

type DeviceSubsetType string

// Enum values for DeviceSubsetType
const (
	DeviceSubsetTypePercentage   DeviceSubsetType = "PERCENTAGE"
	DeviceSubsetTypeSelection    DeviceSubsetType = "SELECTION"
	DeviceSubsetTypeNameContains DeviceSubsetType = "NAMECONTAINS"
)

// Values returns all known values for DeviceSubsetType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceSubsetType) Values() []DeviceSubsetType {
	return []DeviceSubsetType{
		"PERCENTAGE",
		"SELECTION",
		"NAMECONTAINS",
	}
}

type DirectInternetAccess string

// Enum values for DirectInternetAccess
const (
	DirectInternetAccessEnabled  DirectInternetAccess = "Enabled"
	DirectInternetAccessDisabled DirectInternetAccess = "Disabled"
)

// Values returns all known values for DirectInternetAccess. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DirectInternetAccess) Values() []DirectInternetAccess {
	return []DirectInternetAccess{
		"Enabled",
		"Disabled",
	}
}

type Direction string

// Enum values for Direction
const (
	DirectionBoth        Direction = "Both"
	DirectionAscendants  Direction = "Ascendants"
	DirectionDescendants Direction = "Descendants"
)

// Values returns all known values for Direction. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Direction) Values() []Direction {
	return []Direction{
		"Both",
		"Ascendants",
		"Descendants",
	}
}

type DomainStatus string

// Enum values for DomainStatus
const (
	DomainStatusDeleting     DomainStatus = "Deleting"
	DomainStatusFailed       DomainStatus = "Failed"
	DomainStatusInService    DomainStatus = "InService"
	DomainStatusPending      DomainStatus = "Pending"
	DomainStatusUpdating     DomainStatus = "Updating"
	DomainStatusUpdateFailed DomainStatus = "Update_Failed"
	DomainStatusDeleteFailed DomainStatus = "Delete_Failed"
)

// Values returns all known values for DomainStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DomainStatus) Values() []DomainStatus {
	return []DomainStatus{
		"Deleting",
		"Failed",
		"InService",
		"Pending",
		"Updating",
		"Update_Failed",
		"Delete_Failed",
	}
}

type EdgePackagingJobStatus string

// Enum values for EdgePackagingJobStatus
const (
	EdgePackagingJobStatusStarting   EdgePackagingJobStatus = "STARTING"
	EdgePackagingJobStatusInProgress EdgePackagingJobStatus = "INPROGRESS"
	EdgePackagingJobStatusCompleted  EdgePackagingJobStatus = "COMPLETED"
	EdgePackagingJobStatusFailed     EdgePackagingJobStatus = "FAILED"
	EdgePackagingJobStatusStopping   EdgePackagingJobStatus = "STOPPING"
	EdgePackagingJobStatusStopped    EdgePackagingJobStatus = "STOPPED"
)

// Values returns all known values for EdgePackagingJobStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EdgePackagingJobStatus) Values() []EdgePackagingJobStatus {
	return []EdgePackagingJobStatus{
		"STARTING",
		"INPROGRESS",
		"COMPLETED",
		"FAILED",
		"STOPPING",
		"STOPPED",
	}
}

type EdgePresetDeploymentStatus string

// Enum values for EdgePresetDeploymentStatus
const (
	EdgePresetDeploymentStatusCompleted EdgePresetDeploymentStatus = "COMPLETED"
	EdgePresetDeploymentStatusFailed    EdgePresetDeploymentStatus = "FAILED"
)

// Values returns all known values for EdgePresetDeploymentStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EdgePresetDeploymentStatus) Values() []EdgePresetDeploymentStatus {
	return []EdgePresetDeploymentStatus{
		"COMPLETED",
		"FAILED",
	}
}

type EdgePresetDeploymentType string

// Enum values for EdgePresetDeploymentType
const (
	EdgePresetDeploymentTypeGreengrassV2Component EdgePresetDeploymentType = "GreengrassV2Component"
)

// Values returns all known values for EdgePresetDeploymentType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EdgePresetDeploymentType) Values() []EdgePresetDeploymentType {
	return []EdgePresetDeploymentType{
		"GreengrassV2Component",
	}
}

type EnabledOrDisabled string

// Enum values for EnabledOrDisabled
const (
	EnabledOrDisabledEnabled  EnabledOrDisabled = "Enabled"
	EnabledOrDisabledDisabled EnabledOrDisabled = "Disabled"
)

// Values returns all known values for EnabledOrDisabled. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EnabledOrDisabled) Values() []EnabledOrDisabled {
	return []EnabledOrDisabled{
		"Enabled",
		"Disabled",
	}
}

type EndpointConfigSortKey string

// Enum values for EndpointConfigSortKey
const (
	EndpointConfigSortKeyName         EndpointConfigSortKey = "Name"
	EndpointConfigSortKeyCreationTime EndpointConfigSortKey = "CreationTime"
)

// Values returns all known values for EndpointConfigSortKey. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EndpointConfigSortKey) Values() []EndpointConfigSortKey {
	return []EndpointConfigSortKey{
		"Name",
		"CreationTime",
	}
}

type EndpointSortKey string

// Enum values for EndpointSortKey
const (
	EndpointSortKeyName         EndpointSortKey = "Name"
	EndpointSortKeyCreationTime EndpointSortKey = "CreationTime"
	EndpointSortKeyStatus       EndpointSortKey = "Status"
)

// Values returns all known values for EndpointSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EndpointSortKey) Values() []EndpointSortKey {
	return []EndpointSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type EndpointStatus string

// Enum values for EndpointStatus
const (
	EndpointStatusOutOfService         EndpointStatus = "OutOfService"
	EndpointStatusCreating             EndpointStatus = "Creating"
	EndpointStatusUpdating             EndpointStatus = "Updating"
	EndpointStatusSystemUpdating       EndpointStatus = "SystemUpdating"
	EndpointStatusRollingBack          EndpointStatus = "RollingBack"
	EndpointStatusInService            EndpointStatus = "InService"
	EndpointStatusDeleting             EndpointStatus = "Deleting"
	EndpointStatusFailed               EndpointStatus = "Failed"
	EndpointStatusUpdateRollbackFailed EndpointStatus = "UpdateRollbackFailed"
)

// Values returns all known values for EndpointStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EndpointStatus) Values() []EndpointStatus {
	return []EndpointStatus{
		"OutOfService",
		"Creating",
		"Updating",
		"SystemUpdating",
		"RollingBack",
		"InService",
		"Deleting",
		"Failed",
		"UpdateRollbackFailed",
	}
}

type ExecutionRoleIdentityConfig string

// Enum values for ExecutionRoleIdentityConfig
const (
	ExecutionRoleIdentityConfigUserProfileName ExecutionRoleIdentityConfig = "USER_PROFILE_NAME"
	ExecutionRoleIdentityConfigDisabled        ExecutionRoleIdentityConfig = "DISABLED"
)

// Values returns all known values for ExecutionRoleIdentityConfig. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionRoleIdentityConfig) Values() []ExecutionRoleIdentityConfig {
	return []ExecutionRoleIdentityConfig{
		"USER_PROFILE_NAME",
		"DISABLED",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusPending                 ExecutionStatus = "Pending"
	ExecutionStatusCompleted               ExecutionStatus = "Completed"
	ExecutionStatusCompletedWithViolations ExecutionStatus = "CompletedWithViolations"
	ExecutionStatusInProgress              ExecutionStatus = "InProgress"
	ExecutionStatusFailed                  ExecutionStatus = "Failed"
	ExecutionStatusStopping                ExecutionStatus = "Stopping"
	ExecutionStatusStopped                 ExecutionStatus = "Stopped"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"Pending",
		"Completed",
		"CompletedWithViolations",
		"InProgress",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type FailureHandlingPolicy string

// Enum values for FailureHandlingPolicy
const (
	FailureHandlingPolicyRollbackOnFailure FailureHandlingPolicy = "ROLLBACK_ON_FAILURE"
	FailureHandlingPolicyDoNothing         FailureHandlingPolicy = "DO_NOTHING"
)

// Values returns all known values for FailureHandlingPolicy. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FailureHandlingPolicy) Values() []FailureHandlingPolicy {
	return []FailureHandlingPolicy{
		"ROLLBACK_ON_FAILURE",
		"DO_NOTHING",
	}
}

type FairShare string

// Enum values for FairShare
const (
	FairShareEnabled  FairShare = "Enabled"
	FairShareDisabled FairShare = "Disabled"
)

// Values returns all known values for FairShare. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FairShare) Values() []FairShare {
	return []FairShare{
		"Enabled",
		"Disabled",
	}
}

type FeatureGroupSortBy string

// Enum values for FeatureGroupSortBy
const (
	FeatureGroupSortByName               FeatureGroupSortBy = "Name"
	FeatureGroupSortByFeatureGroupStatus FeatureGroupSortBy = "FeatureGroupStatus"
	FeatureGroupSortByOfflineStoreStatus FeatureGroupSortBy = "OfflineStoreStatus"
	FeatureGroupSortByCreationTime       FeatureGroupSortBy = "CreationTime"
)

// Values returns all known values for FeatureGroupSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FeatureGroupSortBy) Values() []FeatureGroupSortBy {
	return []FeatureGroupSortBy{
		"Name",
		"FeatureGroupStatus",
		"OfflineStoreStatus",
		"CreationTime",
	}
}

type FeatureGroupSortOrder string

// Enum values for FeatureGroupSortOrder
const (
	FeatureGroupSortOrderAscending  FeatureGroupSortOrder = "Ascending"
	FeatureGroupSortOrderDescending FeatureGroupSortOrder = "Descending"
)

// Values returns all known values for FeatureGroupSortOrder. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FeatureGroupSortOrder) Values() []FeatureGroupSortOrder {
	return []FeatureGroupSortOrder{
		"Ascending",
		"Descending",
	}
}

type FeatureGroupStatus string

// Enum values for FeatureGroupStatus
const (
	FeatureGroupStatusCreating     FeatureGroupStatus = "Creating"
	FeatureGroupStatusCreated      FeatureGroupStatus = "Created"
	FeatureGroupStatusCreateFailed FeatureGroupStatus = "CreateFailed"
	FeatureGroupStatusDeleting     FeatureGroupStatus = "Deleting"
	FeatureGroupStatusDeleteFailed FeatureGroupStatus = "DeleteFailed"
)

// Values returns all known values for FeatureGroupStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FeatureGroupStatus) Values() []FeatureGroupStatus {
	return []FeatureGroupStatus{
		"Creating",
		"Created",
		"CreateFailed",
		"Deleting",
		"DeleteFailed",
	}
}

type FeatureStatus string

// Enum values for FeatureStatus
const (
	FeatureStatusEnabled  FeatureStatus = "ENABLED"
	FeatureStatusDisabled FeatureStatus = "DISABLED"
)

// Values returns all known values for FeatureStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FeatureStatus) Values() []FeatureStatus {
	return []FeatureStatus{
		"ENABLED",
		"DISABLED",
	}
}

type FeatureType string

// Enum values for FeatureType
const (
	FeatureTypeIntegral   FeatureType = "Integral"
	FeatureTypeFractional FeatureType = "Fractional"
	FeatureTypeString     FeatureType = "String"
)

// Values returns all known values for FeatureType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FeatureType) Values() []FeatureType {
	return []FeatureType{
		"Integral",
		"Fractional",
		"String",
	}
}

type FileSystemAccessMode string

// Enum values for FileSystemAccessMode
const (
	FileSystemAccessModeRw FileSystemAccessMode = "rw"
	FileSystemAccessModeRo FileSystemAccessMode = "ro"
)

// Values returns all known values for FileSystemAccessMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FileSystemAccessMode) Values() []FileSystemAccessMode {
	return []FileSystemAccessMode{
		"rw",
		"ro",
	}
}

type FileSystemType string

// Enum values for FileSystemType
const (
	FileSystemTypeEfs       FileSystemType = "EFS"
	FileSystemTypeFsxlustre FileSystemType = "FSxLustre"
)

// Values returns all known values for FileSystemType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FileSystemType) Values() []FileSystemType {
	return []FileSystemType{
		"EFS",
		"FSxLustre",
	}
}

type FillingType string

// Enum values for FillingType
const (
	FillingTypeFrontfill       FillingType = "frontfill"
	FillingTypeMiddlefill      FillingType = "middlefill"
	FillingTypeBackfill        FillingType = "backfill"
	FillingTypeFuturefill      FillingType = "futurefill"
	FillingTypeFrontfillValue  FillingType = "frontfill_value"
	FillingTypeMiddlefillValue FillingType = "middlefill_value"
	FillingTypeBackfillValue   FillingType = "backfill_value"
	FillingTypeFuturefillValue FillingType = "futurefill_value"
)

// Values returns all known values for FillingType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FillingType) Values() []FillingType {
	return []FillingType{
		"frontfill",
		"middlefill",
		"backfill",
		"futurefill",
		"frontfill_value",
		"middlefill_value",
		"backfill_value",
		"futurefill_value",
	}
}

type FlatInvocations string

// Enum values for FlatInvocations
const (
	FlatInvocationsContinue FlatInvocations = "Continue"
	FlatInvocationsStop     FlatInvocations = "Stop"
)

// Values returns all known values for FlatInvocations. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FlatInvocations) Values() []FlatInvocations {
	return []FlatInvocations{
		"Continue",
		"Stop",
	}
}

type FlowDefinitionStatus string

// Enum values for FlowDefinitionStatus
const (
	FlowDefinitionStatusInitializing FlowDefinitionStatus = "Initializing"
	FlowDefinitionStatusActive       FlowDefinitionStatus = "Active"
	FlowDefinitionStatusFailed       FlowDefinitionStatus = "Failed"
	FlowDefinitionStatusDeleting     FlowDefinitionStatus = "Deleting"
)

// Values returns all known values for FlowDefinitionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FlowDefinitionStatus) Values() []FlowDefinitionStatus {
	return []FlowDefinitionStatus{
		"Initializing",
		"Active",
		"Failed",
		"Deleting",
	}
}

type Framework string

// Enum values for Framework
const (
	FrameworkTensorflow Framework = "TENSORFLOW"
	FrameworkKeras      Framework = "KERAS"
	FrameworkMxnet      Framework = "MXNET"
	FrameworkOnnx       Framework = "ONNX"
	FrameworkPytorch    Framework = "PYTORCH"
	FrameworkXgboost    Framework = "XGBOOST"
	FrameworkTflite     Framework = "TFLITE"
	FrameworkDarknet    Framework = "DARKNET"
	FrameworkSklearn    Framework = "SKLEARN"
)

// Values returns all known values for Framework. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Framework) Values() []Framework {
	return []Framework{
		"TENSORFLOW",
		"KERAS",
		"MXNET",
		"ONNX",
		"PYTORCH",
		"XGBOOST",
		"TFLITE",
		"DARKNET",
		"SKLEARN",
	}
}

type HubContentSortBy string

// Enum values for HubContentSortBy
const (
	HubContentSortByHubContentName   HubContentSortBy = "HubContentName"
	HubContentSortByCreationTime     HubContentSortBy = "CreationTime"
	HubContentSortByHubContentStatus HubContentSortBy = "HubContentStatus"
)

// Values returns all known values for HubContentSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HubContentSortBy) Values() []HubContentSortBy {
	return []HubContentSortBy{
		"HubContentName",
		"CreationTime",
		"HubContentStatus",
	}
}

type HubContentStatus string

// Enum values for HubContentStatus
const (
	HubContentStatusAvailable    HubContentStatus = "Available"
	HubContentStatusImporting    HubContentStatus = "Importing"
	HubContentStatusDeleting     HubContentStatus = "Deleting"
	HubContentStatusImportFailed HubContentStatus = "ImportFailed"
	HubContentStatusDeleteFailed HubContentStatus = "DeleteFailed"
)

// Values returns all known values for HubContentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HubContentStatus) Values() []HubContentStatus {
	return []HubContentStatus{
		"Available",
		"Importing",
		"Deleting",
		"ImportFailed",
		"DeleteFailed",
	}
}

type HubContentSupportStatus string

// Enum values for HubContentSupportStatus
const (
	HubContentSupportStatusSupported  HubContentSupportStatus = "Supported"
	HubContentSupportStatusDeprecated HubContentSupportStatus = "Deprecated"
	HubContentSupportStatusRestricted HubContentSupportStatus = "Restricted"
)

// Values returns all known values for HubContentSupportStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HubContentSupportStatus) Values() []HubContentSupportStatus {
	return []HubContentSupportStatus{
		"Supported",
		"Deprecated",
		"Restricted",
	}
}

type HubContentType string

// Enum values for HubContentType
const (
	HubContentTypeModel          HubContentType = "Model"
	HubContentTypeNotebook       HubContentType = "Notebook"
	HubContentTypeModelReference HubContentType = "ModelReference"
)

// Values returns all known values for HubContentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HubContentType) Values() []HubContentType {
	return []HubContentType{
		"Model",
		"Notebook",
		"ModelReference",
	}
}

type HubSortBy string

// Enum values for HubSortBy
const (
	HubSortByHubName        HubSortBy = "HubName"
	HubSortByCreationTime   HubSortBy = "CreationTime"
	HubSortByHubStatus      HubSortBy = "HubStatus"
	HubSortByAccountIdOwner HubSortBy = "AccountIdOwner"
)

// Values returns all known values for HubSortBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HubSortBy) Values() []HubSortBy {
	return []HubSortBy{
		"HubName",
		"CreationTime",
		"HubStatus",
		"AccountIdOwner",
	}
}

type HubStatus string

// Enum values for HubStatus
const (
	HubStatusInService    HubStatus = "InService"
	HubStatusCreating     HubStatus = "Creating"
	HubStatusUpdating     HubStatus = "Updating"
	HubStatusDeleting     HubStatus = "Deleting"
	HubStatusCreateFailed HubStatus = "CreateFailed"
	HubStatusUpdateFailed HubStatus = "UpdateFailed"
	HubStatusDeleteFailed HubStatus = "DeleteFailed"
)

// Values returns all known values for HubStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HubStatus) Values() []HubStatus {
	return []HubStatus{
		"InService",
		"Creating",
		"Updating",
		"Deleting",
		"CreateFailed",
		"UpdateFailed",
		"DeleteFailed",
	}
}

type HumanTaskUiStatus string

// Enum values for HumanTaskUiStatus
const (
	HumanTaskUiStatusActive   HumanTaskUiStatus = "Active"
	HumanTaskUiStatusDeleting HumanTaskUiStatus = "Deleting"
)

// Values returns all known values for HumanTaskUiStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HumanTaskUiStatus) Values() []HumanTaskUiStatus {
	return []HumanTaskUiStatus{
		"Active",
		"Deleting",
	}
}

type HyperParameterScalingType string

// Enum values for HyperParameterScalingType
const (
	HyperParameterScalingTypeAuto               HyperParameterScalingType = "Auto"
	HyperParameterScalingTypeLinear             HyperParameterScalingType = "Linear"
	HyperParameterScalingTypeLogarithmic        HyperParameterScalingType = "Logarithmic"
	HyperParameterScalingTypeReverseLogarithmic HyperParameterScalingType = "ReverseLogarithmic"
)

// Values returns all known values for HyperParameterScalingType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HyperParameterScalingType) Values() []HyperParameterScalingType {
	return []HyperParameterScalingType{
		"Auto",
		"Linear",
		"Logarithmic",
		"ReverseLogarithmic",
	}
}

type HyperParameterTuningAllocationStrategy string

// Enum values for HyperParameterTuningAllocationStrategy
const (
	HyperParameterTuningAllocationStrategyPrioritized HyperParameterTuningAllocationStrategy = "Prioritized"
)

// Values returns all known values for HyperParameterTuningAllocationStrategy.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HyperParameterTuningAllocationStrategy) Values() []HyperParameterTuningAllocationStrategy {
	return []HyperParameterTuningAllocationStrategy{
		"Prioritized",
	}
}

type HyperParameterTuningJobObjectiveType string

// Enum values for HyperParameterTuningJobObjectiveType
const (
	HyperParameterTuningJobObjectiveTypeMaximize HyperParameterTuningJobObjectiveType = "Maximize"
	HyperParameterTuningJobObjectiveTypeMinimize HyperParameterTuningJobObjectiveType = "Minimize"
)

// Values returns all known values for HyperParameterTuningJobObjectiveType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HyperParameterTuningJobObjectiveType) Values() []HyperParameterTuningJobObjectiveType {
	return []HyperParameterTuningJobObjectiveType{
		"Maximize",
		"Minimize",
	}
}

type HyperParameterTuningJobSortByOptions string

// Enum values for HyperParameterTuningJobSortByOptions
const (
	HyperParameterTuningJobSortByOptionsName         HyperParameterTuningJobSortByOptions = "Name"
	HyperParameterTuningJobSortByOptionsStatus       HyperParameterTuningJobSortByOptions = "Status"
	HyperParameterTuningJobSortByOptionsCreationTime HyperParameterTuningJobSortByOptions = "CreationTime"
)

// Values returns all known values for HyperParameterTuningJobSortByOptions. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HyperParameterTuningJobSortByOptions) Values() []HyperParameterTuningJobSortByOptions {
	return []HyperParameterTuningJobSortByOptions{
		"Name",
		"Status",
		"CreationTime",
	}
}

type HyperParameterTuningJobStatus string

// Enum values for HyperParameterTuningJobStatus
const (
	HyperParameterTuningJobStatusCompleted    HyperParameterTuningJobStatus = "Completed"
	HyperParameterTuningJobStatusInProgress   HyperParameterTuningJobStatus = "InProgress"
	HyperParameterTuningJobStatusFailed       HyperParameterTuningJobStatus = "Failed"
	HyperParameterTuningJobStatusStopped      HyperParameterTuningJobStatus = "Stopped"
	HyperParameterTuningJobStatusStopping     HyperParameterTuningJobStatus = "Stopping"
	HyperParameterTuningJobStatusDeleting     HyperParameterTuningJobStatus = "Deleting"
	HyperParameterTuningJobStatusDeleteFailed HyperParameterTuningJobStatus = "DeleteFailed"
)

// Values returns all known values for HyperParameterTuningJobStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HyperParameterTuningJobStatus) Values() []HyperParameterTuningJobStatus {
	return []HyperParameterTuningJobStatus{
		"Completed",
		"InProgress",
		"Failed",
		"Stopped",
		"Stopping",
		"Deleting",
		"DeleteFailed",
	}
}

type HyperParameterTuningJobStrategyType string

// Enum values for HyperParameterTuningJobStrategyType
const (
	HyperParameterTuningJobStrategyTypeBayesian  HyperParameterTuningJobStrategyType = "Bayesian"
	HyperParameterTuningJobStrategyTypeRandom    HyperParameterTuningJobStrategyType = "Random"
	HyperParameterTuningJobStrategyTypeHyperband HyperParameterTuningJobStrategyType = "Hyperband"
	HyperParameterTuningJobStrategyTypeGrid      HyperParameterTuningJobStrategyType = "Grid"
)

// Values returns all known values for HyperParameterTuningJobStrategyType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HyperParameterTuningJobStrategyType) Values() []HyperParameterTuningJobStrategyType {
	return []HyperParameterTuningJobStrategyType{
		"Bayesian",
		"Random",
		"Hyperband",
		"Grid",
	}
}

type HyperParameterTuningJobWarmStartType string

// Enum values for HyperParameterTuningJobWarmStartType
const (
	HyperParameterTuningJobWarmStartTypeIdenticalDataAndAlgorithm HyperParameterTuningJobWarmStartType = "IdenticalDataAndAlgorithm"
	HyperParameterTuningJobWarmStartTypeTransferLearning          HyperParameterTuningJobWarmStartType = "TransferLearning"
)

// Values returns all known values for HyperParameterTuningJobWarmStartType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HyperParameterTuningJobWarmStartType) Values() []HyperParameterTuningJobWarmStartType {
	return []HyperParameterTuningJobWarmStartType{
		"IdenticalDataAndAlgorithm",
		"TransferLearning",
	}
}

type ImageSortBy string

// Enum values for ImageSortBy
const (
	ImageSortByCreationTime     ImageSortBy = "CREATION_TIME"
	ImageSortByLastModifiedTime ImageSortBy = "LAST_MODIFIED_TIME"
	ImageSortByImageName        ImageSortBy = "IMAGE_NAME"
)

// Values returns all known values for ImageSortBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImageSortBy) Values() []ImageSortBy {
	return []ImageSortBy{
		"CREATION_TIME",
		"LAST_MODIFIED_TIME",
		"IMAGE_NAME",
	}
}

type ImageSortOrder string

// Enum values for ImageSortOrder
const (
	ImageSortOrderAscending  ImageSortOrder = "ASCENDING"
	ImageSortOrderDescending ImageSortOrder = "DESCENDING"
)

// Values returns all known values for ImageSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImageSortOrder) Values() []ImageSortOrder {
	return []ImageSortOrder{
		"ASCENDING",
		"DESCENDING",
	}
}

type ImageStatus string

// Enum values for ImageStatus
const (
	ImageStatusCreating     ImageStatus = "CREATING"
	ImageStatusCreated      ImageStatus = "CREATED"
	ImageStatusCreateFailed ImageStatus = "CREATE_FAILED"
	ImageStatusUpdating     ImageStatus = "UPDATING"
	ImageStatusUpdateFailed ImageStatus = "UPDATE_FAILED"
	ImageStatusDeleting     ImageStatus = "DELETING"
	ImageStatusDeleteFailed ImageStatus = "DELETE_FAILED"
)

// Values returns all known values for ImageStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImageStatus) Values() []ImageStatus {
	return []ImageStatus{
		"CREATING",
		"CREATED",
		"CREATE_FAILED",
		"UPDATING",
		"UPDATE_FAILED",
		"DELETING",
		"DELETE_FAILED",
	}
}

type ImageVersionSortBy string

// Enum values for ImageVersionSortBy
const (
	ImageVersionSortByCreationTime     ImageVersionSortBy = "CREATION_TIME"
	ImageVersionSortByLastModifiedTime ImageVersionSortBy = "LAST_MODIFIED_TIME"
	ImageVersionSortByVersion          ImageVersionSortBy = "VERSION"
)

// Values returns all known values for ImageVersionSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImageVersionSortBy) Values() []ImageVersionSortBy {
	return []ImageVersionSortBy{
		"CREATION_TIME",
		"LAST_MODIFIED_TIME",
		"VERSION",
	}
}

type ImageVersionSortOrder string

// Enum values for ImageVersionSortOrder
const (
	ImageVersionSortOrderAscending  ImageVersionSortOrder = "ASCENDING"
	ImageVersionSortOrderDescending ImageVersionSortOrder = "DESCENDING"
)

// Values returns all known values for ImageVersionSortOrder. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImageVersionSortOrder) Values() []ImageVersionSortOrder {
	return []ImageVersionSortOrder{
		"ASCENDING",
		"DESCENDING",
	}
}

type ImageVersionStatus string

// Enum values for ImageVersionStatus
const (
	ImageVersionStatusCreating     ImageVersionStatus = "CREATING"
	ImageVersionStatusCreated      ImageVersionStatus = "CREATED"
	ImageVersionStatusCreateFailed ImageVersionStatus = "CREATE_FAILED"
	ImageVersionStatusDeleting     ImageVersionStatus = "DELETING"
	ImageVersionStatusDeleteFailed ImageVersionStatus = "DELETE_FAILED"
)

// Values returns all known values for ImageVersionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImageVersionStatus) Values() []ImageVersionStatus {
	return []ImageVersionStatus{
		"CREATING",
		"CREATED",
		"CREATE_FAILED",
		"DELETING",
		"DELETE_FAILED",
	}
}

type InferenceComponentCapacitySizeType string

// Enum values for InferenceComponentCapacitySizeType
const (
	InferenceComponentCapacitySizeTypeCopyCount       InferenceComponentCapacitySizeType = "COPY_COUNT"
	InferenceComponentCapacitySizeTypeCapacityPercent InferenceComponentCapacitySizeType = "CAPACITY_PERCENT"
)

// Values returns all known values for InferenceComponentCapacitySizeType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InferenceComponentCapacitySizeType) Values() []InferenceComponentCapacitySizeType {
	return []InferenceComponentCapacitySizeType{
		"COPY_COUNT",
		"CAPACITY_PERCENT",
	}
}

type InferenceComponentSortKey string

// Enum values for InferenceComponentSortKey
const (
	InferenceComponentSortKeyName         InferenceComponentSortKey = "Name"
	InferenceComponentSortKeyCreationTime InferenceComponentSortKey = "CreationTime"
	InferenceComponentSortKeyStatus       InferenceComponentSortKey = "Status"
)

// Values returns all known values for InferenceComponentSortKey. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InferenceComponentSortKey) Values() []InferenceComponentSortKey {
	return []InferenceComponentSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type InferenceComponentStatus string

// Enum values for InferenceComponentStatus
const (
	InferenceComponentStatusInService InferenceComponentStatus = "InService"
	InferenceComponentStatusCreating  InferenceComponentStatus = "Creating"
	InferenceComponentStatusUpdating  InferenceComponentStatus = "Updating"
	InferenceComponentStatusFailed    InferenceComponentStatus = "Failed"
	InferenceComponentStatusDeleting  InferenceComponentStatus = "Deleting"
)

// Values returns all known values for InferenceComponentStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InferenceComponentStatus) Values() []InferenceComponentStatus {
	return []InferenceComponentStatus{
		"InService",
		"Creating",
		"Updating",
		"Failed",
		"Deleting",
	}
}

type InferenceExecutionMode string

// Enum values for InferenceExecutionMode
const (
	InferenceExecutionModeSerial InferenceExecutionMode = "Serial"
	InferenceExecutionModeDirect InferenceExecutionMode = "Direct"
)

// Values returns all known values for InferenceExecutionMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InferenceExecutionMode) Values() []InferenceExecutionMode {
	return []InferenceExecutionMode{
		"Serial",
		"Direct",
	}
}

type InferenceExperimentStatus string

// Enum values for InferenceExperimentStatus
const (
	InferenceExperimentStatusCreating  InferenceExperimentStatus = "Creating"
	InferenceExperimentStatusCreated   InferenceExperimentStatus = "Created"
	InferenceExperimentStatusUpdating  InferenceExperimentStatus = "Updating"
	InferenceExperimentStatusRunning   InferenceExperimentStatus = "Running"
	InferenceExperimentStatusStarting  InferenceExperimentStatus = "Starting"
	InferenceExperimentStatusStopping  InferenceExperimentStatus = "Stopping"
	InferenceExperimentStatusCompleted InferenceExperimentStatus = "Completed"
	InferenceExperimentStatusCancelled InferenceExperimentStatus = "Cancelled"
)

// Values returns all known values for InferenceExperimentStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InferenceExperimentStatus) Values() []InferenceExperimentStatus {
	return []InferenceExperimentStatus{
		"Creating",
		"Created",
		"Updating",
		"Running",
		"Starting",
		"Stopping",
		"Completed",
		"Cancelled",
	}
}

type InferenceExperimentStopDesiredState string

// Enum values for InferenceExperimentStopDesiredState
const (
	InferenceExperimentStopDesiredStateCompleted InferenceExperimentStopDesiredState = "Completed"
	InferenceExperimentStopDesiredStateCancelled InferenceExperimentStopDesiredState = "Cancelled"
)

// Values returns all known values for InferenceExperimentStopDesiredState. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InferenceExperimentStopDesiredState) Values() []InferenceExperimentStopDesiredState {
	return []InferenceExperimentStopDesiredState{
		"Completed",
		"Cancelled",
	}
}

type InferenceExperimentType string

// Enum values for InferenceExperimentType
const (
	InferenceExperimentTypeShadowMode InferenceExperimentType = "ShadowMode"
)

// Values returns all known values for InferenceExperimentType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InferenceExperimentType) Values() []InferenceExperimentType {
	return []InferenceExperimentType{
		"ShadowMode",
	}
}

type InputMode string

// Enum values for InputMode
const (
	InputModePipe InputMode = "Pipe"
	InputModeFile InputMode = "File"
)

// Values returns all known values for InputMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InputMode) Values() []InputMode {
	return []InputMode{
		"Pipe",
		"File",
	}
}

type InstanceGroupStatus string

// Enum values for InstanceGroupStatus
const (
	InstanceGroupStatusInservice      InstanceGroupStatus = "InService"
	InstanceGroupStatusCreating       InstanceGroupStatus = "Creating"
	InstanceGroupStatusUpdating       InstanceGroupStatus = "Updating"
	InstanceGroupStatusFailed         InstanceGroupStatus = "Failed"
	InstanceGroupStatusDegraded       InstanceGroupStatus = "Degraded"
	InstanceGroupStatusSystemupdating InstanceGroupStatus = "SystemUpdating"
	InstanceGroupStatusDeleting       InstanceGroupStatus = "Deleting"
)

// Values returns all known values for InstanceGroupStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstanceGroupStatus) Values() []InstanceGroupStatus {
	return []InstanceGroupStatus{
		"InService",
		"Creating",
		"Updating",
		"Failed",
		"Degraded",
		"SystemUpdating",
		"Deleting",
	}
}

type InstanceType string

// Enum values for InstanceType
const (
	InstanceTypeMlT2Medium      InstanceType = "ml.t2.medium"
	InstanceTypeMlT2Large       InstanceType = "ml.t2.large"
	InstanceTypeMlT2Xlarge      InstanceType = "ml.t2.xlarge"
	InstanceTypeMlT22xlarge     InstanceType = "ml.t2.2xlarge"
	InstanceTypeMlT3Medium      InstanceType = "ml.t3.medium"
	InstanceTypeMlT3Large       InstanceType = "ml.t3.large"
	InstanceTypeMlT3Xlarge      InstanceType = "ml.t3.xlarge"
	InstanceTypeMlT32xlarge     InstanceType = "ml.t3.2xlarge"
	InstanceTypeMlM4Xlarge      InstanceType = "ml.m4.xlarge"
	InstanceTypeMlM42xlarge     InstanceType = "ml.m4.2xlarge"
	InstanceTypeMlM44xlarge     InstanceType = "ml.m4.4xlarge"
	InstanceTypeMlM410xlarge    InstanceType = "ml.m4.10xlarge"
	InstanceTypeMlM416xlarge    InstanceType = "ml.m4.16xlarge"
	InstanceTypeMlM5Xlarge      InstanceType = "ml.m5.xlarge"
	InstanceTypeMlM52xlarge     InstanceType = "ml.m5.2xlarge"
	InstanceTypeMlM54xlarge     InstanceType = "ml.m5.4xlarge"
	InstanceTypeMlM512xlarge    InstanceType = "ml.m5.12xlarge"
	InstanceTypeMlM524xlarge    InstanceType = "ml.m5.24xlarge"
	InstanceTypeMlM5dLarge      InstanceType = "ml.m5d.large"
	InstanceTypeMlM5dXlarge     InstanceType = "ml.m5d.xlarge"
	InstanceTypeMlM5d2xlarge    InstanceType = "ml.m5d.2xlarge"
	InstanceTypeMlM5d4xlarge    InstanceType = "ml.m5d.4xlarge"
	InstanceTypeMlM5d8xlarge    InstanceType = "ml.m5d.8xlarge"
	InstanceTypeMlM5d12xlarge   InstanceType = "ml.m5d.12xlarge"
	InstanceTypeMlM5d16xlarge   InstanceType = "ml.m5d.16xlarge"
	InstanceTypeMlM5d24xlarge   InstanceType = "ml.m5d.24xlarge"
	InstanceTypeMlC4Xlarge      InstanceType = "ml.c4.xlarge"
	InstanceTypeMlC42xlarge     InstanceType = "ml.c4.2xlarge"
	InstanceTypeMlC44xlarge     InstanceType = "ml.c4.4xlarge"
	InstanceTypeMlC48xlarge     InstanceType = "ml.c4.8xlarge"
	InstanceTypeMlC5Xlarge      InstanceType = "ml.c5.xlarge"
	InstanceTypeMlC52xlarge     InstanceType = "ml.c5.2xlarge"
	InstanceTypeMlC54xlarge     InstanceType = "ml.c5.4xlarge"
	InstanceTypeMlC59xlarge     InstanceType = "ml.c5.9xlarge"
	InstanceTypeMlC518xlarge    InstanceType = "ml.c5.18xlarge"
	InstanceTypeMlC5dXlarge     InstanceType = "ml.c5d.xlarge"
	InstanceTypeMlC5d2xlarge    InstanceType = "ml.c5d.2xlarge"
	InstanceTypeMlC5d4xlarge    InstanceType = "ml.c5d.4xlarge"
	InstanceTypeMlC5d9xlarge    InstanceType = "ml.c5d.9xlarge"
	InstanceTypeMlC5d18xlarge   InstanceType = "ml.c5d.18xlarge"
	InstanceTypeMlP2Xlarge      InstanceType = "ml.p2.xlarge"
	InstanceTypeMlP28xlarge     InstanceType = "ml.p2.8xlarge"
	InstanceTypeMlP216xlarge    InstanceType = "ml.p2.16xlarge"
	InstanceTypeMlP32xlarge     InstanceType = "ml.p3.2xlarge"
	InstanceTypeMlP38xlarge     InstanceType = "ml.p3.8xlarge"
	InstanceTypeMlP316xlarge    InstanceType = "ml.p3.16xlarge"
	InstanceTypeMlP3dn24xlarge  InstanceType = "ml.p3dn.24xlarge"
	InstanceTypeMlG4dnXlarge    InstanceType = "ml.g4dn.xlarge"
	InstanceTypeMlG4dn2xlarge   InstanceType = "ml.g4dn.2xlarge"
	InstanceTypeMlG4dn4xlarge   InstanceType = "ml.g4dn.4xlarge"
	InstanceTypeMlG4dn8xlarge   InstanceType = "ml.g4dn.8xlarge"
	InstanceTypeMlG4dn12xlarge  InstanceType = "ml.g4dn.12xlarge"
	InstanceTypeMlG4dn16xlarge  InstanceType = "ml.g4dn.16xlarge"
	InstanceTypeMlR5Large       InstanceType = "ml.r5.large"
	InstanceTypeMlR5Xlarge      InstanceType = "ml.r5.xlarge"
	InstanceTypeMlR52xlarge     InstanceType = "ml.r5.2xlarge"
	InstanceTypeMlR54xlarge     InstanceType = "ml.r5.4xlarge"
	InstanceTypeMlR58xlarge     InstanceType = "ml.r5.8xlarge"
	InstanceTypeMlR512xlarge    InstanceType = "ml.r5.12xlarge"
	InstanceTypeMlR516xlarge    InstanceType = "ml.r5.16xlarge"
	InstanceTypeMlR524xlarge    InstanceType = "ml.r5.24xlarge"
	InstanceTypeMlG5Xlarge      InstanceType = "ml.g5.xlarge"
	InstanceTypeMlG52xlarge     InstanceType = "ml.g5.2xlarge"
	InstanceTypeMlG54xlarge     InstanceType = "ml.g5.4xlarge"
	InstanceTypeMlG58xlarge     InstanceType = "ml.g5.8xlarge"
	InstanceTypeMlG516xlarge    InstanceType = "ml.g5.16xlarge"
	InstanceTypeMlG512xlarge    InstanceType = "ml.g5.12xlarge"
	InstanceTypeMlG524xlarge    InstanceType = "ml.g5.24xlarge"
	InstanceTypeMlG548xlarge    InstanceType = "ml.g5.48xlarge"
	InstanceTypeMlInf1Xlarge    InstanceType = "ml.inf1.xlarge"
	InstanceTypeMlInf12xlarge   InstanceType = "ml.inf1.2xlarge"
	InstanceTypeMlInf16xlarge   InstanceType = "ml.inf1.6xlarge"
	InstanceTypeMlInf124xlarge  InstanceType = "ml.inf1.24xlarge"
	InstanceTypeMlTrn12xlarge   InstanceType = "ml.trn1.2xlarge"
	InstanceTypeMlTrn132xlarge  InstanceType = "ml.trn1.32xlarge"
	InstanceTypeMlTrn1n32xlarge InstanceType = "ml.trn1n.32xlarge"
	InstanceTypeMlInf2Xlarge    InstanceType = "ml.inf2.xlarge"
	InstanceTypeMlInf28xlarge   InstanceType = "ml.inf2.8xlarge"
	InstanceTypeMlInf224xlarge  InstanceType = "ml.inf2.24xlarge"
	InstanceTypeMlInf248xlarge  InstanceType = "ml.inf2.48xlarge"
	InstanceTypeMlP4d24xlarge   InstanceType = "ml.p4d.24xlarge"
	InstanceTypeMlP4de24xlarge  InstanceType = "ml.p4de.24xlarge"
	InstanceTypeMlP548xlarge    InstanceType = "ml.p5.48xlarge"
	InstanceTypeMlM6iLarge      InstanceType = "ml.m6i.large"
	InstanceTypeMlM6iXlarge     InstanceType = "ml.m6i.xlarge"
	InstanceTypeMlM6i2xlarge    InstanceType = "ml.m6i.2xlarge"
	InstanceTypeMlM6i4xlarge    InstanceType = "ml.m6i.4xlarge"
	InstanceTypeMlM6i8xlarge    InstanceType = "ml.m6i.8xlarge"
	InstanceTypeMlM6i12xlarge   InstanceType = "ml.m6i.12xlarge"
	InstanceTypeMlM6i16xlarge   InstanceType = "ml.m6i.16xlarge"
	InstanceTypeMlM6i24xlarge   InstanceType = "ml.m6i.24xlarge"
	InstanceTypeMlM6i32xlarge   InstanceType = "ml.m6i.32xlarge"
	InstanceTypeMlM7iLarge      InstanceType = "ml.m7i.large"
	InstanceTypeMlM7iXlarge     InstanceType = "ml.m7i.xlarge"
	InstanceTypeMlM7i2xlarge    InstanceType = "ml.m7i.2xlarge"
	InstanceTypeMlM7i4xlarge    InstanceType = "ml.m7i.4xlarge"
	InstanceTypeMlM7i8xlarge    InstanceType = "ml.m7i.8xlarge"
	InstanceTypeMlM7i12xlarge   InstanceType = "ml.m7i.12xlarge"
	InstanceTypeMlM7i16xlarge   InstanceType = "ml.m7i.16xlarge"
	InstanceTypeMlM7i24xlarge   InstanceType = "ml.m7i.24xlarge"
	InstanceTypeMlM7i48xlarge   InstanceType = "ml.m7i.48xlarge"
	InstanceTypeMlC6iLarge      InstanceType = "ml.c6i.large"
	InstanceTypeMlC6iXlarge     InstanceType = "ml.c6i.xlarge"
	InstanceTypeMlC6i2xlarge    InstanceType = "ml.c6i.2xlarge"
	InstanceTypeMlC6i4xlarge    InstanceType = "ml.c6i.4xlarge"
	InstanceTypeMlC6i8xlarge    InstanceType = "ml.c6i.8xlarge"
	InstanceTypeMlC6i12xlarge   InstanceType = "ml.c6i.12xlarge"
	InstanceTypeMlC6i16xlarge   InstanceType = "ml.c6i.16xlarge"
	InstanceTypeMlC6i24xlarge   InstanceType = "ml.c6i.24xlarge"
	InstanceTypeMlC6i32xlarge   InstanceType = "ml.c6i.32xlarge"
	InstanceTypeMlC7iLarge      InstanceType = "ml.c7i.large"
	InstanceTypeMlC7iXlarge     InstanceType = "ml.c7i.xlarge"
	InstanceTypeMlC7i2xlarge    InstanceType = "ml.c7i.2xlarge"
	InstanceTypeMlC7i4xlarge    InstanceType = "ml.c7i.4xlarge"
	InstanceTypeMlC7i8xlarge    InstanceType = "ml.c7i.8xlarge"
	InstanceTypeMlC7i12xlarge   InstanceType = "ml.c7i.12xlarge"
	InstanceTypeMlC7i16xlarge   InstanceType = "ml.c7i.16xlarge"
	InstanceTypeMlC7i24xlarge   InstanceType = "ml.c7i.24xlarge"
	InstanceTypeMlC7i48xlarge   InstanceType = "ml.c7i.48xlarge"
	InstanceTypeMlR6iLarge      InstanceType = "ml.r6i.large"
	InstanceTypeMlR6iXlarge     InstanceType = "ml.r6i.xlarge"
	InstanceTypeMlR6i2xlarge    InstanceType = "ml.r6i.2xlarge"
	InstanceTypeMlR6i4xlarge    InstanceType = "ml.r6i.4xlarge"
	InstanceTypeMlR6i8xlarge    InstanceType = "ml.r6i.8xlarge"
	InstanceTypeMlR6i12xlarge   InstanceType = "ml.r6i.12xlarge"
	InstanceTypeMlR6i16xlarge   InstanceType = "ml.r6i.16xlarge"
	InstanceTypeMlR6i24xlarge   InstanceType = "ml.r6i.24xlarge"
	InstanceTypeMlR6i32xlarge   InstanceType = "ml.r6i.32xlarge"
	InstanceTypeMlR7iLarge      InstanceType = "ml.r7i.large"
	InstanceTypeMlR7iXlarge     InstanceType = "ml.r7i.xlarge"
	InstanceTypeMlR7i2xlarge    InstanceType = "ml.r7i.2xlarge"
	InstanceTypeMlR7i4xlarge    InstanceType = "ml.r7i.4xlarge"
	InstanceTypeMlR7i8xlarge    InstanceType = "ml.r7i.8xlarge"
	InstanceTypeMlR7i12xlarge   InstanceType = "ml.r7i.12xlarge"
	InstanceTypeMlR7i16xlarge   InstanceType = "ml.r7i.16xlarge"
	InstanceTypeMlR7i24xlarge   InstanceType = "ml.r7i.24xlarge"
	InstanceTypeMlR7i48xlarge   InstanceType = "ml.r7i.48xlarge"
	InstanceTypeMlM6idLarge     InstanceType = "ml.m6id.large"
	InstanceTypeMlM6idXlarge    InstanceType = "ml.m6id.xlarge"
	InstanceTypeMlM6id2xlarge   InstanceType = "ml.m6id.2xlarge"
	InstanceTypeMlM6id4xlarge   InstanceType = "ml.m6id.4xlarge"
	InstanceTypeMlM6id8xlarge   InstanceType = "ml.m6id.8xlarge"
	InstanceTypeMlM6id12xlarge  InstanceType = "ml.m6id.12xlarge"
	InstanceTypeMlM6id16xlarge  InstanceType = "ml.m6id.16xlarge"
	InstanceTypeMlM6id24xlarge  InstanceType = "ml.m6id.24xlarge"
	InstanceTypeMlM6id32xlarge  InstanceType = "ml.m6id.32xlarge"
	InstanceTypeMlC6idLarge     InstanceType = "ml.c6id.large"
	InstanceTypeMlC6idXlarge    InstanceType = "ml.c6id.xlarge"
	InstanceTypeMlC6id2xlarge   InstanceType = "ml.c6id.2xlarge"
	InstanceTypeMlC6id4xlarge   InstanceType = "ml.c6id.4xlarge"
	InstanceTypeMlC6id8xlarge   InstanceType = "ml.c6id.8xlarge"
	InstanceTypeMlC6id12xlarge  InstanceType = "ml.c6id.12xlarge"
	InstanceTypeMlC6id16xlarge  InstanceType = "ml.c6id.16xlarge"
	InstanceTypeMlC6id24xlarge  InstanceType = "ml.c6id.24xlarge"
	InstanceTypeMlC6id32xlarge  InstanceType = "ml.c6id.32xlarge"
	InstanceTypeMlR6idLarge     InstanceType = "ml.r6id.large"
	InstanceTypeMlR6idXlarge    InstanceType = "ml.r6id.xlarge"
	InstanceTypeMlR6id2xlarge   InstanceType = "ml.r6id.2xlarge"
	InstanceTypeMlR6id4xlarge   InstanceType = "ml.r6id.4xlarge"
	InstanceTypeMlR6id8xlarge   InstanceType = "ml.r6id.8xlarge"
	InstanceTypeMlR6id12xlarge  InstanceType = "ml.r6id.12xlarge"
	InstanceTypeMlR6id16xlarge  InstanceType = "ml.r6id.16xlarge"
	InstanceTypeMlR6id24xlarge  InstanceType = "ml.r6id.24xlarge"
	InstanceTypeMlR6id32xlarge  InstanceType = "ml.r6id.32xlarge"
	InstanceTypeMlG6Xlarge      InstanceType = "ml.g6.xlarge"
	InstanceTypeMlG62xlarge     InstanceType = "ml.g6.2xlarge"
	InstanceTypeMlG64xlarge     InstanceType = "ml.g6.4xlarge"
	InstanceTypeMlG68xlarge     InstanceType = "ml.g6.8xlarge"
	InstanceTypeMlG612xlarge    InstanceType = "ml.g6.12xlarge"
	InstanceTypeMlG616xlarge    InstanceType = "ml.g6.16xlarge"
	InstanceTypeMlG624xlarge    InstanceType = "ml.g6.24xlarge"
	InstanceTypeMlG648xlarge    InstanceType = "ml.g6.48xlarge"
)

// Values returns all known values for InstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstanceType) Values() []InstanceType {
	return []InstanceType{
		"ml.t2.medium",
		"ml.t2.large",
		"ml.t2.xlarge",
		"ml.t2.2xlarge",
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.m5d.large",
		"ml.m5d.xlarge",
		"ml.m5d.2xlarge",
		"ml.m5d.4xlarge",
		"ml.m5d.8xlarge",
		"ml.m5d.12xlarge",
		"ml.m5d.16xlarge",
		"ml.m5d.24xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.c5d.xlarge",
		"ml.c5d.2xlarge",
		"ml.c5d.4xlarge",
		"ml.c5d.9xlarge",
		"ml.c5d.18xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.p3dn.24xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.8xlarge",
		"ml.r5.12xlarge",
		"ml.r5.16xlarge",
		"ml.r5.24xlarge",
		"ml.g5.xlarge",
		"ml.g5.2xlarge",
		"ml.g5.4xlarge",
		"ml.g5.8xlarge",
		"ml.g5.16xlarge",
		"ml.g5.12xlarge",
		"ml.g5.24xlarge",
		"ml.g5.48xlarge",
		"ml.inf1.xlarge",
		"ml.inf1.2xlarge",
		"ml.inf1.6xlarge",
		"ml.inf1.24xlarge",
		"ml.trn1.2xlarge",
		"ml.trn1.32xlarge",
		"ml.trn1n.32xlarge",
		"ml.inf2.xlarge",
		"ml.inf2.8xlarge",
		"ml.inf2.24xlarge",
		"ml.inf2.48xlarge",
		"ml.p4d.24xlarge",
		"ml.p4de.24xlarge",
		"ml.p5.48xlarge",
		"ml.m6i.large",
		"ml.m6i.xlarge",
		"ml.m6i.2xlarge",
		"ml.m6i.4xlarge",
		"ml.m6i.8xlarge",
		"ml.m6i.12xlarge",
		"ml.m6i.16xlarge",
		"ml.m6i.24xlarge",
		"ml.m6i.32xlarge",
		"ml.m7i.large",
		"ml.m7i.xlarge",
		"ml.m7i.2xlarge",
		"ml.m7i.4xlarge",
		"ml.m7i.8xlarge",
		"ml.m7i.12xlarge",
		"ml.m7i.16xlarge",
		"ml.m7i.24xlarge",
		"ml.m7i.48xlarge",
		"ml.c6i.large",
		"ml.c6i.xlarge",
		"ml.c6i.2xlarge",
		"ml.c6i.4xlarge",
		"ml.c6i.8xlarge",
		"ml.c6i.12xlarge",
		"ml.c6i.16xlarge",
		"ml.c6i.24xlarge",
		"ml.c6i.32xlarge",
		"ml.c7i.large",
		"ml.c7i.xlarge",
		"ml.c7i.2xlarge",
		"ml.c7i.4xlarge",
		"ml.c7i.8xlarge",
		"ml.c7i.12xlarge",
		"ml.c7i.16xlarge",
		"ml.c7i.24xlarge",
		"ml.c7i.48xlarge",
		"ml.r6i.large",
		"ml.r6i.xlarge",
		"ml.r6i.2xlarge",
		"ml.r6i.4xlarge",
		"ml.r6i.8xlarge",
		"ml.r6i.12xlarge",
		"ml.r6i.16xlarge",
		"ml.r6i.24xlarge",
		"ml.r6i.32xlarge",
		"ml.r7i.large",
		"ml.r7i.xlarge",
		"ml.r7i.2xlarge",
		"ml.r7i.4xlarge",
		"ml.r7i.8xlarge",
		"ml.r7i.12xlarge",
		"ml.r7i.16xlarge",
		"ml.r7i.24xlarge",
		"ml.r7i.48xlarge",
		"ml.m6id.large",
		"ml.m6id.xlarge",
		"ml.m6id.2xlarge",
		"ml.m6id.4xlarge",
		"ml.m6id.8xlarge",
		"ml.m6id.12xlarge",
		"ml.m6id.16xlarge",
		"ml.m6id.24xlarge",
		"ml.m6id.32xlarge",
		"ml.c6id.large",
		"ml.c6id.xlarge",
		"ml.c6id.2xlarge",
		"ml.c6id.4xlarge",
		"ml.c6id.8xlarge",
		"ml.c6id.12xlarge",
		"ml.c6id.16xlarge",
		"ml.c6id.24xlarge",
		"ml.c6id.32xlarge",
		"ml.r6id.large",
		"ml.r6id.xlarge",
		"ml.r6id.2xlarge",
		"ml.r6id.4xlarge",
		"ml.r6id.8xlarge",
		"ml.r6id.12xlarge",
		"ml.r6id.16xlarge",
		"ml.r6id.24xlarge",
		"ml.r6id.32xlarge",
		"ml.g6.xlarge",
		"ml.g6.2xlarge",
		"ml.g6.4xlarge",
		"ml.g6.8xlarge",
		"ml.g6.12xlarge",
		"ml.g6.16xlarge",
		"ml.g6.24xlarge",
		"ml.g6.48xlarge",
	}
}

type IsTrackingServerActive string

// Enum values for IsTrackingServerActive
const (
	IsTrackingServerActiveActive   IsTrackingServerActive = "Active"
	IsTrackingServerActiveInactive IsTrackingServerActive = "Inactive"
)

// Values returns all known values for IsTrackingServerActive. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IsTrackingServerActive) Values() []IsTrackingServerActive {
	return []IsTrackingServerActive{
		"Active",
		"Inactive",
	}
}

type JobType string

// Enum values for JobType
const (
	JobTypeTraining       JobType = "TRAINING"
	JobTypeInference      JobType = "INFERENCE"
	JobTypeNotebookKernel JobType = "NOTEBOOK_KERNEL"
)

// Values returns all known values for JobType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobType) Values() []JobType {
	return []JobType{
		"TRAINING",
		"INFERENCE",
		"NOTEBOOK_KERNEL",
	}
}

type JoinSource string

// Enum values for JoinSource
const (
	JoinSourceInput JoinSource = "Input"
	JoinSourceNone  JoinSource = "None"
)

// Values returns all known values for JoinSource. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JoinSource) Values() []JoinSource {
	return []JoinSource{
		"Input",
		"None",
	}
}

type LabelingJobStatus string

// Enum values for LabelingJobStatus
const (
	LabelingJobStatusInitializing LabelingJobStatus = "Initializing"
	LabelingJobStatusInProgress   LabelingJobStatus = "InProgress"
	LabelingJobStatusCompleted    LabelingJobStatus = "Completed"
	LabelingJobStatusFailed       LabelingJobStatus = "Failed"
	LabelingJobStatusStopping     LabelingJobStatus = "Stopping"
	LabelingJobStatusStopped      LabelingJobStatus = "Stopped"
)

// Values returns all known values for LabelingJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LabelingJobStatus) Values() []LabelingJobStatus {
	return []LabelingJobStatus{
		"Initializing",
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type LastUpdateStatusValue string

// Enum values for LastUpdateStatusValue
const (
	LastUpdateStatusValueSuccessful LastUpdateStatusValue = "Successful"
	LastUpdateStatusValueFailed     LastUpdateStatusValue = "Failed"
	LastUpdateStatusValueInProgress LastUpdateStatusValue = "InProgress"
)

// Values returns all known values for LastUpdateStatusValue. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LastUpdateStatusValue) Values() []LastUpdateStatusValue {
	return []LastUpdateStatusValue{
		"Successful",
		"Failed",
		"InProgress",
	}
}

type LifecycleManagement string

// Enum values for LifecycleManagement
const (
	LifecycleManagementEnabled  LifecycleManagement = "ENABLED"
	LifecycleManagementDisabled LifecycleManagement = "DISABLED"
)

// Values returns all known values for LifecycleManagement. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LifecycleManagement) Values() []LifecycleManagement {
	return []LifecycleManagement{
		"ENABLED",
		"DISABLED",
	}
}

type LineageType string

// Enum values for LineageType
const (
	LineageTypeTrialComponent LineageType = "TrialComponent"
	LineageTypeArtifact       LineageType = "Artifact"
	LineageTypeContext        LineageType = "Context"
	LineageTypeAction         LineageType = "Action"
)

// Values returns all known values for LineageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LineageType) Values() []LineageType {
	return []LineageType{
		"TrialComponent",
		"Artifact",
		"Context",
		"Action",
	}
}

type ListCompilationJobsSortBy string

// Enum values for ListCompilationJobsSortBy
const (
	ListCompilationJobsSortByName         ListCompilationJobsSortBy = "Name"
	ListCompilationJobsSortByCreationTime ListCompilationJobsSortBy = "CreationTime"
	ListCompilationJobsSortByStatus       ListCompilationJobsSortBy = "Status"
)

// Values returns all known values for ListCompilationJobsSortBy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListCompilationJobsSortBy) Values() []ListCompilationJobsSortBy {
	return []ListCompilationJobsSortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type ListDeviceFleetsSortBy string

// Enum values for ListDeviceFleetsSortBy
const (
	ListDeviceFleetsSortByName             ListDeviceFleetsSortBy = "NAME"
	ListDeviceFleetsSortByCreationTime     ListDeviceFleetsSortBy = "CREATION_TIME"
	ListDeviceFleetsSortByLastModifiedTime ListDeviceFleetsSortBy = "LAST_MODIFIED_TIME"
)

// Values returns all known values for ListDeviceFleetsSortBy. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListDeviceFleetsSortBy) Values() []ListDeviceFleetsSortBy {
	return []ListDeviceFleetsSortBy{
		"NAME",
		"CREATION_TIME",
		"LAST_MODIFIED_TIME",
	}
}

type ListEdgeDeploymentPlansSortBy string

// Enum values for ListEdgeDeploymentPlansSortBy
const (
	ListEdgeDeploymentPlansSortByName             ListEdgeDeploymentPlansSortBy = "NAME"
	ListEdgeDeploymentPlansSortByDeviceFleetName  ListEdgeDeploymentPlansSortBy = "DEVICE_FLEET_NAME"
	ListEdgeDeploymentPlansSortByCreationTime     ListEdgeDeploymentPlansSortBy = "CREATION_TIME"
	ListEdgeDeploymentPlansSortByLastModifiedTime ListEdgeDeploymentPlansSortBy = "LAST_MODIFIED_TIME"
)

// Values returns all known values for ListEdgeDeploymentPlansSortBy. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListEdgeDeploymentPlansSortBy) Values() []ListEdgeDeploymentPlansSortBy {
	return []ListEdgeDeploymentPlansSortBy{
		"NAME",
		"DEVICE_FLEET_NAME",
		"CREATION_TIME",
		"LAST_MODIFIED_TIME",
	}
}

type ListEdgePackagingJobsSortBy string

// Enum values for ListEdgePackagingJobsSortBy
const (
	ListEdgePackagingJobsSortByName                   ListEdgePackagingJobsSortBy = "NAME"
	ListEdgePackagingJobsSortByModelName              ListEdgePackagingJobsSortBy = "MODEL_NAME"
	ListEdgePackagingJobsSortByCreationTime           ListEdgePackagingJobsSortBy = "CREATION_TIME"
	ListEdgePackagingJobsSortByLastModifiedTime       ListEdgePackagingJobsSortBy = "LAST_MODIFIED_TIME"
	ListEdgePackagingJobsSortByEdgePackagingJobStatus ListEdgePackagingJobsSortBy = "STATUS"
)

// Values returns all known values for ListEdgePackagingJobsSortBy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListEdgePackagingJobsSortBy) Values() []ListEdgePackagingJobsSortBy {
	return []ListEdgePackagingJobsSortBy{
		"NAME",
		"MODEL_NAME",
		"CREATION_TIME",
		"LAST_MODIFIED_TIME",
		"STATUS",
	}
}

type ListInferenceRecommendationsJobsSortBy string

// Enum values for ListInferenceRecommendationsJobsSortBy
const (
	ListInferenceRecommendationsJobsSortByName         ListInferenceRecommendationsJobsSortBy = "Name"
	ListInferenceRecommendationsJobsSortByCreationTime ListInferenceRecommendationsJobsSortBy = "CreationTime"
	ListInferenceRecommendationsJobsSortByStatus       ListInferenceRecommendationsJobsSortBy = "Status"
)

// Values returns all known values for ListInferenceRecommendationsJobsSortBy.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListInferenceRecommendationsJobsSortBy) Values() []ListInferenceRecommendationsJobsSortBy {
	return []ListInferenceRecommendationsJobsSortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type ListLabelingJobsForWorkteamSortByOptions string

// Enum values for ListLabelingJobsForWorkteamSortByOptions
const (
	ListLabelingJobsForWorkteamSortByOptionsCreationTime ListLabelingJobsForWorkteamSortByOptions = "CreationTime"
)

// Values returns all known values for ListLabelingJobsForWorkteamSortByOptions.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListLabelingJobsForWorkteamSortByOptions) Values() []ListLabelingJobsForWorkteamSortByOptions {
	return []ListLabelingJobsForWorkteamSortByOptions{
		"CreationTime",
	}
}

type ListOptimizationJobsSortBy string

// Enum values for ListOptimizationJobsSortBy
const (
	ListOptimizationJobsSortByName         ListOptimizationJobsSortBy = "Name"
	ListOptimizationJobsSortByCreationTime ListOptimizationJobsSortBy = "CreationTime"
	ListOptimizationJobsSortByStatus       ListOptimizationJobsSortBy = "Status"
)

// Values returns all known values for ListOptimizationJobsSortBy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListOptimizationJobsSortBy) Values() []ListOptimizationJobsSortBy {
	return []ListOptimizationJobsSortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type ListWorkforcesSortByOptions string

// Enum values for ListWorkforcesSortByOptions
const (
	ListWorkforcesSortByOptionsName       ListWorkforcesSortByOptions = "Name"
	ListWorkforcesSortByOptionsCreateDate ListWorkforcesSortByOptions = "CreateDate"
)

// Values returns all known values for ListWorkforcesSortByOptions. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListWorkforcesSortByOptions) Values() []ListWorkforcesSortByOptions {
	return []ListWorkforcesSortByOptions{
		"Name",
		"CreateDate",
	}
}

type ListWorkteamsSortByOptions string

// Enum values for ListWorkteamsSortByOptions
const (
	ListWorkteamsSortByOptionsName       ListWorkteamsSortByOptions = "Name"
	ListWorkteamsSortByOptionsCreateDate ListWorkteamsSortByOptions = "CreateDate"
)

// Values returns all known values for ListWorkteamsSortByOptions. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListWorkteamsSortByOptions) Values() []ListWorkteamsSortByOptions {
	return []ListWorkteamsSortByOptions{
		"Name",
		"CreateDate",
	}
}

type ManagedInstanceScalingStatus string

// Enum values for ManagedInstanceScalingStatus
const (
	ManagedInstanceScalingStatusEnabled  ManagedInstanceScalingStatus = "ENABLED"
	ManagedInstanceScalingStatusDisabled ManagedInstanceScalingStatus = "DISABLED"
)

// Values returns all known values for ManagedInstanceScalingStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ManagedInstanceScalingStatus) Values() []ManagedInstanceScalingStatus {
	return []ManagedInstanceScalingStatus{
		"ENABLED",
		"DISABLED",
	}
}

type MetricSetSource string

// Enum values for MetricSetSource
const (
	MetricSetSourceTrain      MetricSetSource = "Train"
	MetricSetSourceValidation MetricSetSource = "Validation"
	MetricSetSourceTest       MetricSetSource = "Test"
)

// Values returns all known values for MetricSetSource. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MetricSetSource) Values() []MetricSetSource {
	return []MetricSetSource{
		"Train",
		"Validation",
		"Test",
	}
}

type MlTools string

// Enum values for MlTools
const (
	MlToolsDataWrangler            MlTools = "DataWrangler"
	MlToolsFeatureStore            MlTools = "FeatureStore"
	MlToolsEmrClusters             MlTools = "EmrClusters"
	MlToolsAutoMl                  MlTools = "AutoMl"
	MlToolsExperiments             MlTools = "Experiments"
	MlToolsTraining                MlTools = "Training"
	MlToolsModelEvaluation         MlTools = "ModelEvaluation"
	MlToolsPipelines               MlTools = "Pipelines"
	MlToolsModels                  MlTools = "Models"
	MlToolsJumpStart               MlTools = "JumpStart"
	MlToolsInferenceRecommender    MlTools = "InferenceRecommender"
	MlToolsEndpoints               MlTools = "Endpoints"
	MlToolsProjects                MlTools = "Projects"
	MlToolsInferenceOptimization   MlTools = "InferenceOptimization"
	MlToolsPerformanceEvaluation   MlTools = "PerformanceEvaluation"
	MlToolsLakeraGuard             MlTools = "LakeraGuard"
	MlToolsComet                   MlTools = "Comet"
	MlToolsDeepchecksLlmEvaluation MlTools = "DeepchecksLLMEvaluation"
	MlToolsFiddler                 MlTools = "Fiddler"
	MlToolsHyperPodClusters        MlTools = "HyperPodClusters"
)

// Values returns all known values for MlTools. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MlTools) Values() []MlTools {
	return []MlTools{
		"DataWrangler",
		"FeatureStore",
		"EmrClusters",
		"AutoMl",
		"Experiments",
		"Training",
		"ModelEvaluation",
		"Pipelines",
		"Models",
		"JumpStart",
		"InferenceRecommender",
		"Endpoints",
		"Projects",
		"InferenceOptimization",
		"PerformanceEvaluation",
		"LakeraGuard",
		"Comet",
		"DeepchecksLLMEvaluation",
		"Fiddler",
		"HyperPodClusters",
	}
}

type ModelApprovalStatus string

// Enum values for ModelApprovalStatus
const (
	ModelApprovalStatusApproved              ModelApprovalStatus = "Approved"
	ModelApprovalStatusRejected              ModelApprovalStatus = "Rejected"
	ModelApprovalStatusPendingManualApproval ModelApprovalStatus = "PendingManualApproval"
)

// Values returns all known values for ModelApprovalStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelApprovalStatus) Values() []ModelApprovalStatus {
	return []ModelApprovalStatus{
		"Approved",
		"Rejected",
		"PendingManualApproval",
	}
}

type ModelCacheSetting string

// Enum values for ModelCacheSetting
const (
	ModelCacheSettingEnabled  ModelCacheSetting = "Enabled"
	ModelCacheSettingDisabled ModelCacheSetting = "Disabled"
)

// Values returns all known values for ModelCacheSetting. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCacheSetting) Values() []ModelCacheSetting {
	return []ModelCacheSetting{
		"Enabled",
		"Disabled",
	}
}

type ModelCardExportJobSortBy string

// Enum values for ModelCardExportJobSortBy
const (
	ModelCardExportJobSortByName         ModelCardExportJobSortBy = "Name"
	ModelCardExportJobSortByCreationTime ModelCardExportJobSortBy = "CreationTime"
	ModelCardExportJobSortByStatus       ModelCardExportJobSortBy = "Status"
)

// Values returns all known values for ModelCardExportJobSortBy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCardExportJobSortBy) Values() []ModelCardExportJobSortBy {
	return []ModelCardExportJobSortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type ModelCardExportJobSortOrder string

// Enum values for ModelCardExportJobSortOrder
const (
	ModelCardExportJobSortOrderAscending  ModelCardExportJobSortOrder = "Ascending"
	ModelCardExportJobSortOrderDescending ModelCardExportJobSortOrder = "Descending"
)

// Values returns all known values for ModelCardExportJobSortOrder. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCardExportJobSortOrder) Values() []ModelCardExportJobSortOrder {
	return []ModelCardExportJobSortOrder{
		"Ascending",
		"Descending",
	}
}

type ModelCardExportJobStatus string

// Enum values for ModelCardExportJobStatus
const (
	ModelCardExportJobStatusInProgress ModelCardExportJobStatus = "InProgress"
	ModelCardExportJobStatusCompleted  ModelCardExportJobStatus = "Completed"
	ModelCardExportJobStatusFailed     ModelCardExportJobStatus = "Failed"
)

// Values returns all known values for ModelCardExportJobStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCardExportJobStatus) Values() []ModelCardExportJobStatus {
	return []ModelCardExportJobStatus{
		"InProgress",
		"Completed",
		"Failed",
	}
}

type ModelCardProcessingStatus string

// Enum values for ModelCardProcessingStatus
const (
	ModelCardProcessingStatusDeleteInprogress  ModelCardProcessingStatus = "DeleteInProgress"
	ModelCardProcessingStatusDeletePending     ModelCardProcessingStatus = "DeletePending"
	ModelCardProcessingStatusContentDeleted    ModelCardProcessingStatus = "ContentDeleted"
	ModelCardProcessingStatusExportjobsDeleted ModelCardProcessingStatus = "ExportJobsDeleted"
	ModelCardProcessingStatusDeleteCompleted   ModelCardProcessingStatus = "DeleteCompleted"
	ModelCardProcessingStatusDeleteFailed      ModelCardProcessingStatus = "DeleteFailed"
)

// Values returns all known values for ModelCardProcessingStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCardProcessingStatus) Values() []ModelCardProcessingStatus {
	return []ModelCardProcessingStatus{
		"DeleteInProgress",
		"DeletePending",
		"ContentDeleted",
		"ExportJobsDeleted",
		"DeleteCompleted",
		"DeleteFailed",
	}
}

type ModelCardSortBy string

// Enum values for ModelCardSortBy
const (
	ModelCardSortByName         ModelCardSortBy = "Name"
	ModelCardSortByCreationTime ModelCardSortBy = "CreationTime"
)

// Values returns all known values for ModelCardSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCardSortBy) Values() []ModelCardSortBy {
	return []ModelCardSortBy{
		"Name",
		"CreationTime",
	}
}

type ModelCardSortOrder string

// Enum values for ModelCardSortOrder
const (
	ModelCardSortOrderAscending  ModelCardSortOrder = "Ascending"
	ModelCardSortOrderDescending ModelCardSortOrder = "Descending"
)

// Values returns all known values for ModelCardSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCardSortOrder) Values() []ModelCardSortOrder {
	return []ModelCardSortOrder{
		"Ascending",
		"Descending",
	}
}

type ModelCardStatus string

// Enum values for ModelCardStatus
const (
	ModelCardStatusDraft         ModelCardStatus = "Draft"
	ModelCardStatusPendingreview ModelCardStatus = "PendingReview"
	ModelCardStatusApproved      ModelCardStatus = "Approved"
	ModelCardStatusArchived      ModelCardStatus = "Archived"
)

// Values returns all known values for ModelCardStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCardStatus) Values() []ModelCardStatus {
	return []ModelCardStatus{
		"Draft",
		"PendingReview",
		"Approved",
		"Archived",
	}
}

type ModelCardVersionSortBy string

// Enum values for ModelCardVersionSortBy
const (
	ModelCardVersionSortByVersion ModelCardVersionSortBy = "Version"
)

// Values returns all known values for ModelCardVersionSortBy. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCardVersionSortBy) Values() []ModelCardVersionSortBy {
	return []ModelCardVersionSortBy{
		"Version",
	}
}

type ModelCompressionType string

// Enum values for ModelCompressionType
const (
	ModelCompressionTypeNone ModelCompressionType = "None"
	ModelCompressionTypeGzip ModelCompressionType = "Gzip"
)

// Values returns all known values for ModelCompressionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelCompressionType) Values() []ModelCompressionType {
	return []ModelCompressionType{
		"None",
		"Gzip",
	}
}

type ModelInfrastructureType string

// Enum values for ModelInfrastructureType
const (
	ModelInfrastructureTypeRealTimeInference ModelInfrastructureType = "RealTimeInference"
)

// Values returns all known values for ModelInfrastructureType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelInfrastructureType) Values() []ModelInfrastructureType {
	return []ModelInfrastructureType{
		"RealTimeInference",
	}
}

type ModelMetadataFilterType string

// Enum values for ModelMetadataFilterType
const (
	ModelMetadataFilterTypeDomain           ModelMetadataFilterType = "Domain"
	ModelMetadataFilterTypeFramework        ModelMetadataFilterType = "Framework"
	ModelMetadataFilterTypeTask             ModelMetadataFilterType = "Task"
	ModelMetadataFilterTypeFrameworkversion ModelMetadataFilterType = "FrameworkVersion"
)

// Values returns all known values for ModelMetadataFilterType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelMetadataFilterType) Values() []ModelMetadataFilterType {
	return []ModelMetadataFilterType{
		"Domain",
		"Framework",
		"Task",
		"FrameworkVersion",
	}
}

type ModelPackageGroupSortBy string

// Enum values for ModelPackageGroupSortBy
const (
	ModelPackageGroupSortByName         ModelPackageGroupSortBy = "Name"
	ModelPackageGroupSortByCreationTime ModelPackageGroupSortBy = "CreationTime"
)

// Values returns all known values for ModelPackageGroupSortBy. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageGroupSortBy) Values() []ModelPackageGroupSortBy {
	return []ModelPackageGroupSortBy{
		"Name",
		"CreationTime",
	}
}

type ModelPackageGroupStatus string

// Enum values for ModelPackageGroupStatus
const (
	ModelPackageGroupStatusPending      ModelPackageGroupStatus = "Pending"
	ModelPackageGroupStatusInProgress   ModelPackageGroupStatus = "InProgress"
	ModelPackageGroupStatusCompleted    ModelPackageGroupStatus = "Completed"
	ModelPackageGroupStatusFailed       ModelPackageGroupStatus = "Failed"
	ModelPackageGroupStatusDeleting     ModelPackageGroupStatus = "Deleting"
	ModelPackageGroupStatusDeleteFailed ModelPackageGroupStatus = "DeleteFailed"
)

// Values returns all known values for ModelPackageGroupStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageGroupStatus) Values() []ModelPackageGroupStatus {
	return []ModelPackageGroupStatus{
		"Pending",
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
		"DeleteFailed",
	}
}

type ModelPackageSortBy string

// Enum values for ModelPackageSortBy
const (
	ModelPackageSortByName         ModelPackageSortBy = "Name"
	ModelPackageSortByCreationTime ModelPackageSortBy = "CreationTime"
)

// Values returns all known values for ModelPackageSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageSortBy) Values() []ModelPackageSortBy {
	return []ModelPackageSortBy{
		"Name",
		"CreationTime",
	}
}

type ModelPackageStatus string

// Enum values for ModelPackageStatus
const (
	ModelPackageStatusPending    ModelPackageStatus = "Pending"
	ModelPackageStatusInProgress ModelPackageStatus = "InProgress"
	ModelPackageStatusCompleted  ModelPackageStatus = "Completed"
	ModelPackageStatusFailed     ModelPackageStatus = "Failed"
	ModelPackageStatusDeleting   ModelPackageStatus = "Deleting"
)

// Values returns all known values for ModelPackageStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageStatus) Values() []ModelPackageStatus {
	return []ModelPackageStatus{
		"Pending",
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
	}
}

type ModelPackageType string

// Enum values for ModelPackageType
const (
	ModelPackageTypeVersioned   ModelPackageType = "Versioned"
	ModelPackageTypeUnversioned ModelPackageType = "Unversioned"
	ModelPackageTypeBoth        ModelPackageType = "Both"
)

// Values returns all known values for ModelPackageType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageType) Values() []ModelPackageType {
	return []ModelPackageType{
		"Versioned",
		"Unversioned",
		"Both",
	}
}

type ModelSortKey string

// Enum values for ModelSortKey
const (
	ModelSortKeyName         ModelSortKey = "Name"
	ModelSortKeyCreationTime ModelSortKey = "CreationTime"
)

// Values returns all known values for ModelSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelSortKey) Values() []ModelSortKey {
	return []ModelSortKey{
		"Name",
		"CreationTime",
	}
}

type ModelVariantAction string

// Enum values for ModelVariantAction
const (
	ModelVariantActionRetain  ModelVariantAction = "Retain"
	ModelVariantActionRemove  ModelVariantAction = "Remove"
	ModelVariantActionPromote ModelVariantAction = "Promote"
)

// Values returns all known values for ModelVariantAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelVariantAction) Values() []ModelVariantAction {
	return []ModelVariantAction{
		"Retain",
		"Remove",
		"Promote",
	}
}

type ModelVariantStatus string

// Enum values for ModelVariantStatus
const (
	ModelVariantStatusCreating  ModelVariantStatus = "Creating"
	ModelVariantStatusUpdating  ModelVariantStatus = "Updating"
	ModelVariantStatusInService ModelVariantStatus = "InService"
	ModelVariantStatusDeleting  ModelVariantStatus = "Deleting"
	ModelVariantStatusDeleted   ModelVariantStatus = "Deleted"
)

// Values returns all known values for ModelVariantStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModelVariantStatus) Values() []ModelVariantStatus {
	return []ModelVariantStatus{
		"Creating",
		"Updating",
		"InService",
		"Deleting",
		"Deleted",
	}
}

type MonitoringAlertHistorySortKey string

// Enum values for MonitoringAlertHistorySortKey
const (
	MonitoringAlertHistorySortKeyCreationTime MonitoringAlertHistorySortKey = "CreationTime"
	MonitoringAlertHistorySortKeyStatus       MonitoringAlertHistorySortKey = "Status"
)

// Values returns all known values for MonitoringAlertHistorySortKey. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringAlertHistorySortKey) Values() []MonitoringAlertHistorySortKey {
	return []MonitoringAlertHistorySortKey{
		"CreationTime",
		"Status",
	}
}

type MonitoringAlertStatus string

// Enum values for MonitoringAlertStatus
const (
	MonitoringAlertStatusInAlert MonitoringAlertStatus = "InAlert"
	MonitoringAlertStatusOk      MonitoringAlertStatus = "OK"
)

// Values returns all known values for MonitoringAlertStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringAlertStatus) Values() []MonitoringAlertStatus {
	return []MonitoringAlertStatus{
		"InAlert",
		"OK",
	}
}

type MonitoringExecutionSortKey string

// Enum values for MonitoringExecutionSortKey
const (
	MonitoringExecutionSortKeyCreationTime  MonitoringExecutionSortKey = "CreationTime"
	MonitoringExecutionSortKeyScheduledTime MonitoringExecutionSortKey = "ScheduledTime"
	MonitoringExecutionSortKeyStatus        MonitoringExecutionSortKey = "Status"
)

// Values returns all known values for MonitoringExecutionSortKey. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringExecutionSortKey) Values() []MonitoringExecutionSortKey {
	return []MonitoringExecutionSortKey{
		"CreationTime",
		"ScheduledTime",
		"Status",
	}
}

type MonitoringJobDefinitionSortKey string

// Enum values for MonitoringJobDefinitionSortKey
const (
	MonitoringJobDefinitionSortKeyName         MonitoringJobDefinitionSortKey = "Name"
	MonitoringJobDefinitionSortKeyCreationTime MonitoringJobDefinitionSortKey = "CreationTime"
)

// Values returns all known values for MonitoringJobDefinitionSortKey. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringJobDefinitionSortKey) Values() []MonitoringJobDefinitionSortKey {
	return []MonitoringJobDefinitionSortKey{
		"Name",
		"CreationTime",
	}
}

type MonitoringProblemType string

// Enum values for MonitoringProblemType
const (
	MonitoringProblemTypeBinaryClassification     MonitoringProblemType = "BinaryClassification"
	MonitoringProblemTypeMulticlassClassification MonitoringProblemType = "MulticlassClassification"
	MonitoringProblemTypeRegression               MonitoringProblemType = "Regression"
)

// Values returns all known values for MonitoringProblemType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringProblemType) Values() []MonitoringProblemType {
	return []MonitoringProblemType{
		"BinaryClassification",
		"MulticlassClassification",
		"Regression",
	}
}

type MonitoringScheduleSortKey string

// Enum values for MonitoringScheduleSortKey
const (
	MonitoringScheduleSortKeyName         MonitoringScheduleSortKey = "Name"
	MonitoringScheduleSortKeyCreationTime MonitoringScheduleSortKey = "CreationTime"
	MonitoringScheduleSortKeyStatus       MonitoringScheduleSortKey = "Status"
)

// Values returns all known values for MonitoringScheduleSortKey. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringScheduleSortKey) Values() []MonitoringScheduleSortKey {
	return []MonitoringScheduleSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type MonitoringType string

// Enum values for MonitoringType
const (
	MonitoringTypeDataQuality         MonitoringType = "DataQuality"
	MonitoringTypeModelQuality        MonitoringType = "ModelQuality"
	MonitoringTypeModelBias           MonitoringType = "ModelBias"
	MonitoringTypeModelExplainability MonitoringType = "ModelExplainability"
)

// Values returns all known values for MonitoringType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringType) Values() []MonitoringType {
	return []MonitoringType{
		"DataQuality",
		"ModelQuality",
		"ModelBias",
		"ModelExplainability",
	}
}

type NodeUnavailabilityType string

// Enum values for NodeUnavailabilityType
const (
	NodeUnavailabilityTypeInstanceCount      NodeUnavailabilityType = "INSTANCE_COUNT"
	NodeUnavailabilityTypeCapacityPercentage NodeUnavailabilityType = "CAPACITY_PERCENTAGE"
)

// Values returns all known values for NodeUnavailabilityType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NodeUnavailabilityType) Values() []NodeUnavailabilityType {
	return []NodeUnavailabilityType{
		"INSTANCE_COUNT",
		"CAPACITY_PERCENTAGE",
	}
}

type NotebookInstanceAcceleratorType string

// Enum values for NotebookInstanceAcceleratorType
const (
	NotebookInstanceAcceleratorTypeMlEia1Medium NotebookInstanceAcceleratorType = "ml.eia1.medium"
	NotebookInstanceAcceleratorTypeMlEia1Large  NotebookInstanceAcceleratorType = "ml.eia1.large"
	NotebookInstanceAcceleratorTypeMlEia1Xlarge NotebookInstanceAcceleratorType = "ml.eia1.xlarge"
	NotebookInstanceAcceleratorTypeMlEia2Medium NotebookInstanceAcceleratorType = "ml.eia2.medium"
	NotebookInstanceAcceleratorTypeMlEia2Large  NotebookInstanceAcceleratorType = "ml.eia2.large"
	NotebookInstanceAcceleratorTypeMlEia2Xlarge NotebookInstanceAcceleratorType = "ml.eia2.xlarge"
)

// Values returns all known values for NotebookInstanceAcceleratorType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceAcceleratorType) Values() []NotebookInstanceAcceleratorType {
	return []NotebookInstanceAcceleratorType{
		"ml.eia1.medium",
		"ml.eia1.large",
		"ml.eia1.xlarge",
		"ml.eia2.medium",
		"ml.eia2.large",
		"ml.eia2.xlarge",
	}
}

type NotebookInstanceLifecycleConfigSortKey string

// Enum values for NotebookInstanceLifecycleConfigSortKey
const (
	NotebookInstanceLifecycleConfigSortKeyName             NotebookInstanceLifecycleConfigSortKey = "Name"
	NotebookInstanceLifecycleConfigSortKeyCreationTime     NotebookInstanceLifecycleConfigSortKey = "CreationTime"
	NotebookInstanceLifecycleConfigSortKeyLastModifiedTime NotebookInstanceLifecycleConfigSortKey = "LastModifiedTime"
)

// Values returns all known values for NotebookInstanceLifecycleConfigSortKey.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceLifecycleConfigSortKey) Values() []NotebookInstanceLifecycleConfigSortKey {
	return []NotebookInstanceLifecycleConfigSortKey{
		"Name",
		"CreationTime",
		"LastModifiedTime",
	}
}

type NotebookInstanceLifecycleConfigSortOrder string

// Enum values for NotebookInstanceLifecycleConfigSortOrder
const (
	NotebookInstanceLifecycleConfigSortOrderAscending  NotebookInstanceLifecycleConfigSortOrder = "Ascending"
	NotebookInstanceLifecycleConfigSortOrderDescending NotebookInstanceLifecycleConfigSortOrder = "Descending"
)

// Values returns all known values for NotebookInstanceLifecycleConfigSortOrder.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceLifecycleConfigSortOrder) Values() []NotebookInstanceLifecycleConfigSortOrder {
	return []NotebookInstanceLifecycleConfigSortOrder{
		"Ascending",
		"Descending",
	}
}

type NotebookInstanceSortKey string

// Enum values for NotebookInstanceSortKey
const (
	NotebookInstanceSortKeyName         NotebookInstanceSortKey = "Name"
	NotebookInstanceSortKeyCreationTime NotebookInstanceSortKey = "CreationTime"
	NotebookInstanceSortKeyStatus       NotebookInstanceSortKey = "Status"
)

// Values returns all known values for NotebookInstanceSortKey. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceSortKey) Values() []NotebookInstanceSortKey {
	return []NotebookInstanceSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type NotebookInstanceSortOrder string

// Enum values for NotebookInstanceSortOrder
const (
	NotebookInstanceSortOrderAscending  NotebookInstanceSortOrder = "Ascending"
	NotebookInstanceSortOrderDescending NotebookInstanceSortOrder = "Descending"
)

// Values returns all known values for NotebookInstanceSortOrder. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceSortOrder) Values() []NotebookInstanceSortOrder {
	return []NotebookInstanceSortOrder{
		"Ascending",
		"Descending",
	}
}

type NotebookInstanceStatus string

// Enum values for NotebookInstanceStatus
const (
	NotebookInstanceStatusPending   NotebookInstanceStatus = "Pending"
	NotebookInstanceStatusInService NotebookInstanceStatus = "InService"
	NotebookInstanceStatusStopping  NotebookInstanceStatus = "Stopping"
	NotebookInstanceStatusStopped   NotebookInstanceStatus = "Stopped"
	NotebookInstanceStatusFailed    NotebookInstanceStatus = "Failed"
	NotebookInstanceStatusDeleting  NotebookInstanceStatus = "Deleting"
	NotebookInstanceStatusUpdating  NotebookInstanceStatus = "Updating"
)

// Values returns all known values for NotebookInstanceStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceStatus) Values() []NotebookInstanceStatus {
	return []NotebookInstanceStatus{
		"Pending",
		"InService",
		"Stopping",
		"Stopped",
		"Failed",
		"Deleting",
		"Updating",
	}
}

type NotebookOutputOption string

// Enum values for NotebookOutputOption
const (
	NotebookOutputOptionAllowed  NotebookOutputOption = "Allowed"
	NotebookOutputOptionDisabled NotebookOutputOption = "Disabled"
)

// Values returns all known values for NotebookOutputOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotebookOutputOption) Values() []NotebookOutputOption {
	return []NotebookOutputOption{
		"Allowed",
		"Disabled",
	}
}

type ObjectiveStatus string

// Enum values for ObjectiveStatus
const (
	ObjectiveStatusSucceeded ObjectiveStatus = "Succeeded"
	ObjectiveStatusPending   ObjectiveStatus = "Pending"
	ObjectiveStatusFailed    ObjectiveStatus = "Failed"
)

// Values returns all known values for ObjectiveStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ObjectiveStatus) Values() []ObjectiveStatus {
	return []ObjectiveStatus{
		"Succeeded",
		"Pending",
		"Failed",
	}
}

type OfflineStoreStatusValue string

// Enum values for OfflineStoreStatusValue
const (
	OfflineStoreStatusValueActive   OfflineStoreStatusValue = "Active"
	OfflineStoreStatusValueBlocked  OfflineStoreStatusValue = "Blocked"
	OfflineStoreStatusValueDisabled OfflineStoreStatusValue = "Disabled"
)

// Values returns all known values for OfflineStoreStatusValue. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OfflineStoreStatusValue) Values() []OfflineStoreStatusValue {
	return []OfflineStoreStatusValue{
		"Active",
		"Blocked",
		"Disabled",
	}
}

type Operator string

// Enum values for Operator
const (
	OperatorEquals               Operator = "Equals"
	OperatorNotEquals            Operator = "NotEquals"
	OperatorGreaterThan          Operator = "GreaterThan"
	OperatorGreaterThanOrEqualTo Operator = "GreaterThanOrEqualTo"
	OperatorLessThan             Operator = "LessThan"
	OperatorLessThanOrEqualTo    Operator = "LessThanOrEqualTo"
	OperatorContains             Operator = "Contains"
	OperatorExists               Operator = "Exists"
	OperatorNotExists            Operator = "NotExists"
	OperatorIn                   Operator = "In"
)

// Values returns all known values for Operator. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Operator) Values() []Operator {
	return []Operator{
		"Equals",
		"NotEquals",
		"GreaterThan",
		"GreaterThanOrEqualTo",
		"LessThan",
		"LessThanOrEqualTo",
		"Contains",
		"Exists",
		"NotExists",
		"In",
	}
}

type OptimizationJobDeploymentInstanceType string

// Enum values for OptimizationJobDeploymentInstanceType
const (
	OptimizationJobDeploymentInstanceTypeMlP4d24xlarge   OptimizationJobDeploymentInstanceType = "ml.p4d.24xlarge"
	OptimizationJobDeploymentInstanceTypeMlP4de24xlarge  OptimizationJobDeploymentInstanceType = "ml.p4de.24xlarge"
	OptimizationJobDeploymentInstanceTypeMlP548xlarge    OptimizationJobDeploymentInstanceType = "ml.p5.48xlarge"
	OptimizationJobDeploymentInstanceTypeMlG5Xlarge      OptimizationJobDeploymentInstanceType = "ml.g5.xlarge"
	OptimizationJobDeploymentInstanceTypeMlG52xlarge     OptimizationJobDeploymentInstanceType = "ml.g5.2xlarge"
	OptimizationJobDeploymentInstanceTypeMlG54xlarge     OptimizationJobDeploymentInstanceType = "ml.g5.4xlarge"
	OptimizationJobDeploymentInstanceTypeMlG58xlarge     OptimizationJobDeploymentInstanceType = "ml.g5.8xlarge"
	OptimizationJobDeploymentInstanceTypeMlG512xlarge    OptimizationJobDeploymentInstanceType = "ml.g5.12xlarge"
	OptimizationJobDeploymentInstanceTypeMlG516xlarge    OptimizationJobDeploymentInstanceType = "ml.g5.16xlarge"
	OptimizationJobDeploymentInstanceTypeMlG524xlarge    OptimizationJobDeploymentInstanceType = "ml.g5.24xlarge"
	OptimizationJobDeploymentInstanceTypeMlG548xlarge    OptimizationJobDeploymentInstanceType = "ml.g5.48xlarge"
	OptimizationJobDeploymentInstanceTypeMlG6Xlarge      OptimizationJobDeploymentInstanceType = "ml.g6.xlarge"
	OptimizationJobDeploymentInstanceTypeMlG62xlarge     OptimizationJobDeploymentInstanceType = "ml.g6.2xlarge"
	OptimizationJobDeploymentInstanceTypeMlG64xlarge     OptimizationJobDeploymentInstanceType = "ml.g6.4xlarge"
	OptimizationJobDeploymentInstanceTypeMlG68xlarge     OptimizationJobDeploymentInstanceType = "ml.g6.8xlarge"
	OptimizationJobDeploymentInstanceTypeMlG612xlarge    OptimizationJobDeploymentInstanceType = "ml.g6.12xlarge"
	OptimizationJobDeploymentInstanceTypeMlG616xlarge    OptimizationJobDeploymentInstanceType = "ml.g6.16xlarge"
	OptimizationJobDeploymentInstanceTypeMlG624xlarge    OptimizationJobDeploymentInstanceType = "ml.g6.24xlarge"
	OptimizationJobDeploymentInstanceTypeMlG648xlarge    OptimizationJobDeploymentInstanceType = "ml.g6.48xlarge"
	OptimizationJobDeploymentInstanceTypeMlG6eXlarge     OptimizationJobDeploymentInstanceType = "ml.g6e.xlarge"
	OptimizationJobDeploymentInstanceTypeMlG6e2xlarge    OptimizationJobDeploymentInstanceType = "ml.g6e.2xlarge"
	OptimizationJobDeploymentInstanceTypeMlG6e4xlarge    OptimizationJobDeploymentInstanceType = "ml.g6e.4xlarge"
	OptimizationJobDeploymentInstanceTypeMlG6e8xlarge    OptimizationJobDeploymentInstanceType = "ml.g6e.8xlarge"
	OptimizationJobDeploymentInstanceTypeMlG6e12xlarge   OptimizationJobDeploymentInstanceType = "ml.g6e.12xlarge"
	OptimizationJobDeploymentInstanceTypeMlG6e16xlarge   OptimizationJobDeploymentInstanceType = "ml.g6e.16xlarge"
	OptimizationJobDeploymentInstanceTypeMlG6e24xlarge   OptimizationJobDeploymentInstanceType = "ml.g6e.24xlarge"
	OptimizationJobDeploymentInstanceTypeMlG6e48xlarge   OptimizationJobDeploymentInstanceType = "ml.g6e.48xlarge"
	OptimizationJobDeploymentInstanceTypeMlInf2Xlarge    OptimizationJobDeploymentInstanceType = "ml.inf2.xlarge"
	OptimizationJobDeploymentInstanceTypeMlInf28xlarge   OptimizationJobDeploymentInstanceType = "ml.inf2.8xlarge"
	OptimizationJobDeploymentInstanceTypeMlInf224xlarge  OptimizationJobDeploymentInstanceType = "ml.inf2.24xlarge"
	OptimizationJobDeploymentInstanceTypeMlInf248xlarge  OptimizationJobDeploymentInstanceType = "ml.inf2.48xlarge"
	OptimizationJobDeploymentInstanceTypeMlTrn12xlarge   OptimizationJobDeploymentInstanceType = "ml.trn1.2xlarge"
	OptimizationJobDeploymentInstanceTypeMlTrn132xlarge  OptimizationJobDeploymentInstanceType = "ml.trn1.32xlarge"
	OptimizationJobDeploymentInstanceTypeMlTrn1n32xlarge OptimizationJobDeploymentInstanceType = "ml.trn1n.32xlarge"
)

// Values returns all known values for OptimizationJobDeploymentInstanceType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OptimizationJobDeploymentInstanceType) Values() []OptimizationJobDeploymentInstanceType {
	return []OptimizationJobDeploymentInstanceType{
		"ml.p4d.24xlarge",
		"ml.p4de.24xlarge",
		"ml.p5.48xlarge",
		"ml.g5.xlarge",
		"ml.g5.2xlarge",
		"ml.g5.4xlarge",
		"ml.g5.8xlarge",
		"ml.g5.12xlarge",
		"ml.g5.16xlarge",
		"ml.g5.24xlarge",
		"ml.g5.48xlarge",
		"ml.g6.xlarge",
		"ml.g6.2xlarge",
		"ml.g6.4xlarge",
		"ml.g6.8xlarge",
		"ml.g6.12xlarge",
		"ml.g6.16xlarge",
		"ml.g6.24xlarge",
		"ml.g6.48xlarge",
		"ml.g6e.xlarge",
		"ml.g6e.2xlarge",
		"ml.g6e.4xlarge",
		"ml.g6e.8xlarge",
		"ml.g6e.12xlarge",
		"ml.g6e.16xlarge",
		"ml.g6e.24xlarge",
		"ml.g6e.48xlarge",
		"ml.inf2.xlarge",
		"ml.inf2.8xlarge",
		"ml.inf2.24xlarge",
		"ml.inf2.48xlarge",
		"ml.trn1.2xlarge",
		"ml.trn1.32xlarge",
		"ml.trn1n.32xlarge",
	}
}

type OptimizationJobStatus string

// Enum values for OptimizationJobStatus
const (
	OptimizationJobStatusInprogress OptimizationJobStatus = "INPROGRESS"
	OptimizationJobStatusCompleted  OptimizationJobStatus = "COMPLETED"
	OptimizationJobStatusFailed     OptimizationJobStatus = "FAILED"
	OptimizationJobStatusStarting   OptimizationJobStatus = "STARTING"
	OptimizationJobStatusStopping   OptimizationJobStatus = "STOPPING"
	OptimizationJobStatusStopped    OptimizationJobStatus = "STOPPED"
)

// Values returns all known values for OptimizationJobStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OptimizationJobStatus) Values() []OptimizationJobStatus {
	return []OptimizationJobStatus{
		"INPROGRESS",
		"COMPLETED",
		"FAILED",
		"STARTING",
		"STOPPING",
		"STOPPED",
	}
}

type OrderKey string

// Enum values for OrderKey
const (
	OrderKeyAscending  OrderKey = "Ascending"
	OrderKeyDescending OrderKey = "Descending"
)

// Values returns all known values for OrderKey. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OrderKey) Values() []OrderKey {
	return []OrderKey{
		"Ascending",
		"Descending",
	}
}

type OutputCompressionType string

// Enum values for OutputCompressionType
const (
	OutputCompressionTypeGzip OutputCompressionType = "GZIP"
	OutputCompressionTypeNone OutputCompressionType = "NONE"
)

// Values returns all known values for OutputCompressionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OutputCompressionType) Values() []OutputCompressionType {
	return []OutputCompressionType{
		"GZIP",
		"NONE",
	}
}

type ParameterType string

// Enum values for ParameterType
const (
	ParameterTypeInteger     ParameterType = "Integer"
	ParameterTypeContinuous  ParameterType = "Continuous"
	ParameterTypeCategorical ParameterType = "Categorical"
	ParameterTypeFreeText    ParameterType = "FreeText"
)

// Values returns all known values for ParameterType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParameterType) Values() []ParameterType {
	return []ParameterType{
		"Integer",
		"Continuous",
		"Categorical",
		"FreeText",
	}
}

type PartnerAppAuthType string

// Enum values for PartnerAppAuthType
const (
	PartnerAppAuthTypeIam PartnerAppAuthType = "IAM"
)

// Values returns all known values for PartnerAppAuthType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PartnerAppAuthType) Values() []PartnerAppAuthType {
	return []PartnerAppAuthType{
		"IAM",
	}
}

type PartnerAppStatus string

// Enum values for PartnerAppStatus
const (
	PartnerAppStatusCreating     PartnerAppStatus = "Creating"
	PartnerAppStatusUpdating     PartnerAppStatus = "Updating"
	PartnerAppStatusDeleting     PartnerAppStatus = "Deleting"
	PartnerAppStatusAvailable    PartnerAppStatus = "Available"
	PartnerAppStatusFailed       PartnerAppStatus = "Failed"
	PartnerAppStatusUpdateFailed PartnerAppStatus = "UpdateFailed"
	PartnerAppStatusDeleted      PartnerAppStatus = "Deleted"
)

// Values returns all known values for PartnerAppStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PartnerAppStatus) Values() []PartnerAppStatus {
	return []PartnerAppStatus{
		"Creating",
		"Updating",
		"Deleting",
		"Available",
		"Failed",
		"UpdateFailed",
		"Deleted",
	}
}

type PartnerAppType string

// Enum values for PartnerAppType
const (
	PartnerAppTypeLakeraGuard             PartnerAppType = "lakera-guard"
	PartnerAppTypeComet                   PartnerAppType = "comet"
	PartnerAppTypeDeepchecksLlmEvaluation PartnerAppType = "deepchecks-llm-evaluation"
	PartnerAppTypeFiddler                 PartnerAppType = "fiddler"
)

// Values returns all known values for PartnerAppType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PartnerAppType) Values() []PartnerAppType {
	return []PartnerAppType{
		"lakera-guard",
		"comet",
		"deepchecks-llm-evaluation",
		"fiddler",
	}
}

type PipelineExecutionStatus string

// Enum values for PipelineExecutionStatus
const (
	PipelineExecutionStatusExecuting PipelineExecutionStatus = "Executing"
	PipelineExecutionStatusStopping  PipelineExecutionStatus = "Stopping"
	PipelineExecutionStatusStopped   PipelineExecutionStatus = "Stopped"
	PipelineExecutionStatusFailed    PipelineExecutionStatus = "Failed"
	PipelineExecutionStatusSucceeded PipelineExecutionStatus = "Succeeded"
)

// Values returns all known values for PipelineExecutionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PipelineExecutionStatus) Values() []PipelineExecutionStatus {
	return []PipelineExecutionStatus{
		"Executing",
		"Stopping",
		"Stopped",
		"Failed",
		"Succeeded",
	}
}

type PipelineStatus string

// Enum values for PipelineStatus
const (
	PipelineStatusActive   PipelineStatus = "Active"
	PipelineStatusDeleting PipelineStatus = "Deleting"
)

// Values returns all known values for PipelineStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PipelineStatus) Values() []PipelineStatus {
	return []PipelineStatus{
		"Active",
		"Deleting",
	}
}

type PreemptTeamTasks string

// Enum values for PreemptTeamTasks
const (
	PreemptTeamTasksNever         PreemptTeamTasks = "Never"
	PreemptTeamTasksLowerpriority PreemptTeamTasks = "LowerPriority"
)

// Values returns all known values for PreemptTeamTasks. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PreemptTeamTasks) Values() []PreemptTeamTasks {
	return []PreemptTeamTasks{
		"Never",
		"LowerPriority",
	}
}

type ProblemType string

// Enum values for ProblemType
const (
	ProblemTypeBinaryClassification     ProblemType = "BinaryClassification"
	ProblemTypeMulticlassClassification ProblemType = "MulticlassClassification"
	ProblemTypeRegression               ProblemType = "Regression"
)

// Values returns all known values for ProblemType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProblemType) Values() []ProblemType {
	return []ProblemType{
		"BinaryClassification",
		"MulticlassClassification",
		"Regression",
	}
}

type ProcessingInstanceType string

// Enum values for ProcessingInstanceType
const (
	ProcessingInstanceTypeMlT3Medium     ProcessingInstanceType = "ml.t3.medium"
	ProcessingInstanceTypeMlT3Large      ProcessingInstanceType = "ml.t3.large"
	ProcessingInstanceTypeMlT3Xlarge     ProcessingInstanceType = "ml.t3.xlarge"
	ProcessingInstanceTypeMlT32xlarge    ProcessingInstanceType = "ml.t3.2xlarge"
	ProcessingInstanceTypeMlM4Xlarge     ProcessingInstanceType = "ml.m4.xlarge"
	ProcessingInstanceTypeMlM42xlarge    ProcessingInstanceType = "ml.m4.2xlarge"
	ProcessingInstanceTypeMlM44xlarge    ProcessingInstanceType = "ml.m4.4xlarge"
	ProcessingInstanceTypeMlM410xlarge   ProcessingInstanceType = "ml.m4.10xlarge"
	ProcessingInstanceTypeMlM416xlarge   ProcessingInstanceType = "ml.m4.16xlarge"
	ProcessingInstanceTypeMlC4Xlarge     ProcessingInstanceType = "ml.c4.xlarge"
	ProcessingInstanceTypeMlC42xlarge    ProcessingInstanceType = "ml.c4.2xlarge"
	ProcessingInstanceTypeMlC44xlarge    ProcessingInstanceType = "ml.c4.4xlarge"
	ProcessingInstanceTypeMlC48xlarge    ProcessingInstanceType = "ml.c4.8xlarge"
	ProcessingInstanceTypeMlP2Xlarge     ProcessingInstanceType = "ml.p2.xlarge"
	ProcessingInstanceTypeMlP28xlarge    ProcessingInstanceType = "ml.p2.8xlarge"
	ProcessingInstanceTypeMlP216xlarge   ProcessingInstanceType = "ml.p2.16xlarge"
	ProcessingInstanceTypeMlP32xlarge    ProcessingInstanceType = "ml.p3.2xlarge"
	ProcessingInstanceTypeMlP38xlarge    ProcessingInstanceType = "ml.p3.8xlarge"
	ProcessingInstanceTypeMlP316xlarge   ProcessingInstanceType = "ml.p3.16xlarge"
	ProcessingInstanceTypeMlC5Xlarge     ProcessingInstanceType = "ml.c5.xlarge"
	ProcessingInstanceTypeMlC52xlarge    ProcessingInstanceType = "ml.c5.2xlarge"
	ProcessingInstanceTypeMlC54xlarge    ProcessingInstanceType = "ml.c5.4xlarge"
	ProcessingInstanceTypeMlC59xlarge    ProcessingInstanceType = "ml.c5.9xlarge"
	ProcessingInstanceTypeMlC518xlarge   ProcessingInstanceType = "ml.c5.18xlarge"
	ProcessingInstanceTypeMlM5Large      ProcessingInstanceType = "ml.m5.large"
	ProcessingInstanceTypeMlM5Xlarge     ProcessingInstanceType = "ml.m5.xlarge"
	ProcessingInstanceTypeMlM52xlarge    ProcessingInstanceType = "ml.m5.2xlarge"
	ProcessingInstanceTypeMlM54xlarge    ProcessingInstanceType = "ml.m5.4xlarge"
	ProcessingInstanceTypeMlM512xlarge   ProcessingInstanceType = "ml.m5.12xlarge"
	ProcessingInstanceTypeMlM524xlarge   ProcessingInstanceType = "ml.m5.24xlarge"
	ProcessingInstanceTypeMlR5Large      ProcessingInstanceType = "ml.r5.large"
	ProcessingInstanceTypeMlR5Xlarge     ProcessingInstanceType = "ml.r5.xlarge"
	ProcessingInstanceTypeMlR52xlarge    ProcessingInstanceType = "ml.r5.2xlarge"
	ProcessingInstanceTypeMlR54xlarge    ProcessingInstanceType = "ml.r5.4xlarge"
	ProcessingInstanceTypeMlR58xlarge    ProcessingInstanceType = "ml.r5.8xlarge"
	ProcessingInstanceTypeMlR512xlarge   ProcessingInstanceType = "ml.r5.12xlarge"
	ProcessingInstanceTypeMlR516xlarge   ProcessingInstanceType = "ml.r5.16xlarge"
	ProcessingInstanceTypeMlR524xlarge   ProcessingInstanceType = "ml.r5.24xlarge"
	ProcessingInstanceTypeMlG4dnXlarge   ProcessingInstanceType = "ml.g4dn.xlarge"
	ProcessingInstanceTypeMlG4dn2xlarge  ProcessingInstanceType = "ml.g4dn.2xlarge"
	ProcessingInstanceTypeMlG4dn4xlarge  ProcessingInstanceType = "ml.g4dn.4xlarge"
	ProcessingInstanceTypeMlG4dn8xlarge  ProcessingInstanceType = "ml.g4dn.8xlarge"
	ProcessingInstanceTypeMlG4dn12xlarge ProcessingInstanceType = "ml.g4dn.12xlarge"
	ProcessingInstanceTypeMlG4dn16xlarge ProcessingInstanceType = "ml.g4dn.16xlarge"
	ProcessingInstanceTypeMlG5Xlarge     ProcessingInstanceType = "ml.g5.xlarge"
	ProcessingInstanceTypeMlG52xlarge    ProcessingInstanceType = "ml.g5.2xlarge"
	ProcessingInstanceTypeMlG54xlarge    ProcessingInstanceType = "ml.g5.4xlarge"
	ProcessingInstanceTypeMlG58xlarge    ProcessingInstanceType = "ml.g5.8xlarge"
	ProcessingInstanceTypeMlG516xlarge   ProcessingInstanceType = "ml.g5.16xlarge"
	ProcessingInstanceTypeMlG512xlarge   ProcessingInstanceType = "ml.g5.12xlarge"
	ProcessingInstanceTypeMlG524xlarge   ProcessingInstanceType = "ml.g5.24xlarge"
	ProcessingInstanceTypeMlG548xlarge   ProcessingInstanceType = "ml.g5.48xlarge"
	ProcessingInstanceTypeMlR5dLarge     ProcessingInstanceType = "ml.r5d.large"
	ProcessingInstanceTypeMlR5dXlarge    ProcessingInstanceType = "ml.r5d.xlarge"
	ProcessingInstanceTypeMlR5d2xlarge   ProcessingInstanceType = "ml.r5d.2xlarge"
	ProcessingInstanceTypeMlR5d4xlarge   ProcessingInstanceType = "ml.r5d.4xlarge"
	ProcessingInstanceTypeMlR5d8xlarge   ProcessingInstanceType = "ml.r5d.8xlarge"
	ProcessingInstanceTypeMlR5d12xlarge  ProcessingInstanceType = "ml.r5d.12xlarge"
	ProcessingInstanceTypeMlR5d16xlarge  ProcessingInstanceType = "ml.r5d.16xlarge"
	ProcessingInstanceTypeMlR5d24xlarge  ProcessingInstanceType = "ml.r5d.24xlarge"
	ProcessingInstanceTypeMlG6Xlarge     ProcessingInstanceType = "ml.g6.xlarge"
	ProcessingInstanceTypeMlG62xlarge    ProcessingInstanceType = "ml.g6.2xlarge"
	ProcessingInstanceTypeMlG64xlarge    ProcessingInstanceType = "ml.g6.4xlarge"
	ProcessingInstanceTypeMlG68xlarge    ProcessingInstanceType = "ml.g6.8xlarge"
	ProcessingInstanceTypeMlG612xlarge   ProcessingInstanceType = "ml.g6.12xlarge"
	ProcessingInstanceTypeMlG616xlarge   ProcessingInstanceType = "ml.g6.16xlarge"
	ProcessingInstanceTypeMlG624xlarge   ProcessingInstanceType = "ml.g6.24xlarge"
	ProcessingInstanceTypeMlG648xlarge   ProcessingInstanceType = "ml.g6.48xlarge"
	ProcessingInstanceTypeMlG6eXlarge    ProcessingInstanceType = "ml.g6e.xlarge"
	ProcessingInstanceTypeMlG6e2xlarge   ProcessingInstanceType = "ml.g6e.2xlarge"
	ProcessingInstanceTypeMlG6e4xlarge   ProcessingInstanceType = "ml.g6e.4xlarge"
	ProcessingInstanceTypeMlG6e8xlarge   ProcessingInstanceType = "ml.g6e.8xlarge"
	ProcessingInstanceTypeMlG6e12xlarge  ProcessingInstanceType = "ml.g6e.12xlarge"
	ProcessingInstanceTypeMlG6e16xlarge  ProcessingInstanceType = "ml.g6e.16xlarge"
	ProcessingInstanceTypeMlG6e24xlarge  ProcessingInstanceType = "ml.g6e.24xlarge"
	ProcessingInstanceTypeMlG6e48xlarge  ProcessingInstanceType = "ml.g6e.48xlarge"
	ProcessingInstanceTypeMlM6iLarge     ProcessingInstanceType = "ml.m6i.large"
	ProcessingInstanceTypeMlM6iXlarge    ProcessingInstanceType = "ml.m6i.xlarge"
	ProcessingInstanceTypeMlM6i2xlarge   ProcessingInstanceType = "ml.m6i.2xlarge"
	ProcessingInstanceTypeMlM6i4xlarge   ProcessingInstanceType = "ml.m6i.4xlarge"
	ProcessingInstanceTypeMlM6i8xlarge   ProcessingInstanceType = "ml.m6i.8xlarge"
	ProcessingInstanceTypeMlM6i12xlarge  ProcessingInstanceType = "ml.m6i.12xlarge"
	ProcessingInstanceTypeMlM6i16xlarge  ProcessingInstanceType = "ml.m6i.16xlarge"
	ProcessingInstanceTypeMlM6i24xlarge  ProcessingInstanceType = "ml.m6i.24xlarge"
	ProcessingInstanceTypeMlM6i32xlarge  ProcessingInstanceType = "ml.m6i.32xlarge"
	ProcessingInstanceTypeMlC6iXlarge    ProcessingInstanceType = "ml.c6i.xlarge"
	ProcessingInstanceTypeMlC6i2xlarge   ProcessingInstanceType = "ml.c6i.2xlarge"
	ProcessingInstanceTypeMlC6i4xlarge   ProcessingInstanceType = "ml.c6i.4xlarge"
	ProcessingInstanceTypeMlC6i8xlarge   ProcessingInstanceType = "ml.c6i.8xlarge"
	ProcessingInstanceTypeMlC6i12xlarge  ProcessingInstanceType = "ml.c6i.12xlarge"
	ProcessingInstanceTypeMlC6i16xlarge  ProcessingInstanceType = "ml.c6i.16xlarge"
	ProcessingInstanceTypeMlC6i24xlarge  ProcessingInstanceType = "ml.c6i.24xlarge"
	ProcessingInstanceTypeMlC6i32xlarge  ProcessingInstanceType = "ml.c6i.32xlarge"
	ProcessingInstanceTypeMlM7iLarge     ProcessingInstanceType = "ml.m7i.large"
	ProcessingInstanceTypeMlM7iXlarge    ProcessingInstanceType = "ml.m7i.xlarge"
	ProcessingInstanceTypeMlM7i2xlarge   ProcessingInstanceType = "ml.m7i.2xlarge"
	ProcessingInstanceTypeMlM7i4xlarge   ProcessingInstanceType = "ml.m7i.4xlarge"
	ProcessingInstanceTypeMlM7i8xlarge   ProcessingInstanceType = "ml.m7i.8xlarge"
	ProcessingInstanceTypeMlM7i12xlarge  ProcessingInstanceType = "ml.m7i.12xlarge"
	ProcessingInstanceTypeMlM7i16xlarge  ProcessingInstanceType = "ml.m7i.16xlarge"
	ProcessingInstanceTypeMlM7i24xlarge  ProcessingInstanceType = "ml.m7i.24xlarge"
	ProcessingInstanceTypeMlM7i48xlarge  ProcessingInstanceType = "ml.m7i.48xlarge"
	ProcessingInstanceTypeMlC7iLarge     ProcessingInstanceType = "ml.c7i.large"
	ProcessingInstanceTypeMlC7iXlarge    ProcessingInstanceType = "ml.c7i.xlarge"
	ProcessingInstanceTypeMlC7i2xlarge   ProcessingInstanceType = "ml.c7i.2xlarge"
	ProcessingInstanceTypeMlC7i4xlarge   ProcessingInstanceType = "ml.c7i.4xlarge"
	ProcessingInstanceTypeMlC7i8xlarge   ProcessingInstanceType = "ml.c7i.8xlarge"
	ProcessingInstanceTypeMlC7i12xlarge  ProcessingInstanceType = "ml.c7i.12xlarge"
	ProcessingInstanceTypeMlC7i16xlarge  ProcessingInstanceType = "ml.c7i.16xlarge"
	ProcessingInstanceTypeMlC7i24xlarge  ProcessingInstanceType = "ml.c7i.24xlarge"
	ProcessingInstanceTypeMlC7i48xlarge  ProcessingInstanceType = "ml.c7i.48xlarge"
	ProcessingInstanceTypeMlR7iLarge     ProcessingInstanceType = "ml.r7i.large"
	ProcessingInstanceTypeMlR7iXlarge    ProcessingInstanceType = "ml.r7i.xlarge"
	ProcessingInstanceTypeMlR7i2xlarge   ProcessingInstanceType = "ml.r7i.2xlarge"
	ProcessingInstanceTypeMlR7i4xlarge   ProcessingInstanceType = "ml.r7i.4xlarge"
	ProcessingInstanceTypeMlR7i8xlarge   ProcessingInstanceType = "ml.r7i.8xlarge"
	ProcessingInstanceTypeMlR7i12xlarge  ProcessingInstanceType = "ml.r7i.12xlarge"
	ProcessingInstanceTypeMlR7i16xlarge  ProcessingInstanceType = "ml.r7i.16xlarge"
	ProcessingInstanceTypeMlR7i24xlarge  ProcessingInstanceType = "ml.r7i.24xlarge"
	ProcessingInstanceTypeMlR7i48xlarge  ProcessingInstanceType = "ml.r7i.48xlarge"
)

// Values returns all known values for ProcessingInstanceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingInstanceType) Values() []ProcessingInstanceType {
	return []ProcessingInstanceType{
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.8xlarge",
		"ml.r5.12xlarge",
		"ml.r5.16xlarge",
		"ml.r5.24xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.g5.xlarge",
		"ml.g5.2xlarge",
		"ml.g5.4xlarge",
		"ml.g5.8xlarge",
		"ml.g5.16xlarge",
		"ml.g5.12xlarge",
		"ml.g5.24xlarge",
		"ml.g5.48xlarge",
		"ml.r5d.large",
		"ml.r5d.xlarge",
		"ml.r5d.2xlarge",
		"ml.r5d.4xlarge",
		"ml.r5d.8xlarge",
		"ml.r5d.12xlarge",
		"ml.r5d.16xlarge",
		"ml.r5d.24xlarge",
		"ml.g6.xlarge",
		"ml.g6.2xlarge",
		"ml.g6.4xlarge",
		"ml.g6.8xlarge",
		"ml.g6.12xlarge",
		"ml.g6.16xlarge",
		"ml.g6.24xlarge",
		"ml.g6.48xlarge",
		"ml.g6e.xlarge",
		"ml.g6e.2xlarge",
		"ml.g6e.4xlarge",
		"ml.g6e.8xlarge",
		"ml.g6e.12xlarge",
		"ml.g6e.16xlarge",
		"ml.g6e.24xlarge",
		"ml.g6e.48xlarge",
		"ml.m6i.large",
		"ml.m6i.xlarge",
		"ml.m6i.2xlarge",
		"ml.m6i.4xlarge",
		"ml.m6i.8xlarge",
		"ml.m6i.12xlarge",
		"ml.m6i.16xlarge",
		"ml.m6i.24xlarge",
		"ml.m6i.32xlarge",
		"ml.c6i.xlarge",
		"ml.c6i.2xlarge",
		"ml.c6i.4xlarge",
		"ml.c6i.8xlarge",
		"ml.c6i.12xlarge",
		"ml.c6i.16xlarge",
		"ml.c6i.24xlarge",
		"ml.c6i.32xlarge",
		"ml.m7i.large",
		"ml.m7i.xlarge",
		"ml.m7i.2xlarge",
		"ml.m7i.4xlarge",
		"ml.m7i.8xlarge",
		"ml.m7i.12xlarge",
		"ml.m7i.16xlarge",
		"ml.m7i.24xlarge",
		"ml.m7i.48xlarge",
		"ml.c7i.large",
		"ml.c7i.xlarge",
		"ml.c7i.2xlarge",
		"ml.c7i.4xlarge",
		"ml.c7i.8xlarge",
		"ml.c7i.12xlarge",
		"ml.c7i.16xlarge",
		"ml.c7i.24xlarge",
		"ml.c7i.48xlarge",
		"ml.r7i.large",
		"ml.r7i.xlarge",
		"ml.r7i.2xlarge",
		"ml.r7i.4xlarge",
		"ml.r7i.8xlarge",
		"ml.r7i.12xlarge",
		"ml.r7i.16xlarge",
		"ml.r7i.24xlarge",
		"ml.r7i.48xlarge",
	}
}

type ProcessingJobStatus string

// Enum values for ProcessingJobStatus
const (
	ProcessingJobStatusInProgress ProcessingJobStatus = "InProgress"
	ProcessingJobStatusCompleted  ProcessingJobStatus = "Completed"
	ProcessingJobStatusFailed     ProcessingJobStatus = "Failed"
	ProcessingJobStatusStopping   ProcessingJobStatus = "Stopping"
	ProcessingJobStatusStopped    ProcessingJobStatus = "Stopped"
)

// Values returns all known values for ProcessingJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingJobStatus) Values() []ProcessingJobStatus {
	return []ProcessingJobStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type ProcessingS3CompressionType string

// Enum values for ProcessingS3CompressionType
const (
	ProcessingS3CompressionTypeNone ProcessingS3CompressionType = "None"
	ProcessingS3CompressionTypeGzip ProcessingS3CompressionType = "Gzip"
)

// Values returns all known values for ProcessingS3CompressionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3CompressionType) Values() []ProcessingS3CompressionType {
	return []ProcessingS3CompressionType{
		"None",
		"Gzip",
	}
}

type ProcessingS3DataDistributionType string

// Enum values for ProcessingS3DataDistributionType
const (
	ProcessingS3DataDistributionTypeFullyreplicated ProcessingS3DataDistributionType = "FullyReplicated"
	ProcessingS3DataDistributionTypeShardedbys3key  ProcessingS3DataDistributionType = "ShardedByS3Key"
)

// Values returns all known values for ProcessingS3DataDistributionType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3DataDistributionType) Values() []ProcessingS3DataDistributionType {
	return []ProcessingS3DataDistributionType{
		"FullyReplicated",
		"ShardedByS3Key",
	}
}

type ProcessingS3DataType string

// Enum values for ProcessingS3DataType
const (
	ProcessingS3DataTypeManifestFile ProcessingS3DataType = "ManifestFile"
	ProcessingS3DataTypeS3Prefix     ProcessingS3DataType = "S3Prefix"
)

// Values returns all known values for ProcessingS3DataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3DataType) Values() []ProcessingS3DataType {
	return []ProcessingS3DataType{
		"ManifestFile",
		"S3Prefix",
	}
}

type ProcessingS3InputMode string

// Enum values for ProcessingS3InputMode
const (
	ProcessingS3InputModePipe ProcessingS3InputMode = "Pipe"
	ProcessingS3InputModeFile ProcessingS3InputMode = "File"
)

// Values returns all known values for ProcessingS3InputMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3InputMode) Values() []ProcessingS3InputMode {
	return []ProcessingS3InputMode{
		"Pipe",
		"File",
	}
}

type ProcessingS3UploadMode string

// Enum values for ProcessingS3UploadMode
const (
	ProcessingS3UploadModeContinuous ProcessingS3UploadMode = "Continuous"
	ProcessingS3UploadModeEndOfJob   ProcessingS3UploadMode = "EndOfJob"
)

// Values returns all known values for ProcessingS3UploadMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3UploadMode) Values() []ProcessingS3UploadMode {
	return []ProcessingS3UploadMode{
		"Continuous",
		"EndOfJob",
	}
}

type Processor string

// Enum values for Processor
const (
	ProcessorCpu Processor = "CPU"
	ProcessorGpu Processor = "GPU"
)

// Values returns all known values for Processor. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Processor) Values() []Processor {
	return []Processor{
		"CPU",
		"GPU",
	}
}

type ProductionVariantAcceleratorType string

// Enum values for ProductionVariantAcceleratorType
const (
	ProductionVariantAcceleratorTypeMlEia1Medium ProductionVariantAcceleratorType = "ml.eia1.medium"
	ProductionVariantAcceleratorTypeMlEia1Large  ProductionVariantAcceleratorType = "ml.eia1.large"
	ProductionVariantAcceleratorTypeMlEia1Xlarge ProductionVariantAcceleratorType = "ml.eia1.xlarge"
	ProductionVariantAcceleratorTypeMlEia2Medium ProductionVariantAcceleratorType = "ml.eia2.medium"
	ProductionVariantAcceleratorTypeMlEia2Large  ProductionVariantAcceleratorType = "ml.eia2.large"
	ProductionVariantAcceleratorTypeMlEia2Xlarge ProductionVariantAcceleratorType = "ml.eia2.xlarge"
)

// Values returns all known values for ProductionVariantAcceleratorType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProductionVariantAcceleratorType) Values() []ProductionVariantAcceleratorType {
	return []ProductionVariantAcceleratorType{
		"ml.eia1.medium",
		"ml.eia1.large",
		"ml.eia1.xlarge",
		"ml.eia2.medium",
		"ml.eia2.large",
		"ml.eia2.xlarge",
	}
}

type ProductionVariantInferenceAmiVersion string

// Enum values for ProductionVariantInferenceAmiVersion
const (
	ProductionVariantInferenceAmiVersionAl2Gpu2    ProductionVariantInferenceAmiVersion = "al2-ami-sagemaker-inference-gpu-2"
	ProductionVariantInferenceAmiVersionAl2Gpu21   ProductionVariantInferenceAmiVersion = "al2-ami-sagemaker-inference-gpu-2-1"
	ProductionVariantInferenceAmiVersionAl2Gpu31   ProductionVariantInferenceAmiVersion = "al2-ami-sagemaker-inference-gpu-3-1"
	ProductionVariantInferenceAmiVersionAl2Neuron2 ProductionVariantInferenceAmiVersion = "al2-ami-sagemaker-inference-neuron-2"
)

// Values returns all known values for ProductionVariantInferenceAmiVersion. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProductionVariantInferenceAmiVersion) Values() []ProductionVariantInferenceAmiVersion {
	return []ProductionVariantInferenceAmiVersion{
		"al2-ami-sagemaker-inference-gpu-2",
		"al2-ami-sagemaker-inference-gpu-2-1",
		"al2-ami-sagemaker-inference-gpu-3-1",
		"al2-ami-sagemaker-inference-neuron-2",
	}
}

type ProductionVariantInstanceType string

// Enum values for ProductionVariantInstanceType
const (
	ProductionVariantInstanceTypeMlT2Medium         ProductionVariantInstanceType = "ml.t2.medium"
	ProductionVariantInstanceTypeMlT2Large          ProductionVariantInstanceType = "ml.t2.large"
	ProductionVariantInstanceTypeMlT2Xlarge         ProductionVariantInstanceType = "ml.t2.xlarge"
	ProductionVariantInstanceTypeMlT22xlarge        ProductionVariantInstanceType = "ml.t2.2xlarge"
	ProductionVariantInstanceTypeMlM4Xlarge         ProductionVariantInstanceType = "ml.m4.xlarge"
	ProductionVariantInstanceTypeMlM42xlarge        ProductionVariantInstanceType = "ml.m4.2xlarge"
	ProductionVariantInstanceTypeMlM44xlarge        ProductionVariantInstanceType = "ml.m4.4xlarge"
	ProductionVariantInstanceTypeMlM410xlarge       ProductionVariantInstanceType = "ml.m4.10xlarge"
	ProductionVariantInstanceTypeMlM416xlarge       ProductionVariantInstanceType = "ml.m4.16xlarge"
	ProductionVariantInstanceTypeMlM5Large          ProductionVariantInstanceType = "ml.m5.large"
	ProductionVariantInstanceTypeMlM5Xlarge         ProductionVariantInstanceType = "ml.m5.xlarge"
	ProductionVariantInstanceTypeMlM52xlarge        ProductionVariantInstanceType = "ml.m5.2xlarge"
	ProductionVariantInstanceTypeMlM54xlarge        ProductionVariantInstanceType = "ml.m5.4xlarge"
	ProductionVariantInstanceTypeMlM512xlarge       ProductionVariantInstanceType = "ml.m5.12xlarge"
	ProductionVariantInstanceTypeMlM524xlarge       ProductionVariantInstanceType = "ml.m5.24xlarge"
	ProductionVariantInstanceTypeMlM5dLarge         ProductionVariantInstanceType = "ml.m5d.large"
	ProductionVariantInstanceTypeMlM5dXlarge        ProductionVariantInstanceType = "ml.m5d.xlarge"
	ProductionVariantInstanceTypeMlM5d2xlarge       ProductionVariantInstanceType = "ml.m5d.2xlarge"
	ProductionVariantInstanceTypeMlM5d4xlarge       ProductionVariantInstanceType = "ml.m5d.4xlarge"
	ProductionVariantInstanceTypeMlM5d12xlarge      ProductionVariantInstanceType = "ml.m5d.12xlarge"
	ProductionVariantInstanceTypeMlM5d24xlarge      ProductionVariantInstanceType = "ml.m5d.24xlarge"
	ProductionVariantInstanceTypeMlC4Large          ProductionVariantInstanceType = "ml.c4.large"
	ProductionVariantInstanceTypeMlC4Xlarge         ProductionVariantInstanceType = "ml.c4.xlarge"
	ProductionVariantInstanceTypeMlC42xlarge        ProductionVariantInstanceType = "ml.c4.2xlarge"
	ProductionVariantInstanceTypeMlC44xlarge        ProductionVariantInstanceType = "ml.c4.4xlarge"
	ProductionVariantInstanceTypeMlC48xlarge        ProductionVariantInstanceType = "ml.c4.8xlarge"
	ProductionVariantInstanceTypeMlP2Xlarge         ProductionVariantInstanceType = "ml.p2.xlarge"
	ProductionVariantInstanceTypeMlP28xlarge        ProductionVariantInstanceType = "ml.p2.8xlarge"
	ProductionVariantInstanceTypeMlP216xlarge       ProductionVariantInstanceType = "ml.p2.16xlarge"
	ProductionVariantInstanceTypeMlP32xlarge        ProductionVariantInstanceType = "ml.p3.2xlarge"
	ProductionVariantInstanceTypeMlP38xlarge        ProductionVariantInstanceType = "ml.p3.8xlarge"
	ProductionVariantInstanceTypeMlP316xlarge       ProductionVariantInstanceType = "ml.p3.16xlarge"
	ProductionVariantInstanceTypeMlC5Large          ProductionVariantInstanceType = "ml.c5.large"
	ProductionVariantInstanceTypeMlC5Xlarge         ProductionVariantInstanceType = "ml.c5.xlarge"
	ProductionVariantInstanceTypeMlC52xlarge        ProductionVariantInstanceType = "ml.c5.2xlarge"
	ProductionVariantInstanceTypeMlC54xlarge        ProductionVariantInstanceType = "ml.c5.4xlarge"
	ProductionVariantInstanceTypeMlC59xlarge        ProductionVariantInstanceType = "ml.c5.9xlarge"
	ProductionVariantInstanceTypeMlC518xlarge       ProductionVariantInstanceType = "ml.c5.18xlarge"
	ProductionVariantInstanceTypeMlC5dLarge         ProductionVariantInstanceType = "ml.c5d.large"
	ProductionVariantInstanceTypeMlC5dXlarge        ProductionVariantInstanceType = "ml.c5d.xlarge"
	ProductionVariantInstanceTypeMlC5d2xlarge       ProductionVariantInstanceType = "ml.c5d.2xlarge"
	ProductionVariantInstanceTypeMlC5d4xlarge       ProductionVariantInstanceType = "ml.c5d.4xlarge"
	ProductionVariantInstanceTypeMlC5d9xlarge       ProductionVariantInstanceType = "ml.c5d.9xlarge"
	ProductionVariantInstanceTypeMlC5d18xlarge      ProductionVariantInstanceType = "ml.c5d.18xlarge"
	ProductionVariantInstanceTypeMlG4dnXlarge       ProductionVariantInstanceType = "ml.g4dn.xlarge"
	ProductionVariantInstanceTypeMlG4dn2xlarge      ProductionVariantInstanceType = "ml.g4dn.2xlarge"
	ProductionVariantInstanceTypeMlG4dn4xlarge      ProductionVariantInstanceType = "ml.g4dn.4xlarge"
	ProductionVariantInstanceTypeMlG4dn8xlarge      ProductionVariantInstanceType = "ml.g4dn.8xlarge"
	ProductionVariantInstanceTypeMlG4dn12xlarge     ProductionVariantInstanceType = "ml.g4dn.12xlarge"
	ProductionVariantInstanceTypeMlG4dn16xlarge     ProductionVariantInstanceType = "ml.g4dn.16xlarge"
	ProductionVariantInstanceTypeMlR5Large          ProductionVariantInstanceType = "ml.r5.large"
	ProductionVariantInstanceTypeMlR5Xlarge         ProductionVariantInstanceType = "ml.r5.xlarge"
	ProductionVariantInstanceTypeMlR52xlarge        ProductionVariantInstanceType = "ml.r5.2xlarge"
	ProductionVariantInstanceTypeMlR54xlarge        ProductionVariantInstanceType = "ml.r5.4xlarge"
	ProductionVariantInstanceTypeMlR512xlarge       ProductionVariantInstanceType = "ml.r5.12xlarge"
	ProductionVariantInstanceTypeMlR524xlarge       ProductionVariantInstanceType = "ml.r5.24xlarge"
	ProductionVariantInstanceTypeMlR5dLarge         ProductionVariantInstanceType = "ml.r5d.large"
	ProductionVariantInstanceTypeMlR5dXlarge        ProductionVariantInstanceType = "ml.r5d.xlarge"
	ProductionVariantInstanceTypeMlR5d2xlarge       ProductionVariantInstanceType = "ml.r5d.2xlarge"
	ProductionVariantInstanceTypeMlR5d4xlarge       ProductionVariantInstanceType = "ml.r5d.4xlarge"
	ProductionVariantInstanceTypeMlR5d12xlarge      ProductionVariantInstanceType = "ml.r5d.12xlarge"
	ProductionVariantInstanceTypeMlR5d24xlarge      ProductionVariantInstanceType = "ml.r5d.24xlarge"
	ProductionVariantInstanceTypeMlInf1Xlarge       ProductionVariantInstanceType = "ml.inf1.xlarge"
	ProductionVariantInstanceTypeMlInf12xlarge      ProductionVariantInstanceType = "ml.inf1.2xlarge"
	ProductionVariantInstanceTypeMlInf16xlarge      ProductionVariantInstanceType = "ml.inf1.6xlarge"
	ProductionVariantInstanceTypeMlInf124xlarge     ProductionVariantInstanceType = "ml.inf1.24xlarge"
	ProductionVariantInstanceTypeMlDl124xlarge      ProductionVariantInstanceType = "ml.dl1.24xlarge"
	ProductionVariantInstanceTypeMlC6iLarge         ProductionVariantInstanceType = "ml.c6i.large"
	ProductionVariantInstanceTypeMlC6iXlarge        ProductionVariantInstanceType = "ml.c6i.xlarge"
	ProductionVariantInstanceTypeMlC6i2xlarge       ProductionVariantInstanceType = "ml.c6i.2xlarge"
	ProductionVariantInstanceTypeMlC6i4xlarge       ProductionVariantInstanceType = "ml.c6i.4xlarge"
	ProductionVariantInstanceTypeMlC6i8xlarge       ProductionVariantInstanceType = "ml.c6i.8xlarge"
	ProductionVariantInstanceTypeMlC6i12xlarge      ProductionVariantInstanceType = "ml.c6i.12xlarge"
	ProductionVariantInstanceTypeMlC6i16xlarge      ProductionVariantInstanceType = "ml.c6i.16xlarge"
	ProductionVariantInstanceTypeMlC6i24xlarge      ProductionVariantInstanceType = "ml.c6i.24xlarge"
	ProductionVariantInstanceTypeMlC6i32xlarge      ProductionVariantInstanceType = "ml.c6i.32xlarge"
	ProductionVariantInstanceTypeMlM6iLarge         ProductionVariantInstanceType = "ml.m6i.large"
	ProductionVariantInstanceTypeMlM6iXlarge        ProductionVariantInstanceType = "ml.m6i.xlarge"
	ProductionVariantInstanceTypeMlM6i2xlarge       ProductionVariantInstanceType = "ml.m6i.2xlarge"
	ProductionVariantInstanceTypeMlM6i4xlarge       ProductionVariantInstanceType = "ml.m6i.4xlarge"
	ProductionVariantInstanceTypeMlM6i8xlarge       ProductionVariantInstanceType = "ml.m6i.8xlarge"
	ProductionVariantInstanceTypeMlM6i12xlarge      ProductionVariantInstanceType = "ml.m6i.12xlarge"
	ProductionVariantInstanceTypeMlM6i16xlarge      ProductionVariantInstanceType = "ml.m6i.16xlarge"
	ProductionVariantInstanceTypeMlM6i24xlarge      ProductionVariantInstanceType = "ml.m6i.24xlarge"
	ProductionVariantInstanceTypeMlM6i32xlarge      ProductionVariantInstanceType = "ml.m6i.32xlarge"
	ProductionVariantInstanceTypeMlR6iLarge         ProductionVariantInstanceType = "ml.r6i.large"
	ProductionVariantInstanceTypeMlR6iXlarge        ProductionVariantInstanceType = "ml.r6i.xlarge"
	ProductionVariantInstanceTypeMlR6i2xlarge       ProductionVariantInstanceType = "ml.r6i.2xlarge"
	ProductionVariantInstanceTypeMlR6i4xlarge       ProductionVariantInstanceType = "ml.r6i.4xlarge"
	ProductionVariantInstanceTypeMlR6i8xlarge       ProductionVariantInstanceType = "ml.r6i.8xlarge"
	ProductionVariantInstanceTypeMlR6i12xlarge      ProductionVariantInstanceType = "ml.r6i.12xlarge"
	ProductionVariantInstanceTypeMlR6i16xlarge      ProductionVariantInstanceType = "ml.r6i.16xlarge"
	ProductionVariantInstanceTypeMlR6i24xlarge      ProductionVariantInstanceType = "ml.r6i.24xlarge"
	ProductionVariantInstanceTypeMlR6i32xlarge      ProductionVariantInstanceType = "ml.r6i.32xlarge"
	ProductionVariantInstanceTypeMlG5Xlarge         ProductionVariantInstanceType = "ml.g5.xlarge"
	ProductionVariantInstanceTypeMlG52xlarge        ProductionVariantInstanceType = "ml.g5.2xlarge"
	ProductionVariantInstanceTypeMlG54xlarge        ProductionVariantInstanceType = "ml.g5.4xlarge"
	ProductionVariantInstanceTypeMlG58xlarge        ProductionVariantInstanceType = "ml.g5.8xlarge"
	ProductionVariantInstanceTypeMlG512xlarge       ProductionVariantInstanceType = "ml.g5.12xlarge"
	ProductionVariantInstanceTypeMlG516xlarge       ProductionVariantInstanceType = "ml.g5.16xlarge"
	ProductionVariantInstanceTypeMlG524xlarge       ProductionVariantInstanceType = "ml.g5.24xlarge"
	ProductionVariantInstanceTypeMlG548xlarge       ProductionVariantInstanceType = "ml.g5.48xlarge"
	ProductionVariantInstanceTypeMlG6Xlarge         ProductionVariantInstanceType = "ml.g6.xlarge"
	ProductionVariantInstanceTypeMlG62xlarge        ProductionVariantInstanceType = "ml.g6.2xlarge"
	ProductionVariantInstanceTypeMlG64xlarge        ProductionVariantInstanceType = "ml.g6.4xlarge"
	ProductionVariantInstanceTypeMlG68xlarge        ProductionVariantInstanceType = "ml.g6.8xlarge"
	ProductionVariantInstanceTypeMlG612xlarge       ProductionVariantInstanceType = "ml.g6.12xlarge"
	ProductionVariantInstanceTypeMlG616xlarge       ProductionVariantInstanceType = "ml.g6.16xlarge"
	ProductionVariantInstanceTypeMlG624xlarge       ProductionVariantInstanceType = "ml.g6.24xlarge"
	ProductionVariantInstanceTypeMlG648xlarge       ProductionVariantInstanceType = "ml.g6.48xlarge"
	ProductionVariantInstanceTypeMlR8gMedium        ProductionVariantInstanceType = "ml.r8g.medium"
	ProductionVariantInstanceTypeMlR8gLarge         ProductionVariantInstanceType = "ml.r8g.large"
	ProductionVariantInstanceTypeMlR8gXlarge        ProductionVariantInstanceType = "ml.r8g.xlarge"
	ProductionVariantInstanceTypeMlR8g2xlarge       ProductionVariantInstanceType = "ml.r8g.2xlarge"
	ProductionVariantInstanceTypeMlR8g4xlarge       ProductionVariantInstanceType = "ml.r8g.4xlarge"
	ProductionVariantInstanceTypeMlR8g8xlarge       ProductionVariantInstanceType = "ml.r8g.8xlarge"
	ProductionVariantInstanceTypeMlR8g12xlarge      ProductionVariantInstanceType = "ml.r8g.12xlarge"
	ProductionVariantInstanceTypeMlR8g16xlarge      ProductionVariantInstanceType = "ml.r8g.16xlarge"
	ProductionVariantInstanceTypeMlR8g24xlarge      ProductionVariantInstanceType = "ml.r8g.24xlarge"
	ProductionVariantInstanceTypeMlR8g48xlarge      ProductionVariantInstanceType = "ml.r8g.48xlarge"
	ProductionVariantInstanceTypeMlG6eXlarge        ProductionVariantInstanceType = "ml.g6e.xlarge"
	ProductionVariantInstanceTypeMlG6e2xlarge       ProductionVariantInstanceType = "ml.g6e.2xlarge"
	ProductionVariantInstanceTypeMlG6e4xlarge       ProductionVariantInstanceType = "ml.g6e.4xlarge"
	ProductionVariantInstanceTypeMlG6e8xlarge       ProductionVariantInstanceType = "ml.g6e.8xlarge"
	ProductionVariantInstanceTypeMlG6e12xlarge      ProductionVariantInstanceType = "ml.g6e.12xlarge"
	ProductionVariantInstanceTypeMlG6e16xlarge      ProductionVariantInstanceType = "ml.g6e.16xlarge"
	ProductionVariantInstanceTypeMlG6e24xlarge      ProductionVariantInstanceType = "ml.g6e.24xlarge"
	ProductionVariantInstanceTypeMlG6e48xlarge      ProductionVariantInstanceType = "ml.g6e.48xlarge"
	ProductionVariantInstanceTypeMlP4d24xlarge      ProductionVariantInstanceType = "ml.p4d.24xlarge"
	ProductionVariantInstanceTypeMlC7gLarge         ProductionVariantInstanceType = "ml.c7g.large"
	ProductionVariantInstanceTypeMlC7gXlarge        ProductionVariantInstanceType = "ml.c7g.xlarge"
	ProductionVariantInstanceTypeMlC7g2xlarge       ProductionVariantInstanceType = "ml.c7g.2xlarge"
	ProductionVariantInstanceTypeMlC7g4xlarge       ProductionVariantInstanceType = "ml.c7g.4xlarge"
	ProductionVariantInstanceTypeMlC7g8xlarge       ProductionVariantInstanceType = "ml.c7g.8xlarge"
	ProductionVariantInstanceTypeMlC7g12xlarge      ProductionVariantInstanceType = "ml.c7g.12xlarge"
	ProductionVariantInstanceTypeMlC7g16xlarge      ProductionVariantInstanceType = "ml.c7g.16xlarge"
	ProductionVariantInstanceTypeMlM6gLarge         ProductionVariantInstanceType = "ml.m6g.large"
	ProductionVariantInstanceTypeMlM6gXlarge        ProductionVariantInstanceType = "ml.m6g.xlarge"
	ProductionVariantInstanceTypeMlM6g2xlarge       ProductionVariantInstanceType = "ml.m6g.2xlarge"
	ProductionVariantInstanceTypeMlM6g4xlarge       ProductionVariantInstanceType = "ml.m6g.4xlarge"
	ProductionVariantInstanceTypeMlM6g8xlarge       ProductionVariantInstanceType = "ml.m6g.8xlarge"
	ProductionVariantInstanceTypeMlM6g12xlarge      ProductionVariantInstanceType = "ml.m6g.12xlarge"
	ProductionVariantInstanceTypeMlM6g16xlarge      ProductionVariantInstanceType = "ml.m6g.16xlarge"
	ProductionVariantInstanceTypeMlM6gdLarge        ProductionVariantInstanceType = "ml.m6gd.large"
	ProductionVariantInstanceTypeMlM6gdXlarge       ProductionVariantInstanceType = "ml.m6gd.xlarge"
	ProductionVariantInstanceTypeMlM6gd2xlarge      ProductionVariantInstanceType = "ml.m6gd.2xlarge"
	ProductionVariantInstanceTypeMlM6gd4xlarge      ProductionVariantInstanceType = "ml.m6gd.4xlarge"
	ProductionVariantInstanceTypeMlM6gd8xlarge      ProductionVariantInstanceType = "ml.m6gd.8xlarge"
	ProductionVariantInstanceTypeMlM6gd12xlarge     ProductionVariantInstanceType = "ml.m6gd.12xlarge"
	ProductionVariantInstanceTypeMlM6gd16xlarge     ProductionVariantInstanceType = "ml.m6gd.16xlarge"
	ProductionVariantInstanceTypeMlC6gLarge         ProductionVariantInstanceType = "ml.c6g.large"
	ProductionVariantInstanceTypeMlC6gXlarge        ProductionVariantInstanceType = "ml.c6g.xlarge"
	ProductionVariantInstanceTypeMlC6g2xlarge       ProductionVariantInstanceType = "ml.c6g.2xlarge"
	ProductionVariantInstanceTypeMlC6g4xlarge       ProductionVariantInstanceType = "ml.c6g.4xlarge"
	ProductionVariantInstanceTypeMlC6g8xlarge       ProductionVariantInstanceType = "ml.c6g.8xlarge"
	ProductionVariantInstanceTypeMlC6g12xlarge      ProductionVariantInstanceType = "ml.c6g.12xlarge"
	ProductionVariantInstanceTypeMlC6g16xlarge      ProductionVariantInstanceType = "ml.c6g.16xlarge"
	ProductionVariantInstanceTypeMlC6gdLarge        ProductionVariantInstanceType = "ml.c6gd.large"
	ProductionVariantInstanceTypeMlC6gdXlarge       ProductionVariantInstanceType = "ml.c6gd.xlarge"
	ProductionVariantInstanceTypeMlC6gd2xlarge      ProductionVariantInstanceType = "ml.c6gd.2xlarge"
	ProductionVariantInstanceTypeMlC6gd4xlarge      ProductionVariantInstanceType = "ml.c6gd.4xlarge"
	ProductionVariantInstanceTypeMlC6gd8xlarge      ProductionVariantInstanceType = "ml.c6gd.8xlarge"
	ProductionVariantInstanceTypeMlC6gd12xlarge     ProductionVariantInstanceType = "ml.c6gd.12xlarge"
	ProductionVariantInstanceTypeMlC6gd16xlarge     ProductionVariantInstanceType = "ml.c6gd.16xlarge"
	ProductionVariantInstanceTypeMlC6gnLarge        ProductionVariantInstanceType = "ml.c6gn.large"
	ProductionVariantInstanceTypeMlC6gnXlarge       ProductionVariantInstanceType = "ml.c6gn.xlarge"
	ProductionVariantInstanceTypeMlC6gn2xlarge      ProductionVariantInstanceType = "ml.c6gn.2xlarge"
	ProductionVariantInstanceTypeMlC6gn4xlarge      ProductionVariantInstanceType = "ml.c6gn.4xlarge"
	ProductionVariantInstanceTypeMlC6gn8xlarge      ProductionVariantInstanceType = "ml.c6gn.8xlarge"
	ProductionVariantInstanceTypeMlC6gn12xlarge     ProductionVariantInstanceType = "ml.c6gn.12xlarge"
	ProductionVariantInstanceTypeMlC6gn16xlarge     ProductionVariantInstanceType = "ml.c6gn.16xlarge"
	ProductionVariantInstanceTypeMlR6gLarge         ProductionVariantInstanceType = "ml.r6g.large"
	ProductionVariantInstanceTypeMlR6gXlarge        ProductionVariantInstanceType = "ml.r6g.xlarge"
	ProductionVariantInstanceTypeMlR6g2xlarge       ProductionVariantInstanceType = "ml.r6g.2xlarge"
	ProductionVariantInstanceTypeMlR6g4xlarge       ProductionVariantInstanceType = "ml.r6g.4xlarge"
	ProductionVariantInstanceTypeMlR6g8xlarge       ProductionVariantInstanceType = "ml.r6g.8xlarge"
	ProductionVariantInstanceTypeMlR6g12xlarge      ProductionVariantInstanceType = "ml.r6g.12xlarge"
	ProductionVariantInstanceTypeMlR6g16xlarge      ProductionVariantInstanceType = "ml.r6g.16xlarge"
	ProductionVariantInstanceTypeMlR6gdLarge        ProductionVariantInstanceType = "ml.r6gd.large"
	ProductionVariantInstanceTypeMlR6gdXlarge       ProductionVariantInstanceType = "ml.r6gd.xlarge"
	ProductionVariantInstanceTypeMlR6gd2xlarge      ProductionVariantInstanceType = "ml.r6gd.2xlarge"
	ProductionVariantInstanceTypeMlR6gd4xlarge      ProductionVariantInstanceType = "ml.r6gd.4xlarge"
	ProductionVariantInstanceTypeMlR6gd8xlarge      ProductionVariantInstanceType = "ml.r6gd.8xlarge"
	ProductionVariantInstanceTypeMlR6gd12xlarge     ProductionVariantInstanceType = "ml.r6gd.12xlarge"
	ProductionVariantInstanceTypeMlR6gd16xlarge     ProductionVariantInstanceType = "ml.r6gd.16xlarge"
	ProductionVariantInstanceTypeMlP4de24xlarge     ProductionVariantInstanceType = "ml.p4de.24xlarge"
	ProductionVariantInstanceTypeMlTrn12xlarge      ProductionVariantInstanceType = "ml.trn1.2xlarge"
	ProductionVariantInstanceTypeMlTrn132xlarge     ProductionVariantInstanceType = "ml.trn1.32xlarge"
	ProductionVariantInstanceTypeMlTrn1n32xlarge    ProductionVariantInstanceType = "ml.trn1n.32xlarge"
	ProductionVariantInstanceTypeMlTrn248xlarge     ProductionVariantInstanceType = "ml.trn2.48xlarge"
	ProductionVariantInstanceTypeMlInf2Xlarge       ProductionVariantInstanceType = "ml.inf2.xlarge"
	ProductionVariantInstanceTypeMlInf28xlarge      ProductionVariantInstanceType = "ml.inf2.8xlarge"
	ProductionVariantInstanceTypeMlInf224xlarge     ProductionVariantInstanceType = "ml.inf2.24xlarge"
	ProductionVariantInstanceTypeMlInf248xlarge     ProductionVariantInstanceType = "ml.inf2.48xlarge"
	ProductionVariantInstanceTypeMlP548xlarge       ProductionVariantInstanceType = "ml.p5.48xlarge"
	ProductionVariantInstanceTypeMlP5e48xlarge      ProductionVariantInstanceType = "ml.p5e.48xlarge"
	ProductionVariantInstanceTypeMlP5en48xlarge     ProductionVariantInstanceType = "ml.p5en.48xlarge"
	ProductionVariantInstanceTypeMlM7iLarge         ProductionVariantInstanceType = "ml.m7i.large"
	ProductionVariantInstanceTypeMlM7iXlarge        ProductionVariantInstanceType = "ml.m7i.xlarge"
	ProductionVariantInstanceTypeMlM7i2xlarge       ProductionVariantInstanceType = "ml.m7i.2xlarge"
	ProductionVariantInstanceTypeMlM7i4xlarge       ProductionVariantInstanceType = "ml.m7i.4xlarge"
	ProductionVariantInstanceTypeMlM7i8xlarge       ProductionVariantInstanceType = "ml.m7i.8xlarge"
	ProductionVariantInstanceTypeMlM7i12xlarge      ProductionVariantInstanceType = "ml.m7i.12xlarge"
	ProductionVariantInstanceTypeMlM7i16xlarge      ProductionVariantInstanceType = "ml.m7i.16xlarge"
	ProductionVariantInstanceTypeMlM7i24xlarge      ProductionVariantInstanceType = "ml.m7i.24xlarge"
	ProductionVariantInstanceTypeMlM7i48xlarge      ProductionVariantInstanceType = "ml.m7i.48xlarge"
	ProductionVariantInstanceTypeMlC7iLarge         ProductionVariantInstanceType = "ml.c7i.large"
	ProductionVariantInstanceTypeMlC7iXlarge        ProductionVariantInstanceType = "ml.c7i.xlarge"
	ProductionVariantInstanceTypeMlC7i2xlarge       ProductionVariantInstanceType = "ml.c7i.2xlarge"
	ProductionVariantInstanceTypeMlC7i4xlarge       ProductionVariantInstanceType = "ml.c7i.4xlarge"
	ProductionVariantInstanceTypeMlC7i8xlarge       ProductionVariantInstanceType = "ml.c7i.8xlarge"
	ProductionVariantInstanceTypeMlC7i12xlarge      ProductionVariantInstanceType = "ml.c7i.12xlarge"
	ProductionVariantInstanceTypeMlC7i16xlarge      ProductionVariantInstanceType = "ml.c7i.16xlarge"
	ProductionVariantInstanceTypeMlC7i24xlarge      ProductionVariantInstanceType = "ml.c7i.24xlarge"
	ProductionVariantInstanceTypeMlC7i48xlarge      ProductionVariantInstanceType = "ml.c7i.48xlarge"
	ProductionVariantInstanceTypeMlR7iLarge         ProductionVariantInstanceType = "ml.r7i.large"
	ProductionVariantInstanceTypeMlR7iXlarge        ProductionVariantInstanceType = "ml.r7i.xlarge"
	ProductionVariantInstanceTypeMlR7i2xlarge       ProductionVariantInstanceType = "ml.r7i.2xlarge"
	ProductionVariantInstanceTypeMlR7i4xlarge       ProductionVariantInstanceType = "ml.r7i.4xlarge"
	ProductionVariantInstanceTypeMlR7i8xlarge       ProductionVariantInstanceType = "ml.r7i.8xlarge"
	ProductionVariantInstanceTypeMlR7i12xlarge      ProductionVariantInstanceType = "ml.r7i.12xlarge"
	ProductionVariantInstanceTypeMlR7i16xlarge      ProductionVariantInstanceType = "ml.r7i.16xlarge"
	ProductionVariantInstanceTypeMlR7i24xlarge      ProductionVariantInstanceType = "ml.r7i.24xlarge"
	ProductionVariantInstanceTypeMlR7i48xlarge      ProductionVariantInstanceType = "ml.r7i.48xlarge"
	ProductionVariantInstanceTypeMlC8gMedium        ProductionVariantInstanceType = "ml.c8g.medium"
	ProductionVariantInstanceTypeMlC8gLarge         ProductionVariantInstanceType = "ml.c8g.large"
	ProductionVariantInstanceTypeMlC8gXlarge        ProductionVariantInstanceType = "ml.c8g.xlarge"
	ProductionVariantInstanceTypeMlC8g2xlarge       ProductionVariantInstanceType = "ml.c8g.2xlarge"
	ProductionVariantInstanceTypeMlC8g4xlarge       ProductionVariantInstanceType = "ml.c8g.4xlarge"
	ProductionVariantInstanceTypeMlC8g8xlarge       ProductionVariantInstanceType = "ml.c8g.8xlarge"
	ProductionVariantInstanceTypeMlC8g12xlarge      ProductionVariantInstanceType = "ml.c8g.12xlarge"
	ProductionVariantInstanceTypeMlC8g16xlarge      ProductionVariantInstanceType = "ml.c8g.16xlarge"
	ProductionVariantInstanceTypeMlC8g24xlarge      ProductionVariantInstanceType = "ml.c8g.24xlarge"
	ProductionVariantInstanceTypeMlC8g48xlarge      ProductionVariantInstanceType = "ml.c8g.48xlarge"
	ProductionVariantInstanceTypeMlR7gdMedium       ProductionVariantInstanceType = "ml.r7gd.medium"
	ProductionVariantInstanceTypeMlR7gdLarge        ProductionVariantInstanceType = "ml.r7gd.large"
	ProductionVariantInstanceTypeMlR7gdXlarge       ProductionVariantInstanceType = "ml.r7gd.xlarge"
	ProductionVariantInstanceTypeMlR7gd2xlarge      ProductionVariantInstanceType = "ml.r7gd.2xlarge"
	ProductionVariantInstanceTypeMlR7gd4xlarge      ProductionVariantInstanceType = "ml.r7gd.4xlarge"
	ProductionVariantInstanceTypeMlR7gd8xlarge      ProductionVariantInstanceType = "ml.r7gd.8xlarge"
	ProductionVariantInstanceTypeMlR7gd12xlarge     ProductionVariantInstanceType = "ml.r7gd.12xlarge"
	ProductionVariantInstanceTypeMlR7gd16xlarge     ProductionVariantInstanceType = "ml.r7gd.16xlarge"
	ProductionVariantInstanceTypeMlM8gMedium        ProductionVariantInstanceType = "ml.m8g.medium"
	ProductionVariantInstanceTypeMlM8gLarge         ProductionVariantInstanceType = "ml.m8g.large"
	ProductionVariantInstanceTypeMlM8gXlarge        ProductionVariantInstanceType = "ml.m8g.xlarge"
	ProductionVariantInstanceTypeMlM8g2xlarge       ProductionVariantInstanceType = "ml.m8g.2xlarge"
	ProductionVariantInstanceTypeMlM8g4xlarge       ProductionVariantInstanceType = "ml.m8g.4xlarge"
	ProductionVariantInstanceTypeMlM8g8xlarge       ProductionVariantInstanceType = "ml.m8g.8xlarge"
	ProductionVariantInstanceTypeMlM8g12xlarge      ProductionVariantInstanceType = "ml.m8g.12xlarge"
	ProductionVariantInstanceTypeMlM8g16xlarge      ProductionVariantInstanceType = "ml.m8g.16xlarge"
	ProductionVariantInstanceTypeMlM8g24xlarge      ProductionVariantInstanceType = "ml.m8g.24xlarge"
	ProductionVariantInstanceTypeMlM8g48xlarge      ProductionVariantInstanceType = "ml.m8g.48xlarge"
	ProductionVariantInstanceTypeMlC6inLarge        ProductionVariantInstanceType = "ml.c6in.large"
	ProductionVariantInstanceTypeMlC6inXlarge       ProductionVariantInstanceType = "ml.c6in.xlarge"
	ProductionVariantInstanceTypeMlC6in2xlarge      ProductionVariantInstanceType = "ml.c6in.2xlarge"
	ProductionVariantInstanceTypeMlC6in4xlarge      ProductionVariantInstanceType = "ml.c6in.4xlarge"
	ProductionVariantInstanceTypeMlC6in8xlarge      ProductionVariantInstanceType = "ml.c6in.8xlarge"
	ProductionVariantInstanceTypeMlC6in12xlarge     ProductionVariantInstanceType = "ml.c6in.12xlarge"
	ProductionVariantInstanceTypeMlC6in16xlarge     ProductionVariantInstanceType = "ml.c6in.16xlarge"
	ProductionVariantInstanceTypeMlC6in24xlarge     ProductionVariantInstanceType = "ml.c6in.24xlarge"
	ProductionVariantInstanceTypeMlC6in32xlarge     ProductionVariantInstanceType = "ml.c6in.32xlarge"
	ProductionVariantInstanceTypeMlP6B20048xlarge   ProductionVariantInstanceType = "ml.p6-b200.48xlarge"
	ProductionVariantInstanceTypeMlP6eGb20036xlarge ProductionVariantInstanceType = "ml.p6e-gb200.36xlarge"
)

// Values returns all known values for ProductionVariantInstanceType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProductionVariantInstanceType) Values() []ProductionVariantInstanceType {
	return []ProductionVariantInstanceType{
		"ml.t2.medium",
		"ml.t2.large",
		"ml.t2.xlarge",
		"ml.t2.2xlarge",
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.m5d.large",
		"ml.m5d.xlarge",
		"ml.m5d.2xlarge",
		"ml.m5d.4xlarge",
		"ml.m5d.12xlarge",
		"ml.m5d.24xlarge",
		"ml.c4.large",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.c5.large",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.c5d.large",
		"ml.c5d.xlarge",
		"ml.c5d.2xlarge",
		"ml.c5d.4xlarge",
		"ml.c5d.9xlarge",
		"ml.c5d.18xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.12xlarge",
		"ml.r5.24xlarge",
		"ml.r5d.large",
		"ml.r5d.xlarge",
		"ml.r5d.2xlarge",
		"ml.r5d.4xlarge",
		"ml.r5d.12xlarge",
		"ml.r5d.24xlarge",
		"ml.inf1.xlarge",
		"ml.inf1.2xlarge",
		"ml.inf1.6xlarge",
		"ml.inf1.24xlarge",
		"ml.dl1.24xlarge",
		"ml.c6i.large",
		"ml.c6i.xlarge",
		"ml.c6i.2xlarge",
		"ml.c6i.4xlarge",
		"ml.c6i.8xlarge",
		"ml.c6i.12xlarge",
		"ml.c6i.16xlarge",
		"ml.c6i.24xlarge",
		"ml.c6i.32xlarge",
		"ml.m6i.large",
		"ml.m6i.xlarge",
		"ml.m6i.2xlarge",
		"ml.m6i.4xlarge",
		"ml.m6i.8xlarge",
		"ml.m6i.12xlarge",
		"ml.m6i.16xlarge",
		"ml.m6i.24xlarge",
		"ml.m6i.32xlarge",
		"ml.r6i.large",
		"ml.r6i.xlarge",
		"ml.r6i.2xlarge",
		"ml.r6i.4xlarge",
		"ml.r6i.8xlarge",
		"ml.r6i.12xlarge",
		"ml.r6i.16xlarge",
		"ml.r6i.24xlarge",
		"ml.r6i.32xlarge",
		"ml.g5.xlarge",
		"ml.g5.2xlarge",
		"ml.g5.4xlarge",
		"ml.g5.8xlarge",
		"ml.g5.12xlarge",
		"ml.g5.16xlarge",
		"ml.g5.24xlarge",
		"ml.g5.48xlarge",
		"ml.g6.xlarge",
		"ml.g6.2xlarge",
		"ml.g6.4xlarge",
		"ml.g6.8xlarge",
		"ml.g6.12xlarge",
		"ml.g6.16xlarge",
		"ml.g6.24xlarge",
		"ml.g6.48xlarge",
		"ml.r8g.medium",
		"ml.r8g.large",
		"ml.r8g.xlarge",
		"ml.r8g.2xlarge",
		"ml.r8g.4xlarge",
		"ml.r8g.8xlarge",
		"ml.r8g.12xlarge",
		"ml.r8g.16xlarge",
		"ml.r8g.24xlarge",
		"ml.r8g.48xlarge",
		"ml.g6e.xlarge",
		"ml.g6e.2xlarge",
		"ml.g6e.4xlarge",
		"ml.g6e.8xlarge",
		"ml.g6e.12xlarge",
		"ml.g6e.16xlarge",
		"ml.g6e.24xlarge",
		"ml.g6e.48xlarge",
		"ml.p4d.24xlarge",
		"ml.c7g.large",
		"ml.c7g.xlarge",
		"ml.c7g.2xlarge",
		"ml.c7g.4xlarge",
		"ml.c7g.8xlarge",
		"ml.c7g.12xlarge",
		"ml.c7g.16xlarge",
		"ml.m6g.large",
		"ml.m6g.xlarge",
		"ml.m6g.2xlarge",
		"ml.m6g.4xlarge",
		"ml.m6g.8xlarge",
		"ml.m6g.12xlarge",
		"ml.m6g.16xlarge",
		"ml.m6gd.large",
		"ml.m6gd.xlarge",
		"ml.m6gd.2xlarge",
		"ml.m6gd.4xlarge",
		"ml.m6gd.8xlarge",
		"ml.m6gd.12xlarge",
		"ml.m6gd.16xlarge",
		"ml.c6g.large",
		"ml.c6g.xlarge",
		"ml.c6g.2xlarge",
		"ml.c6g.4xlarge",
		"ml.c6g.8xlarge",
		"ml.c6g.12xlarge",
		"ml.c6g.16xlarge",
		"ml.c6gd.large",
		"ml.c6gd.xlarge",
		"ml.c6gd.2xlarge",
		"ml.c6gd.4xlarge",
		"ml.c6gd.8xlarge",
		"ml.c6gd.12xlarge",
		"ml.c6gd.16xlarge",
		"ml.c6gn.large",
		"ml.c6gn.xlarge",
		"ml.c6gn.2xlarge",
		"ml.c6gn.4xlarge",
		"ml.c6gn.8xlarge",
		"ml.c6gn.12xlarge",
		"ml.c6gn.16xlarge",
		"ml.r6g.large",
		"ml.r6g.xlarge",
		"ml.r6g.2xlarge",
		"ml.r6g.4xlarge",
		"ml.r6g.8xlarge",
		"ml.r6g.12xlarge",
		"ml.r6g.16xlarge",
		"ml.r6gd.large",
		"ml.r6gd.xlarge",
		"ml.r6gd.2xlarge",
		"ml.r6gd.4xlarge",
		"ml.r6gd.8xlarge",
		"ml.r6gd.12xlarge",
		"ml.r6gd.16xlarge",
		"ml.p4de.24xlarge",
		"ml.trn1.2xlarge",
		"ml.trn1.32xlarge",
		"ml.trn1n.32xlarge",
		"ml.trn2.48xlarge",
		"ml.inf2.xlarge",
		"ml.inf2.8xlarge",
		"ml.inf2.24xlarge",
		"ml.inf2.48xlarge",
		"ml.p5.48xlarge",
		"ml.p5e.48xlarge",
		"ml.p5en.48xlarge",
		"ml.m7i.large",
		"ml.m7i.xlarge",
		"ml.m7i.2xlarge",
		"ml.m7i.4xlarge",
		"ml.m7i.8xlarge",
		"ml.m7i.12xlarge",
		"ml.m7i.16xlarge",
		"ml.m7i.24xlarge",
		"ml.m7i.48xlarge",
		"ml.c7i.large",
		"ml.c7i.xlarge",
		"ml.c7i.2xlarge",
		"ml.c7i.4xlarge",
		"ml.c7i.8xlarge",
		"ml.c7i.12xlarge",
		"ml.c7i.16xlarge",
		"ml.c7i.24xlarge",
		"ml.c7i.48xlarge",
		"ml.r7i.large",
		"ml.r7i.xlarge",
		"ml.r7i.2xlarge",
		"ml.r7i.4xlarge",
		"ml.r7i.8xlarge",
		"ml.r7i.12xlarge",
		"ml.r7i.16xlarge",
		"ml.r7i.24xlarge",
		"ml.r7i.48xlarge",
		"ml.c8g.medium",
		"ml.c8g.large",
		"ml.c8g.xlarge",
		"ml.c8g.2xlarge",
		"ml.c8g.4xlarge",
		"ml.c8g.8xlarge",
		"ml.c8g.12xlarge",
		"ml.c8g.16xlarge",
		"ml.c8g.24xlarge",
		"ml.c8g.48xlarge",
		"ml.r7gd.medium",
		"ml.r7gd.large",
		"ml.r7gd.xlarge",
		"ml.r7gd.2xlarge",
		"ml.r7gd.4xlarge",
		"ml.r7gd.8xlarge",
		"ml.r7gd.12xlarge",
		"ml.r7gd.16xlarge",
		"ml.m8g.medium",
		"ml.m8g.large",
		"ml.m8g.xlarge",
		"ml.m8g.2xlarge",
		"ml.m8g.4xlarge",
		"ml.m8g.8xlarge",
		"ml.m8g.12xlarge",
		"ml.m8g.16xlarge",
		"ml.m8g.24xlarge",
		"ml.m8g.48xlarge",
		"ml.c6in.large",
		"ml.c6in.xlarge",
		"ml.c6in.2xlarge",
		"ml.c6in.4xlarge",
		"ml.c6in.8xlarge",
		"ml.c6in.12xlarge",
		"ml.c6in.16xlarge",
		"ml.c6in.24xlarge",
		"ml.c6in.32xlarge",
		"ml.p6-b200.48xlarge",
		"ml.p6e-gb200.36xlarge",
	}
}

type ProfilingStatus string

// Enum values for ProfilingStatus
const (
	ProfilingStatusEnabled  ProfilingStatus = "Enabled"
	ProfilingStatusDisabled ProfilingStatus = "Disabled"
)

// Values returns all known values for ProfilingStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProfilingStatus) Values() []ProfilingStatus {
	return []ProfilingStatus{
		"Enabled",
		"Disabled",
	}
}

type ProjectSortBy string

// Enum values for ProjectSortBy
const (
	ProjectSortByName         ProjectSortBy = "Name"
	ProjectSortByCreationTime ProjectSortBy = "CreationTime"
)

// Values returns all known values for ProjectSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProjectSortBy) Values() []ProjectSortBy {
	return []ProjectSortBy{
		"Name",
		"CreationTime",
	}
}

type ProjectSortOrder string

// Enum values for ProjectSortOrder
const (
	ProjectSortOrderAscending  ProjectSortOrder = "Ascending"
	ProjectSortOrderDescending ProjectSortOrder = "Descending"
)

// Values returns all known values for ProjectSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProjectSortOrder) Values() []ProjectSortOrder {
	return []ProjectSortOrder{
		"Ascending",
		"Descending",
	}
}

type ProjectStatus string

// Enum values for ProjectStatus
const (
	ProjectStatusPending          ProjectStatus = "Pending"
	ProjectStatusCreateInProgress ProjectStatus = "CreateInProgress"
	ProjectStatusCreateCompleted  ProjectStatus = "CreateCompleted"
	ProjectStatusCreateFailed     ProjectStatus = "CreateFailed"
	ProjectStatusDeleteInProgress ProjectStatus = "DeleteInProgress"
	ProjectStatusDeleteFailed     ProjectStatus = "DeleteFailed"
	ProjectStatusDeleteCompleted  ProjectStatus = "DeleteCompleted"
	ProjectStatusUpdateInProgress ProjectStatus = "UpdateInProgress"
	ProjectStatusUpdateCompleted  ProjectStatus = "UpdateCompleted"
	ProjectStatusUpdateFailed     ProjectStatus = "UpdateFailed"
)

// Values returns all known values for ProjectStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProjectStatus) Values() []ProjectStatus {
	return []ProjectStatus{
		"Pending",
		"CreateInProgress",
		"CreateCompleted",
		"CreateFailed",
		"DeleteInProgress",
		"DeleteFailed",
		"DeleteCompleted",
		"UpdateInProgress",
		"UpdateCompleted",
		"UpdateFailed",
	}
}

type RecommendationJobStatus string

// Enum values for RecommendationJobStatus
const (
	RecommendationJobStatusPending    RecommendationJobStatus = "PENDING"
	RecommendationJobStatusInProgress RecommendationJobStatus = "IN_PROGRESS"
	RecommendationJobStatusCompleted  RecommendationJobStatus = "COMPLETED"
	RecommendationJobStatusFailed     RecommendationJobStatus = "FAILED"
	RecommendationJobStatusStopping   RecommendationJobStatus = "STOPPING"
	RecommendationJobStatusStopped    RecommendationJobStatus = "STOPPED"
	RecommendationJobStatusDeleting   RecommendationJobStatus = "DELETING"
	RecommendationJobStatusDeleted    RecommendationJobStatus = "DELETED"
)

// Values returns all known values for RecommendationJobStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecommendationJobStatus) Values() []RecommendationJobStatus {
	return []RecommendationJobStatus{
		"PENDING",
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
		"STOPPING",
		"STOPPED",
		"DELETING",
		"DELETED",
	}
}

type RecommendationJobSupportedEndpointType string

// Enum values for RecommendationJobSupportedEndpointType
const (
	RecommendationJobSupportedEndpointTypeRealtime   RecommendationJobSupportedEndpointType = "RealTime"
	RecommendationJobSupportedEndpointTypeServerless RecommendationJobSupportedEndpointType = "Serverless"
)

// Values returns all known values for RecommendationJobSupportedEndpointType.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecommendationJobSupportedEndpointType) Values() []RecommendationJobSupportedEndpointType {
	return []RecommendationJobSupportedEndpointType{
		"RealTime",
		"Serverless",
	}
}

type RecommendationJobType string

// Enum values for RecommendationJobType
const (
	RecommendationJobTypeDefault  RecommendationJobType = "Default"
	RecommendationJobTypeAdvanced RecommendationJobType = "Advanced"
)

// Values returns all known values for RecommendationJobType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecommendationJobType) Values() []RecommendationJobType {
	return []RecommendationJobType{
		"Default",
		"Advanced",
	}
}

type RecommendationStatus string

// Enum values for RecommendationStatus
const (
	RecommendationStatusInProgress    RecommendationStatus = "IN_PROGRESS"
	RecommendationStatusCompleted     RecommendationStatus = "COMPLETED"
	RecommendationStatusFailed        RecommendationStatus = "FAILED"
	RecommendationStatusNotApplicable RecommendationStatus = "NOT_APPLICABLE"
)

// Values returns all known values for RecommendationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecommendationStatus) Values() []RecommendationStatus {
	return []RecommendationStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
		"NOT_APPLICABLE",
	}
}

type RecommendationStepType string

// Enum values for RecommendationStepType
const (
	RecommendationStepTypeBenchmark RecommendationStepType = "BENCHMARK"
)

// Values returns all known values for RecommendationStepType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecommendationStepType) Values() []RecommendationStepType {
	return []RecommendationStepType{
		"BENCHMARK",
	}
}

type RecordWrapper string

// Enum values for RecordWrapper
const (
	RecordWrapperNone     RecordWrapper = "None"
	RecordWrapperRecordio RecordWrapper = "RecordIO"
)

// Values returns all known values for RecordWrapper. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecordWrapper) Values() []RecordWrapper {
	return []RecordWrapper{
		"None",
		"RecordIO",
	}
}

type RedshiftResultCompressionType string

// Enum values for RedshiftResultCompressionType
const (
	RedshiftResultCompressionTypeNone   RedshiftResultCompressionType = "None"
	RedshiftResultCompressionTypeGzip   RedshiftResultCompressionType = "GZIP"
	RedshiftResultCompressionTypeBzip2  RedshiftResultCompressionType = "BZIP2"
	RedshiftResultCompressionTypeZstd   RedshiftResultCompressionType = "ZSTD"
	RedshiftResultCompressionTypeSnappy RedshiftResultCompressionType = "SNAPPY"
)

// Values returns all known values for RedshiftResultCompressionType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RedshiftResultCompressionType) Values() []RedshiftResultCompressionType {
	return []RedshiftResultCompressionType{
		"None",
		"GZIP",
		"BZIP2",
		"ZSTD",
		"SNAPPY",
	}
}

type RedshiftResultFormat string

// Enum values for RedshiftResultFormat
const (
	RedshiftResultFormatParquet RedshiftResultFormat = "PARQUET"
	RedshiftResultFormatCsv     RedshiftResultFormat = "CSV"
)

// Values returns all known values for RedshiftResultFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RedshiftResultFormat) Values() []RedshiftResultFormat {
	return []RedshiftResultFormat{
		"PARQUET",
		"CSV",
	}
}

type Relation string

// Enum values for Relation
const (
	RelationEqualTo              Relation = "EqualTo"
	RelationGreaterThanOrEqualTo Relation = "GreaterThanOrEqualTo"
)

// Values returns all known values for Relation. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Relation) Values() []Relation {
	return []Relation{
		"EqualTo",
		"GreaterThanOrEqualTo",
	}
}

type RepositoryAccessMode string

// Enum values for RepositoryAccessMode
const (
	RepositoryAccessModePlatform RepositoryAccessMode = "Platform"
	RepositoryAccessModeVpc      RepositoryAccessMode = "Vpc"
)

// Values returns all known values for RepositoryAccessMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RepositoryAccessMode) Values() []RepositoryAccessMode {
	return []RepositoryAccessMode{
		"Platform",
		"Vpc",
	}
}

type ReservedCapacityInstanceType string

// Enum values for ReservedCapacityInstanceType
const (
	ReservedCapacityInstanceTypeMlP4d24xlarge    ReservedCapacityInstanceType = "ml.p4d.24xlarge"
	ReservedCapacityInstanceTypeMlP548xlarge     ReservedCapacityInstanceType = "ml.p5.48xlarge"
	ReservedCapacityInstanceTypeMlP5e48xlarge    ReservedCapacityInstanceType = "ml.p5e.48xlarge"
	ReservedCapacityInstanceTypeMlP5en48xlarge   ReservedCapacityInstanceType = "ml.p5en.48xlarge"
	ReservedCapacityInstanceTypeMlTrn132xlarge   ReservedCapacityInstanceType = "ml.trn1.32xlarge"
	ReservedCapacityInstanceTypeMlTrn248xlarge   ReservedCapacityInstanceType = "ml.trn2.48xlarge"
	ReservedCapacityInstanceTypeMlP6B20048xlarge ReservedCapacityInstanceType = "ml.p6-b200.48xlarge"
)

// Values returns all known values for ReservedCapacityInstanceType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReservedCapacityInstanceType) Values() []ReservedCapacityInstanceType {
	return []ReservedCapacityInstanceType{
		"ml.p4d.24xlarge",
		"ml.p5.48xlarge",
		"ml.p5e.48xlarge",
		"ml.p5en.48xlarge",
		"ml.trn1.32xlarge",
		"ml.trn2.48xlarge",
		"ml.p6-b200.48xlarge",
	}
}

type ReservedCapacityStatus string

// Enum values for ReservedCapacityStatus
const (
	ReservedCapacityStatusPending   ReservedCapacityStatus = "Pending"
	ReservedCapacityStatusActive    ReservedCapacityStatus = "Active"
	ReservedCapacityStatusScheduled ReservedCapacityStatus = "Scheduled"
	ReservedCapacityStatusExpired   ReservedCapacityStatus = "Expired"
	ReservedCapacityStatusFailed    ReservedCapacityStatus = "Failed"
)

// Values returns all known values for ReservedCapacityStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReservedCapacityStatus) Values() []ReservedCapacityStatus {
	return []ReservedCapacityStatus{
		"Pending",
		"Active",
		"Scheduled",
		"Expired",
		"Failed",
	}
}

type ResourceCatalogSortBy string

// Enum values for ResourceCatalogSortBy
const (
	ResourceCatalogSortByCreationTime ResourceCatalogSortBy = "CreationTime"
)

// Values returns all known values for ResourceCatalogSortBy. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceCatalogSortBy) Values() []ResourceCatalogSortBy {
	return []ResourceCatalogSortBy{
		"CreationTime",
	}
}

type ResourceCatalogSortOrder string

// Enum values for ResourceCatalogSortOrder
const (
	ResourceCatalogSortOrderAscending  ResourceCatalogSortOrder = "Ascending"
	ResourceCatalogSortOrderDescending ResourceCatalogSortOrder = "Descending"
)

// Values returns all known values for ResourceCatalogSortOrder. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceCatalogSortOrder) Values() []ResourceCatalogSortOrder {
	return []ResourceCatalogSortOrder{
		"Ascending",
		"Descending",
	}
}

type ResourceSharingStrategy string

// Enum values for ResourceSharingStrategy
const (
	ResourceSharingStrategyLend          ResourceSharingStrategy = "Lend"
	ResourceSharingStrategyDontlend      ResourceSharingStrategy = "DontLend"
	ResourceSharingStrategyLendandborrow ResourceSharingStrategy = "LendAndBorrow"
)

// Values returns all known values for ResourceSharingStrategy. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceSharingStrategy) Values() []ResourceSharingStrategy {
	return []ResourceSharingStrategy{
		"Lend",
		"DontLend",
		"LendAndBorrow",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeTrainingJob              ResourceType = "TrainingJob"
	ResourceTypeExperiment               ResourceType = "Experiment"
	ResourceTypeExperimentTrial          ResourceType = "ExperimentTrial"
	ResourceTypeExperimentTrialComponent ResourceType = "ExperimentTrialComponent"
	ResourceTypeEndpoint                 ResourceType = "Endpoint"
	ResourceTypeModel                    ResourceType = "Model"
	ResourceTypeModelPackage             ResourceType = "ModelPackage"
	ResourceTypeModelPackageGroup        ResourceType = "ModelPackageGroup"
	ResourceTypePipeline                 ResourceType = "Pipeline"
	ResourceTypePipelineExecution        ResourceType = "PipelineExecution"
	ResourceTypeFeatureGroup             ResourceType = "FeatureGroup"
	ResourceTypeFeatureMetadata          ResourceType = "FeatureMetadata"
	ResourceTypeImage                    ResourceType = "Image"
	ResourceTypeImageVersion             ResourceType = "ImageVersion"
	ResourceTypeProject                  ResourceType = "Project"
	ResourceTypeHyperParameterTuningJob  ResourceType = "HyperParameterTuningJob"
	ResourceTypeModelCard                ResourceType = "ModelCard"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"TrainingJob",
		"Experiment",
		"ExperimentTrial",
		"ExperimentTrialComponent",
		"Endpoint",
		"Model",
		"ModelPackage",
		"ModelPackageGroup",
		"Pipeline",
		"PipelineExecution",
		"FeatureGroup",
		"FeatureMetadata",
		"Image",
		"ImageVersion",
		"Project",
		"HyperParameterTuningJob",
		"ModelCard",
	}
}

type RetentionType string

// Enum values for RetentionType
const (
	RetentionTypeRetain RetentionType = "Retain"
	RetentionTypeDelete RetentionType = "Delete"
)

// Values returns all known values for RetentionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RetentionType) Values() []RetentionType {
	return []RetentionType{
		"Retain",
		"Delete",
	}
}

type RootAccess string

// Enum values for RootAccess
const (
	RootAccessEnabled  RootAccess = "Enabled"
	RootAccessDisabled RootAccess = "Disabled"
)

// Values returns all known values for RootAccess. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RootAccess) Values() []RootAccess {
	return []RootAccess{
		"Enabled",
		"Disabled",
	}
}

type RoutingStrategy string

// Enum values for RoutingStrategy
const (
	RoutingStrategyLeastOutstandingRequests RoutingStrategy = "LEAST_OUTSTANDING_REQUESTS"
	RoutingStrategyRandom                   RoutingStrategy = "RANDOM"
)

// Values returns all known values for RoutingStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RoutingStrategy) Values() []RoutingStrategy {
	return []RoutingStrategy{
		"LEAST_OUTSTANDING_REQUESTS",
		"RANDOM",
	}
}

type RStudioServerProAccessStatus string

// Enum values for RStudioServerProAccessStatus
const (
	RStudioServerProAccessStatusEnabled  RStudioServerProAccessStatus = "ENABLED"
	RStudioServerProAccessStatusDisabled RStudioServerProAccessStatus = "DISABLED"
)

// Values returns all known values for RStudioServerProAccessStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RStudioServerProAccessStatus) Values() []RStudioServerProAccessStatus {
	return []RStudioServerProAccessStatus{
		"ENABLED",
		"DISABLED",
	}
}

type RStudioServerProUserGroup string

// Enum values for RStudioServerProUserGroup
const (
	RStudioServerProUserGroupAdmin RStudioServerProUserGroup = "R_STUDIO_ADMIN"
	RStudioServerProUserGroupUser  RStudioServerProUserGroup = "R_STUDIO_USER"
)

// Values returns all known values for RStudioServerProUserGroup. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RStudioServerProUserGroup) Values() []RStudioServerProUserGroup {
	return []RStudioServerProUserGroup{
		"R_STUDIO_ADMIN",
		"R_STUDIO_USER",
	}
}

type RuleEvaluationStatus string

// Enum values for RuleEvaluationStatus
const (
	RuleEvaluationStatusInProgress    RuleEvaluationStatus = "InProgress"
	RuleEvaluationStatusNoIssuesFound RuleEvaluationStatus = "NoIssuesFound"
	RuleEvaluationStatusIssuesFound   RuleEvaluationStatus = "IssuesFound"
	RuleEvaluationStatusError         RuleEvaluationStatus = "Error"
	RuleEvaluationStatusStopping      RuleEvaluationStatus = "Stopping"
	RuleEvaluationStatusStopped       RuleEvaluationStatus = "Stopped"
)

// Values returns all known values for RuleEvaluationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleEvaluationStatus) Values() []RuleEvaluationStatus {
	return []RuleEvaluationStatus{
		"InProgress",
		"NoIssuesFound",
		"IssuesFound",
		"Error",
		"Stopping",
		"Stopped",
	}
}

type S3DataDistribution string

// Enum values for S3DataDistribution
const (
	S3DataDistributionFullyReplicated S3DataDistribution = "FullyReplicated"
	S3DataDistributionShardedByS3Key  S3DataDistribution = "ShardedByS3Key"
)

// Values returns all known values for S3DataDistribution. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (S3DataDistribution) Values() []S3DataDistribution {
	return []S3DataDistribution{
		"FullyReplicated",
		"ShardedByS3Key",
	}
}

type S3DataType string

// Enum values for S3DataType
const (
	S3DataTypeManifestFile          S3DataType = "ManifestFile"
	S3DataTypeS3Prefix              S3DataType = "S3Prefix"
	S3DataTypeAugmentedManifestFile S3DataType = "AugmentedManifestFile"
	S3DataTypeConverse              S3DataType = "Converse"
)

// Values returns all known values for S3DataType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (S3DataType) Values() []S3DataType {
	return []S3DataType{
		"ManifestFile",
		"S3Prefix",
		"AugmentedManifestFile",
		"Converse",
	}
}

type S3ModelDataType string

// Enum values for S3ModelDataType
const (
	S3ModelDataTypeS3Prefix S3ModelDataType = "S3Prefix"
	S3ModelDataTypeS3Object S3ModelDataType = "S3Object"
)

// Values returns all known values for S3ModelDataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (S3ModelDataType) Values() []S3ModelDataType {
	return []S3ModelDataType{
		"S3Prefix",
		"S3Object",
	}
}

type SageMakerImageName string

// Enum values for SageMakerImageName
const (
	SageMakerImageNameSagemakerDistribution SageMakerImageName = "sagemaker_distribution"
)

// Values returns all known values for SageMakerImageName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SageMakerImageName) Values() []SageMakerImageName {
	return []SageMakerImageName{
		"sagemaker_distribution",
	}
}

type SageMakerResourceName string

// Enum values for SageMakerResourceName
const (
	SageMakerResourceNameTrainingJob     SageMakerResourceName = "training-job"
	SageMakerResourceNameHyperpodCluster SageMakerResourceName = "hyperpod-cluster"
)

// Values returns all known values for SageMakerResourceName. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SageMakerResourceName) Values() []SageMakerResourceName {
	return []SageMakerResourceName{
		"training-job",
		"hyperpod-cluster",
	}
}

type SagemakerServicecatalogStatus string

// Enum values for SagemakerServicecatalogStatus
const (
	SagemakerServicecatalogStatusEnabled  SagemakerServicecatalogStatus = "Enabled"
	SagemakerServicecatalogStatusDisabled SagemakerServicecatalogStatus = "Disabled"
)

// Values returns all known values for SagemakerServicecatalogStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SagemakerServicecatalogStatus) Values() []SagemakerServicecatalogStatus {
	return []SagemakerServicecatalogStatus{
		"Enabled",
		"Disabled",
	}
}

type SchedulerResourceStatus string

// Enum values for SchedulerResourceStatus
const (
	SchedulerResourceStatusCreating             SchedulerResourceStatus = "Creating"
	SchedulerResourceStatusCreateFailed         SchedulerResourceStatus = "CreateFailed"
	SchedulerResourceStatusCreateRollbackFailed SchedulerResourceStatus = "CreateRollbackFailed"
	SchedulerResourceStatusCreated              SchedulerResourceStatus = "Created"
	SchedulerResourceStatusUpdating             SchedulerResourceStatus = "Updating"
	SchedulerResourceStatusUpdateFailed         SchedulerResourceStatus = "UpdateFailed"
	SchedulerResourceStatusUpdateRollbackFailed SchedulerResourceStatus = "UpdateRollbackFailed"
	SchedulerResourceStatusUpdated              SchedulerResourceStatus = "Updated"
	SchedulerResourceStatusDeleting             SchedulerResourceStatus = "Deleting"
	SchedulerResourceStatusDeleteFailed         SchedulerResourceStatus = "DeleteFailed"
	SchedulerResourceStatusDeleteRollbackFailed SchedulerResourceStatus = "DeleteRollbackFailed"
	SchedulerResourceStatusDeleted              SchedulerResourceStatus = "Deleted"
)

// Values returns all known values for SchedulerResourceStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SchedulerResourceStatus) Values() []SchedulerResourceStatus {
	return []SchedulerResourceStatus{
		"Creating",
		"CreateFailed",
		"CreateRollbackFailed",
		"Created",
		"Updating",
		"UpdateFailed",
		"UpdateRollbackFailed",
		"Updated",
		"Deleting",
		"DeleteFailed",
		"DeleteRollbackFailed",
		"Deleted",
	}
}

type ScheduleStatus string

// Enum values for ScheduleStatus
const (
	ScheduleStatusPending   ScheduleStatus = "Pending"
	ScheduleStatusFailed    ScheduleStatus = "Failed"
	ScheduleStatusScheduled ScheduleStatus = "Scheduled"
	ScheduleStatusStopped   ScheduleStatus = "Stopped"
)

// Values returns all known values for ScheduleStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScheduleStatus) Values() []ScheduleStatus {
	return []ScheduleStatus{
		"Pending",
		"Failed",
		"Scheduled",
		"Stopped",
	}
}

type SearchSortOrder string

// Enum values for SearchSortOrder
const (
	SearchSortOrderAscending  SearchSortOrder = "Ascending"
	SearchSortOrderDescending SearchSortOrder = "Descending"
)

// Values returns all known values for SearchSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SearchSortOrder) Values() []SearchSortOrder {
	return []SearchSortOrder{
		"Ascending",
		"Descending",
	}
}

type SecondaryStatus string

// Enum values for SecondaryStatus
const (
	SecondaryStatusStarting                 SecondaryStatus = "Starting"
	SecondaryStatusLaunchingMlInstances     SecondaryStatus = "LaunchingMLInstances"
	SecondaryStatusPreparingTrainingStack   SecondaryStatus = "PreparingTrainingStack"
	SecondaryStatusDownloading              SecondaryStatus = "Downloading"
	SecondaryStatusDownloadingTrainingImage SecondaryStatus = "DownloadingTrainingImage"
	SecondaryStatusTraining                 SecondaryStatus = "Training"
	SecondaryStatusUploading                SecondaryStatus = "Uploading"
	SecondaryStatusStopping                 SecondaryStatus = "Stopping"
	SecondaryStatusStopped                  SecondaryStatus = "Stopped"
	SecondaryStatusMaxRuntimeExceeded       SecondaryStatus = "MaxRuntimeExceeded"
	SecondaryStatusCompleted                SecondaryStatus = "Completed"
	SecondaryStatusFailed                   SecondaryStatus = "Failed"
	SecondaryStatusInterrupted              SecondaryStatus = "Interrupted"
	SecondaryStatusMaxWaitTimeExceeded      SecondaryStatus = "MaxWaitTimeExceeded"
	SecondaryStatusUpdating                 SecondaryStatus = "Updating"
	SecondaryStatusRestarting               SecondaryStatus = "Restarting"
	SecondaryStatusPending                  SecondaryStatus = "Pending"
)

// Values returns all known values for SecondaryStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SecondaryStatus) Values() []SecondaryStatus {
	return []SecondaryStatus{
		"Starting",
		"LaunchingMLInstances",
		"PreparingTrainingStack",
		"Downloading",
		"DownloadingTrainingImage",
		"Training",
		"Uploading",
		"Stopping",
		"Stopped",
		"MaxRuntimeExceeded",
		"Completed",
		"Failed",
		"Interrupted",
		"MaxWaitTimeExceeded",
		"Updating",
		"Restarting",
		"Pending",
	}
}

type SharingType string

// Enum values for SharingType
const (
	SharingTypePrivate SharingType = "Private"
	SharingTypeShared  SharingType = "Shared"
)

// Values returns all known values for SharingType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SharingType) Values() []SharingType {
	return []SharingType{
		"Private",
		"Shared",
	}
}

type SkipModelValidation string

// Enum values for SkipModelValidation
const (
	SkipModelValidationAll  SkipModelValidation = "All"
	SkipModelValidationNone SkipModelValidation = "None"
)

// Values returns all known values for SkipModelValidation. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SkipModelValidation) Values() []SkipModelValidation {
	return []SkipModelValidation{
		"All",
		"None",
	}
}

type SortActionsBy string

// Enum values for SortActionsBy
const (
	SortActionsByName         SortActionsBy = "Name"
	SortActionsByCreationTime SortActionsBy = "CreationTime"
)

// Values returns all known values for SortActionsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortActionsBy) Values() []SortActionsBy {
	return []SortActionsBy{
		"Name",
		"CreationTime",
	}
}

type SortArtifactsBy string

// Enum values for SortArtifactsBy
const (
	SortArtifactsByCreationTime SortArtifactsBy = "CreationTime"
)

// Values returns all known values for SortArtifactsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortArtifactsBy) Values() []SortArtifactsBy {
	return []SortArtifactsBy{
		"CreationTime",
	}
}

type SortAssociationsBy string

// Enum values for SortAssociationsBy
const (
	SortAssociationsBySourceArn       SortAssociationsBy = "SourceArn"
	SortAssociationsByDestinationArn  SortAssociationsBy = "DestinationArn"
	SortAssociationsBySourceType      SortAssociationsBy = "SourceType"
	SortAssociationsByDestinationType SortAssociationsBy = "DestinationType"
	SortAssociationsByCreationTime    SortAssociationsBy = "CreationTime"
)

// Values returns all known values for SortAssociationsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortAssociationsBy) Values() []SortAssociationsBy {
	return []SortAssociationsBy{
		"SourceArn",
		"DestinationArn",
		"SourceType",
		"DestinationType",
		"CreationTime",
	}
}

type SortBy string

// Enum values for SortBy
const (
	SortByName         SortBy = "Name"
	SortByCreationTime SortBy = "CreationTime"
	SortByStatus       SortBy = "Status"
)

// Values returns all known values for SortBy. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortBy) Values() []SortBy {
	return []SortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type SortClusterSchedulerConfigBy string

// Enum values for SortClusterSchedulerConfigBy
const (
	SortClusterSchedulerConfigByName         SortClusterSchedulerConfigBy = "Name"
	SortClusterSchedulerConfigByCreationTime SortClusterSchedulerConfigBy = "CreationTime"
	SortClusterSchedulerConfigByStatus       SortClusterSchedulerConfigBy = "Status"
)

// Values returns all known values for SortClusterSchedulerConfigBy. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortClusterSchedulerConfigBy) Values() []SortClusterSchedulerConfigBy {
	return []SortClusterSchedulerConfigBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type SortContextsBy string

// Enum values for SortContextsBy
const (
	SortContextsByName         SortContextsBy = "Name"
	SortContextsByCreationTime SortContextsBy = "CreationTime"
)

// Values returns all known values for SortContextsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortContextsBy) Values() []SortContextsBy {
	return []SortContextsBy{
		"Name",
		"CreationTime",
	}
}

type SortExperimentsBy string

// Enum values for SortExperimentsBy
const (
	SortExperimentsByName         SortExperimentsBy = "Name"
	SortExperimentsByCreationTime SortExperimentsBy = "CreationTime"
)

// Values returns all known values for SortExperimentsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortExperimentsBy) Values() []SortExperimentsBy {
	return []SortExperimentsBy{
		"Name",
		"CreationTime",
	}
}

type SortInferenceExperimentsBy string

// Enum values for SortInferenceExperimentsBy
const (
	SortInferenceExperimentsByName         SortInferenceExperimentsBy = "Name"
	SortInferenceExperimentsByCreationTime SortInferenceExperimentsBy = "CreationTime"
	SortInferenceExperimentsByStatus       SortInferenceExperimentsBy = "Status"
)

// Values returns all known values for SortInferenceExperimentsBy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortInferenceExperimentsBy) Values() []SortInferenceExperimentsBy {
	return []SortInferenceExperimentsBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type SortLineageGroupsBy string

// Enum values for SortLineageGroupsBy
const (
	SortLineageGroupsByName         SortLineageGroupsBy = "Name"
	SortLineageGroupsByCreationTime SortLineageGroupsBy = "CreationTime"
)

// Values returns all known values for SortLineageGroupsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortLineageGroupsBy) Values() []SortLineageGroupsBy {
	return []SortLineageGroupsBy{
		"Name",
		"CreationTime",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "Ascending"
	SortOrderDescending SortOrder = "Descending"
)

// Values returns all known values for SortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"Ascending",
		"Descending",
	}
}

type SortPipelineExecutionsBy string

// Enum values for SortPipelineExecutionsBy
const (
	SortPipelineExecutionsByCreationTime         SortPipelineExecutionsBy = "CreationTime"
	SortPipelineExecutionsByPipelineExecutionArn SortPipelineExecutionsBy = "PipelineExecutionArn"
)

// Values returns all known values for SortPipelineExecutionsBy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortPipelineExecutionsBy) Values() []SortPipelineExecutionsBy {
	return []SortPipelineExecutionsBy{
		"CreationTime",
		"PipelineExecutionArn",
	}
}

type SortPipelinesBy string

// Enum values for SortPipelinesBy
const (
	SortPipelinesByName         SortPipelinesBy = "Name"
	SortPipelinesByCreationTime SortPipelinesBy = "CreationTime"
)

// Values returns all known values for SortPipelinesBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortPipelinesBy) Values() []SortPipelinesBy {
	return []SortPipelinesBy{
		"Name",
		"CreationTime",
	}
}

type SortQuotaBy string

// Enum values for SortQuotaBy
const (
	SortQuotaByName         SortQuotaBy = "Name"
	SortQuotaByCreationTime SortQuotaBy = "CreationTime"
	SortQuotaByStatus       SortQuotaBy = "Status"
	SortQuotaByClusterArn   SortQuotaBy = "ClusterArn"
)

// Values returns all known values for SortQuotaBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortQuotaBy) Values() []SortQuotaBy {
	return []SortQuotaBy{
		"Name",
		"CreationTime",
		"Status",
		"ClusterArn",
	}
}

type SortTrackingServerBy string

// Enum values for SortTrackingServerBy
const (
	SortTrackingServerByName         SortTrackingServerBy = "Name"
	SortTrackingServerByCreationTime SortTrackingServerBy = "CreationTime"
	SortTrackingServerByStatus       SortTrackingServerBy = "Status"
)

// Values returns all known values for SortTrackingServerBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortTrackingServerBy) Values() []SortTrackingServerBy {
	return []SortTrackingServerBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type SortTrialComponentsBy string

// Enum values for SortTrialComponentsBy
const (
	SortTrialComponentsByName         SortTrialComponentsBy = "Name"
	SortTrialComponentsByCreationTime SortTrialComponentsBy = "CreationTime"
)

// Values returns all known values for SortTrialComponentsBy. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortTrialComponentsBy) Values() []SortTrialComponentsBy {
	return []SortTrialComponentsBy{
		"Name",
		"CreationTime",
	}
}

type SortTrialsBy string

// Enum values for SortTrialsBy
const (
	SortTrialsByName         SortTrialsBy = "Name"
	SortTrialsByCreationTime SortTrialsBy = "CreationTime"
)

// Values returns all known values for SortTrialsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortTrialsBy) Values() []SortTrialsBy {
	return []SortTrialsBy{
		"Name",
		"CreationTime",
	}
}

type SpaceSortKey string

// Enum values for SpaceSortKey
const (
	SpaceSortKeyCreationTime     SpaceSortKey = "CreationTime"
	SpaceSortKeyLastModifiedTime SpaceSortKey = "LastModifiedTime"
)

// Values returns all known values for SpaceSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SpaceSortKey) Values() []SpaceSortKey {
	return []SpaceSortKey{
		"CreationTime",
		"LastModifiedTime",
	}
}

type SpaceStatus string

// Enum values for SpaceStatus
const (
	SpaceStatusDeleting     SpaceStatus = "Deleting"
	SpaceStatusFailed       SpaceStatus = "Failed"
	SpaceStatusInService    SpaceStatus = "InService"
	SpaceStatusPending      SpaceStatus = "Pending"
	SpaceStatusUpdating     SpaceStatus = "Updating"
	SpaceStatusUpdateFailed SpaceStatus = "Update_Failed"
	SpaceStatusDeleteFailed SpaceStatus = "Delete_Failed"
)

// Values returns all known values for SpaceStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SpaceStatus) Values() []SpaceStatus {
	return []SpaceStatus{
		"Deleting",
		"Failed",
		"InService",
		"Pending",
		"Updating",
		"Update_Failed",
		"Delete_Failed",
	}
}

type SplitType string

// Enum values for SplitType
const (
	SplitTypeNone     SplitType = "None"
	SplitTypeLine     SplitType = "Line"
	SplitTypeRecordio SplitType = "RecordIO"
	SplitTypeTfrecord SplitType = "TFRecord"
)

// Values returns all known values for SplitType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SplitType) Values() []SplitType {
	return []SplitType{
		"None",
		"Line",
		"RecordIO",
		"TFRecord",
	}
}

type StageStatus string

// Enum values for StageStatus
const (
	StageStatusCreating      StageStatus = "CREATING"
	StageStatusReadyToDeploy StageStatus = "READYTODEPLOY"
	StageStatusStarting      StageStatus = "STARTING"
	StageStatusInProgress    StageStatus = "INPROGRESS"
	StageStatusDeployed      StageStatus = "DEPLOYED"
	StageStatusFailed        StageStatus = "FAILED"
	StageStatusStopping      StageStatus = "STOPPING"
	StageStatusStopped       StageStatus = "STOPPED"
)

// Values returns all known values for StageStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StageStatus) Values() []StageStatus {
	return []StageStatus{
		"CREATING",
		"READYTODEPLOY",
		"STARTING",
		"INPROGRESS",
		"DEPLOYED",
		"FAILED",
		"STOPPING",
		"STOPPED",
	}
}

type Statistic string

// Enum values for Statistic
const (
	StatisticAverage     Statistic = "Average"
	StatisticMinimum     Statistic = "Minimum"
	StatisticMaximum     Statistic = "Maximum"
	StatisticSampleCount Statistic = "SampleCount"
	StatisticSum         Statistic = "Sum"
)

// Values returns all known values for Statistic. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Statistic) Values() []Statistic {
	return []Statistic{
		"Average",
		"Minimum",
		"Maximum",
		"SampleCount",
		"Sum",
	}
}

type StepStatus string

// Enum values for StepStatus
const (
	StepStatusStarting  StepStatus = "Starting"
	StepStatusExecuting StepStatus = "Executing"
	StepStatusStopping  StepStatus = "Stopping"
	StepStatusStopped   StepStatus = "Stopped"
	StepStatusFailed    StepStatus = "Failed"
	StepStatusSucceeded StepStatus = "Succeeded"
)

// Values returns all known values for StepStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StepStatus) Values() []StepStatus {
	return []StepStatus{
		"Starting",
		"Executing",
		"Stopping",
		"Stopped",
		"Failed",
		"Succeeded",
	}
}

type StorageType string

// Enum values for StorageType
const (
	StorageTypeStandard StorageType = "Standard"
	StorageTypeInMemory StorageType = "InMemory"
)

// Values returns all known values for StorageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StorageType) Values() []StorageType {
	return []StorageType{
		"Standard",
		"InMemory",
	}
}

type StudioLifecycleConfigAppType string

// Enum values for StudioLifecycleConfigAppType
const (
	StudioLifecycleConfigAppTypeJupyterServer StudioLifecycleConfigAppType = "JupyterServer"
	StudioLifecycleConfigAppTypeKernelGateway StudioLifecycleConfigAppType = "KernelGateway"
	StudioLifecycleConfigAppTypeCodeEditor    StudioLifecycleConfigAppType = "CodeEditor"
	StudioLifecycleConfigAppTypeJupyterLab    StudioLifecycleConfigAppType = "JupyterLab"
)

// Values returns all known values for StudioLifecycleConfigAppType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StudioLifecycleConfigAppType) Values() []StudioLifecycleConfigAppType {
	return []StudioLifecycleConfigAppType{
		"JupyterServer",
		"KernelGateway",
		"CodeEditor",
		"JupyterLab",
	}
}

type StudioLifecycleConfigSortKey string

// Enum values for StudioLifecycleConfigSortKey
const (
	StudioLifecycleConfigSortKeyCreationTime     StudioLifecycleConfigSortKey = "CreationTime"
	StudioLifecycleConfigSortKeyLastModifiedTime StudioLifecycleConfigSortKey = "LastModifiedTime"
	StudioLifecycleConfigSortKeyName             StudioLifecycleConfigSortKey = "Name"
)

// Values returns all known values for StudioLifecycleConfigSortKey. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StudioLifecycleConfigSortKey) Values() []StudioLifecycleConfigSortKey {
	return []StudioLifecycleConfigSortKey{
		"CreationTime",
		"LastModifiedTime",
		"Name",
	}
}

type StudioWebPortal string

// Enum values for StudioWebPortal
const (
	StudioWebPortalEnabled  StudioWebPortal = "ENABLED"
	StudioWebPortalDisabled StudioWebPortal = "DISABLED"
)

// Values returns all known values for StudioWebPortal. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StudioWebPortal) Values() []StudioWebPortal {
	return []StudioWebPortal{
		"ENABLED",
		"DISABLED",
	}
}

type TableFormat string

// Enum values for TableFormat
const (
	TableFormatDefault TableFormat = "Default"
	TableFormatGlue    TableFormat = "Glue"
	TableFormatIceberg TableFormat = "Iceberg"
)

// Values returns all known values for TableFormat. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TableFormat) Values() []TableFormat {
	return []TableFormat{
		"Default",
		"Glue",
		"Iceberg",
	}
}

type TagPropagation string

// Enum values for TagPropagation
const (
	TagPropagationEnabled  TagPropagation = "ENABLED"
	TagPropagationDisabled TagPropagation = "DISABLED"
)

// Values returns all known values for TagPropagation. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TagPropagation) Values() []TagPropagation {
	return []TagPropagation{
		"ENABLED",
		"DISABLED",
	}
}

type TargetDevice string

// Enum values for TargetDevice
const (
	TargetDeviceLambda        TargetDevice = "lambda"
	TargetDeviceMlM4          TargetDevice = "ml_m4"
	TargetDeviceMlM5          TargetDevice = "ml_m5"
	TargetDeviceMlM6g         TargetDevice = "ml_m6g"
	TargetDeviceMlC4          TargetDevice = "ml_c4"
	TargetDeviceMlC5          TargetDevice = "ml_c5"
	TargetDeviceMlC6g         TargetDevice = "ml_c6g"
	TargetDeviceMlP2          TargetDevice = "ml_p2"
	TargetDeviceMlP3          TargetDevice = "ml_p3"
	TargetDeviceMlG4dn        TargetDevice = "ml_g4dn"
	TargetDeviceMlInf1        TargetDevice = "ml_inf1"
	TargetDeviceMlInf2        TargetDevice = "ml_inf2"
	TargetDeviceMlTrn1        TargetDevice = "ml_trn1"
	TargetDeviceMlEia2        TargetDevice = "ml_eia2"
	TargetDeviceJetsonTx1     TargetDevice = "jetson_tx1"
	TargetDeviceJetsonTx2     TargetDevice = "jetson_tx2"
	TargetDeviceJetsonNano    TargetDevice = "jetson_nano"
	TargetDeviceJetsonXavier  TargetDevice = "jetson_xavier"
	TargetDeviceRasp3b        TargetDevice = "rasp3b"
	TargetDeviceRasp4b        TargetDevice = "rasp4b"
	TargetDeviceImx8qm        TargetDevice = "imx8qm"
	TargetDeviceDeeplens      TargetDevice = "deeplens"
	TargetDeviceRk3399        TargetDevice = "rk3399"
	TargetDeviceRk3288        TargetDevice = "rk3288"
	TargetDeviceAisage        TargetDevice = "aisage"
	TargetDeviceSbeC          TargetDevice = "sbe_c"
	TargetDeviceQcs605        TargetDevice = "qcs605"
	TargetDeviceQcs603        TargetDevice = "qcs603"
	TargetDeviceSitaraAm57x   TargetDevice = "sitara_am57x"
	TargetDeviceAmbaCv2       TargetDevice = "amba_cv2"
	TargetDeviceAmbaCv22      TargetDevice = "amba_cv22"
	TargetDeviceAmbaCv25      TargetDevice = "amba_cv25"
	TargetDeviceX86Win32      TargetDevice = "x86_win32"
	TargetDeviceX86Win64      TargetDevice = "x86_win64"
	TargetDeviceCoreml        TargetDevice = "coreml"
	TargetDeviceJacintoTda4vm TargetDevice = "jacinto_tda4vm"
	TargetDeviceImx8mplus     TargetDevice = "imx8mplus"
)

// Values returns all known values for TargetDevice. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetDevice) Values() []TargetDevice {
	return []TargetDevice{
		"lambda",
		"ml_m4",
		"ml_m5",
		"ml_m6g",
		"ml_c4",
		"ml_c5",
		"ml_c6g",
		"ml_p2",
		"ml_p3",
		"ml_g4dn",
		"ml_inf1",
		"ml_inf2",
		"ml_trn1",
		"ml_eia2",
		"jetson_tx1",
		"jetson_tx2",
		"jetson_nano",
		"jetson_xavier",
		"rasp3b",
		"rasp4b",
		"imx8qm",
		"deeplens",
		"rk3399",
		"rk3288",
		"aisage",
		"sbe_c",
		"qcs605",
		"qcs603",
		"sitara_am57x",
		"amba_cv2",
		"amba_cv22",
		"amba_cv25",
		"x86_win32",
		"x86_win64",
		"coreml",
		"jacinto_tda4vm",
		"imx8mplus",
	}
}

type TargetPlatformAccelerator string

// Enum values for TargetPlatformAccelerator
const (
	TargetPlatformAcceleratorIntelGraphics TargetPlatformAccelerator = "INTEL_GRAPHICS"
	TargetPlatformAcceleratorMali          TargetPlatformAccelerator = "MALI"
	TargetPlatformAcceleratorNvidia        TargetPlatformAccelerator = "NVIDIA"
	TargetPlatformAcceleratorNna           TargetPlatformAccelerator = "NNA"
)

// Values returns all known values for TargetPlatformAccelerator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformAccelerator) Values() []TargetPlatformAccelerator {
	return []TargetPlatformAccelerator{
		"INTEL_GRAPHICS",
		"MALI",
		"NVIDIA",
		"NNA",
	}
}

type TargetPlatformArch string

// Enum values for TargetPlatformArch
const (
	TargetPlatformArchX8664     TargetPlatformArch = "X86_64"
	TargetPlatformArchX86       TargetPlatformArch = "X86"
	TargetPlatformArchArm64     TargetPlatformArch = "ARM64"
	TargetPlatformArchArmEabi   TargetPlatformArch = "ARM_EABI"
	TargetPlatformArchArmEabihf TargetPlatformArch = "ARM_EABIHF"
)

// Values returns all known values for TargetPlatformArch. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformArch) Values() []TargetPlatformArch {
	return []TargetPlatformArch{
		"X86_64",
		"X86",
		"ARM64",
		"ARM_EABI",
		"ARM_EABIHF",
	}
}

type TargetPlatformOs string

// Enum values for TargetPlatformOs
const (
	TargetPlatformOsAndroid TargetPlatformOs = "ANDROID"
	TargetPlatformOsLinux   TargetPlatformOs = "LINUX"
)

// Values returns all known values for TargetPlatformOs. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformOs) Values() []TargetPlatformOs {
	return []TargetPlatformOs{
		"ANDROID",
		"LINUX",
	}
}

type ThroughputMode string

// Enum values for ThroughputMode
const (
	ThroughputModeOnDemand    ThroughputMode = "OnDemand"
	ThroughputModeProvisioned ThroughputMode = "Provisioned"
)

// Values returns all known values for ThroughputMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThroughputMode) Values() []ThroughputMode {
	return []ThroughputMode{
		"OnDemand",
		"Provisioned",
	}
}

type TrackingServerMaintenanceStatus string

// Enum values for TrackingServerMaintenanceStatus
const (
	TrackingServerMaintenanceStatusMaintenanceInProgress TrackingServerMaintenanceStatus = "MaintenanceInProgress"
	TrackingServerMaintenanceStatusMaintenanceComplete   TrackingServerMaintenanceStatus = "MaintenanceComplete"
	TrackingServerMaintenanceStatusMaintenanceFailed     TrackingServerMaintenanceStatus = "MaintenanceFailed"
)

// Values returns all known values for TrackingServerMaintenanceStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrackingServerMaintenanceStatus) Values() []TrackingServerMaintenanceStatus {
	return []TrackingServerMaintenanceStatus{
		"MaintenanceInProgress",
		"MaintenanceComplete",
		"MaintenanceFailed",
	}
}

type TrackingServerSize string

// Enum values for TrackingServerSize
const (
	TrackingServerSizeS TrackingServerSize = "Small"
	TrackingServerSizeM TrackingServerSize = "Medium"
	TrackingServerSizeL TrackingServerSize = "Large"
)

// Values returns all known values for TrackingServerSize. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrackingServerSize) Values() []TrackingServerSize {
	return []TrackingServerSize{
		"Small",
		"Medium",
		"Large",
	}
}

type TrackingServerStatus string

// Enum values for TrackingServerStatus
const (
	TrackingServerStatusCreating              TrackingServerStatus = "Creating"
	TrackingServerStatusCreated               TrackingServerStatus = "Created"
	TrackingServerStatusCreateFailed          TrackingServerStatus = "CreateFailed"
	TrackingServerStatusUpdating              TrackingServerStatus = "Updating"
	TrackingServerStatusUpdated               TrackingServerStatus = "Updated"
	TrackingServerStatusUpdateFailed          TrackingServerStatus = "UpdateFailed"
	TrackingServerStatusDeleting              TrackingServerStatus = "Deleting"
	TrackingServerStatusDeleteFailed          TrackingServerStatus = "DeleteFailed"
	TrackingServerStatusStopping              TrackingServerStatus = "Stopping"
	TrackingServerStatusStopped               TrackingServerStatus = "Stopped"
	TrackingServerStatusStopFailed            TrackingServerStatus = "StopFailed"
	TrackingServerStatusStarting              TrackingServerStatus = "Starting"
	TrackingServerStatusStarted               TrackingServerStatus = "Started"
	TrackingServerStatusStartFailed           TrackingServerStatus = "StartFailed"
	TrackingServerStatusMaintenanceInProgress TrackingServerStatus = "MaintenanceInProgress"
	TrackingServerStatusMaintenanceComplete   TrackingServerStatus = "MaintenanceComplete"
	TrackingServerStatusMaintenanceFailed     TrackingServerStatus = "MaintenanceFailed"
)

// Values returns all known values for TrackingServerStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrackingServerStatus) Values() []TrackingServerStatus {
	return []TrackingServerStatus{
		"Creating",
		"Created",
		"CreateFailed",
		"Updating",
		"Updated",
		"UpdateFailed",
		"Deleting",
		"DeleteFailed",
		"Stopping",
		"Stopped",
		"StopFailed",
		"Starting",
		"Started",
		"StartFailed",
		"MaintenanceInProgress",
		"MaintenanceComplete",
		"MaintenanceFailed",
	}
}

type TrafficRoutingConfigType string

// Enum values for TrafficRoutingConfigType
const (
	TrafficRoutingConfigTypeAllAtOnce TrafficRoutingConfigType = "ALL_AT_ONCE"
	TrafficRoutingConfigTypeCanary    TrafficRoutingConfigType = "CANARY"
	TrafficRoutingConfigTypeLinear    TrafficRoutingConfigType = "LINEAR"
)

// Values returns all known values for TrafficRoutingConfigType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrafficRoutingConfigType) Values() []TrafficRoutingConfigType {
	return []TrafficRoutingConfigType{
		"ALL_AT_ONCE",
		"CANARY",
		"LINEAR",
	}
}

type TrafficType string

// Enum values for TrafficType
const (
	TrafficTypePhases TrafficType = "PHASES"
	TrafficTypeStairs TrafficType = "STAIRS"
)

// Values returns all known values for TrafficType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrafficType) Values() []TrafficType {
	return []TrafficType{
		"PHASES",
		"STAIRS",
	}
}

type TrainingInputMode string

// Enum values for TrainingInputMode
const (
	TrainingInputModePipe     TrainingInputMode = "Pipe"
	TrainingInputModeFile     TrainingInputMode = "File"
	TrainingInputModeFastfile TrainingInputMode = "FastFile"
)

// Values returns all known values for TrainingInputMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingInputMode) Values() []TrainingInputMode {
	return []TrainingInputMode{
		"Pipe",
		"File",
		"FastFile",
	}
}

type TrainingInstanceType string

// Enum values for TrainingInstanceType
const (
	TrainingInstanceTypeMlM4Xlarge       TrainingInstanceType = "ml.m4.xlarge"
	TrainingInstanceTypeMlM42xlarge      TrainingInstanceType = "ml.m4.2xlarge"
	TrainingInstanceTypeMlM44xlarge      TrainingInstanceType = "ml.m4.4xlarge"
	TrainingInstanceTypeMlM410xlarge     TrainingInstanceType = "ml.m4.10xlarge"
	TrainingInstanceTypeMlM416xlarge     TrainingInstanceType = "ml.m4.16xlarge"
	TrainingInstanceTypeMlG4dnXlarge     TrainingInstanceType = "ml.g4dn.xlarge"
	TrainingInstanceTypeMlG4dn2xlarge    TrainingInstanceType = "ml.g4dn.2xlarge"
	TrainingInstanceTypeMlG4dn4xlarge    TrainingInstanceType = "ml.g4dn.4xlarge"
	TrainingInstanceTypeMlG4dn8xlarge    TrainingInstanceType = "ml.g4dn.8xlarge"
	TrainingInstanceTypeMlG4dn12xlarge   TrainingInstanceType = "ml.g4dn.12xlarge"
	TrainingInstanceTypeMlG4dn16xlarge   TrainingInstanceType = "ml.g4dn.16xlarge"
	TrainingInstanceTypeMlM5Large        TrainingInstanceType = "ml.m5.large"
	TrainingInstanceTypeMlM5Xlarge       TrainingInstanceType = "ml.m5.xlarge"
	TrainingInstanceTypeMlM52xlarge      TrainingInstanceType = "ml.m5.2xlarge"
	TrainingInstanceTypeMlM54xlarge      TrainingInstanceType = "ml.m5.4xlarge"
	TrainingInstanceTypeMlM512xlarge     TrainingInstanceType = "ml.m5.12xlarge"
	TrainingInstanceTypeMlM524xlarge     TrainingInstanceType = "ml.m5.24xlarge"
	TrainingInstanceTypeMlC4Xlarge       TrainingInstanceType = "ml.c4.xlarge"
	TrainingInstanceTypeMlC42xlarge      TrainingInstanceType = "ml.c4.2xlarge"
	TrainingInstanceTypeMlC44xlarge      TrainingInstanceType = "ml.c4.4xlarge"
	TrainingInstanceTypeMlC48xlarge      TrainingInstanceType = "ml.c4.8xlarge"
	TrainingInstanceTypeMlP2Xlarge       TrainingInstanceType = "ml.p2.xlarge"
	TrainingInstanceTypeMlP28xlarge      TrainingInstanceType = "ml.p2.8xlarge"
	TrainingInstanceTypeMlP216xlarge     TrainingInstanceType = "ml.p2.16xlarge"
	TrainingInstanceTypeMlP32xlarge      TrainingInstanceType = "ml.p3.2xlarge"
	TrainingInstanceTypeMlP38xlarge      TrainingInstanceType = "ml.p3.8xlarge"
	TrainingInstanceTypeMlP316xlarge     TrainingInstanceType = "ml.p3.16xlarge"
	TrainingInstanceTypeMlP3dn24xlarge   TrainingInstanceType = "ml.p3dn.24xlarge"
	TrainingInstanceTypeMlP4d24xlarge    TrainingInstanceType = "ml.p4d.24xlarge"
	TrainingInstanceTypeMlP4de24xlarge   TrainingInstanceType = "ml.p4de.24xlarge"
	TrainingInstanceTypeMlP548xlarge     TrainingInstanceType = "ml.p5.48xlarge"
	TrainingInstanceTypeMlP5e48xlarge    TrainingInstanceType = "ml.p5e.48xlarge"
	TrainingInstanceTypeMlP5en48xlarge   TrainingInstanceType = "ml.p5en.48xlarge"
	TrainingInstanceTypeMlC5Xlarge       TrainingInstanceType = "ml.c5.xlarge"
	TrainingInstanceTypeMlC52xlarge      TrainingInstanceType = "ml.c5.2xlarge"
	TrainingInstanceTypeMlC54xlarge      TrainingInstanceType = "ml.c5.4xlarge"
	TrainingInstanceTypeMlC59xlarge      TrainingInstanceType = "ml.c5.9xlarge"
	TrainingInstanceTypeMlC518xlarge     TrainingInstanceType = "ml.c5.18xlarge"
	TrainingInstanceTypeMlC5nXlarge      TrainingInstanceType = "ml.c5n.xlarge"
	TrainingInstanceTypeMlC5n2xlarge     TrainingInstanceType = "ml.c5n.2xlarge"
	TrainingInstanceTypeMlC5n4xlarge     TrainingInstanceType = "ml.c5n.4xlarge"
	TrainingInstanceTypeMlC5n9xlarge     TrainingInstanceType = "ml.c5n.9xlarge"
	TrainingInstanceTypeMlC5n18xlarge    TrainingInstanceType = "ml.c5n.18xlarge"
	TrainingInstanceTypeMlG5Xlarge       TrainingInstanceType = "ml.g5.xlarge"
	TrainingInstanceTypeMlG52xlarge      TrainingInstanceType = "ml.g5.2xlarge"
	TrainingInstanceTypeMlG54xlarge      TrainingInstanceType = "ml.g5.4xlarge"
	TrainingInstanceTypeMlG58xlarge      TrainingInstanceType = "ml.g5.8xlarge"
	TrainingInstanceTypeMlG516xlarge     TrainingInstanceType = "ml.g5.16xlarge"
	TrainingInstanceTypeMlG512xlarge     TrainingInstanceType = "ml.g5.12xlarge"
	TrainingInstanceTypeMlG524xlarge     TrainingInstanceType = "ml.g5.24xlarge"
	TrainingInstanceTypeMlG548xlarge     TrainingInstanceType = "ml.g5.48xlarge"
	TrainingInstanceTypeMlG6Xlarge       TrainingInstanceType = "ml.g6.xlarge"
	TrainingInstanceTypeMlG62xlarge      TrainingInstanceType = "ml.g6.2xlarge"
	TrainingInstanceTypeMlG64xlarge      TrainingInstanceType = "ml.g6.4xlarge"
	TrainingInstanceTypeMlG68xlarge      TrainingInstanceType = "ml.g6.8xlarge"
	TrainingInstanceTypeMlG616xlarge     TrainingInstanceType = "ml.g6.16xlarge"
	TrainingInstanceTypeMlG612xlarge     TrainingInstanceType = "ml.g6.12xlarge"
	TrainingInstanceTypeMlG624xlarge     TrainingInstanceType = "ml.g6.24xlarge"
	TrainingInstanceTypeMlG648xlarge     TrainingInstanceType = "ml.g6.48xlarge"
	TrainingInstanceTypeMlG6eXlarge      TrainingInstanceType = "ml.g6e.xlarge"
	TrainingInstanceTypeMlG6e2xlarge     TrainingInstanceType = "ml.g6e.2xlarge"
	TrainingInstanceTypeMlG6e4xlarge     TrainingInstanceType = "ml.g6e.4xlarge"
	TrainingInstanceTypeMlG6e8xlarge     TrainingInstanceType = "ml.g6e.8xlarge"
	TrainingInstanceTypeMlG6e16xlarge    TrainingInstanceType = "ml.g6e.16xlarge"
	TrainingInstanceTypeMlG6e12xlarge    TrainingInstanceType = "ml.g6e.12xlarge"
	TrainingInstanceTypeMlG6e24xlarge    TrainingInstanceType = "ml.g6e.24xlarge"
	TrainingInstanceTypeMlG6e48xlarge    TrainingInstanceType = "ml.g6e.48xlarge"
	TrainingInstanceTypeMlTrn12xlarge    TrainingInstanceType = "ml.trn1.2xlarge"
	TrainingInstanceTypeMlTrn132xlarge   TrainingInstanceType = "ml.trn1.32xlarge"
	TrainingInstanceTypeMlTrn1n32xlarge  TrainingInstanceType = "ml.trn1n.32xlarge"
	TrainingInstanceTypeMlTrn248xlarge   TrainingInstanceType = "ml.trn2.48xlarge"
	TrainingInstanceTypeMlM6iLarge       TrainingInstanceType = "ml.m6i.large"
	TrainingInstanceTypeMlM6iXlarge      TrainingInstanceType = "ml.m6i.xlarge"
	TrainingInstanceTypeMlM6i2xlarge     TrainingInstanceType = "ml.m6i.2xlarge"
	TrainingInstanceTypeMlM6i4xlarge     TrainingInstanceType = "ml.m6i.4xlarge"
	TrainingInstanceTypeMlM6i8xlarge     TrainingInstanceType = "ml.m6i.8xlarge"
	TrainingInstanceTypeMlM6i12xlarge    TrainingInstanceType = "ml.m6i.12xlarge"
	TrainingInstanceTypeMlM6i16xlarge    TrainingInstanceType = "ml.m6i.16xlarge"
	TrainingInstanceTypeMlM6i24xlarge    TrainingInstanceType = "ml.m6i.24xlarge"
	TrainingInstanceTypeMlM6i32xlarge    TrainingInstanceType = "ml.m6i.32xlarge"
	TrainingInstanceTypeMlC6iXlarge      TrainingInstanceType = "ml.c6i.xlarge"
	TrainingInstanceTypeMlC6i2xlarge     TrainingInstanceType = "ml.c6i.2xlarge"
	TrainingInstanceTypeMlC6i8xlarge     TrainingInstanceType = "ml.c6i.8xlarge"
	TrainingInstanceTypeMlC6i4xlarge     TrainingInstanceType = "ml.c6i.4xlarge"
	TrainingInstanceTypeMlC6i12xlarge    TrainingInstanceType = "ml.c6i.12xlarge"
	TrainingInstanceTypeMlC6i16xlarge    TrainingInstanceType = "ml.c6i.16xlarge"
	TrainingInstanceTypeMlC6i24xlarge    TrainingInstanceType = "ml.c6i.24xlarge"
	TrainingInstanceTypeMlC6i32xlarge    TrainingInstanceType = "ml.c6i.32xlarge"
	TrainingInstanceTypeMlR5dLarge       TrainingInstanceType = "ml.r5d.large"
	TrainingInstanceTypeMlR5dXlarge      TrainingInstanceType = "ml.r5d.xlarge"
	TrainingInstanceTypeMlR5d2xlarge     TrainingInstanceType = "ml.r5d.2xlarge"
	TrainingInstanceTypeMlR5d4xlarge     TrainingInstanceType = "ml.r5d.4xlarge"
	TrainingInstanceTypeMlR5d8xlarge     TrainingInstanceType = "ml.r5d.8xlarge"
	TrainingInstanceTypeMlR5d12xlarge    TrainingInstanceType = "ml.r5d.12xlarge"
	TrainingInstanceTypeMlR5d16xlarge    TrainingInstanceType = "ml.r5d.16xlarge"
	TrainingInstanceTypeMlR5d24xlarge    TrainingInstanceType = "ml.r5d.24xlarge"
	TrainingInstanceTypeMlT3Medium       TrainingInstanceType = "ml.t3.medium"
	TrainingInstanceTypeMlT3Large        TrainingInstanceType = "ml.t3.large"
	TrainingInstanceTypeMlT3Xlarge       TrainingInstanceType = "ml.t3.xlarge"
	TrainingInstanceTypeMlT32xlarge      TrainingInstanceType = "ml.t3.2xlarge"
	TrainingInstanceTypeMlR5Large        TrainingInstanceType = "ml.r5.large"
	TrainingInstanceTypeMlR5Xlarge       TrainingInstanceType = "ml.r5.xlarge"
	TrainingInstanceTypeMlR52xlarge      TrainingInstanceType = "ml.r5.2xlarge"
	TrainingInstanceTypeMlR54xlarge      TrainingInstanceType = "ml.r5.4xlarge"
	TrainingInstanceTypeMlR58xlarge      TrainingInstanceType = "ml.r5.8xlarge"
	TrainingInstanceTypeMlR512xlarge     TrainingInstanceType = "ml.r5.12xlarge"
	TrainingInstanceTypeMlR516xlarge     TrainingInstanceType = "ml.r5.16xlarge"
	TrainingInstanceTypeMlR524xlarge     TrainingInstanceType = "ml.r5.24xlarge"
	TrainingInstanceTypeMlP6B20048xlarge TrainingInstanceType = "ml.p6-b200.48xlarge"
	TrainingInstanceTypeMlM7iLarge       TrainingInstanceType = "ml.m7i.large"
	TrainingInstanceTypeMlM7iXlarge      TrainingInstanceType = "ml.m7i.xlarge"
	TrainingInstanceTypeMlM7i2xlarge     TrainingInstanceType = "ml.m7i.2xlarge"
	TrainingInstanceTypeMlM7i4xlarge     TrainingInstanceType = "ml.m7i.4xlarge"
	TrainingInstanceTypeMlM7i8xlarge     TrainingInstanceType = "ml.m7i.8xlarge"
	TrainingInstanceTypeMlM7i12xlarge    TrainingInstanceType = "ml.m7i.12xlarge"
	TrainingInstanceTypeMlM7i16xlarge    TrainingInstanceType = "ml.m7i.16xlarge"
	TrainingInstanceTypeMlM7i24xlarge    TrainingInstanceType = "ml.m7i.24xlarge"
	TrainingInstanceTypeMlM7i48xlarge    TrainingInstanceType = "ml.m7i.48xlarge"
	TrainingInstanceTypeMlC7iLarge       TrainingInstanceType = "ml.c7i.large"
	TrainingInstanceTypeMlC7iXlarge      TrainingInstanceType = "ml.c7i.xlarge"
	TrainingInstanceTypeMlC7i2xlarge     TrainingInstanceType = "ml.c7i.2xlarge"
	TrainingInstanceTypeMlC7i4xlarge     TrainingInstanceType = "ml.c7i.4xlarge"
	TrainingInstanceTypeMlC7i8xlarge     TrainingInstanceType = "ml.c7i.8xlarge"
	TrainingInstanceTypeMlC7i12xlarge    TrainingInstanceType = "ml.c7i.12xlarge"
	TrainingInstanceTypeMlC7i16xlarge    TrainingInstanceType = "ml.c7i.16xlarge"
	TrainingInstanceTypeMlC7i24xlarge    TrainingInstanceType = "ml.c7i.24xlarge"
	TrainingInstanceTypeMlC7i48xlarge    TrainingInstanceType = "ml.c7i.48xlarge"
	TrainingInstanceTypeMlR7iLarge       TrainingInstanceType = "ml.r7i.large"
	TrainingInstanceTypeMlR7iXlarge      TrainingInstanceType = "ml.r7i.xlarge"
	TrainingInstanceTypeMlR7i2xlarge     TrainingInstanceType = "ml.r7i.2xlarge"
	TrainingInstanceTypeMlR7i4xlarge     TrainingInstanceType = "ml.r7i.4xlarge"
	TrainingInstanceTypeMlR7i8xlarge     TrainingInstanceType = "ml.r7i.8xlarge"
	TrainingInstanceTypeMlR7i12xlarge    TrainingInstanceType = "ml.r7i.12xlarge"
	TrainingInstanceTypeMlR7i16xlarge    TrainingInstanceType = "ml.r7i.16xlarge"
	TrainingInstanceTypeMlR7i24xlarge    TrainingInstanceType = "ml.r7i.24xlarge"
	TrainingInstanceTypeMlR7i48xlarge    TrainingInstanceType = "ml.r7i.48xlarge"
)

// Values returns all known values for TrainingInstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingInstanceType) Values() []TrainingInstanceType {
	return []TrainingInstanceType{
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.p3dn.24xlarge",
		"ml.p4d.24xlarge",
		"ml.p4de.24xlarge",
		"ml.p5.48xlarge",
		"ml.p5e.48xlarge",
		"ml.p5en.48xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.c5n.xlarge",
		"ml.c5n.2xlarge",
		"ml.c5n.4xlarge",
		"ml.c5n.9xlarge",
		"ml.c5n.18xlarge",
		"ml.g5.xlarge",
		"ml.g5.2xlarge",
		"ml.g5.4xlarge",
		"ml.g5.8xlarge",
		"ml.g5.16xlarge",
		"ml.g5.12xlarge",
		"ml.g5.24xlarge",
		"ml.g5.48xlarge",
		"ml.g6.xlarge",
		"ml.g6.2xlarge",
		"ml.g6.4xlarge",
		"ml.g6.8xlarge",
		"ml.g6.16xlarge",
		"ml.g6.12xlarge",
		"ml.g6.24xlarge",
		"ml.g6.48xlarge",
		"ml.g6e.xlarge",
		"ml.g6e.2xlarge",
		"ml.g6e.4xlarge",
		"ml.g6e.8xlarge",
		"ml.g6e.16xlarge",
		"ml.g6e.12xlarge",
		"ml.g6e.24xlarge",
		"ml.g6e.48xlarge",
		"ml.trn1.2xlarge",
		"ml.trn1.32xlarge",
		"ml.trn1n.32xlarge",
		"ml.trn2.48xlarge",
		"ml.m6i.large",
		"ml.m6i.xlarge",
		"ml.m6i.2xlarge",
		"ml.m6i.4xlarge",
		"ml.m6i.8xlarge",
		"ml.m6i.12xlarge",
		"ml.m6i.16xlarge",
		"ml.m6i.24xlarge",
		"ml.m6i.32xlarge",
		"ml.c6i.xlarge",
		"ml.c6i.2xlarge",
		"ml.c6i.8xlarge",
		"ml.c6i.4xlarge",
		"ml.c6i.12xlarge",
		"ml.c6i.16xlarge",
		"ml.c6i.24xlarge",
		"ml.c6i.32xlarge",
		"ml.r5d.large",
		"ml.r5d.xlarge",
		"ml.r5d.2xlarge",
		"ml.r5d.4xlarge",
		"ml.r5d.8xlarge",
		"ml.r5d.12xlarge",
		"ml.r5d.16xlarge",
		"ml.r5d.24xlarge",
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.8xlarge",
		"ml.r5.12xlarge",
		"ml.r5.16xlarge",
		"ml.r5.24xlarge",
		"ml.p6-b200.48xlarge",
		"ml.m7i.large",
		"ml.m7i.xlarge",
		"ml.m7i.2xlarge",
		"ml.m7i.4xlarge",
		"ml.m7i.8xlarge",
		"ml.m7i.12xlarge",
		"ml.m7i.16xlarge",
		"ml.m7i.24xlarge",
		"ml.m7i.48xlarge",
		"ml.c7i.large",
		"ml.c7i.xlarge",
		"ml.c7i.2xlarge",
		"ml.c7i.4xlarge",
		"ml.c7i.8xlarge",
		"ml.c7i.12xlarge",
		"ml.c7i.16xlarge",
		"ml.c7i.24xlarge",
		"ml.c7i.48xlarge",
		"ml.r7i.large",
		"ml.r7i.xlarge",
		"ml.r7i.2xlarge",
		"ml.r7i.4xlarge",
		"ml.r7i.8xlarge",
		"ml.r7i.12xlarge",
		"ml.r7i.16xlarge",
		"ml.r7i.24xlarge",
		"ml.r7i.48xlarge",
	}
}

type TrainingJobEarlyStoppingType string

// Enum values for TrainingJobEarlyStoppingType
const (
	TrainingJobEarlyStoppingTypeOff  TrainingJobEarlyStoppingType = "Off"
	TrainingJobEarlyStoppingTypeAuto TrainingJobEarlyStoppingType = "Auto"
)

// Values returns all known values for TrainingJobEarlyStoppingType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingJobEarlyStoppingType) Values() []TrainingJobEarlyStoppingType {
	return []TrainingJobEarlyStoppingType{
		"Off",
		"Auto",
	}
}

type TrainingJobSortByOptions string

// Enum values for TrainingJobSortByOptions
const (
	TrainingJobSortByOptionsName                      TrainingJobSortByOptions = "Name"
	TrainingJobSortByOptionsCreationTime              TrainingJobSortByOptions = "CreationTime"
	TrainingJobSortByOptionsStatus                    TrainingJobSortByOptions = "Status"
	TrainingJobSortByOptionsFinalObjectiveMetricValue TrainingJobSortByOptions = "FinalObjectiveMetricValue"
)

// Values returns all known values for TrainingJobSortByOptions. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingJobSortByOptions) Values() []TrainingJobSortByOptions {
	return []TrainingJobSortByOptions{
		"Name",
		"CreationTime",
		"Status",
		"FinalObjectiveMetricValue",
	}
}

type TrainingJobStatus string

// Enum values for TrainingJobStatus
const (
	TrainingJobStatusInProgress TrainingJobStatus = "InProgress"
	TrainingJobStatusCompleted  TrainingJobStatus = "Completed"
	TrainingJobStatusFailed     TrainingJobStatus = "Failed"
	TrainingJobStatusStopping   TrainingJobStatus = "Stopping"
	TrainingJobStatusStopped    TrainingJobStatus = "Stopped"
)

// Values returns all known values for TrainingJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingJobStatus) Values() []TrainingJobStatus {
	return []TrainingJobStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type TrainingPlanFilterName string

// Enum values for TrainingPlanFilterName
const (
	TrainingPlanFilterNameStatus TrainingPlanFilterName = "Status"
)

// Values returns all known values for TrainingPlanFilterName. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingPlanFilterName) Values() []TrainingPlanFilterName {
	return []TrainingPlanFilterName{
		"Status",
	}
}

type TrainingPlanSortBy string

// Enum values for TrainingPlanSortBy
const (
	TrainingPlanSortByName      TrainingPlanSortBy = "TrainingPlanName"
	TrainingPlanSortByStartTime TrainingPlanSortBy = "StartTime"
	TrainingPlanSortByStatus    TrainingPlanSortBy = "Status"
)

// Values returns all known values for TrainingPlanSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingPlanSortBy) Values() []TrainingPlanSortBy {
	return []TrainingPlanSortBy{
		"TrainingPlanName",
		"StartTime",
		"Status",
	}
}

type TrainingPlanSortOrder string

// Enum values for TrainingPlanSortOrder
const (
	TrainingPlanSortOrderAscending  TrainingPlanSortOrder = "Ascending"
	TrainingPlanSortOrderDescending TrainingPlanSortOrder = "Descending"
)

// Values returns all known values for TrainingPlanSortOrder. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingPlanSortOrder) Values() []TrainingPlanSortOrder {
	return []TrainingPlanSortOrder{
		"Ascending",
		"Descending",
	}
}

type TrainingPlanStatus string

// Enum values for TrainingPlanStatus
const (
	TrainingPlanStatusPending   TrainingPlanStatus = "Pending"
	TrainingPlanStatusActive    TrainingPlanStatus = "Active"
	TrainingPlanStatusScheduled TrainingPlanStatus = "Scheduled"
	TrainingPlanStatusExpired   TrainingPlanStatus = "Expired"
	TrainingPlanStatusFailed    TrainingPlanStatus = "Failed"
)

// Values returns all known values for TrainingPlanStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingPlanStatus) Values() []TrainingPlanStatus {
	return []TrainingPlanStatus{
		"Pending",
		"Active",
		"Scheduled",
		"Expired",
		"Failed",
	}
}

type TrainingRepositoryAccessMode string

// Enum values for TrainingRepositoryAccessMode
const (
	TrainingRepositoryAccessModePlatform TrainingRepositoryAccessMode = "Platform"
	TrainingRepositoryAccessModeVpc      TrainingRepositoryAccessMode = "Vpc"
)

// Values returns all known values for TrainingRepositoryAccessMode. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingRepositoryAccessMode) Values() []TrainingRepositoryAccessMode {
	return []TrainingRepositoryAccessMode{
		"Platform",
		"Vpc",
	}
}

type TransformInstanceType string

// Enum values for TransformInstanceType
const (
	TransformInstanceTypeMlM4Xlarge     TransformInstanceType = "ml.m4.xlarge"
	TransformInstanceTypeMlM42xlarge    TransformInstanceType = "ml.m4.2xlarge"
	TransformInstanceTypeMlM44xlarge    TransformInstanceType = "ml.m4.4xlarge"
	TransformInstanceTypeMlM410xlarge   TransformInstanceType = "ml.m4.10xlarge"
	TransformInstanceTypeMlM416xlarge   TransformInstanceType = "ml.m4.16xlarge"
	TransformInstanceTypeMlC4Xlarge     TransformInstanceType = "ml.c4.xlarge"
	TransformInstanceTypeMlC42xlarge    TransformInstanceType = "ml.c4.2xlarge"
	TransformInstanceTypeMlC44xlarge    TransformInstanceType = "ml.c4.4xlarge"
	TransformInstanceTypeMlC48xlarge    TransformInstanceType = "ml.c4.8xlarge"
	TransformInstanceTypeMlP2Xlarge     TransformInstanceType = "ml.p2.xlarge"
	TransformInstanceTypeMlP28xlarge    TransformInstanceType = "ml.p2.8xlarge"
	TransformInstanceTypeMlP216xlarge   TransformInstanceType = "ml.p2.16xlarge"
	TransformInstanceTypeMlP32xlarge    TransformInstanceType = "ml.p3.2xlarge"
	TransformInstanceTypeMlP38xlarge    TransformInstanceType = "ml.p3.8xlarge"
	TransformInstanceTypeMlP316xlarge   TransformInstanceType = "ml.p3.16xlarge"
	TransformInstanceTypeMlC5Xlarge     TransformInstanceType = "ml.c5.xlarge"
	TransformInstanceTypeMlC52xlarge    TransformInstanceType = "ml.c5.2xlarge"
	TransformInstanceTypeMlC54xlarge    TransformInstanceType = "ml.c5.4xlarge"
	TransformInstanceTypeMlC59xlarge    TransformInstanceType = "ml.c5.9xlarge"
	TransformInstanceTypeMlC518xlarge   TransformInstanceType = "ml.c5.18xlarge"
	TransformInstanceTypeMlM5Large      TransformInstanceType = "ml.m5.large"
	TransformInstanceTypeMlM5Xlarge     TransformInstanceType = "ml.m5.xlarge"
	TransformInstanceTypeMlM52xlarge    TransformInstanceType = "ml.m5.2xlarge"
	TransformInstanceTypeMlM54xlarge    TransformInstanceType = "ml.m5.4xlarge"
	TransformInstanceTypeMlM512xlarge   TransformInstanceType = "ml.m5.12xlarge"
	TransformInstanceTypeMlM524xlarge   TransformInstanceType = "ml.m5.24xlarge"
	TransformInstanceTypeMlM6iLarge     TransformInstanceType = "ml.m6i.large"
	TransformInstanceTypeMlM6iXlarge    TransformInstanceType = "ml.m6i.xlarge"
	TransformInstanceTypeMlM6i2xlarge   TransformInstanceType = "ml.m6i.2xlarge"
	TransformInstanceTypeMlM6i4xlarge   TransformInstanceType = "ml.m6i.4xlarge"
	TransformInstanceTypeMlM6i8xlarge   TransformInstanceType = "ml.m6i.8xlarge"
	TransformInstanceTypeMlM6i12xlarge  TransformInstanceType = "ml.m6i.12xlarge"
	TransformInstanceTypeMlM6i16xlarge  TransformInstanceType = "ml.m6i.16xlarge"
	TransformInstanceTypeMlM6i24xlarge  TransformInstanceType = "ml.m6i.24xlarge"
	TransformInstanceTypeMlM6i32xlarge  TransformInstanceType = "ml.m6i.32xlarge"
	TransformInstanceTypeMlC6iLarge     TransformInstanceType = "ml.c6i.large"
	TransformInstanceTypeMlC6iXlarge    TransformInstanceType = "ml.c6i.xlarge"
	TransformInstanceTypeMlC6i2xlarge   TransformInstanceType = "ml.c6i.2xlarge"
	TransformInstanceTypeMlC6i4xlarge   TransformInstanceType = "ml.c6i.4xlarge"
	TransformInstanceTypeMlC6i8xlarge   TransformInstanceType = "ml.c6i.8xlarge"
	TransformInstanceTypeMlC6i12xlarge  TransformInstanceType = "ml.c6i.12xlarge"
	TransformInstanceTypeMlC6i16xlarge  TransformInstanceType = "ml.c6i.16xlarge"
	TransformInstanceTypeMlC6i24xlarge  TransformInstanceType = "ml.c6i.24xlarge"
	TransformInstanceTypeMlC6i32xlarge  TransformInstanceType = "ml.c6i.32xlarge"
	TransformInstanceTypeMlR6iLarge     TransformInstanceType = "ml.r6i.large"
	TransformInstanceTypeMlR6iXlarge    TransformInstanceType = "ml.r6i.xlarge"
	TransformInstanceTypeMlR6i2xlarge   TransformInstanceType = "ml.r6i.2xlarge"
	TransformInstanceTypeMlR6i4xlarge   TransformInstanceType = "ml.r6i.4xlarge"
	TransformInstanceTypeMlR6i8xlarge   TransformInstanceType = "ml.r6i.8xlarge"
	TransformInstanceTypeMlR6i12xlarge  TransformInstanceType = "ml.r6i.12xlarge"
	TransformInstanceTypeMlR6i16xlarge  TransformInstanceType = "ml.r6i.16xlarge"
	TransformInstanceTypeMlR6i24xlarge  TransformInstanceType = "ml.r6i.24xlarge"
	TransformInstanceTypeMlR6i32xlarge  TransformInstanceType = "ml.r6i.32xlarge"
	TransformInstanceTypeMlM7iLarge     TransformInstanceType = "ml.m7i.large"
	TransformInstanceTypeMlM7iXlarge    TransformInstanceType = "ml.m7i.xlarge"
	TransformInstanceTypeMlM7i2xlarge   TransformInstanceType = "ml.m7i.2xlarge"
	TransformInstanceTypeMlM7i4xlarge   TransformInstanceType = "ml.m7i.4xlarge"
	TransformInstanceTypeMlM7i8xlarge   TransformInstanceType = "ml.m7i.8xlarge"
	TransformInstanceTypeMlM7i12xlarge  TransformInstanceType = "ml.m7i.12xlarge"
	TransformInstanceTypeMlM7i16xlarge  TransformInstanceType = "ml.m7i.16xlarge"
	TransformInstanceTypeMlM7i24xlarge  TransformInstanceType = "ml.m7i.24xlarge"
	TransformInstanceTypeMlM7i48xlarge  TransformInstanceType = "ml.m7i.48xlarge"
	TransformInstanceTypeMlC7iLarge     TransformInstanceType = "ml.c7i.large"
	TransformInstanceTypeMlC7iXlarge    TransformInstanceType = "ml.c7i.xlarge"
	TransformInstanceTypeMlC7i2xlarge   TransformInstanceType = "ml.c7i.2xlarge"
	TransformInstanceTypeMlC7i4xlarge   TransformInstanceType = "ml.c7i.4xlarge"
	TransformInstanceTypeMlC7i8xlarge   TransformInstanceType = "ml.c7i.8xlarge"
	TransformInstanceTypeMlC7i12xlarge  TransformInstanceType = "ml.c7i.12xlarge"
	TransformInstanceTypeMlC7i16xlarge  TransformInstanceType = "ml.c7i.16xlarge"
	TransformInstanceTypeMlC7i24xlarge  TransformInstanceType = "ml.c7i.24xlarge"
	TransformInstanceTypeMlC7i48xlarge  TransformInstanceType = "ml.c7i.48xlarge"
	TransformInstanceTypeMlR7iLarge     TransformInstanceType = "ml.r7i.large"
	TransformInstanceTypeMlR7iXlarge    TransformInstanceType = "ml.r7i.xlarge"
	TransformInstanceTypeMlR7i2xlarge   TransformInstanceType = "ml.r7i.2xlarge"
	TransformInstanceTypeMlR7i4xlarge   TransformInstanceType = "ml.r7i.4xlarge"
	TransformInstanceTypeMlR7i8xlarge   TransformInstanceType = "ml.r7i.8xlarge"
	TransformInstanceTypeMlR7i12xlarge  TransformInstanceType = "ml.r7i.12xlarge"
	TransformInstanceTypeMlR7i16xlarge  TransformInstanceType = "ml.r7i.16xlarge"
	TransformInstanceTypeMlR7i24xlarge  TransformInstanceType = "ml.r7i.24xlarge"
	TransformInstanceTypeMlR7i48xlarge  TransformInstanceType = "ml.r7i.48xlarge"
	TransformInstanceTypeMlG4dnXlarge   TransformInstanceType = "ml.g4dn.xlarge"
	TransformInstanceTypeMlG4dn2xlarge  TransformInstanceType = "ml.g4dn.2xlarge"
	TransformInstanceTypeMlG4dn4xlarge  TransformInstanceType = "ml.g4dn.4xlarge"
	TransformInstanceTypeMlG4dn8xlarge  TransformInstanceType = "ml.g4dn.8xlarge"
	TransformInstanceTypeMlG4dn12xlarge TransformInstanceType = "ml.g4dn.12xlarge"
	TransformInstanceTypeMlG4dn16xlarge TransformInstanceType = "ml.g4dn.16xlarge"
	TransformInstanceTypeMlG5Xlarge     TransformInstanceType = "ml.g5.xlarge"
	TransformInstanceTypeMlG52xlarge    TransformInstanceType = "ml.g5.2xlarge"
	TransformInstanceTypeMlG54xlarge    TransformInstanceType = "ml.g5.4xlarge"
	TransformInstanceTypeMlG58xlarge    TransformInstanceType = "ml.g5.8xlarge"
	TransformInstanceTypeMlG512xlarge   TransformInstanceType = "ml.g5.12xlarge"
	TransformInstanceTypeMlG516xlarge   TransformInstanceType = "ml.g5.16xlarge"
	TransformInstanceTypeMlG524xlarge   TransformInstanceType = "ml.g5.24xlarge"
	TransformInstanceTypeMlG548xlarge   TransformInstanceType = "ml.g5.48xlarge"
	TransformInstanceTypeMlTrn12xlarge  TransformInstanceType = "ml.trn1.2xlarge"
	TransformInstanceTypeMlTrn132xlarge TransformInstanceType = "ml.trn1.32xlarge"
	TransformInstanceTypeMlInf2Xlarge   TransformInstanceType = "ml.inf2.xlarge"
	TransformInstanceTypeMlInf28xlarge  TransformInstanceType = "ml.inf2.8xlarge"
	TransformInstanceTypeMlInf224xlarge TransformInstanceType = "ml.inf2.24xlarge"
	TransformInstanceTypeMlInf248xlarge TransformInstanceType = "ml.inf2.48xlarge"
)

// Values returns all known values for TransformInstanceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TransformInstanceType) Values() []TransformInstanceType {
	return []TransformInstanceType{
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.m6i.large",
		"ml.m6i.xlarge",
		"ml.m6i.2xlarge",
		"ml.m6i.4xlarge",
		"ml.m6i.8xlarge",
		"ml.m6i.12xlarge",
		"ml.m6i.16xlarge",
		"ml.m6i.24xlarge",
		"ml.m6i.32xlarge",
		"ml.c6i.large",
		"ml.c6i.xlarge",
		"ml.c6i.2xlarge",
		"ml.c6i.4xlarge",
		"ml.c6i.8xlarge",
		"ml.c6i.12xlarge",
		"ml.c6i.16xlarge",
		"ml.c6i.24xlarge",
		"ml.c6i.32xlarge",
		"ml.r6i.large",
		"ml.r6i.xlarge",
		"ml.r6i.2xlarge",
		"ml.r6i.4xlarge",
		"ml.r6i.8xlarge",
		"ml.r6i.12xlarge",
		"ml.r6i.16xlarge",
		"ml.r6i.24xlarge",
		"ml.r6i.32xlarge",
		"ml.m7i.large",
		"ml.m7i.xlarge",
		"ml.m7i.2xlarge",
		"ml.m7i.4xlarge",
		"ml.m7i.8xlarge",
		"ml.m7i.12xlarge",
		"ml.m7i.16xlarge",
		"ml.m7i.24xlarge",
		"ml.m7i.48xlarge",
		"ml.c7i.large",
		"ml.c7i.xlarge",
		"ml.c7i.2xlarge",
		"ml.c7i.4xlarge",
		"ml.c7i.8xlarge",
		"ml.c7i.12xlarge",
		"ml.c7i.16xlarge",
		"ml.c7i.24xlarge",
		"ml.c7i.48xlarge",
		"ml.r7i.large",
		"ml.r7i.xlarge",
		"ml.r7i.2xlarge",
		"ml.r7i.4xlarge",
		"ml.r7i.8xlarge",
		"ml.r7i.12xlarge",
		"ml.r7i.16xlarge",
		"ml.r7i.24xlarge",
		"ml.r7i.48xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.g5.xlarge",
		"ml.g5.2xlarge",
		"ml.g5.4xlarge",
		"ml.g5.8xlarge",
		"ml.g5.12xlarge",
		"ml.g5.16xlarge",
		"ml.g5.24xlarge",
		"ml.g5.48xlarge",
		"ml.trn1.2xlarge",
		"ml.trn1.32xlarge",
		"ml.inf2.xlarge",
		"ml.inf2.8xlarge",
		"ml.inf2.24xlarge",
		"ml.inf2.48xlarge",
	}
}

type TransformJobStatus string

// Enum values for TransformJobStatus
const (
	TransformJobStatusInProgress TransformJobStatus = "InProgress"
	TransformJobStatusCompleted  TransformJobStatus = "Completed"
	TransformJobStatusFailed     TransformJobStatus = "Failed"
	TransformJobStatusStopping   TransformJobStatus = "Stopping"
	TransformJobStatusStopped    TransformJobStatus = "Stopped"
)

// Values returns all known values for TransformJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TransformJobStatus) Values() []TransformJobStatus {
	return []TransformJobStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type TrialComponentPrimaryStatus string

// Enum values for TrialComponentPrimaryStatus
const (
	TrialComponentPrimaryStatusInProgress TrialComponentPrimaryStatus = "InProgress"
	TrialComponentPrimaryStatusCompleted  TrialComponentPrimaryStatus = "Completed"
	TrialComponentPrimaryStatusFailed     TrialComponentPrimaryStatus = "Failed"
	TrialComponentPrimaryStatusStopping   TrialComponentPrimaryStatus = "Stopping"
	TrialComponentPrimaryStatusStopped    TrialComponentPrimaryStatus = "Stopped"
)

// Values returns all known values for TrialComponentPrimaryStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrialComponentPrimaryStatus) Values() []TrialComponentPrimaryStatus {
	return []TrialComponentPrimaryStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type TtlDurationUnit string

// Enum values for TtlDurationUnit
const (
	TtlDurationUnitSeconds TtlDurationUnit = "Seconds"
	TtlDurationUnitMinutes TtlDurationUnit = "Minutes"
	TtlDurationUnitHours   TtlDurationUnit = "Hours"
	TtlDurationUnitDays    TtlDurationUnit = "Days"
	TtlDurationUnitWeeks   TtlDurationUnit = "Weeks"
)

// Values returns all known values for TtlDurationUnit. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TtlDurationUnit) Values() []TtlDurationUnit {
	return []TtlDurationUnit{
		"Seconds",
		"Minutes",
		"Hours",
		"Days",
		"Weeks",
	}
}

type UserProfileSortKey string

// Enum values for UserProfileSortKey
const (
	UserProfileSortKeyCreationTime     UserProfileSortKey = "CreationTime"
	UserProfileSortKeyLastModifiedTime UserProfileSortKey = "LastModifiedTime"
)

// Values returns all known values for UserProfileSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UserProfileSortKey) Values() []UserProfileSortKey {
	return []UserProfileSortKey{
		"CreationTime",
		"LastModifiedTime",
	}
}

type UserProfileStatus string

// Enum values for UserProfileStatus
const (
	UserProfileStatusDeleting     UserProfileStatus = "Deleting"
	UserProfileStatusFailed       UserProfileStatus = "Failed"
	UserProfileStatusInService    UserProfileStatus = "InService"
	UserProfileStatusPending      UserProfileStatus = "Pending"
	UserProfileStatusUpdating     UserProfileStatus = "Updating"
	UserProfileStatusUpdateFailed UserProfileStatus = "Update_Failed"
	UserProfileStatusDeleteFailed UserProfileStatus = "Delete_Failed"
)

// Values returns all known values for UserProfileStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UserProfileStatus) Values() []UserProfileStatus {
	return []UserProfileStatus{
		"Deleting",
		"Failed",
		"InService",
		"Pending",
		"Updating",
		"Update_Failed",
		"Delete_Failed",
	}
}

type VariantPropertyType string

// Enum values for VariantPropertyType
const (
	VariantPropertyTypeDesiredInstanceCount VariantPropertyType = "DesiredInstanceCount"
	VariantPropertyTypeDesiredWeight        VariantPropertyType = "DesiredWeight"
	VariantPropertyTypeDataCaptureConfig    VariantPropertyType = "DataCaptureConfig"
)

// Values returns all known values for VariantPropertyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VariantPropertyType) Values() []VariantPropertyType {
	return []VariantPropertyType{
		"DesiredInstanceCount",
		"DesiredWeight",
		"DataCaptureConfig",
	}
}

type VariantStatus string

// Enum values for VariantStatus
const (
	VariantStatusCreating          VariantStatus = "Creating"
	VariantStatusUpdating          VariantStatus = "Updating"
	VariantStatusDeleting          VariantStatus = "Deleting"
	VariantStatusActivatingTraffic VariantStatus = "ActivatingTraffic"
	VariantStatusBaking            VariantStatus = "Baking"
)

// Values returns all known values for VariantStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VariantStatus) Values() []VariantStatus {
	return []VariantStatus{
		"Creating",
		"Updating",
		"Deleting",
		"ActivatingTraffic",
		"Baking",
	}
}

type VendorGuidance string

// Enum values for VendorGuidance
const (
	VendorGuidanceNotProvided  VendorGuidance = "NOT_PROVIDED"
	VendorGuidanceStable       VendorGuidance = "STABLE"
	VendorGuidanceToBeArchived VendorGuidance = "TO_BE_ARCHIVED"
	VendorGuidanceArchived     VendorGuidance = "ARCHIVED"
)

// Values returns all known values for VendorGuidance. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VendorGuidance) Values() []VendorGuidance {
	return []VendorGuidance{
		"NOT_PROVIDED",
		"STABLE",
		"TO_BE_ARCHIVED",
		"ARCHIVED",
	}
}

type WarmPoolResourceStatus string

// Enum values for WarmPoolResourceStatus
const (
	WarmPoolResourceStatusAvailable  WarmPoolResourceStatus = "Available"
	WarmPoolResourceStatusTerminated WarmPoolResourceStatus = "Terminated"
	WarmPoolResourceStatusReused     WarmPoolResourceStatus = "Reused"
	WarmPoolResourceStatusInuse      WarmPoolResourceStatus = "InUse"
)

// Values returns all known values for WarmPoolResourceStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WarmPoolResourceStatus) Values() []WarmPoolResourceStatus {
	return []WarmPoolResourceStatus{
		"Available",
		"Terminated",
		"Reused",
		"InUse",
	}
}

type WorkforceStatus string

// Enum values for WorkforceStatus
const (
	WorkforceStatusInitializing WorkforceStatus = "Initializing"
	WorkforceStatusUpdating     WorkforceStatus = "Updating"
	WorkforceStatusDeleting     WorkforceStatus = "Deleting"
	WorkforceStatusFailed       WorkforceStatus = "Failed"
	WorkforceStatusActive       WorkforceStatus = "Active"
)

// Values returns all known values for WorkforceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WorkforceStatus) Values() []WorkforceStatus {
	return []WorkforceStatus{
		"Initializing",
		"Updating",
		"Deleting",
		"Failed",
		"Active",
	}
}
