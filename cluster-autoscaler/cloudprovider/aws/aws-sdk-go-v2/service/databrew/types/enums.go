// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AnalyticsMode string

// Enum values for AnalyticsMode
const (
	AnalyticsModeEnable  AnalyticsMode = "ENABLE"
	AnalyticsModeDisable AnalyticsMode = "DISABLE"
)

// Values returns all known values for AnalyticsMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsMode) Values() []AnalyticsMode {
	return []AnalyticsMode{
		"ENABLE",
		"DISABLE",
	}
}

type CompressionFormat string

// Enum values for CompressionFormat
const (
	CompressionFormatGzip    CompressionFormat = "GZIP"
	CompressionFormatLz4     CompressionFormat = "LZ4"
	CompressionFormatSnappy  CompressionFormat = "SNAPPY"
	CompressionFormatBzip2   CompressionFormat = "BZIP2"
	CompressionFormatDeflate CompressionFormat = "DEFLATE"
	CompressionFormatLzo     CompressionFormat = "LZO"
	CompressionFormatBrotli  CompressionFormat = "BROTLI"
	CompressionFormatZstd    CompressionFormat = "ZSTD"
	CompressionFormatZlib    CompressionFormat = "ZLIB"
)

// Values returns all known values for CompressionFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CompressionFormat) Values() []CompressionFormat {
	return []CompressionFormat{
		"GZIP",
		"LZ4",
		"SNAPPY",
		"BZIP2",
		"DEFLATE",
		"LZO",
		"BROTLI",
		"ZSTD",
		"ZLIB",
	}
}

type DatabaseOutputMode string

// Enum values for DatabaseOutputMode
const (
	DatabaseOutputModeNewTable DatabaseOutputMode = "NEW_TABLE"
)

// Values returns all known values for DatabaseOutputMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatabaseOutputMode) Values() []DatabaseOutputMode {
	return []DatabaseOutputMode{
		"NEW_TABLE",
	}
}

type EncryptionMode string

// Enum values for EncryptionMode
const (
	EncryptionModeSsekms EncryptionMode = "SSE-KMS"
	EncryptionModeSses3  EncryptionMode = "SSE-S3"
)

// Values returns all known values for EncryptionMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EncryptionMode) Values() []EncryptionMode {
	return []EncryptionMode{
		"SSE-KMS",
		"SSE-S3",
	}
}

type InputFormat string

// Enum values for InputFormat
const (
	InputFormatCsv     InputFormat = "CSV"
	InputFormatJson    InputFormat = "JSON"
	InputFormatParquet InputFormat = "PARQUET"
	InputFormatExcel   InputFormat = "EXCEL"
	InputFormatOrc     InputFormat = "ORC"
)

// Values returns all known values for InputFormat. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InputFormat) Values() []InputFormat {
	return []InputFormat{
		"CSV",
		"JSON",
		"PARQUET",
		"EXCEL",
		"ORC",
	}
}

type JobRunState string

// Enum values for JobRunState
const (
	JobRunStateStarting  JobRunState = "STARTING"
	JobRunStateRunning   JobRunState = "RUNNING"
	JobRunStateStopping  JobRunState = "STOPPING"
	JobRunStateStopped   JobRunState = "STOPPED"
	JobRunStateSucceeded JobRunState = "SUCCEEDED"
	JobRunStateFailed    JobRunState = "FAILED"
	JobRunStateTimeout   JobRunState = "TIMEOUT"
)

// Values returns all known values for JobRunState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobRunState) Values() []JobRunState {
	return []JobRunState{
		"STARTING",
		"RUNNING",
		"STOPPING",
		"STOPPED",
		"SUCCEEDED",
		"FAILED",
		"TIMEOUT",
	}
}

type JobType string

// Enum values for JobType
const (
	JobTypeProfile JobType = "PROFILE"
	JobTypeRecipe  JobType = "RECIPE"
)

// Values returns all known values for JobType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobType) Values() []JobType {
	return []JobType{
		"PROFILE",
		"RECIPE",
	}
}

type LogSubscription string

// Enum values for LogSubscription
const (
	LogSubscriptionEnable  LogSubscription = "ENABLE"
	LogSubscriptionDisable LogSubscription = "DISABLE"
)

// Values returns all known values for LogSubscription. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LogSubscription) Values() []LogSubscription {
	return []LogSubscription{
		"ENABLE",
		"DISABLE",
	}
}

type Order string

// Enum values for Order
const (
	OrderDescending Order = "DESCENDING"
	OrderAscending  Order = "ASCENDING"
)

// Values returns all known values for Order. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Order) Values() []Order {
	return []Order{
		"DESCENDING",
		"ASCENDING",
	}
}

type OrderedBy string

// Enum values for OrderedBy
const (
	OrderedByLastModifiedDate OrderedBy = "LAST_MODIFIED_DATE"
)

// Values returns all known values for OrderedBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OrderedBy) Values() []OrderedBy {
	return []OrderedBy{
		"LAST_MODIFIED_DATE",
	}
}

type OutputFormat string

// Enum values for OutputFormat
const (
	OutputFormatCsv          OutputFormat = "CSV"
	OutputFormatJson         OutputFormat = "JSON"
	OutputFormatParquet      OutputFormat = "PARQUET"
	OutputFormatGlueparquet  OutputFormat = "GLUEPARQUET"
	OutputFormatAvro         OutputFormat = "AVRO"
	OutputFormatOrc          OutputFormat = "ORC"
	OutputFormatXml          OutputFormat = "XML"
	OutputFormatTableauhyper OutputFormat = "TABLEAUHYPER"
)

// Values returns all known values for OutputFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OutputFormat) Values() []OutputFormat {
	return []OutputFormat{
		"CSV",
		"JSON",
		"PARQUET",
		"GLUEPARQUET",
		"AVRO",
		"ORC",
		"XML",
		"TABLEAUHYPER",
	}
}

type ParameterType string

// Enum values for ParameterType
const (
	ParameterTypeDatetime ParameterType = "Datetime"
	ParameterTypeNumber   ParameterType = "Number"
	ParameterTypeString   ParameterType = "String"
)

// Values returns all known values for ParameterType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParameterType) Values() []ParameterType {
	return []ParameterType{
		"Datetime",
		"Number",
		"String",
	}
}

type SampleMode string

// Enum values for SampleMode
const (
	SampleModeFullDataset SampleMode = "FULL_DATASET"
	SampleModeCustomRows  SampleMode = "CUSTOM_ROWS"
)

// Values returns all known values for SampleMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SampleMode) Values() []SampleMode {
	return []SampleMode{
		"FULL_DATASET",
		"CUSTOM_ROWS",
	}
}

type SampleType string

// Enum values for SampleType
const (
	SampleTypeFirstN SampleType = "FIRST_N"
	SampleTypeLastN  SampleType = "LAST_N"
	SampleTypeRandom SampleType = "RANDOM"
)

// Values returns all known values for SampleType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SampleType) Values() []SampleType {
	return []SampleType{
		"FIRST_N",
		"LAST_N",
		"RANDOM",
	}
}

type SessionStatus string

// Enum values for SessionStatus
const (
	SessionStatusAssigned     SessionStatus = "ASSIGNED"
	SessionStatusFailed       SessionStatus = "FAILED"
	SessionStatusInitializing SessionStatus = "INITIALIZING"
	SessionStatusProvisioning SessionStatus = "PROVISIONING"
	SessionStatusReady        SessionStatus = "READY"
	SessionStatusRecycling    SessionStatus = "RECYCLING"
	SessionStatusRotating     SessionStatus = "ROTATING"
	SessionStatusTerminated   SessionStatus = "TERMINATED"
	SessionStatusTerminating  SessionStatus = "TERMINATING"
	SessionStatusUpdating     SessionStatus = "UPDATING"
)

// Values returns all known values for SessionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SessionStatus) Values() []SessionStatus {
	return []SessionStatus{
		"ASSIGNED",
		"FAILED",
		"INITIALIZING",
		"PROVISIONING",
		"READY",
		"RECYCLING",
		"ROTATING",
		"TERMINATED",
		"TERMINATING",
		"UPDATING",
	}
}

type Source string

// Enum values for Source
const (
	SourceS3          Source = "S3"
	SourceDatacatalog Source = "DATA-CATALOG"
	SourceDatabase    Source = "DATABASE"
)

// Values returns all known values for Source. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Source) Values() []Source {
	return []Source{
		"S3",
		"DATA-CATALOG",
		"DATABASE",
	}
}

type ThresholdType string

// Enum values for ThresholdType
const (
	ThresholdTypeGreaterThanOrEqual ThresholdType = "GREATER_THAN_OR_EQUAL"
	ThresholdTypeLessThanOrEqual    ThresholdType = "LESS_THAN_OR_EQUAL"
	ThresholdTypeGreaterThan        ThresholdType = "GREATER_THAN"
	ThresholdTypeLessThan           ThresholdType = "LESS_THAN"
)

// Values returns all known values for ThresholdType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThresholdType) Values() []ThresholdType {
	return []ThresholdType{
		"GREATER_THAN_OR_EQUAL",
		"LESS_THAN_OR_EQUAL",
		"GREATER_THAN",
		"LESS_THAN",
	}
}

type ThresholdUnit string

// Enum values for ThresholdUnit
const (
	ThresholdUnitCount      ThresholdUnit = "COUNT"
	ThresholdUnitPercentage ThresholdUnit = "PERCENTAGE"
)

// Values returns all known values for ThresholdUnit. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThresholdUnit) Values() []ThresholdUnit {
	return []ThresholdUnit{
		"COUNT",
		"PERCENTAGE",
	}
}

type ValidationMode string

// Enum values for ValidationMode
const (
	ValidationModeCheckAll ValidationMode = "CHECK_ALL"
)

// Values returns all known values for ValidationMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationMode) Values() []ValidationMode {
	return []ValidationMode{
		"CHECK_ALL",
	}
}
