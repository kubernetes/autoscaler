// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type BulkDeploymentStatus string

// Enum values for BulkDeploymentStatus
const (
	BulkDeploymentStatusInitializing BulkDeploymentStatus = "Initializing"
	BulkDeploymentStatusRunning      BulkDeploymentStatus = "Running"
	BulkDeploymentStatusCompleted    BulkDeploymentStatus = "Completed"
	BulkDeploymentStatusStopping     BulkDeploymentStatus = "Stopping"
	BulkDeploymentStatusStopped      BulkDeploymentStatus = "Stopped"
	BulkDeploymentStatusFailed       BulkDeploymentStatus = "Failed"
)

// Values returns all known values for BulkDeploymentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BulkDeploymentStatus) Values() []BulkDeploymentStatus {
	return []BulkDeploymentStatus{
		"Initializing",
		"Running",
		"Completed",
		"Stopping",
		"Stopped",
		"Failed",
	}
}

type ConfigurationSyncStatus string

// Enum values for ConfigurationSyncStatus
const (
	ConfigurationSyncStatusInSync    ConfigurationSyncStatus = "InSync"
	ConfigurationSyncStatusOutOfSync ConfigurationSyncStatus = "OutOfSync"
)

// Values returns all known values for ConfigurationSyncStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfigurationSyncStatus) Values() []ConfigurationSyncStatus {
	return []ConfigurationSyncStatus{
		"InSync",
		"OutOfSync",
	}
}

type DeploymentType string

// Enum values for DeploymentType
const (
	DeploymentTypeNewDeployment        DeploymentType = "NewDeployment"
	DeploymentTypeRedeployment         DeploymentType = "Redeployment"
	DeploymentTypeResetDeployment      DeploymentType = "ResetDeployment"
	DeploymentTypeForceResetDeployment DeploymentType = "ForceResetDeployment"
)

// Values returns all known values for DeploymentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeploymentType) Values() []DeploymentType {
	return []DeploymentType{
		"NewDeployment",
		"Redeployment",
		"ResetDeployment",
		"ForceResetDeployment",
	}
}

type EncodingType string

// Enum values for EncodingType
const (
	EncodingTypeBinary EncodingType = "binary"
	EncodingTypeJson   EncodingType = "json"
)

// Values returns all known values for EncodingType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EncodingType) Values() []EncodingType {
	return []EncodingType{
		"binary",
		"json",
	}
}

type FunctionIsolationMode string

// Enum values for FunctionIsolationMode
const (
	FunctionIsolationModeGreengrassContainer FunctionIsolationMode = "GreengrassContainer"
	FunctionIsolationModeNoContainer         FunctionIsolationMode = "NoContainer"
)

// Values returns all known values for FunctionIsolationMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FunctionIsolationMode) Values() []FunctionIsolationMode {
	return []FunctionIsolationMode{
		"GreengrassContainer",
		"NoContainer",
	}
}

type LoggerComponent string

// Enum values for LoggerComponent
const (
	LoggerComponentGreengrassSystem LoggerComponent = "GreengrassSystem"
	LoggerComponentLambda           LoggerComponent = "Lambda"
)

// Values returns all known values for LoggerComponent. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LoggerComponent) Values() []LoggerComponent {
	return []LoggerComponent{
		"GreengrassSystem",
		"Lambda",
	}
}

type LoggerLevel string

// Enum values for LoggerLevel
const (
	LoggerLevelDebug LoggerLevel = "DEBUG"
	LoggerLevelInfo  LoggerLevel = "INFO"
	LoggerLevelWarn  LoggerLevel = "WARN"
	LoggerLevelError LoggerLevel = "ERROR"
	LoggerLevelFatal LoggerLevel = "FATAL"
)

// Values returns all known values for LoggerLevel. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LoggerLevel) Values() []LoggerLevel {
	return []LoggerLevel{
		"DEBUG",
		"INFO",
		"WARN",
		"ERROR",
		"FATAL",
	}
}

type LoggerType string

// Enum values for LoggerType
const (
	LoggerTypeFileSystem    LoggerType = "FileSystem"
	LoggerTypeAWSCloudWatch LoggerType = "AWSCloudWatch"
)

// Values returns all known values for LoggerType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LoggerType) Values() []LoggerType {
	return []LoggerType{
		"FileSystem",
		"AWSCloudWatch",
	}
}

type Permission string

// Enum values for Permission
const (
	PermissionRo Permission = "ro"
	PermissionRw Permission = "rw"
)

// Values returns all known values for Permission. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Permission) Values() []Permission {
	return []Permission{
		"ro",
		"rw",
	}
}

type SoftwareToUpdate string

// Enum values for SoftwareToUpdate
const (
	SoftwareToUpdateCore     SoftwareToUpdate = "core"
	SoftwareToUpdateOtaAgent SoftwareToUpdate = "ota_agent"
)

// Values returns all known values for SoftwareToUpdate. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SoftwareToUpdate) Values() []SoftwareToUpdate {
	return []SoftwareToUpdate{
		"core",
		"ota_agent",
	}
}

type Telemetry string

// Enum values for Telemetry
const (
	TelemetryOn  Telemetry = "On"
	TelemetryOff Telemetry = "Off"
)

// Values returns all known values for Telemetry. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Telemetry) Values() []Telemetry {
	return []Telemetry{
		"On",
		"Off",
	}
}

type UpdateAgentLogLevel string

// Enum values for UpdateAgentLogLevel
const (
	UpdateAgentLogLevelNone    UpdateAgentLogLevel = "NONE"
	UpdateAgentLogLevelTrace   UpdateAgentLogLevel = "TRACE"
	UpdateAgentLogLevelDebug   UpdateAgentLogLevel = "DEBUG"
	UpdateAgentLogLevelVerbose UpdateAgentLogLevel = "VERBOSE"
	UpdateAgentLogLevelInfo    UpdateAgentLogLevel = "INFO"
	UpdateAgentLogLevelWarn    UpdateAgentLogLevel = "WARN"
	UpdateAgentLogLevelError   UpdateAgentLogLevel = "ERROR"
	UpdateAgentLogLevelFatal   UpdateAgentLogLevel = "FATAL"
)

// Values returns all known values for UpdateAgentLogLevel. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UpdateAgentLogLevel) Values() []UpdateAgentLogLevel {
	return []UpdateAgentLogLevel{
		"NONE",
		"TRACE",
		"DEBUG",
		"VERBOSE",
		"INFO",
		"WARN",
		"ERROR",
		"FATAL",
	}
}

type UpdateTargetsArchitecture string

// Enum values for UpdateTargetsArchitecture
const (
	UpdateTargetsArchitectureArmv6l  UpdateTargetsArchitecture = "armv6l"
	UpdateTargetsArchitectureArmv7l  UpdateTargetsArchitecture = "armv7l"
	UpdateTargetsArchitectureX8664   UpdateTargetsArchitecture = "x86_64"
	UpdateTargetsArchitectureAarch64 UpdateTargetsArchitecture = "aarch64"
)

// Values returns all known values for UpdateTargetsArchitecture. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UpdateTargetsArchitecture) Values() []UpdateTargetsArchitecture {
	return []UpdateTargetsArchitecture{
		"armv6l",
		"armv7l",
		"x86_64",
		"aarch64",
	}
}

type UpdateTargetsOperatingSystem string

// Enum values for UpdateTargetsOperatingSystem
const (
	UpdateTargetsOperatingSystemUbuntu      UpdateTargetsOperatingSystem = "ubuntu"
	UpdateTargetsOperatingSystemRaspbian    UpdateTargetsOperatingSystem = "raspbian"
	UpdateTargetsOperatingSystemAmazonLinux UpdateTargetsOperatingSystem = "amazon_linux"
	UpdateTargetsOperatingSystemOpenwrt     UpdateTargetsOperatingSystem = "openwrt"
)

// Values returns all known values for UpdateTargetsOperatingSystem. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UpdateTargetsOperatingSystem) Values() []UpdateTargetsOperatingSystem {
	return []UpdateTargetsOperatingSystem{
		"ubuntu",
		"raspbian",
		"amazon_linux",
		"openwrt",
	}
}
