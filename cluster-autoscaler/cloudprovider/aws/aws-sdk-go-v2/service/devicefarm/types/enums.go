// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ArtifactCategory string

// Enum values for ArtifactCategory
const (
	ArtifactCategoryScreenshot ArtifactCategory = "SCREENSHOT"
	ArtifactCategoryFile       ArtifactCategory = "FILE"
	ArtifactCategoryLog        ArtifactCategory = "LOG"
)

// Values returns all known values for ArtifactCategory. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArtifactCategory) Values() []ArtifactCategory {
	return []ArtifactCategory{
		"SCREENSHOT",
		"FILE",
		"LOG",
	}
}

type ArtifactType string

// Enum values for ArtifactType
const (
	ArtifactTypeUnknown                ArtifactType = "UNKNOWN"
	ArtifactTypeScreenshot             ArtifactType = "SCREENSHOT"
	ArtifactTypeDeviceLog              ArtifactType = "DEVICE_LOG"
	ArtifactTypeMessageLog             ArtifactType = "MESSAGE_LOG"
	ArtifactTypeVideoLog               ArtifactType = "VIDEO_LOG"
	ArtifactTypeResultLog              ArtifactType = "RESULT_LOG"
	ArtifactTypeServiceLog             ArtifactType = "SERVICE_LOG"
	ArtifactTypeWebkitLog              ArtifactType = "WEBKIT_LOG"
	ArtifactTypeInstrumentationOutput  ArtifactType = "INSTRUMENTATION_OUTPUT"
	ArtifactTypeExerciserMonkeyOutput  ArtifactType = "EXERCISER_MONKEY_OUTPUT"
	ArtifactTypeCalabashJsonOutput     ArtifactType = "CALABASH_JSON_OUTPUT"
	ArtifactTypeCalabashPrettyOutput   ArtifactType = "CALABASH_PRETTY_OUTPUT"
	ArtifactTypeCalabashStandardOutput ArtifactType = "CALABASH_STANDARD_OUTPUT"
	ArtifactTypeCalabashJavaXmlOutput  ArtifactType = "CALABASH_JAVA_XML_OUTPUT"
	ArtifactTypeAutomationOutput       ArtifactType = "AUTOMATION_OUTPUT"
	ArtifactTypeAppiumServerOutput     ArtifactType = "APPIUM_SERVER_OUTPUT"
	ArtifactTypeAppiumJavaOutput       ArtifactType = "APPIUM_JAVA_OUTPUT"
	ArtifactTypeAppiumJavaXmlOutput    ArtifactType = "APPIUM_JAVA_XML_OUTPUT"
	ArtifactTypeAppiumPythonOutput     ArtifactType = "APPIUM_PYTHON_OUTPUT"
	ArtifactTypeAppiumPythonXmlOutput  ArtifactType = "APPIUM_PYTHON_XML_OUTPUT"
	ArtifactTypeExplorerEventLog       ArtifactType = "EXPLORER_EVENT_LOG"
	ArtifactTypeExplorerSummaryLog     ArtifactType = "EXPLORER_SUMMARY_LOG"
	ArtifactTypeApplicationCrashReport ArtifactType = "APPLICATION_CRASH_REPORT"
	ArtifactTypeXctestLog              ArtifactType = "XCTEST_LOG"
	ArtifactTypeVideo                  ArtifactType = "VIDEO"
	ArtifactTypeCustomerArtifact       ArtifactType = "CUSTOMER_ARTIFACT"
	ArtifactTypeCustomerArtifactLog    ArtifactType = "CUSTOMER_ARTIFACT_LOG"
	ArtifactTypeTestspecOutput         ArtifactType = "TESTSPEC_OUTPUT"
)

// Values returns all known values for ArtifactType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArtifactType) Values() []ArtifactType {
	return []ArtifactType{
		"UNKNOWN",
		"SCREENSHOT",
		"DEVICE_LOG",
		"MESSAGE_LOG",
		"VIDEO_LOG",
		"RESULT_LOG",
		"SERVICE_LOG",
		"WEBKIT_LOG",
		"INSTRUMENTATION_OUTPUT",
		"EXERCISER_MONKEY_OUTPUT",
		"CALABASH_JSON_OUTPUT",
		"CALABASH_PRETTY_OUTPUT",
		"CALABASH_STANDARD_OUTPUT",
		"CALABASH_JAVA_XML_OUTPUT",
		"AUTOMATION_OUTPUT",
		"APPIUM_SERVER_OUTPUT",
		"APPIUM_JAVA_OUTPUT",
		"APPIUM_JAVA_XML_OUTPUT",
		"APPIUM_PYTHON_OUTPUT",
		"APPIUM_PYTHON_XML_OUTPUT",
		"EXPLORER_EVENT_LOG",
		"EXPLORER_SUMMARY_LOG",
		"APPLICATION_CRASH_REPORT",
		"XCTEST_LOG",
		"VIDEO",
		"CUSTOMER_ARTIFACT",
		"CUSTOMER_ARTIFACT_LOG",
		"TESTSPEC_OUTPUT",
	}
}

type BillingMethod string

// Enum values for BillingMethod
const (
	BillingMethodMetered   BillingMethod = "METERED"
	BillingMethodUnmetered BillingMethod = "UNMETERED"
)

// Values returns all known values for BillingMethod. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BillingMethod) Values() []BillingMethod {
	return []BillingMethod{
		"METERED",
		"UNMETERED",
	}
}

type CurrencyCode string

// Enum values for CurrencyCode
const (
	CurrencyCodeUsd CurrencyCode = "USD"
)

// Values returns all known values for CurrencyCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CurrencyCode) Values() []CurrencyCode {
	return []CurrencyCode{
		"USD",
	}
}

type DeviceAttribute string

// Enum values for DeviceAttribute
const (
	DeviceAttributeArn                 DeviceAttribute = "ARN"
	DeviceAttributePlatform            DeviceAttribute = "PLATFORM"
	DeviceAttributeFormFactor          DeviceAttribute = "FORM_FACTOR"
	DeviceAttributeManufacturer        DeviceAttribute = "MANUFACTURER"
	DeviceAttributeRemoteAccessEnabled DeviceAttribute = "REMOTE_ACCESS_ENABLED"
	DeviceAttributeRemoteDebugEnabled  DeviceAttribute = "REMOTE_DEBUG_ENABLED"
	DeviceAttributeAppiumVersion       DeviceAttribute = "APPIUM_VERSION"
	DeviceAttributeInstanceArn         DeviceAttribute = "INSTANCE_ARN"
	DeviceAttributeInstanceLabels      DeviceAttribute = "INSTANCE_LABELS"
	DeviceAttributeFleetType           DeviceAttribute = "FLEET_TYPE"
	DeviceAttributeOsVersion           DeviceAttribute = "OS_VERSION"
	DeviceAttributeModel               DeviceAttribute = "MODEL"
	DeviceAttributeAvailability        DeviceAttribute = "AVAILABILITY"
)

// Values returns all known values for DeviceAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceAttribute) Values() []DeviceAttribute {
	return []DeviceAttribute{
		"ARN",
		"PLATFORM",
		"FORM_FACTOR",
		"MANUFACTURER",
		"REMOTE_ACCESS_ENABLED",
		"REMOTE_DEBUG_ENABLED",
		"APPIUM_VERSION",
		"INSTANCE_ARN",
		"INSTANCE_LABELS",
		"FLEET_TYPE",
		"OS_VERSION",
		"MODEL",
		"AVAILABILITY",
	}
}

type DeviceAvailability string

// Enum values for DeviceAvailability
const (
	DeviceAvailabilityTemporaryNotAvailable DeviceAvailability = "TEMPORARY_NOT_AVAILABLE"
	DeviceAvailabilityBusy                  DeviceAvailability = "BUSY"
	DeviceAvailabilityAvailable             DeviceAvailability = "AVAILABLE"
	DeviceAvailabilityHighlyAvailable       DeviceAvailability = "HIGHLY_AVAILABLE"
)

// Values returns all known values for DeviceAvailability. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceAvailability) Values() []DeviceAvailability {
	return []DeviceAvailability{
		"TEMPORARY_NOT_AVAILABLE",
		"BUSY",
		"AVAILABLE",
		"HIGHLY_AVAILABLE",
	}
}

type DeviceFilterAttribute string

// Enum values for DeviceFilterAttribute
const (
	DeviceFilterAttributeArn                 DeviceFilterAttribute = "ARN"
	DeviceFilterAttributePlatform            DeviceFilterAttribute = "PLATFORM"
	DeviceFilterAttributeOsVersion           DeviceFilterAttribute = "OS_VERSION"
	DeviceFilterAttributeModel               DeviceFilterAttribute = "MODEL"
	DeviceFilterAttributeAvailability        DeviceFilterAttribute = "AVAILABILITY"
	DeviceFilterAttributeFormFactor          DeviceFilterAttribute = "FORM_FACTOR"
	DeviceFilterAttributeManufacturer        DeviceFilterAttribute = "MANUFACTURER"
	DeviceFilterAttributeRemoteAccessEnabled DeviceFilterAttribute = "REMOTE_ACCESS_ENABLED"
	DeviceFilterAttributeRemoteDebugEnabled  DeviceFilterAttribute = "REMOTE_DEBUG_ENABLED"
	DeviceFilterAttributeInstanceArn         DeviceFilterAttribute = "INSTANCE_ARN"
	DeviceFilterAttributeInstanceLabels      DeviceFilterAttribute = "INSTANCE_LABELS"
	DeviceFilterAttributeFleetType           DeviceFilterAttribute = "FLEET_TYPE"
)

// Values returns all known values for DeviceFilterAttribute. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceFilterAttribute) Values() []DeviceFilterAttribute {
	return []DeviceFilterAttribute{
		"ARN",
		"PLATFORM",
		"OS_VERSION",
		"MODEL",
		"AVAILABILITY",
		"FORM_FACTOR",
		"MANUFACTURER",
		"REMOTE_ACCESS_ENABLED",
		"REMOTE_DEBUG_ENABLED",
		"INSTANCE_ARN",
		"INSTANCE_LABELS",
		"FLEET_TYPE",
	}
}

type DeviceFormFactor string

// Enum values for DeviceFormFactor
const (
	DeviceFormFactorPhone  DeviceFormFactor = "PHONE"
	DeviceFormFactorTablet DeviceFormFactor = "TABLET"
)

// Values returns all known values for DeviceFormFactor. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceFormFactor) Values() []DeviceFormFactor {
	return []DeviceFormFactor{
		"PHONE",
		"TABLET",
	}
}

type DevicePlatform string

// Enum values for DevicePlatform
const (
	DevicePlatformAndroid DevicePlatform = "ANDROID"
	DevicePlatformIos     DevicePlatform = "IOS"
)

// Values returns all known values for DevicePlatform. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DevicePlatform) Values() []DevicePlatform {
	return []DevicePlatform{
		"ANDROID",
		"IOS",
	}
}

type DevicePoolType string

// Enum values for DevicePoolType
const (
	DevicePoolTypeCurated DevicePoolType = "CURATED"
	DevicePoolTypePrivate DevicePoolType = "PRIVATE"
)

// Values returns all known values for DevicePoolType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DevicePoolType) Values() []DevicePoolType {
	return []DevicePoolType{
		"CURATED",
		"PRIVATE",
	}
}

type ExecutionResult string

// Enum values for ExecutionResult
const (
	ExecutionResultPending ExecutionResult = "PENDING"
	ExecutionResultPassed  ExecutionResult = "PASSED"
	ExecutionResultWarned  ExecutionResult = "WARNED"
	ExecutionResultFailed  ExecutionResult = "FAILED"
	ExecutionResultSkipped ExecutionResult = "SKIPPED"
	ExecutionResultErrored ExecutionResult = "ERRORED"
	ExecutionResultStopped ExecutionResult = "STOPPED"
)

// Values returns all known values for ExecutionResult. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionResult) Values() []ExecutionResult {
	return []ExecutionResult{
		"PENDING",
		"PASSED",
		"WARNED",
		"FAILED",
		"SKIPPED",
		"ERRORED",
		"STOPPED",
	}
}

type ExecutionResultCode string

// Enum values for ExecutionResultCode
const (
	ExecutionResultCodeParsingFailed          ExecutionResultCode = "PARSING_FAILED"
	ExecutionResultCodeVpcEndpointSetupFailed ExecutionResultCode = "VPC_ENDPOINT_SETUP_FAILED"
)

// Values returns all known values for ExecutionResultCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionResultCode) Values() []ExecutionResultCode {
	return []ExecutionResultCode{
		"PARSING_FAILED",
		"VPC_ENDPOINT_SETUP_FAILED",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusPending            ExecutionStatus = "PENDING"
	ExecutionStatusPendingConcurrnecy ExecutionStatus = "PENDING_CONCURRENCY"
	ExecutionStatusPendingDevice      ExecutionStatus = "PENDING_DEVICE"
	ExecutionStatusProcessing         ExecutionStatus = "PROCESSING"
	ExecutionStatusScheduling         ExecutionStatus = "SCHEDULING"
	ExecutionStatusPreparing          ExecutionStatus = "PREPARING"
	ExecutionStatusRunning            ExecutionStatus = "RUNNING"
	ExecutionStatusCompleted          ExecutionStatus = "COMPLETED"
	ExecutionStatusStopping           ExecutionStatus = "STOPPING"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"PENDING",
		"PENDING_CONCURRENCY",
		"PENDING_DEVICE",
		"PROCESSING",
		"SCHEDULING",
		"PREPARING",
		"RUNNING",
		"COMPLETED",
		"STOPPING",
	}
}

type InstanceStatus string

// Enum values for InstanceStatus
const (
	InstanceStatusInUse        InstanceStatus = "IN_USE"
	InstanceStatusPreparing    InstanceStatus = "PREPARING"
	InstanceStatusAvailable    InstanceStatus = "AVAILABLE"
	InstanceStatusNotAvailable InstanceStatus = "NOT_AVAILABLE"
)

// Values returns all known values for InstanceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InstanceStatus) Values() []InstanceStatus {
	return []InstanceStatus{
		"IN_USE",
		"PREPARING",
		"AVAILABLE",
		"NOT_AVAILABLE",
	}
}

type InteractionMode string

// Enum values for InteractionMode
const (
	InteractionModeInteractive InteractionMode = "INTERACTIVE"
	InteractionModeNoVideo     InteractionMode = "NO_VIDEO"
	InteractionModeVideoOnly   InteractionMode = "VIDEO_ONLY"
)

// Values returns all known values for InteractionMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InteractionMode) Values() []InteractionMode {
	return []InteractionMode{
		"INTERACTIVE",
		"NO_VIDEO",
		"VIDEO_ONLY",
	}
}

type NetworkProfileType string

// Enum values for NetworkProfileType
const (
	NetworkProfileTypeCurated NetworkProfileType = "CURATED"
	NetworkProfileTypePrivate NetworkProfileType = "PRIVATE"
)

// Values returns all known values for NetworkProfileType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NetworkProfileType) Values() []NetworkProfileType {
	return []NetworkProfileType{
		"CURATED",
		"PRIVATE",
	}
}

type OfferingTransactionType string

// Enum values for OfferingTransactionType
const (
	OfferingTransactionTypePurchase OfferingTransactionType = "PURCHASE"
	OfferingTransactionTypeRenew    OfferingTransactionType = "RENEW"
	OfferingTransactionTypeSystem   OfferingTransactionType = "SYSTEM"
)

// Values returns all known values for OfferingTransactionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OfferingTransactionType) Values() []OfferingTransactionType {
	return []OfferingTransactionType{
		"PURCHASE",
		"RENEW",
		"SYSTEM",
	}
}

type OfferingType string

// Enum values for OfferingType
const (
	OfferingTypeRecurring OfferingType = "RECURRING"
)

// Values returns all known values for OfferingType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OfferingType) Values() []OfferingType {
	return []OfferingType{
		"RECURRING",
	}
}

type RecurringChargeFrequency string

// Enum values for RecurringChargeFrequency
const (
	RecurringChargeFrequencyMonthly RecurringChargeFrequency = "MONTHLY"
)

// Values returns all known values for RecurringChargeFrequency. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecurringChargeFrequency) Values() []RecurringChargeFrequency {
	return []RecurringChargeFrequency{
		"MONTHLY",
	}
}

type RuleOperator string

// Enum values for RuleOperator
const (
	RuleOperatorEquals              RuleOperator = "EQUALS"
	RuleOperatorLessThan            RuleOperator = "LESS_THAN"
	RuleOperatorLessThanOrEquals    RuleOperator = "LESS_THAN_OR_EQUALS"
	RuleOperatorGreaterThan         RuleOperator = "GREATER_THAN"
	RuleOperatorGreaterThanOrEquals RuleOperator = "GREATER_THAN_OR_EQUALS"
	RuleOperatorIn                  RuleOperator = "IN"
	RuleOperatorNotIn               RuleOperator = "NOT_IN"
	RuleOperatorContains            RuleOperator = "CONTAINS"
)

// Values returns all known values for RuleOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleOperator) Values() []RuleOperator {
	return []RuleOperator{
		"EQUALS",
		"LESS_THAN",
		"LESS_THAN_OR_EQUALS",
		"GREATER_THAN",
		"GREATER_THAN_OR_EQUALS",
		"IN",
		"NOT_IN",
		"CONTAINS",
	}
}

type SampleType string

// Enum values for SampleType
const (
	SampleTypeCpu               SampleType = "CPU"
	SampleTypeMemory            SampleType = "MEMORY"
	SampleTypeThreads           SampleType = "THREADS"
	SampleTypeRxRate            SampleType = "RX_RATE"
	SampleTypeTxRate            SampleType = "TX_RATE"
	SampleTypeRx                SampleType = "RX"
	SampleTypeTx                SampleType = "TX"
	SampleTypeNativeFrames      SampleType = "NATIVE_FRAMES"
	SampleTypeNativeFps         SampleType = "NATIVE_FPS"
	SampleTypeNativeMinDrawtime SampleType = "NATIVE_MIN_DRAWTIME"
	SampleTypeNativeAvgDrawtime SampleType = "NATIVE_AVG_DRAWTIME"
	SampleTypeNativeMaxDrawtime SampleType = "NATIVE_MAX_DRAWTIME"
	SampleTypeOpenglFrames      SampleType = "OPENGL_FRAMES"
	SampleTypeOpenglFps         SampleType = "OPENGL_FPS"
	SampleTypeOpenglMinDrawtime SampleType = "OPENGL_MIN_DRAWTIME"
	SampleTypeOpenglAvgDrawtime SampleType = "OPENGL_AVG_DRAWTIME"
	SampleTypeOpenglMaxDrawtime SampleType = "OPENGL_MAX_DRAWTIME"
)

// Values returns all known values for SampleType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SampleType) Values() []SampleType {
	return []SampleType{
		"CPU",
		"MEMORY",
		"THREADS",
		"RX_RATE",
		"TX_RATE",
		"RX",
		"TX",
		"NATIVE_FRAMES",
		"NATIVE_FPS",
		"NATIVE_MIN_DRAWTIME",
		"NATIVE_AVG_DRAWTIME",
		"NATIVE_MAX_DRAWTIME",
		"OPENGL_FRAMES",
		"OPENGL_FPS",
		"OPENGL_MIN_DRAWTIME",
		"OPENGL_AVG_DRAWTIME",
		"OPENGL_MAX_DRAWTIME",
	}
}

type TestGridSessionArtifactCategory string

// Enum values for TestGridSessionArtifactCategory
const (
	TestGridSessionArtifactCategoryVideo TestGridSessionArtifactCategory = "VIDEO"
	TestGridSessionArtifactCategoryLog   TestGridSessionArtifactCategory = "LOG"
)

// Values returns all known values for TestGridSessionArtifactCategory. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestGridSessionArtifactCategory) Values() []TestGridSessionArtifactCategory {
	return []TestGridSessionArtifactCategory{
		"VIDEO",
		"LOG",
	}
}

type TestGridSessionArtifactType string

// Enum values for TestGridSessionArtifactType
const (
	TestGridSessionArtifactTypeUnknown     TestGridSessionArtifactType = "UNKNOWN"
	TestGridSessionArtifactTypeVideo       TestGridSessionArtifactType = "VIDEO"
	TestGridSessionArtifactTypeSeleniumLog TestGridSessionArtifactType = "SELENIUM_LOG"
)

// Values returns all known values for TestGridSessionArtifactType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestGridSessionArtifactType) Values() []TestGridSessionArtifactType {
	return []TestGridSessionArtifactType{
		"UNKNOWN",
		"VIDEO",
		"SELENIUM_LOG",
	}
}

type TestGridSessionStatus string

// Enum values for TestGridSessionStatus
const (
	TestGridSessionStatusActive  TestGridSessionStatus = "ACTIVE"
	TestGridSessionStatusClosed  TestGridSessionStatus = "CLOSED"
	TestGridSessionStatusErrored TestGridSessionStatus = "ERRORED"
)

// Values returns all known values for TestGridSessionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestGridSessionStatus) Values() []TestGridSessionStatus {
	return []TestGridSessionStatus{
		"ACTIVE",
		"CLOSED",
		"ERRORED",
	}
}

type TestType string

// Enum values for TestType
const (
	TestTypeBuiltinFuzz         TestType = "BUILTIN_FUZZ"
	TestTypeAppiumJavaJunit     TestType = "APPIUM_JAVA_JUNIT"
	TestTypeAppiumJavaTestng    TestType = "APPIUM_JAVA_TESTNG"
	TestTypeAppiumPython        TestType = "APPIUM_PYTHON"
	TestTypeAppiumNode          TestType = "APPIUM_NODE"
	TestTypeAppiumRuby          TestType = "APPIUM_RUBY"
	TestTypeAppiumWebJavaJunit  TestType = "APPIUM_WEB_JAVA_JUNIT"
	TestTypeAppiumWebJavaTestng TestType = "APPIUM_WEB_JAVA_TESTNG"
	TestTypeAppiumWebPython     TestType = "APPIUM_WEB_PYTHON"
	TestTypeAppiumWebNode       TestType = "APPIUM_WEB_NODE"
	TestTypeAppiumWebRuby       TestType = "APPIUM_WEB_RUBY"
	TestTypeInstrumentation     TestType = "INSTRUMENTATION"
	TestTypeXctest              TestType = "XCTEST"
	TestTypeXctestUi            TestType = "XCTEST_UI"
)

// Values returns all known values for TestType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TestType) Values() []TestType {
	return []TestType{
		"BUILTIN_FUZZ",
		"APPIUM_JAVA_JUNIT",
		"APPIUM_JAVA_TESTNG",
		"APPIUM_PYTHON",
		"APPIUM_NODE",
		"APPIUM_RUBY",
		"APPIUM_WEB_JAVA_JUNIT",
		"APPIUM_WEB_JAVA_TESTNG",
		"APPIUM_WEB_PYTHON",
		"APPIUM_WEB_NODE",
		"APPIUM_WEB_RUBY",
		"INSTRUMENTATION",
		"XCTEST",
		"XCTEST_UI",
	}
}

type UploadCategory string

// Enum values for UploadCategory
const (
	UploadCategoryCurated UploadCategory = "CURATED"
	UploadCategoryPrivate UploadCategory = "PRIVATE"
)

// Values returns all known values for UploadCategory. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UploadCategory) Values() []UploadCategory {
	return []UploadCategory{
		"CURATED",
		"PRIVATE",
	}
}

type UploadStatus string

// Enum values for UploadStatus
const (
	UploadStatusInitialized UploadStatus = "INITIALIZED"
	UploadStatusProcessing  UploadStatus = "PROCESSING"
	UploadStatusSucceeded   UploadStatus = "SUCCEEDED"
	UploadStatusFailed      UploadStatus = "FAILED"
)

// Values returns all known values for UploadStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UploadStatus) Values() []UploadStatus {
	return []UploadStatus{
		"INITIALIZED",
		"PROCESSING",
		"SUCCEEDED",
		"FAILED",
	}
}

type UploadType string

// Enum values for UploadType
const (
	UploadTypeAndroidApp                     UploadType = "ANDROID_APP"
	UploadTypeIosApp                         UploadType = "IOS_APP"
	UploadTypeWebApp                         UploadType = "WEB_APP"
	UploadTypeExternalData                   UploadType = "EXTERNAL_DATA"
	UploadTypeAppiumJavaJunitTestPackage     UploadType = "APPIUM_JAVA_JUNIT_TEST_PACKAGE"
	UploadTypeAppiumJavaTestngTestPackage    UploadType = "APPIUM_JAVA_TESTNG_TEST_PACKAGE"
	UploadTypeAppiumPythonTestPackage        UploadType = "APPIUM_PYTHON_TEST_PACKAGE"
	UploadTypeAppiumNodeTestPackage          UploadType = "APPIUM_NODE_TEST_PACKAGE"
	UploadTypeAppiumRubyTestPackage          UploadType = "APPIUM_RUBY_TEST_PACKAGE"
	UploadTypeAppiumWebJavaJunitTestPackage  UploadType = "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE"
	UploadTypeAppiumWebJavaTestngTestPackage UploadType = "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE"
	UploadTypeAppiumWebPythonTestPackage     UploadType = "APPIUM_WEB_PYTHON_TEST_PACKAGE"
	UploadTypeAppiumWebNodeTestPackage       UploadType = "APPIUM_WEB_NODE_TEST_PACKAGE"
	UploadTypeAppiumWebRubyTestPackage       UploadType = "APPIUM_WEB_RUBY_TEST_PACKAGE"
	UploadTypeCalabashTestPackage            UploadType = "CALABASH_TEST_PACKAGE"
	UploadTypeInstrumentationTestPackage     UploadType = "INSTRUMENTATION_TEST_PACKAGE"
	UploadTypeUiautomationTestPackage        UploadType = "UIAUTOMATION_TEST_PACKAGE"
	UploadTypeUiautomatorTestPackage         UploadType = "UIAUTOMATOR_TEST_PACKAGE"
	UploadTypeXctestTestPackage              UploadType = "XCTEST_TEST_PACKAGE"
	UploadTypeXctestUiTestPackage            UploadType = "XCTEST_UI_TEST_PACKAGE"
	UploadTypeAppiumJavaJunitTestSpec        UploadType = "APPIUM_JAVA_JUNIT_TEST_SPEC"
	UploadTypeAppiumJavaTestngTestSpec       UploadType = "APPIUM_JAVA_TESTNG_TEST_SPEC"
	UploadTypeAppiumPythonTestSpec           UploadType = "APPIUM_PYTHON_TEST_SPEC"
	UploadTypeAppiumNodeTestSpec             UploadType = "APPIUM_NODE_TEST_SPEC"
	UploadTypeAppiumRubyTestSpec             UploadType = "APPIUM_RUBY_TEST_SPEC"
	UploadTypeAppiumWebJavaJunitTestSpec     UploadType = "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC"
	UploadTypeAppiumWebJavaTestngTestSpec    UploadType = "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC"
	UploadTypeAppiumWebPythonTestSpec        UploadType = "APPIUM_WEB_PYTHON_TEST_SPEC"
	UploadTypeAppiumWebNodeTestSpec          UploadType = "APPIUM_WEB_NODE_TEST_SPEC"
	UploadTypeAppiumWebRubyTestSpec          UploadType = "APPIUM_WEB_RUBY_TEST_SPEC"
	UploadTypeInstrumentationTestSpec        UploadType = "INSTRUMENTATION_TEST_SPEC"
	UploadTypeXctestUiTestSpec               UploadType = "XCTEST_UI_TEST_SPEC"
)

// Values returns all known values for UploadType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UploadType) Values() []UploadType {
	return []UploadType{
		"ANDROID_APP",
		"IOS_APP",
		"WEB_APP",
		"EXTERNAL_DATA",
		"APPIUM_JAVA_JUNIT_TEST_PACKAGE",
		"APPIUM_JAVA_TESTNG_TEST_PACKAGE",
		"APPIUM_PYTHON_TEST_PACKAGE",
		"APPIUM_NODE_TEST_PACKAGE",
		"APPIUM_RUBY_TEST_PACKAGE",
		"APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
		"APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
		"APPIUM_WEB_PYTHON_TEST_PACKAGE",
		"APPIUM_WEB_NODE_TEST_PACKAGE",
		"APPIUM_WEB_RUBY_TEST_PACKAGE",
		"CALABASH_TEST_PACKAGE",
		"INSTRUMENTATION_TEST_PACKAGE",
		"UIAUTOMATION_TEST_PACKAGE",
		"UIAUTOMATOR_TEST_PACKAGE",
		"XCTEST_TEST_PACKAGE",
		"XCTEST_UI_TEST_PACKAGE",
		"APPIUM_JAVA_JUNIT_TEST_SPEC",
		"APPIUM_JAVA_TESTNG_TEST_SPEC",
		"APPIUM_PYTHON_TEST_SPEC",
		"APPIUM_NODE_TEST_SPEC",
		"APPIUM_RUBY_TEST_SPEC",
		"APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
		"APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
		"APPIUM_WEB_PYTHON_TEST_SPEC",
		"APPIUM_WEB_NODE_TEST_SPEC",
		"APPIUM_WEB_RUBY_TEST_SPEC",
		"INSTRUMENTATION_TEST_SPEC",
		"XCTEST_UI_TEST_SPEC",
	}
}
