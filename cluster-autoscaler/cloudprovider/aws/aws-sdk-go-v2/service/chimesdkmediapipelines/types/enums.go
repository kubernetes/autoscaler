// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActiveSpeakerPosition string

// Enum values for ActiveSpeakerPosition
const (
	ActiveSpeakerPositionTopLeft     ActiveSpeakerPosition = "TopLeft"
	ActiveSpeakerPositionTopRight    ActiveSpeakerPosition = "TopRight"
	ActiveSpeakerPositionBottomLeft  ActiveSpeakerPosition = "BottomLeft"
	ActiveSpeakerPositionBottomRight ActiveSpeakerPosition = "BottomRight"
)

// Values returns all known values for ActiveSpeakerPosition. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActiveSpeakerPosition) Values() []ActiveSpeakerPosition {
	return []ActiveSpeakerPosition{
		"TopLeft",
		"TopRight",
		"BottomLeft",
		"BottomRight",
	}
}

type ArtifactsConcatenationState string

// Enum values for ArtifactsConcatenationState
const (
	ArtifactsConcatenationStateEnabled  ArtifactsConcatenationState = "Enabled"
	ArtifactsConcatenationStateDisabled ArtifactsConcatenationState = "Disabled"
)

// Values returns all known values for ArtifactsConcatenationState. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArtifactsConcatenationState) Values() []ArtifactsConcatenationState {
	return []ArtifactsConcatenationState{
		"Enabled",
		"Disabled",
	}
}

type ArtifactsState string

// Enum values for ArtifactsState
const (
	ArtifactsStateEnabled  ArtifactsState = "Enabled"
	ArtifactsStateDisabled ArtifactsState = "Disabled"
)

// Values returns all known values for ArtifactsState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArtifactsState) Values() []ArtifactsState {
	return []ArtifactsState{
		"Enabled",
		"Disabled",
	}
}

type AudioArtifactsConcatenationState string

// Enum values for AudioArtifactsConcatenationState
const (
	AudioArtifactsConcatenationStateEnabled AudioArtifactsConcatenationState = "Enabled"
)

// Values returns all known values for AudioArtifactsConcatenationState. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AudioArtifactsConcatenationState) Values() []AudioArtifactsConcatenationState {
	return []AudioArtifactsConcatenationState{
		"Enabled",
	}
}

type AudioChannelsOption string

// Enum values for AudioChannelsOption
const (
	AudioChannelsOptionStereo AudioChannelsOption = "Stereo"
	AudioChannelsOptionMono   AudioChannelsOption = "Mono"
)

// Values returns all known values for AudioChannelsOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AudioChannelsOption) Values() []AudioChannelsOption {
	return []AudioChannelsOption{
		"Stereo",
		"Mono",
	}
}

type AudioMuxType string

// Enum values for AudioMuxType
const (
	AudioMuxTypeAudioOnly                   AudioMuxType = "AudioOnly"
	AudioMuxTypeAudioWithActiveSpeakerVideo AudioMuxType = "AudioWithActiveSpeakerVideo"
	AudioMuxTypeAudioWithCompositedVideo    AudioMuxType = "AudioWithCompositedVideo"
)

// Values returns all known values for AudioMuxType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AudioMuxType) Values() []AudioMuxType {
	return []AudioMuxType{
		"AudioOnly",
		"AudioWithActiveSpeakerVideo",
		"AudioWithCompositedVideo",
	}
}

type BorderColor string

// Enum values for BorderColor
const (
	BorderColorBlack  BorderColor = "Black"
	BorderColorBlue   BorderColor = "Blue"
	BorderColorRed    BorderColor = "Red"
	BorderColorGreen  BorderColor = "Green"
	BorderColorWhite  BorderColor = "White"
	BorderColorYellow BorderColor = "Yellow"
)

// Values returns all known values for BorderColor. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BorderColor) Values() []BorderColor {
	return []BorderColor{
		"Black",
		"Blue",
		"Red",
		"Green",
		"White",
		"Yellow",
	}
}

type CallAnalyticsLanguageCode string

// Enum values for CallAnalyticsLanguageCode
const (
	CallAnalyticsLanguageCodeEnUs CallAnalyticsLanguageCode = "en-US"
	CallAnalyticsLanguageCodeEnGb CallAnalyticsLanguageCode = "en-GB"
	CallAnalyticsLanguageCodeEsUs CallAnalyticsLanguageCode = "es-US"
	CallAnalyticsLanguageCodeFrCa CallAnalyticsLanguageCode = "fr-CA"
	CallAnalyticsLanguageCodeFrFr CallAnalyticsLanguageCode = "fr-FR"
	CallAnalyticsLanguageCodeEnAu CallAnalyticsLanguageCode = "en-AU"
	CallAnalyticsLanguageCodeItIt CallAnalyticsLanguageCode = "it-IT"
	CallAnalyticsLanguageCodeDeDe CallAnalyticsLanguageCode = "de-DE"
	CallAnalyticsLanguageCodePtBr CallAnalyticsLanguageCode = "pt-BR"
)

// Values returns all known values for CallAnalyticsLanguageCode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CallAnalyticsLanguageCode) Values() []CallAnalyticsLanguageCode {
	return []CallAnalyticsLanguageCode{
		"en-US",
		"en-GB",
		"es-US",
		"fr-CA",
		"fr-FR",
		"en-AU",
		"it-IT",
		"de-DE",
		"pt-BR",
	}
}

type CanvasOrientation string

// Enum values for CanvasOrientation
const (
	CanvasOrientationLandscape CanvasOrientation = "Landscape"
	CanvasOrientationPortrait  CanvasOrientation = "Portrait"
)

// Values returns all known values for CanvasOrientation. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CanvasOrientation) Values() []CanvasOrientation {
	return []CanvasOrientation{
		"Landscape",
		"Portrait",
	}
}

type ConcatenationSinkType string

// Enum values for ConcatenationSinkType
const (
	ConcatenationSinkTypeS3Bucket ConcatenationSinkType = "S3Bucket"
)

// Values returns all known values for ConcatenationSinkType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConcatenationSinkType) Values() []ConcatenationSinkType {
	return []ConcatenationSinkType{
		"S3Bucket",
	}
}

type ConcatenationSourceType string

// Enum values for ConcatenationSourceType
const (
	ConcatenationSourceTypeMediaCapturePipeline ConcatenationSourceType = "MediaCapturePipeline"
)

// Values returns all known values for ConcatenationSourceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConcatenationSourceType) Values() []ConcatenationSourceType {
	return []ConcatenationSourceType{
		"MediaCapturePipeline",
	}
}

type ContentMuxType string

// Enum values for ContentMuxType
const (
	ContentMuxTypeContentOnly ContentMuxType = "ContentOnly"
)

// Values returns all known values for ContentMuxType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentMuxType) Values() []ContentMuxType {
	return []ContentMuxType{
		"ContentOnly",
	}
}

type ContentRedactionOutput string

// Enum values for ContentRedactionOutput
const (
	ContentRedactionOutputRedacted              ContentRedactionOutput = "redacted"
	ContentRedactionOutputRedactedAndUnredacted ContentRedactionOutput = "redacted_and_unredacted"
)

// Values returns all known values for ContentRedactionOutput. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentRedactionOutput) Values() []ContentRedactionOutput {
	return []ContentRedactionOutput{
		"redacted",
		"redacted_and_unredacted",
	}
}

type ContentShareLayoutOption string

// Enum values for ContentShareLayoutOption
const (
	ContentShareLayoutOptionPresenterOnly     ContentShareLayoutOption = "PresenterOnly"
	ContentShareLayoutOptionHorizontal        ContentShareLayoutOption = "Horizontal"
	ContentShareLayoutOptionVertical          ContentShareLayoutOption = "Vertical"
	ContentShareLayoutOptionActiveSpeakerOnly ContentShareLayoutOption = "ActiveSpeakerOnly"
)

// Values returns all known values for ContentShareLayoutOption. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentShareLayoutOption) Values() []ContentShareLayoutOption {
	return []ContentShareLayoutOption{
		"PresenterOnly",
		"Horizontal",
		"Vertical",
		"ActiveSpeakerOnly",
	}
}

type ContentType string

// Enum values for ContentType
const (
	ContentTypePii ContentType = "PII"
)

// Values returns all known values for ContentType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentType) Values() []ContentType {
	return []ContentType{
		"PII",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeBadRequest            ErrorCode = "BadRequest"
	ErrorCodeForbidden             ErrorCode = "Forbidden"
	ErrorCodeNotFound              ErrorCode = "NotFound"
	ErrorCodeResourceLimitExceeded ErrorCode = "ResourceLimitExceeded"
	ErrorCodeServiceFailure        ErrorCode = "ServiceFailure"
	ErrorCodeServiceUnavailable    ErrorCode = "ServiceUnavailable"
	ErrorCodeThrottling            ErrorCode = "Throttling"
)

// Values returns all known values for ErrorCode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"BadRequest",
		"Forbidden",
		"NotFound",
		"ResourceLimitExceeded",
		"ServiceFailure",
		"ServiceUnavailable",
		"Throttling",
	}
}

type FragmentSelectorType string

// Enum values for FragmentSelectorType
const (
	FragmentSelectorTypeProducerTimestamp FragmentSelectorType = "ProducerTimestamp"
	FragmentSelectorTypeServerTimestamp   FragmentSelectorType = "ServerTimestamp"
)

// Values returns all known values for FragmentSelectorType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FragmentSelectorType) Values() []FragmentSelectorType {
	return []FragmentSelectorType{
		"ProducerTimestamp",
		"ServerTimestamp",
	}
}

type HighlightColor string

// Enum values for HighlightColor
const (
	HighlightColorBlack  HighlightColor = "Black"
	HighlightColorBlue   HighlightColor = "Blue"
	HighlightColorRed    HighlightColor = "Red"
	HighlightColorGreen  HighlightColor = "Green"
	HighlightColorWhite  HighlightColor = "White"
	HighlightColorYellow HighlightColor = "Yellow"
)

// Values returns all known values for HighlightColor. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HighlightColor) Values() []HighlightColor {
	return []HighlightColor{
		"Black",
		"Blue",
		"Red",
		"Green",
		"White",
		"Yellow",
	}
}

type HorizontalTilePosition string

// Enum values for HorizontalTilePosition
const (
	HorizontalTilePositionTop    HorizontalTilePosition = "Top"
	HorizontalTilePositionBottom HorizontalTilePosition = "Bottom"
)

// Values returns all known values for HorizontalTilePosition. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HorizontalTilePosition) Values() []HorizontalTilePosition {
	return []HorizontalTilePosition{
		"Top",
		"Bottom",
	}
}

type KinesisVideoStreamPoolStatus string

// Enum values for KinesisVideoStreamPoolStatus
const (
	KinesisVideoStreamPoolStatusCreating KinesisVideoStreamPoolStatus = "CREATING"
	KinesisVideoStreamPoolStatusActive   KinesisVideoStreamPoolStatus = "ACTIVE"
	KinesisVideoStreamPoolStatusUpdating KinesisVideoStreamPoolStatus = "UPDATING"
	KinesisVideoStreamPoolStatusDeleting KinesisVideoStreamPoolStatus = "DELETING"
	KinesisVideoStreamPoolStatusFailed   KinesisVideoStreamPoolStatus = "FAILED"
)

// Values returns all known values for KinesisVideoStreamPoolStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KinesisVideoStreamPoolStatus) Values() []KinesisVideoStreamPoolStatus {
	return []KinesisVideoStreamPoolStatus{
		"CREATING",
		"ACTIVE",
		"UPDATING",
		"DELETING",
		"FAILED",
	}
}

type LayoutOption string

// Enum values for LayoutOption
const (
	LayoutOptionGridView LayoutOption = "GridView"
)

// Values returns all known values for LayoutOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LayoutOption) Values() []LayoutOption {
	return []LayoutOption{
		"GridView",
	}
}

type LiveConnectorMuxType string

// Enum values for LiveConnectorMuxType
const (
	LiveConnectorMuxTypeAudioWithCompositedVideo    LiveConnectorMuxType = "AudioWithCompositedVideo"
	LiveConnectorMuxTypeAudioWithActiveSpeakerVideo LiveConnectorMuxType = "AudioWithActiveSpeakerVideo"
)

// Values returns all known values for LiveConnectorMuxType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LiveConnectorMuxType) Values() []LiveConnectorMuxType {
	return []LiveConnectorMuxType{
		"AudioWithCompositedVideo",
		"AudioWithActiveSpeakerVideo",
	}
}

type LiveConnectorSinkType string

// Enum values for LiveConnectorSinkType
const (
	LiveConnectorSinkTypeRtmp LiveConnectorSinkType = "RTMP"
)

// Values returns all known values for LiveConnectorSinkType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LiveConnectorSinkType) Values() []LiveConnectorSinkType {
	return []LiveConnectorSinkType{
		"RTMP",
	}
}

type LiveConnectorSourceType string

// Enum values for LiveConnectorSourceType
const (
	LiveConnectorSourceTypeChimeSdkMeeting LiveConnectorSourceType = "ChimeSdkMeeting"
)

// Values returns all known values for LiveConnectorSourceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LiveConnectorSourceType) Values() []LiveConnectorSourceType {
	return []LiveConnectorSourceType{
		"ChimeSdkMeeting",
	}
}

type MediaEncoding string

// Enum values for MediaEncoding
const (
	MediaEncodingPcm MediaEncoding = "pcm"
)

// Values returns all known values for MediaEncoding. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaEncoding) Values() []MediaEncoding {
	return []MediaEncoding{
		"pcm",
	}
}

type MediaInsightsPipelineConfigurationElementType string

// Enum values for MediaInsightsPipelineConfigurationElementType
const (
	MediaInsightsPipelineConfigurationElementTypeAmazonTranscribeCallAnalyticsProcessor MediaInsightsPipelineConfigurationElementType = "AmazonTranscribeCallAnalyticsProcessor"
	MediaInsightsPipelineConfigurationElementTypeVoiceAnalyticsProcessor                MediaInsightsPipelineConfigurationElementType = "VoiceAnalyticsProcessor"
	MediaInsightsPipelineConfigurationElementTypeAmazonTranscribeProcessor              MediaInsightsPipelineConfigurationElementType = "AmazonTranscribeProcessor"
	MediaInsightsPipelineConfigurationElementTypeKinesisDataStreamSink                  MediaInsightsPipelineConfigurationElementType = "KinesisDataStreamSink"
	MediaInsightsPipelineConfigurationElementTypeLambdaFunctionSink                     MediaInsightsPipelineConfigurationElementType = "LambdaFunctionSink"
	MediaInsightsPipelineConfigurationElementTypeSqsQueueSink                           MediaInsightsPipelineConfigurationElementType = "SqsQueueSink"
	MediaInsightsPipelineConfigurationElementTypeSnsTopicSink                           MediaInsightsPipelineConfigurationElementType = "SnsTopicSink"
	MediaInsightsPipelineConfigurationElementTypeS3RecordingSink                        MediaInsightsPipelineConfigurationElementType = "S3RecordingSink"
	MediaInsightsPipelineConfigurationElementTypeVoiceEnhancementSink                   MediaInsightsPipelineConfigurationElementType = "VoiceEnhancementSink"
)

// Values returns all known values for
// MediaInsightsPipelineConfigurationElementType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaInsightsPipelineConfigurationElementType) Values() []MediaInsightsPipelineConfigurationElementType {
	return []MediaInsightsPipelineConfigurationElementType{
		"AmazonTranscribeCallAnalyticsProcessor",
		"VoiceAnalyticsProcessor",
		"AmazonTranscribeProcessor",
		"KinesisDataStreamSink",
		"LambdaFunctionSink",
		"SqsQueueSink",
		"SnsTopicSink",
		"S3RecordingSink",
		"VoiceEnhancementSink",
	}
}

type MediaPipelineElementStatus string

// Enum values for MediaPipelineElementStatus
const (
	MediaPipelineElementStatusNotStarted   MediaPipelineElementStatus = "NotStarted"
	MediaPipelineElementStatusNotSupported MediaPipelineElementStatus = "NotSupported"
	MediaPipelineElementStatusInitializing MediaPipelineElementStatus = "Initializing"
	MediaPipelineElementStatusInProgress   MediaPipelineElementStatus = "InProgress"
	MediaPipelineElementStatusFailed       MediaPipelineElementStatus = "Failed"
	MediaPipelineElementStatusStopping     MediaPipelineElementStatus = "Stopping"
	MediaPipelineElementStatusStopped      MediaPipelineElementStatus = "Stopped"
	MediaPipelineElementStatusPaused       MediaPipelineElementStatus = "Paused"
)

// Values returns all known values for MediaPipelineElementStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaPipelineElementStatus) Values() []MediaPipelineElementStatus {
	return []MediaPipelineElementStatus{
		"NotStarted",
		"NotSupported",
		"Initializing",
		"InProgress",
		"Failed",
		"Stopping",
		"Stopped",
		"Paused",
	}
}

type MediaPipelineSinkType string

// Enum values for MediaPipelineSinkType
const (
	MediaPipelineSinkTypeS3Bucket MediaPipelineSinkType = "S3Bucket"
)

// Values returns all known values for MediaPipelineSinkType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaPipelineSinkType) Values() []MediaPipelineSinkType {
	return []MediaPipelineSinkType{
		"S3Bucket",
	}
}

type MediaPipelineSourceType string

// Enum values for MediaPipelineSourceType
const (
	MediaPipelineSourceTypeChimeSdkMeeting MediaPipelineSourceType = "ChimeSdkMeeting"
)

// Values returns all known values for MediaPipelineSourceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaPipelineSourceType) Values() []MediaPipelineSourceType {
	return []MediaPipelineSourceType{
		"ChimeSdkMeeting",
	}
}

type MediaPipelineStatus string

// Enum values for MediaPipelineStatus
const (
	MediaPipelineStatusInitializing MediaPipelineStatus = "Initializing"
	MediaPipelineStatusInProgress   MediaPipelineStatus = "InProgress"
	MediaPipelineStatusFailed       MediaPipelineStatus = "Failed"
	MediaPipelineStatusStopping     MediaPipelineStatus = "Stopping"
	MediaPipelineStatusStopped      MediaPipelineStatus = "Stopped"
	MediaPipelineStatusPaused       MediaPipelineStatus = "Paused"
	MediaPipelineStatusNotStarted   MediaPipelineStatus = "NotStarted"
)

// Values returns all known values for MediaPipelineStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaPipelineStatus) Values() []MediaPipelineStatus {
	return []MediaPipelineStatus{
		"Initializing",
		"InProgress",
		"Failed",
		"Stopping",
		"Stopped",
		"Paused",
		"NotStarted",
	}
}

type MediaPipelineStatusUpdate string

// Enum values for MediaPipelineStatusUpdate
const (
	MediaPipelineStatusUpdatePause  MediaPipelineStatusUpdate = "Pause"
	MediaPipelineStatusUpdateResume MediaPipelineStatusUpdate = "Resume"
)

// Values returns all known values for MediaPipelineStatusUpdate. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaPipelineStatusUpdate) Values() []MediaPipelineStatusUpdate {
	return []MediaPipelineStatusUpdate{
		"Pause",
		"Resume",
	}
}

type MediaPipelineTaskStatus string

// Enum values for MediaPipelineTaskStatus
const (
	MediaPipelineTaskStatusNotStarted   MediaPipelineTaskStatus = "NotStarted"
	MediaPipelineTaskStatusInitializing MediaPipelineTaskStatus = "Initializing"
	MediaPipelineTaskStatusInProgress   MediaPipelineTaskStatus = "InProgress"
	MediaPipelineTaskStatusFailed       MediaPipelineTaskStatus = "Failed"
	MediaPipelineTaskStatusStopping     MediaPipelineTaskStatus = "Stopping"
	MediaPipelineTaskStatusStopped      MediaPipelineTaskStatus = "Stopped"
)

// Values returns all known values for MediaPipelineTaskStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaPipelineTaskStatus) Values() []MediaPipelineTaskStatus {
	return []MediaPipelineTaskStatus{
		"NotStarted",
		"Initializing",
		"InProgress",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type MediaStreamPipelineSinkType string

// Enum values for MediaStreamPipelineSinkType
const (
	MediaStreamPipelineSinkTypeKinesisVideoStreamPool MediaStreamPipelineSinkType = "KinesisVideoStreamPool"
)

// Values returns all known values for MediaStreamPipelineSinkType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaStreamPipelineSinkType) Values() []MediaStreamPipelineSinkType {
	return []MediaStreamPipelineSinkType{
		"KinesisVideoStreamPool",
	}
}

type MediaStreamType string

// Enum values for MediaStreamType
const (
	MediaStreamTypeMixedAudio      MediaStreamType = "MixedAudio"
	MediaStreamTypeIndividualAudio MediaStreamType = "IndividualAudio"
)

// Values returns all known values for MediaStreamType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MediaStreamType) Values() []MediaStreamType {
	return []MediaStreamType{
		"MixedAudio",
		"IndividualAudio",
	}
}

type PartialResultsStability string

// Enum values for PartialResultsStability
const (
	PartialResultsStabilityHigh   PartialResultsStability = "high"
	PartialResultsStabilityMedium PartialResultsStability = "medium"
	PartialResultsStabilityLow    PartialResultsStability = "low"
)

// Values returns all known values for PartialResultsStability. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PartialResultsStability) Values() []PartialResultsStability {
	return []PartialResultsStability{
		"high",
		"medium",
		"low",
	}
}

type ParticipantRole string

// Enum values for ParticipantRole
const (
	ParticipantRoleAgent    ParticipantRole = "AGENT"
	ParticipantRoleCustomer ParticipantRole = "CUSTOMER"
)

// Values returns all known values for ParticipantRole. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParticipantRole) Values() []ParticipantRole {
	return []ParticipantRole{
		"AGENT",
		"CUSTOMER",
	}
}

type PresenterPosition string

// Enum values for PresenterPosition
const (
	PresenterPositionTopLeft     PresenterPosition = "TopLeft"
	PresenterPositionTopRight    PresenterPosition = "TopRight"
	PresenterPositionBottomLeft  PresenterPosition = "BottomLeft"
	PresenterPositionBottomRight PresenterPosition = "BottomRight"
)

// Values returns all known values for PresenterPosition. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PresenterPosition) Values() []PresenterPosition {
	return []PresenterPosition{
		"TopLeft",
		"TopRight",
		"BottomLeft",
		"BottomRight",
	}
}

type RealTimeAlertRuleType string

// Enum values for RealTimeAlertRuleType
const (
	RealTimeAlertRuleTypeKeywordMatch   RealTimeAlertRuleType = "KeywordMatch"
	RealTimeAlertRuleTypeSentiment      RealTimeAlertRuleType = "Sentiment"
	RealTimeAlertRuleTypeIssueDetection RealTimeAlertRuleType = "IssueDetection"
)

// Values returns all known values for RealTimeAlertRuleType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RealTimeAlertRuleType) Values() []RealTimeAlertRuleType {
	return []RealTimeAlertRuleType{
		"KeywordMatch",
		"Sentiment",
		"IssueDetection",
	}
}

type RecordingFileFormat string

// Enum values for RecordingFileFormat
const (
	RecordingFileFormatWav  RecordingFileFormat = "Wav"
	RecordingFileFormatOpus RecordingFileFormat = "Opus"
)

// Values returns all known values for RecordingFileFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecordingFileFormat) Values() []RecordingFileFormat {
	return []RecordingFileFormat{
		"Wav",
		"Opus",
	}
}

type ResolutionOption string

// Enum values for ResolutionOption
const (
	ResolutionOptionHd  ResolutionOption = "HD"
	ResolutionOptionFhd ResolutionOption = "FHD"
)

// Values returns all known values for ResolutionOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResolutionOption) Values() []ResolutionOption {
	return []ResolutionOption{
		"HD",
		"FHD",
	}
}

type SentimentType string

// Enum values for SentimentType
const (
	SentimentTypeNegative SentimentType = "NEGATIVE"
)

// Values returns all known values for SentimentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SentimentType) Values() []SentimentType {
	return []SentimentType{
		"NEGATIVE",
	}
}

type TileOrder string

// Enum values for TileOrder
const (
	TileOrderJoinSequence    TileOrder = "JoinSequence"
	TileOrderSpeakerSequence TileOrder = "SpeakerSequence"
)

// Values returns all known values for TileOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TileOrder) Values() []TileOrder {
	return []TileOrder{
		"JoinSequence",
		"SpeakerSequence",
	}
}

type VerticalTilePosition string

// Enum values for VerticalTilePosition
const (
	VerticalTilePositionLeft  VerticalTilePosition = "Left"
	VerticalTilePositionRight VerticalTilePosition = "Right"
)

// Values returns all known values for VerticalTilePosition. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VerticalTilePosition) Values() []VerticalTilePosition {
	return []VerticalTilePosition{
		"Left",
		"Right",
	}
}

type VideoMuxType string

// Enum values for VideoMuxType
const (
	VideoMuxTypeVideoOnly VideoMuxType = "VideoOnly"
)

// Values returns all known values for VideoMuxType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VideoMuxType) Values() []VideoMuxType {
	return []VideoMuxType{
		"VideoOnly",
	}
}

type VocabularyFilterMethod string

// Enum values for VocabularyFilterMethod
const (
	VocabularyFilterMethodRemove VocabularyFilterMethod = "remove"
	VocabularyFilterMethodMask   VocabularyFilterMethod = "mask"
	VocabularyFilterMethodTag    VocabularyFilterMethod = "tag"
)

// Values returns all known values for VocabularyFilterMethod. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VocabularyFilterMethod) Values() []VocabularyFilterMethod {
	return []VocabularyFilterMethod{
		"remove",
		"mask",
		"tag",
	}
}

type VoiceAnalyticsConfigurationStatus string

// Enum values for VoiceAnalyticsConfigurationStatus
const (
	VoiceAnalyticsConfigurationStatusEnabled  VoiceAnalyticsConfigurationStatus = "Enabled"
	VoiceAnalyticsConfigurationStatusDisabled VoiceAnalyticsConfigurationStatus = "Disabled"
)

// Values returns all known values for VoiceAnalyticsConfigurationStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VoiceAnalyticsConfigurationStatus) Values() []VoiceAnalyticsConfigurationStatus {
	return []VoiceAnalyticsConfigurationStatus{
		"Enabled",
		"Disabled",
	}
}

type VoiceAnalyticsLanguageCode string

// Enum values for VoiceAnalyticsLanguageCode
const (
	VoiceAnalyticsLanguageCodeEnUs VoiceAnalyticsLanguageCode = "en-US"
)

// Values returns all known values for VoiceAnalyticsLanguageCode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VoiceAnalyticsLanguageCode) Values() []VoiceAnalyticsLanguageCode {
	return []VoiceAnalyticsLanguageCode{
		"en-US",
	}
}
