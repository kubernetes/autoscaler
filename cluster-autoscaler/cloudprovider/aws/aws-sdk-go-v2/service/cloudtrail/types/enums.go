// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type BillingMode string

// Enum values for BillingMode
const (
	BillingModeExtendableRetentionPricing BillingMode = "EXTENDABLE_RETENTION_PRICING"
	BillingModeFixedRetentionPricing      BillingMode = "FIXED_RETENTION_PRICING"
)

// Values returns all known values for BillingMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BillingMode) Values() []BillingMode {
	return []BillingMode{
		"EXTENDABLE_RETENTION_PRICING",
		"FIXED_RETENTION_PRICING",
	}
}

type DashboardStatus string

// Enum values for DashboardStatus
const (
	DashboardStatusCreating DashboardStatus = "CREATING"
	DashboardStatusCreated  DashboardStatus = "CREATED"
	DashboardStatusUpdating DashboardStatus = "UPDATING"
	DashboardStatusUpdated  DashboardStatus = "UPDATED"
	DashboardStatusDeleting DashboardStatus = "DELETING"
)

// Values returns all known values for DashboardStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DashboardStatus) Values() []DashboardStatus {
	return []DashboardStatus{
		"CREATING",
		"CREATED",
		"UPDATING",
		"UPDATED",
		"DELETING",
	}
}

type DashboardType string

// Enum values for DashboardType
const (
	DashboardTypeManaged DashboardType = "MANAGED"
	DashboardTypeCustom  DashboardType = "CUSTOM"
)

// Values returns all known values for DashboardType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DashboardType) Values() []DashboardType {
	return []DashboardType{
		"MANAGED",
		"CUSTOM",
	}
}

type DeliveryStatus string

// Enum values for DeliveryStatus
const (
	DeliveryStatusSuccess                 DeliveryStatus = "SUCCESS"
	DeliveryStatusFailed                  DeliveryStatus = "FAILED"
	DeliveryStatusFailedSigningFile       DeliveryStatus = "FAILED_SIGNING_FILE"
	DeliveryStatusPending                 DeliveryStatus = "PENDING"
	DeliveryStatusResourceNotFound        DeliveryStatus = "RESOURCE_NOT_FOUND"
	DeliveryStatusAccessDenied            DeliveryStatus = "ACCESS_DENIED"
	DeliveryStatusAccessDeniedSigningFile DeliveryStatus = "ACCESS_DENIED_SIGNING_FILE"
	DeliveryStatusCancelled               DeliveryStatus = "CANCELLED"
	DeliveryStatusUnknown                 DeliveryStatus = "UNKNOWN"
)

// Values returns all known values for DeliveryStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeliveryStatus) Values() []DeliveryStatus {
	return []DeliveryStatus{
		"SUCCESS",
		"FAILED",
		"FAILED_SIGNING_FILE",
		"PENDING",
		"RESOURCE_NOT_FOUND",
		"ACCESS_DENIED",
		"ACCESS_DENIED_SIGNING_FILE",
		"CANCELLED",
		"UNKNOWN",
	}
}

type DestinationType string

// Enum values for DestinationType
const (
	DestinationTypeEventDataStore DestinationType = "EVENT_DATA_STORE"
	DestinationTypeAwsService     DestinationType = "AWS_SERVICE"
)

// Values returns all known values for DestinationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DestinationType) Values() []DestinationType {
	return []DestinationType{
		"EVENT_DATA_STORE",
		"AWS_SERVICE",
	}
}

type EventCategory string

// Enum values for EventCategory
const (
	EventCategoryInsight EventCategory = "insight"
)

// Values returns all known values for EventCategory. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventCategory) Values() []EventCategory {
	return []EventCategory{
		"insight",
	}
}

type EventDataStoreStatus string

// Enum values for EventDataStoreStatus
const (
	EventDataStoreStatusCreated           EventDataStoreStatus = "CREATED"
	EventDataStoreStatusEnabled           EventDataStoreStatus = "ENABLED"
	EventDataStoreStatusPendingDeletion   EventDataStoreStatus = "PENDING_DELETION"
	EventDataStoreStatusStartingIngestion EventDataStoreStatus = "STARTING_INGESTION"
	EventDataStoreStatusStoppingIngestion EventDataStoreStatus = "STOPPING_INGESTION"
	EventDataStoreStatusStoppedIngestion  EventDataStoreStatus = "STOPPED_INGESTION"
)

// Values returns all known values for EventDataStoreStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventDataStoreStatus) Values() []EventDataStoreStatus {
	return []EventDataStoreStatus{
		"CREATED",
		"ENABLED",
		"PENDING_DELETION",
		"STARTING_INGESTION",
		"STOPPING_INGESTION",
		"STOPPED_INGESTION",
	}
}

type FederationStatus string

// Enum values for FederationStatus
const (
	FederationStatusEnabling  FederationStatus = "ENABLING"
	FederationStatusEnabled   FederationStatus = "ENABLED"
	FederationStatusDisabling FederationStatus = "DISABLING"
	FederationStatusDisabled  FederationStatus = "DISABLED"
)

// Values returns all known values for FederationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FederationStatus) Values() []FederationStatus {
	return []FederationStatus{
		"ENABLING",
		"ENABLED",
		"DISABLING",
		"DISABLED",
	}
}

type ImportFailureStatus string

// Enum values for ImportFailureStatus
const (
	ImportFailureStatusFailed    ImportFailureStatus = "FAILED"
	ImportFailureStatusRetry     ImportFailureStatus = "RETRY"
	ImportFailureStatusSucceeded ImportFailureStatus = "SUCCEEDED"
)

// Values returns all known values for ImportFailureStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportFailureStatus) Values() []ImportFailureStatus {
	return []ImportFailureStatus{
		"FAILED",
		"RETRY",
		"SUCCEEDED",
	}
}

type ImportStatus string

// Enum values for ImportStatus
const (
	ImportStatusInitializing ImportStatus = "INITIALIZING"
	ImportStatusInProgress   ImportStatus = "IN_PROGRESS"
	ImportStatusFailed       ImportStatus = "FAILED"
	ImportStatusStopped      ImportStatus = "STOPPED"
	ImportStatusCompleted    ImportStatus = "COMPLETED"
)

// Values returns all known values for ImportStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportStatus) Values() []ImportStatus {
	return []ImportStatus{
		"INITIALIZING",
		"IN_PROGRESS",
		"FAILED",
		"STOPPED",
		"COMPLETED",
	}
}

type InsightsMetricDataType string

// Enum values for InsightsMetricDataType
const (
	InsightsMetricDataTypeFillWithZeros InsightsMetricDataType = "FillWithZeros"
	InsightsMetricDataTypeNonZeroData   InsightsMetricDataType = "NonZeroData"
)

// Values returns all known values for InsightsMetricDataType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InsightsMetricDataType) Values() []InsightsMetricDataType {
	return []InsightsMetricDataType{
		"FillWithZeros",
		"NonZeroData",
	}
}

type InsightType string

// Enum values for InsightType
const (
	InsightTypeApiCallRateInsight  InsightType = "ApiCallRateInsight"
	InsightTypeApiErrorRateInsight InsightType = "ApiErrorRateInsight"
)

// Values returns all known values for InsightType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InsightType) Values() []InsightType {
	return []InsightType{
		"ApiCallRateInsight",
		"ApiErrorRateInsight",
	}
}

type LookupAttributeKey string

// Enum values for LookupAttributeKey
const (
	LookupAttributeKeyEventId      LookupAttributeKey = "EventId"
	LookupAttributeKeyEventName    LookupAttributeKey = "EventName"
	LookupAttributeKeyReadOnly     LookupAttributeKey = "ReadOnly"
	LookupAttributeKeyUsername     LookupAttributeKey = "Username"
	LookupAttributeKeyResourceType LookupAttributeKey = "ResourceType"
	LookupAttributeKeyResourceName LookupAttributeKey = "ResourceName"
	LookupAttributeKeyEventSource  LookupAttributeKey = "EventSource"
	LookupAttributeKeyAccessKeyId  LookupAttributeKey = "AccessKeyId"
)

// Values returns all known values for LookupAttributeKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LookupAttributeKey) Values() []LookupAttributeKey {
	return []LookupAttributeKey{
		"EventId",
		"EventName",
		"ReadOnly",
		"Username",
		"ResourceType",
		"ResourceName",
		"EventSource",
		"AccessKeyId",
	}
}

type MaxEventSize string

// Enum values for MaxEventSize
const (
	MaxEventSizeStandard MaxEventSize = "Standard"
	MaxEventSizeLarge    MaxEventSize = "Large"
)

// Values returns all known values for MaxEventSize. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MaxEventSize) Values() []MaxEventSize {
	return []MaxEventSize{
		"Standard",
		"Large",
	}
}

type QueryStatus string

// Enum values for QueryStatus
const (
	QueryStatusQueued    QueryStatus = "QUEUED"
	QueryStatusRunning   QueryStatus = "RUNNING"
	QueryStatusFinished  QueryStatus = "FINISHED"
	QueryStatusFailed    QueryStatus = "FAILED"
	QueryStatusCancelled QueryStatus = "CANCELLED"
	QueryStatusTimedOut  QueryStatus = "TIMED_OUT"
)

// Values returns all known values for QueryStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueryStatus) Values() []QueryStatus {
	return []QueryStatus{
		"QUEUED",
		"RUNNING",
		"FINISHED",
		"FAILED",
		"CANCELLED",
		"TIMED_OUT",
	}
}

type ReadWriteType string

// Enum values for ReadWriteType
const (
	ReadWriteTypeReadOnly  ReadWriteType = "ReadOnly"
	ReadWriteTypeWriteOnly ReadWriteType = "WriteOnly"
	ReadWriteTypeAll       ReadWriteType = "All"
)

// Values returns all known values for ReadWriteType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReadWriteType) Values() []ReadWriteType {
	return []ReadWriteType{
		"ReadOnly",
		"WriteOnly",
		"All",
	}
}

type RefreshScheduleFrequencyUnit string

// Enum values for RefreshScheduleFrequencyUnit
const (
	RefreshScheduleFrequencyUnitHours RefreshScheduleFrequencyUnit = "HOURS"
	RefreshScheduleFrequencyUnitDays  RefreshScheduleFrequencyUnit = "DAYS"
)

// Values returns all known values for RefreshScheduleFrequencyUnit. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RefreshScheduleFrequencyUnit) Values() []RefreshScheduleFrequencyUnit {
	return []RefreshScheduleFrequencyUnit{
		"HOURS",
		"DAYS",
	}
}

type RefreshScheduleStatus string

// Enum values for RefreshScheduleStatus
const (
	RefreshScheduleStatusEnabled  RefreshScheduleStatus = "ENABLED"
	RefreshScheduleStatusDisabled RefreshScheduleStatus = "DISABLED"
)

// Values returns all known values for RefreshScheduleStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RefreshScheduleStatus) Values() []RefreshScheduleStatus {
	return []RefreshScheduleStatus{
		"ENABLED",
		"DISABLED",
	}
}

type Type string

// Enum values for Type
const (
	TypeTagContext     Type = "TagContext"
	TypeRequestContext Type = "RequestContext"
)

// Values returns all known values for Type. Note that this can be expanded in the
// future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Type) Values() []Type {
	return []Type{
		"TagContext",
		"RequestContext",
	}
}
