// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type BehaviorOnMXFailure string

// Enum values for BehaviorOnMXFailure
const (
	BehaviorOnMXFailureUseDefaultValue BehaviorOnMXFailure = "UseDefaultValue"
	BehaviorOnMXFailureRejectMessage   BehaviorOnMXFailure = "RejectMessage"
)

// Values returns all known values for BehaviorOnMXFailure. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BehaviorOnMXFailure) Values() []BehaviorOnMXFailure {
	return []BehaviorOnMXFailure{
		"UseDefaultValue",
		"RejectMessage",
	}
}

type BounceType string

// Enum values for BounceType
const (
	BounceTypeDoesNotExist     BounceType = "DoesNotExist"
	BounceTypeMessageTooLarge  BounceType = "MessageTooLarge"
	BounceTypeExceededQuota    BounceType = "ExceededQuota"
	BounceTypeContentRejected  BounceType = "ContentRejected"
	BounceTypeUndefined        BounceType = "Undefined"
	BounceTypeTemporaryFailure BounceType = "TemporaryFailure"
)

// Values returns all known values for BounceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BounceType) Values() []BounceType {
	return []BounceType{
		"DoesNotExist",
		"MessageTooLarge",
		"ExceededQuota",
		"ContentRejected",
		"Undefined",
		"TemporaryFailure",
	}
}

type BulkEmailStatus string

// Enum values for BulkEmailStatus
const (
	BulkEmailStatusSuccess                       BulkEmailStatus = "Success"
	BulkEmailStatusMessageRejected               BulkEmailStatus = "MessageRejected"
	BulkEmailStatusMailFromDomainNotVerified     BulkEmailStatus = "MailFromDomainNotVerified"
	BulkEmailStatusConfigurationSetDoesNotExist  BulkEmailStatus = "ConfigurationSetDoesNotExist"
	BulkEmailStatusTemplateDoesNotExist          BulkEmailStatus = "TemplateDoesNotExist"
	BulkEmailStatusAccountSuspended              BulkEmailStatus = "AccountSuspended"
	BulkEmailStatusAccountThrottled              BulkEmailStatus = "AccountThrottled"
	BulkEmailStatusAccountDailyQuotaExceeded     BulkEmailStatus = "AccountDailyQuotaExceeded"
	BulkEmailStatusInvalidSendingPoolName        BulkEmailStatus = "InvalidSendingPoolName"
	BulkEmailStatusAccountSendingPaused          BulkEmailStatus = "AccountSendingPaused"
	BulkEmailStatusConfigurationSetSendingPaused BulkEmailStatus = "ConfigurationSetSendingPaused"
	BulkEmailStatusInvalidParameterValue         BulkEmailStatus = "InvalidParameterValue"
	BulkEmailStatusTransientFailure              BulkEmailStatus = "TransientFailure"
	BulkEmailStatusFailed                        BulkEmailStatus = "Failed"
)

// Values returns all known values for BulkEmailStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BulkEmailStatus) Values() []BulkEmailStatus {
	return []BulkEmailStatus{
		"Success",
		"MessageRejected",
		"MailFromDomainNotVerified",
		"ConfigurationSetDoesNotExist",
		"TemplateDoesNotExist",
		"AccountSuspended",
		"AccountThrottled",
		"AccountDailyQuotaExceeded",
		"InvalidSendingPoolName",
		"AccountSendingPaused",
		"ConfigurationSetSendingPaused",
		"InvalidParameterValue",
		"TransientFailure",
		"Failed",
	}
}

type ConfigurationSetAttribute string

// Enum values for ConfigurationSetAttribute
const (
	ConfigurationSetAttributeEventDestinations ConfigurationSetAttribute = "eventDestinations"
	ConfigurationSetAttributeTrackingOptions   ConfigurationSetAttribute = "trackingOptions"
	ConfigurationSetAttributeDeliveryOptions   ConfigurationSetAttribute = "deliveryOptions"
	ConfigurationSetAttributeReputationOptions ConfigurationSetAttribute = "reputationOptions"
)

// Values returns all known values for ConfigurationSetAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfigurationSetAttribute) Values() []ConfigurationSetAttribute {
	return []ConfigurationSetAttribute{
		"eventDestinations",
		"trackingOptions",
		"deliveryOptions",
		"reputationOptions",
	}
}

type CustomMailFromStatus string

// Enum values for CustomMailFromStatus
const (
	CustomMailFromStatusPending          CustomMailFromStatus = "Pending"
	CustomMailFromStatusSuccess          CustomMailFromStatus = "Success"
	CustomMailFromStatusFailed           CustomMailFromStatus = "Failed"
	CustomMailFromStatusTemporaryFailure CustomMailFromStatus = "TemporaryFailure"
)

// Values returns all known values for CustomMailFromStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CustomMailFromStatus) Values() []CustomMailFromStatus {
	return []CustomMailFromStatus{
		"Pending",
		"Success",
		"Failed",
		"TemporaryFailure",
	}
}

type DimensionValueSource string

// Enum values for DimensionValueSource
const (
	DimensionValueSourceMessageTag  DimensionValueSource = "messageTag"
	DimensionValueSourceEmailHeader DimensionValueSource = "emailHeader"
	DimensionValueSourceLinkTag     DimensionValueSource = "linkTag"
)

// Values returns all known values for DimensionValueSource. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DimensionValueSource) Values() []DimensionValueSource {
	return []DimensionValueSource{
		"messageTag",
		"emailHeader",
		"linkTag",
	}
}

type DsnAction string

// Enum values for DsnAction
const (
	DsnActionFailed    DsnAction = "failed"
	DsnActionDelayed   DsnAction = "delayed"
	DsnActionDelivered DsnAction = "delivered"
	DsnActionRelayed   DsnAction = "relayed"
	DsnActionExpanded  DsnAction = "expanded"
)

// Values returns all known values for DsnAction. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DsnAction) Values() []DsnAction {
	return []DsnAction{
		"failed",
		"delayed",
		"delivered",
		"relayed",
		"expanded",
	}
}

type EventType string

// Enum values for EventType
const (
	EventTypeSend             EventType = "send"
	EventTypeReject           EventType = "reject"
	EventTypeBounce           EventType = "bounce"
	EventTypeComplaint        EventType = "complaint"
	EventTypeDelivery         EventType = "delivery"
	EventTypeOpen             EventType = "open"
	EventTypeClick            EventType = "click"
	EventTypeRenderingFailure EventType = "renderingFailure"
)

// Values returns all known values for EventType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventType) Values() []EventType {
	return []EventType{
		"send",
		"reject",
		"bounce",
		"complaint",
		"delivery",
		"open",
		"click",
		"renderingFailure",
	}
}

type IdentityType string

// Enum values for IdentityType
const (
	IdentityTypeEmailAddress IdentityType = "EmailAddress"
	IdentityTypeDomain       IdentityType = "Domain"
)

// Values returns all known values for IdentityType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IdentityType) Values() []IdentityType {
	return []IdentityType{
		"EmailAddress",
		"Domain",
	}
}

type InvocationType string

// Enum values for InvocationType
const (
	InvocationTypeEvent           InvocationType = "Event"
	InvocationTypeRequestResponse InvocationType = "RequestResponse"
)

// Values returns all known values for InvocationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InvocationType) Values() []InvocationType {
	return []InvocationType{
		"Event",
		"RequestResponse",
	}
}

type NotificationType string

// Enum values for NotificationType
const (
	NotificationTypeBounce    NotificationType = "Bounce"
	NotificationTypeComplaint NotificationType = "Complaint"
	NotificationTypeDelivery  NotificationType = "Delivery"
)

// Values returns all known values for NotificationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotificationType) Values() []NotificationType {
	return []NotificationType{
		"Bounce",
		"Complaint",
		"Delivery",
	}
}

type ReceiptFilterPolicy string

// Enum values for ReceiptFilterPolicy
const (
	ReceiptFilterPolicyBlock ReceiptFilterPolicy = "Block"
	ReceiptFilterPolicyAllow ReceiptFilterPolicy = "Allow"
)

// Values returns all known values for ReceiptFilterPolicy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReceiptFilterPolicy) Values() []ReceiptFilterPolicy {
	return []ReceiptFilterPolicy{
		"Block",
		"Allow",
	}
}

type SNSActionEncoding string

// Enum values for SNSActionEncoding
const (
	SNSActionEncodingUtf8   SNSActionEncoding = "UTF-8"
	SNSActionEncodingBase64 SNSActionEncoding = "Base64"
)

// Values returns all known values for SNSActionEncoding. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SNSActionEncoding) Values() []SNSActionEncoding {
	return []SNSActionEncoding{
		"UTF-8",
		"Base64",
	}
}

type StopScope string

// Enum values for StopScope
const (
	StopScopeRuleSet StopScope = "RuleSet"
)

// Values returns all known values for StopScope. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StopScope) Values() []StopScope {
	return []StopScope{
		"RuleSet",
	}
}

type TlsPolicy string

// Enum values for TlsPolicy
const (
	TlsPolicyRequire  TlsPolicy = "Require"
	TlsPolicyOptional TlsPolicy = "Optional"
)

// Values returns all known values for TlsPolicy. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TlsPolicy) Values() []TlsPolicy {
	return []TlsPolicy{
		"Require",
		"Optional",
	}
}

type VerificationStatus string

// Enum values for VerificationStatus
const (
	VerificationStatusPending          VerificationStatus = "Pending"
	VerificationStatusSuccess          VerificationStatus = "Success"
	VerificationStatusFailed           VerificationStatus = "Failed"
	VerificationStatusTemporaryFailure VerificationStatus = "TemporaryFailure"
	VerificationStatusNotStarted       VerificationStatus = "NotStarted"
)

// Values returns all known values for VerificationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VerificationStatus) Values() []VerificationStatus {
	return []VerificationStatus{
		"Pending",
		"Success",
		"Failed",
		"TemporaryFailure",
		"NotStarted",
	}
}
