// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AggregateType string

// Enum values for AggregateType
const (
	AggregateTypeAverage           AggregateType = "AVERAGE"
	AggregateTypeCount             AggregateType = "COUNT"
	AggregateTypeMaximum           AggregateType = "MAXIMUM"
	AggregateTypeMinimum           AggregateType = "MINIMUM"
	AggregateTypeSum               AggregateType = "SUM"
	AggregateTypeStandardDeviation AggregateType = "STANDARD_DEVIATION"
)

// Values returns all known values for AggregateType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AggregateType) Values() []AggregateType {
	return []AggregateType{
		"AVERAGE",
		"COUNT",
		"MAXIMUM",
		"MINIMUM",
		"SUM",
		"STANDARD_DEVIATION",
	}
}

type AssetErrorCode string

// Enum values for AssetErrorCode
const (
	AssetErrorCodeInternalFailure AssetErrorCode = "INTERNAL_FAILURE"
)

// Values returns all known values for AssetErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssetErrorCode) Values() []AssetErrorCode {
	return []AssetErrorCode{
		"INTERNAL_FAILURE",
	}
}

type AssetModelState string

// Enum values for AssetModelState
const (
	AssetModelStateCreating    AssetModelState = "CREATING"
	AssetModelStateActive      AssetModelState = "ACTIVE"
	AssetModelStateUpdating    AssetModelState = "UPDATING"
	AssetModelStatePropagating AssetModelState = "PROPAGATING"
	AssetModelStateDeleting    AssetModelState = "DELETING"
	AssetModelStateFailed      AssetModelState = "FAILED"
)

// Values returns all known values for AssetModelState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssetModelState) Values() []AssetModelState {
	return []AssetModelState{
		"CREATING",
		"ACTIVE",
		"UPDATING",
		"PROPAGATING",
		"DELETING",
		"FAILED",
	}
}

type AssetModelType string

// Enum values for AssetModelType
const (
	AssetModelTypeAssetModel     AssetModelType = "ASSET_MODEL"
	AssetModelTypeComponentModel AssetModelType = "COMPONENT_MODEL"
)

// Values returns all known values for AssetModelType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssetModelType) Values() []AssetModelType {
	return []AssetModelType{
		"ASSET_MODEL",
		"COMPONENT_MODEL",
	}
}

type AssetModelVersionType string

// Enum values for AssetModelVersionType
const (
	AssetModelVersionTypeLatest AssetModelVersionType = "LATEST"
	AssetModelVersionTypeActive AssetModelVersionType = "ACTIVE"
)

// Values returns all known values for AssetModelVersionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssetModelVersionType) Values() []AssetModelVersionType {
	return []AssetModelVersionType{
		"LATEST",
		"ACTIVE",
	}
}

type AssetRelationshipType string

// Enum values for AssetRelationshipType
const (
	AssetRelationshipTypeHierarchy AssetRelationshipType = "HIERARCHY"
)

// Values returns all known values for AssetRelationshipType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssetRelationshipType) Values() []AssetRelationshipType {
	return []AssetRelationshipType{
		"HIERARCHY",
	}
}

type AssetState string

// Enum values for AssetState
const (
	AssetStateCreating AssetState = "CREATING"
	AssetStateActive   AssetState = "ACTIVE"
	AssetStateUpdating AssetState = "UPDATING"
	AssetStateDeleting AssetState = "DELETING"
	AssetStateFailed   AssetState = "FAILED"
)

// Values returns all known values for AssetState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssetState) Values() []AssetState {
	return []AssetState{
		"CREATING",
		"ACTIVE",
		"UPDATING",
		"DELETING",
		"FAILED",
	}
}

type AuthMode string

// Enum values for AuthMode
const (
	AuthModeIam AuthMode = "IAM"
	AuthModeSso AuthMode = "SSO"
)

// Values returns all known values for AuthMode. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthMode) Values() []AuthMode {
	return []AuthMode{
		"IAM",
		"SSO",
	}
}

type BatchEntryCompletionStatus string

// Enum values for BatchEntryCompletionStatus
const (
	BatchEntryCompletionStatusSuccess BatchEntryCompletionStatus = "SUCCESS"
	BatchEntryCompletionStatusError   BatchEntryCompletionStatus = "ERROR"
)

// Values returns all known values for BatchEntryCompletionStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchEntryCompletionStatus) Values() []BatchEntryCompletionStatus {
	return []BatchEntryCompletionStatus{
		"SUCCESS",
		"ERROR",
	}
}

type BatchGetAssetPropertyAggregatesErrorCode string

// Enum values for BatchGetAssetPropertyAggregatesErrorCode
const (
	BatchGetAssetPropertyAggregatesErrorCodeResourceNotFoundException BatchGetAssetPropertyAggregatesErrorCode = "ResourceNotFoundException"
	BatchGetAssetPropertyAggregatesErrorCodeInvalidRequestException   BatchGetAssetPropertyAggregatesErrorCode = "InvalidRequestException"
	BatchGetAssetPropertyAggregatesErrorCodeAccessDeniedException     BatchGetAssetPropertyAggregatesErrorCode = "AccessDeniedException"
)

// Values returns all known values for BatchGetAssetPropertyAggregatesErrorCode.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchGetAssetPropertyAggregatesErrorCode) Values() []BatchGetAssetPropertyAggregatesErrorCode {
	return []BatchGetAssetPropertyAggregatesErrorCode{
		"ResourceNotFoundException",
		"InvalidRequestException",
		"AccessDeniedException",
	}
}

type BatchGetAssetPropertyValueErrorCode string

// Enum values for BatchGetAssetPropertyValueErrorCode
const (
	BatchGetAssetPropertyValueErrorCodeResourceNotFoundException BatchGetAssetPropertyValueErrorCode = "ResourceNotFoundException"
	BatchGetAssetPropertyValueErrorCodeInvalidRequestException   BatchGetAssetPropertyValueErrorCode = "InvalidRequestException"
	BatchGetAssetPropertyValueErrorCodeAccessDeniedException     BatchGetAssetPropertyValueErrorCode = "AccessDeniedException"
)

// Values returns all known values for BatchGetAssetPropertyValueErrorCode. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchGetAssetPropertyValueErrorCode) Values() []BatchGetAssetPropertyValueErrorCode {
	return []BatchGetAssetPropertyValueErrorCode{
		"ResourceNotFoundException",
		"InvalidRequestException",
		"AccessDeniedException",
	}
}

type BatchGetAssetPropertyValueHistoryErrorCode string

// Enum values for BatchGetAssetPropertyValueHistoryErrorCode
const (
	BatchGetAssetPropertyValueHistoryErrorCodeResourceNotFoundException BatchGetAssetPropertyValueHistoryErrorCode = "ResourceNotFoundException"
	BatchGetAssetPropertyValueHistoryErrorCodeInvalidRequestException   BatchGetAssetPropertyValueHistoryErrorCode = "InvalidRequestException"
	BatchGetAssetPropertyValueHistoryErrorCodeAccessDeniedException     BatchGetAssetPropertyValueHistoryErrorCode = "AccessDeniedException"
)

// Values returns all known values for BatchGetAssetPropertyValueHistoryErrorCode.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchGetAssetPropertyValueHistoryErrorCode) Values() []BatchGetAssetPropertyValueHistoryErrorCode {
	return []BatchGetAssetPropertyValueHistoryErrorCode{
		"ResourceNotFoundException",
		"InvalidRequestException",
		"AccessDeniedException",
	}
}

type BatchPutAssetPropertyValueErrorCode string

// Enum values for BatchPutAssetPropertyValueErrorCode
const (
	BatchPutAssetPropertyValueErrorCodeResourceNotFoundException     BatchPutAssetPropertyValueErrorCode = "ResourceNotFoundException"
	BatchPutAssetPropertyValueErrorCodeInvalidRequestException       BatchPutAssetPropertyValueErrorCode = "InvalidRequestException"
	BatchPutAssetPropertyValueErrorCodeInternalFailureException      BatchPutAssetPropertyValueErrorCode = "InternalFailureException"
	BatchPutAssetPropertyValueErrorCodeServiceUnavailableException   BatchPutAssetPropertyValueErrorCode = "ServiceUnavailableException"
	BatchPutAssetPropertyValueErrorCodeThrottlingException           BatchPutAssetPropertyValueErrorCode = "ThrottlingException"
	BatchPutAssetPropertyValueErrorCodeLimitExceededException        BatchPutAssetPropertyValueErrorCode = "LimitExceededException"
	BatchPutAssetPropertyValueErrorCodeConflictingOperationException BatchPutAssetPropertyValueErrorCode = "ConflictingOperationException"
	BatchPutAssetPropertyValueErrorCodeTimestampOutOfRangeException  BatchPutAssetPropertyValueErrorCode = "TimestampOutOfRangeException"
	BatchPutAssetPropertyValueErrorCodeAccessDeniedException         BatchPutAssetPropertyValueErrorCode = "AccessDeniedException"
)

// Values returns all known values for BatchPutAssetPropertyValueErrorCode. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchPutAssetPropertyValueErrorCode) Values() []BatchPutAssetPropertyValueErrorCode {
	return []BatchPutAssetPropertyValueErrorCode{
		"ResourceNotFoundException",
		"InvalidRequestException",
		"InternalFailureException",
		"ServiceUnavailableException",
		"ThrottlingException",
		"LimitExceededException",
		"ConflictingOperationException",
		"TimestampOutOfRangeException",
		"AccessDeniedException",
	}
}

type CapabilitySyncStatus string

// Enum values for CapabilitySyncStatus
const (
	CapabilitySyncStatusInSync        CapabilitySyncStatus = "IN_SYNC"
	CapabilitySyncStatusOutOfSync     CapabilitySyncStatus = "OUT_OF_SYNC"
	CapabilitySyncStatusSyncFailed    CapabilitySyncStatus = "SYNC_FAILED"
	CapabilitySyncStatusUnknown       CapabilitySyncStatus = "UNKNOWN"
	CapabilitySyncStatusNotApplicable CapabilitySyncStatus = "NOT_APPLICABLE"
)

// Values returns all known values for CapabilitySyncStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CapabilitySyncStatus) Values() []CapabilitySyncStatus {
	return []CapabilitySyncStatus{
		"IN_SYNC",
		"OUT_OF_SYNC",
		"SYNC_FAILED",
		"UNKNOWN",
		"NOT_APPLICABLE",
	}
}

type ColumnName string

// Enum values for ColumnName
const (
	ColumnNameAlias               ColumnName = "ALIAS"
	ColumnNameAssetId             ColumnName = "ASSET_ID"
	ColumnNamePropertyId          ColumnName = "PROPERTY_ID"
	ColumnNameDataType            ColumnName = "DATA_TYPE"
	ColumnNameTimestampSeconds    ColumnName = "TIMESTAMP_SECONDS"
	ColumnNameTimestampNanoOffset ColumnName = "TIMESTAMP_NANO_OFFSET"
	ColumnNameQuality             ColumnName = "QUALITY"
	ColumnNameValue               ColumnName = "VALUE"
)

// Values returns all known values for ColumnName. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ColumnName) Values() []ColumnName {
	return []ColumnName{
		"ALIAS",
		"ASSET_ID",
		"PROPERTY_ID",
		"DATA_TYPE",
		"TIMESTAMP_SECONDS",
		"TIMESTAMP_NANO_OFFSET",
		"QUALITY",
		"VALUE",
	}
}

type ComputeLocation string

// Enum values for ComputeLocation
const (
	ComputeLocationEdge  ComputeLocation = "EDGE"
	ComputeLocationCloud ComputeLocation = "CLOUD"
)

// Values returns all known values for ComputeLocation. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ComputeLocation) Values() []ComputeLocation {
	return []ComputeLocation{
		"EDGE",
		"CLOUD",
	}
}

type ConfigurationState string

// Enum values for ConfigurationState
const (
	ConfigurationStateActive           ConfigurationState = "ACTIVE"
	ConfigurationStateUpdateInProgress ConfigurationState = "UPDATE_IN_PROGRESS"
	ConfigurationStateUpdateFailed     ConfigurationState = "UPDATE_FAILED"
)

// Values returns all known values for ConfigurationState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfigurationState) Values() []ConfigurationState {
	return []ConfigurationState{
		"ACTIVE",
		"UPDATE_IN_PROGRESS",
		"UPDATE_FAILED",
	}
}

type CoreDeviceOperatingSystem string

// Enum values for CoreDeviceOperatingSystem
const (
	CoreDeviceOperatingSystemLinuxAarch64 CoreDeviceOperatingSystem = "LINUX_AARCH64"
	CoreDeviceOperatingSystemLinuxAmd64   CoreDeviceOperatingSystem = "LINUX_AMD64"
	CoreDeviceOperatingSystemWindowsAmd64 CoreDeviceOperatingSystem = "WINDOWS_AMD64"
)

// Values returns all known values for CoreDeviceOperatingSystem. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CoreDeviceOperatingSystem) Values() []CoreDeviceOperatingSystem {
	return []CoreDeviceOperatingSystem{
		"LINUX_AARCH64",
		"LINUX_AMD64",
		"WINDOWS_AMD64",
	}
}

type DatasetSourceFormat string

// Enum values for DatasetSourceFormat
const (
	DatasetSourceFormatKnowledgeBase DatasetSourceFormat = "KNOWLEDGE_BASE"
)

// Values returns all known values for DatasetSourceFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatasetSourceFormat) Values() []DatasetSourceFormat {
	return []DatasetSourceFormat{
		"KNOWLEDGE_BASE",
	}
}

type DatasetSourceType string

// Enum values for DatasetSourceType
const (
	DatasetSourceTypeKendra DatasetSourceType = "KENDRA"
)

// Values returns all known values for DatasetSourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatasetSourceType) Values() []DatasetSourceType {
	return []DatasetSourceType{
		"KENDRA",
	}
}

type DatasetState string

// Enum values for DatasetState
const (
	DatasetStateCreating DatasetState = "CREATING"
	DatasetStateActive   DatasetState = "ACTIVE"
	DatasetStateUpdating DatasetState = "UPDATING"
	DatasetStateDeleting DatasetState = "DELETING"
	DatasetStateFailed   DatasetState = "FAILED"
)

// Values returns all known values for DatasetState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatasetState) Values() []DatasetState {
	return []DatasetState{
		"CREATING",
		"ACTIVE",
		"UPDATING",
		"DELETING",
		"FAILED",
	}
}

type DetailedErrorCode string

// Enum values for DetailedErrorCode
const (
	DetailedErrorCodeIncompatibleComputeLocation         DetailedErrorCode = "INCOMPATIBLE_COMPUTE_LOCATION"
	DetailedErrorCodeIncompatibleForwardingConfiguration DetailedErrorCode = "INCOMPATIBLE_FORWARDING_CONFIGURATION"
)

// Values returns all known values for DetailedErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DetailedErrorCode) Values() []DetailedErrorCode {
	return []DetailedErrorCode{
		"INCOMPATIBLE_COMPUTE_LOCATION",
		"INCOMPATIBLE_FORWARDING_CONFIGURATION",
	}
}

type DisassociatedDataStorageState string

// Enum values for DisassociatedDataStorageState
const (
	DisassociatedDataStorageStateEnabled  DisassociatedDataStorageState = "ENABLED"
	DisassociatedDataStorageStateDisabled DisassociatedDataStorageState = "DISABLED"
)

// Values returns all known values for DisassociatedDataStorageState. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DisassociatedDataStorageState) Values() []DisassociatedDataStorageState {
	return []DisassociatedDataStorageState{
		"ENABLED",
		"DISABLED",
	}
}

type EncryptionType string

// Enum values for EncryptionType
const (
	EncryptionTypeSitewiseDefaultEncryption EncryptionType = "SITEWISE_DEFAULT_ENCRYPTION"
	EncryptionTypeKmsBasedEncryption        EncryptionType = "KMS_BASED_ENCRYPTION"
)

// Values returns all known values for EncryptionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EncryptionType) Values() []EncryptionType {
	return []EncryptionType{
		"SITEWISE_DEFAULT_ENCRYPTION",
		"KMS_BASED_ENCRYPTION",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeValidationError ErrorCode = "VALIDATION_ERROR"
	ErrorCodeInternalFailure ErrorCode = "INTERNAL_FAILURE"
)

// Values returns all known values for ErrorCode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"VALIDATION_ERROR",
		"INTERNAL_FAILURE",
	}
}

type ForwardingConfigState string

// Enum values for ForwardingConfigState
const (
	ForwardingConfigStateDisabled ForwardingConfigState = "DISABLED"
	ForwardingConfigStateEnabled  ForwardingConfigState = "ENABLED"
)

// Values returns all known values for ForwardingConfigState. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ForwardingConfigState) Values() []ForwardingConfigState {
	return []ForwardingConfigState{
		"DISABLED",
		"ENABLED",
	}
}

type IdentityType string

// Enum values for IdentityType
const (
	IdentityTypeUser  IdentityType = "USER"
	IdentityTypeGroup IdentityType = "GROUP"
	IdentityTypeIam   IdentityType = "IAM"
)

// Values returns all known values for IdentityType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IdentityType) Values() []IdentityType {
	return []IdentityType{
		"USER",
		"GROUP",
		"IAM",
	}
}

type ImageFileType string

// Enum values for ImageFileType
const (
	ImageFileTypePng ImageFileType = "PNG"
)

// Values returns all known values for ImageFileType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImageFileType) Values() []ImageFileType {
	return []ImageFileType{
		"PNG",
	}
}

type JobStatus string

// Enum values for JobStatus
const (
	JobStatusPending               JobStatus = "PENDING"
	JobStatusCancelled             JobStatus = "CANCELLED"
	JobStatusRunning               JobStatus = "RUNNING"
	JobStatusCompleted             JobStatus = "COMPLETED"
	JobStatusFailed                JobStatus = "FAILED"
	JobStatusCompletedWithFailures JobStatus = "COMPLETED_WITH_FAILURES"
)

// Values returns all known values for JobStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobStatus) Values() []JobStatus {
	return []JobStatus{
		"PENDING",
		"CANCELLED",
		"RUNNING",
		"COMPLETED",
		"FAILED",
		"COMPLETED_WITH_FAILURES",
	}
}

type ListAssetModelPropertiesFilter string

// Enum values for ListAssetModelPropertiesFilter
const (
	ListAssetModelPropertiesFilterAll  ListAssetModelPropertiesFilter = "ALL"
	ListAssetModelPropertiesFilterBase ListAssetModelPropertiesFilter = "BASE"
)

// Values returns all known values for ListAssetModelPropertiesFilter. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListAssetModelPropertiesFilter) Values() []ListAssetModelPropertiesFilter {
	return []ListAssetModelPropertiesFilter{
		"ALL",
		"BASE",
	}
}

type ListAssetPropertiesFilter string

// Enum values for ListAssetPropertiesFilter
const (
	ListAssetPropertiesFilterAll  ListAssetPropertiesFilter = "ALL"
	ListAssetPropertiesFilterBase ListAssetPropertiesFilter = "BASE"
)

// Values returns all known values for ListAssetPropertiesFilter. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListAssetPropertiesFilter) Values() []ListAssetPropertiesFilter {
	return []ListAssetPropertiesFilter{
		"ALL",
		"BASE",
	}
}

type ListAssetsFilter string

// Enum values for ListAssetsFilter
const (
	ListAssetsFilterAll      ListAssetsFilter = "ALL"
	ListAssetsFilterTopLevel ListAssetsFilter = "TOP_LEVEL"
)

// Values returns all known values for ListAssetsFilter. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListAssetsFilter) Values() []ListAssetsFilter {
	return []ListAssetsFilter{
		"ALL",
		"TOP_LEVEL",
	}
}

type ListBulkImportJobsFilter string

// Enum values for ListBulkImportJobsFilter
const (
	ListBulkImportJobsFilterAll                   ListBulkImportJobsFilter = "ALL"
	ListBulkImportJobsFilterPending               ListBulkImportJobsFilter = "PENDING"
	ListBulkImportJobsFilterRunning               ListBulkImportJobsFilter = "RUNNING"
	ListBulkImportJobsFilterCancelled             ListBulkImportJobsFilter = "CANCELLED"
	ListBulkImportJobsFilterFailed                ListBulkImportJobsFilter = "FAILED"
	ListBulkImportJobsFilterCompletedWithFailures ListBulkImportJobsFilter = "COMPLETED_WITH_FAILURES"
	ListBulkImportJobsFilterCompleted             ListBulkImportJobsFilter = "COMPLETED"
)

// Values returns all known values for ListBulkImportJobsFilter. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListBulkImportJobsFilter) Values() []ListBulkImportJobsFilter {
	return []ListBulkImportJobsFilter{
		"ALL",
		"PENDING",
		"RUNNING",
		"CANCELLED",
		"FAILED",
		"COMPLETED_WITH_FAILURES",
		"COMPLETED",
	}
}

type ListTimeSeriesType string

// Enum values for ListTimeSeriesType
const (
	ListTimeSeriesTypeAssociated    ListTimeSeriesType = "ASSOCIATED"
	ListTimeSeriesTypeDisassociated ListTimeSeriesType = "DISASSOCIATED"
)

// Values returns all known values for ListTimeSeriesType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListTimeSeriesType) Values() []ListTimeSeriesType {
	return []ListTimeSeriesType{
		"ASSOCIATED",
		"DISASSOCIATED",
	}
}

type LoggingLevel string

// Enum values for LoggingLevel
const (
	LoggingLevelError LoggingLevel = "ERROR"
	LoggingLevelInfo  LoggingLevel = "INFO"
	LoggingLevelOff   LoggingLevel = "OFF"
)

// Values returns all known values for LoggingLevel. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LoggingLevel) Values() []LoggingLevel {
	return []LoggingLevel{
		"ERROR",
		"INFO",
		"OFF",
	}
}

type MonitorErrorCode string

// Enum values for MonitorErrorCode
const (
	MonitorErrorCodeInternalFailure MonitorErrorCode = "INTERNAL_FAILURE"
	MonitorErrorCodeValidationError MonitorErrorCode = "VALIDATION_ERROR"
	MonitorErrorCodeLimitExceeded   MonitorErrorCode = "LIMIT_EXCEEDED"
)

// Values returns all known values for MonitorErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitorErrorCode) Values() []MonitorErrorCode {
	return []MonitorErrorCode{
		"INTERNAL_FAILURE",
		"VALIDATION_ERROR",
		"LIMIT_EXCEEDED",
	}
}

type Permission string

// Enum values for Permission
const (
	PermissionAdministrator Permission = "ADMINISTRATOR"
	PermissionViewer        Permission = "VIEWER"
)

// Values returns all known values for Permission. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Permission) Values() []Permission {
	return []Permission{
		"ADMINISTRATOR",
		"VIEWER",
	}
}

type PortalState string

// Enum values for PortalState
const (
	PortalStateCreating PortalState = "CREATING"
	PortalStatePending  PortalState = "PENDING"
	PortalStateUpdating PortalState = "UPDATING"
	PortalStateDeleting PortalState = "DELETING"
	PortalStateActive   PortalState = "ACTIVE"
	PortalStateFailed   PortalState = "FAILED"
)

// Values returns all known values for PortalState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PortalState) Values() []PortalState {
	return []PortalState{
		"CREATING",
		"PENDING",
		"UPDATING",
		"DELETING",
		"ACTIVE",
		"FAILED",
	}
}

type PortalType string

// Enum values for PortalType
const (
	PortalTypeSitewisePortalV1 PortalType = "SITEWISE_PORTAL_V1"
	PortalTypeSitewisePortalV2 PortalType = "SITEWISE_PORTAL_V2"
)

// Values returns all known values for PortalType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PortalType) Values() []PortalType {
	return []PortalType{
		"SITEWISE_PORTAL_V1",
		"SITEWISE_PORTAL_V2",
	}
}

type PropertyDataType string

// Enum values for PropertyDataType
const (
	PropertyDataTypeString  PropertyDataType = "STRING"
	PropertyDataTypeInteger PropertyDataType = "INTEGER"
	PropertyDataTypeDouble  PropertyDataType = "DOUBLE"
	PropertyDataTypeBoolean PropertyDataType = "BOOLEAN"
	PropertyDataTypeStruct  PropertyDataType = "STRUCT"
)

// Values returns all known values for PropertyDataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PropertyDataType) Values() []PropertyDataType {
	return []PropertyDataType{
		"STRING",
		"INTEGER",
		"DOUBLE",
		"BOOLEAN",
		"STRUCT",
	}
}

type PropertyNotificationState string

// Enum values for PropertyNotificationState
const (
	PropertyNotificationStateEnabled  PropertyNotificationState = "ENABLED"
	PropertyNotificationStateDisabled PropertyNotificationState = "DISABLED"
)

// Values returns all known values for PropertyNotificationState. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PropertyNotificationState) Values() []PropertyNotificationState {
	return []PropertyNotificationState{
		"ENABLED",
		"DISABLED",
	}
}

type Quality string

// Enum values for Quality
const (
	QualityGood      Quality = "GOOD"
	QualityBad       Quality = "BAD"
	QualityUncertain Quality = "UNCERTAIN"
)

// Values returns all known values for Quality. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Quality) Values() []Quality {
	return []Quality{
		"GOOD",
		"BAD",
		"UNCERTAIN",
	}
}

type RawValueType string

// Enum values for RawValueType
const (
	RawValueTypeDouble  RawValueType = "D"
	RawValueTypeBoolean RawValueType = "B"
	RawValueTypeString  RawValueType = "S"
	RawValueTypeInteger RawValueType = "I"
	RawValueTypeUnknown RawValueType = "U"
)

// Values returns all known values for RawValueType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RawValueType) Values() []RawValueType {
	return []RawValueType{
		"D",
		"B",
		"S",
		"I",
		"U",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypePortal  ResourceType = "PORTAL"
	ResourceTypeProject ResourceType = "PROJECT"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"PORTAL",
		"PROJECT",
	}
}

type ScalarType string

// Enum values for ScalarType
const (
	ScalarTypeBoolean   ScalarType = "BOOLEAN"
	ScalarTypeInt       ScalarType = "INT"
	ScalarTypeDouble    ScalarType = "DOUBLE"
	ScalarTypeTimestamp ScalarType = "TIMESTAMP"
	ScalarTypeString    ScalarType = "STRING"
)

// Values returns all known values for ScalarType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScalarType) Values() []ScalarType {
	return []ScalarType{
		"BOOLEAN",
		"INT",
		"DOUBLE",
		"TIMESTAMP",
		"STRING",
	}
}

type StorageType string

// Enum values for StorageType
const (
	StorageTypeSitewiseDefaultStorage StorageType = "SITEWISE_DEFAULT_STORAGE"
	StorageTypeMultiLayerStorage      StorageType = "MULTI_LAYER_STORAGE"
)

// Values returns all known values for StorageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StorageType) Values() []StorageType {
	return []StorageType{
		"SITEWISE_DEFAULT_STORAGE",
		"MULTI_LAYER_STORAGE",
	}
}

type TargetResourceType string

// Enum values for TargetResourceType
const (
	TargetResourceTypeAsset TargetResourceType = "ASSET"
)

// Values returns all known values for TargetResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetResourceType) Values() []TargetResourceType {
	return []TargetResourceType{
		"ASSET",
	}
}

type TimeOrdering string

// Enum values for TimeOrdering
const (
	TimeOrderingAscending  TimeOrdering = "ASCENDING"
	TimeOrderingDescending TimeOrdering = "DESCENDING"
)

// Values returns all known values for TimeOrdering. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TimeOrdering) Values() []TimeOrdering {
	return []TimeOrdering{
		"ASCENDING",
		"DESCENDING",
	}
}

type TraversalDirection string

// Enum values for TraversalDirection
const (
	TraversalDirectionParent TraversalDirection = "PARENT"
	TraversalDirectionChild  TraversalDirection = "CHILD"
)

// Values returns all known values for TraversalDirection. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TraversalDirection) Values() []TraversalDirection {
	return []TraversalDirection{
		"PARENT",
		"CHILD",
	}
}

type TraversalType string

// Enum values for TraversalType
const (
	TraversalTypePathToRoot TraversalType = "PATH_TO_ROOT"
)

// Values returns all known values for TraversalType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TraversalType) Values() []TraversalType {
	return []TraversalType{
		"PATH_TO_ROOT",
	}
}

type WarmTierState string

// Enum values for WarmTierState
const (
	WarmTierStateEnabled  WarmTierState = "ENABLED"
	WarmTierStateDisabled WarmTierState = "DISABLED"
)

// Values returns all known values for WarmTierState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WarmTierState) Values() []WarmTierState {
	return []WarmTierState{
		"ENABLED",
		"DISABLED",
	}
}
