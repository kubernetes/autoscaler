// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccountTakeoverEventActionType string

// Enum values for AccountTakeoverEventActionType
const (
	AccountTakeoverEventActionTypeBlock           AccountTakeoverEventActionType = "BLOCK"
	AccountTakeoverEventActionTypeMfaIfConfigured AccountTakeoverEventActionType = "MFA_IF_CONFIGURED"
	AccountTakeoverEventActionTypeMfaRequired     AccountTakeoverEventActionType = "MFA_REQUIRED"
	AccountTakeoverEventActionTypeNoAction        AccountTakeoverEventActionType = "NO_ACTION"
)

// Values returns all known values for AccountTakeoverEventActionType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AccountTakeoverEventActionType) Values() []AccountTakeoverEventActionType {
	return []AccountTakeoverEventActionType{
		"BLOCK",
		"MFA_IF_CONFIGURED",
		"MFA_REQUIRED",
		"NO_ACTION",
	}
}

type AdvancedSecurityEnabledModeType string

// Enum values for AdvancedSecurityEnabledModeType
const (
	AdvancedSecurityEnabledModeTypeAudit    AdvancedSecurityEnabledModeType = "AUDIT"
	AdvancedSecurityEnabledModeTypeEnforced AdvancedSecurityEnabledModeType = "ENFORCED"
)

// Values returns all known values for AdvancedSecurityEnabledModeType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AdvancedSecurityEnabledModeType) Values() []AdvancedSecurityEnabledModeType {
	return []AdvancedSecurityEnabledModeType{
		"AUDIT",
		"ENFORCED",
	}
}

type AdvancedSecurityModeType string

// Enum values for AdvancedSecurityModeType
const (
	AdvancedSecurityModeTypeOff      AdvancedSecurityModeType = "OFF"
	AdvancedSecurityModeTypeAudit    AdvancedSecurityModeType = "AUDIT"
	AdvancedSecurityModeTypeEnforced AdvancedSecurityModeType = "ENFORCED"
)

// Values returns all known values for AdvancedSecurityModeType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AdvancedSecurityModeType) Values() []AdvancedSecurityModeType {
	return []AdvancedSecurityModeType{
		"OFF",
		"AUDIT",
		"ENFORCED",
	}
}

type AliasAttributeType string

// Enum values for AliasAttributeType
const (
	AliasAttributeTypePhoneNumber       AliasAttributeType = "phone_number"
	AliasAttributeTypeEmail             AliasAttributeType = "email"
	AliasAttributeTypePreferredUsername AliasAttributeType = "preferred_username"
)

// Values returns all known values for AliasAttributeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AliasAttributeType) Values() []AliasAttributeType {
	return []AliasAttributeType{
		"phone_number",
		"email",
		"preferred_username",
	}
}

type AssetCategoryType string

// Enum values for AssetCategoryType
const (
	AssetCategoryTypeFaviconIco           AssetCategoryType = "FAVICON_ICO"
	AssetCategoryTypeFaviconSvg           AssetCategoryType = "FAVICON_SVG"
	AssetCategoryTypeEmailGraphic         AssetCategoryType = "EMAIL_GRAPHIC"
	AssetCategoryTypeSmsGraphic           AssetCategoryType = "SMS_GRAPHIC"
	AssetCategoryTypeAuthAppGraphic       AssetCategoryType = "AUTH_APP_GRAPHIC"
	AssetCategoryTypePasswordGraphic      AssetCategoryType = "PASSWORD_GRAPHIC"
	AssetCategoryTypePasskeyGraphic       AssetCategoryType = "PASSKEY_GRAPHIC"
	AssetCategoryTypePageHeaderLogo       AssetCategoryType = "PAGE_HEADER_LOGO"
	AssetCategoryTypePageHeaderBackground AssetCategoryType = "PAGE_HEADER_BACKGROUND"
	AssetCategoryTypePageFooterLogo       AssetCategoryType = "PAGE_FOOTER_LOGO"
	AssetCategoryTypePageFooterBackground AssetCategoryType = "PAGE_FOOTER_BACKGROUND"
	AssetCategoryTypePageBackground       AssetCategoryType = "PAGE_BACKGROUND"
	AssetCategoryTypeFormBackground       AssetCategoryType = "FORM_BACKGROUND"
	AssetCategoryTypeFormLogo             AssetCategoryType = "FORM_LOGO"
	AssetCategoryTypeIdpButtonIcon        AssetCategoryType = "IDP_BUTTON_ICON"
)

// Values returns all known values for AssetCategoryType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssetCategoryType) Values() []AssetCategoryType {
	return []AssetCategoryType{
		"FAVICON_ICO",
		"FAVICON_SVG",
		"EMAIL_GRAPHIC",
		"SMS_GRAPHIC",
		"AUTH_APP_GRAPHIC",
		"PASSWORD_GRAPHIC",
		"PASSKEY_GRAPHIC",
		"PAGE_HEADER_LOGO",
		"PAGE_HEADER_BACKGROUND",
		"PAGE_FOOTER_LOGO",
		"PAGE_FOOTER_BACKGROUND",
		"PAGE_BACKGROUND",
		"FORM_BACKGROUND",
		"FORM_LOGO",
		"IDP_BUTTON_ICON",
	}
}

type AssetExtensionType string

// Enum values for AssetExtensionType
const (
	AssetExtensionTypeIco  AssetExtensionType = "ICO"
	AssetExtensionTypeJpeg AssetExtensionType = "JPEG"
	AssetExtensionTypePng  AssetExtensionType = "PNG"
	AssetExtensionTypeSvg  AssetExtensionType = "SVG"
	AssetExtensionTypeWebp AssetExtensionType = "WEBP"
)

// Values returns all known values for AssetExtensionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssetExtensionType) Values() []AssetExtensionType {
	return []AssetExtensionType{
		"ICO",
		"JPEG",
		"PNG",
		"SVG",
		"WEBP",
	}
}

type AttributeDataType string

// Enum values for AttributeDataType
const (
	AttributeDataTypeString   AttributeDataType = "String"
	AttributeDataTypeNumber   AttributeDataType = "Number"
	AttributeDataTypeDatetime AttributeDataType = "DateTime"
	AttributeDataTypeBoolean  AttributeDataType = "Boolean"
)

// Values returns all known values for AttributeDataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AttributeDataType) Values() []AttributeDataType {
	return []AttributeDataType{
		"String",
		"Number",
		"DateTime",
		"Boolean",
	}
}

type AuthFactorType string

// Enum values for AuthFactorType
const (
	AuthFactorTypePassword AuthFactorType = "PASSWORD"
	AuthFactorTypeEmailOtp AuthFactorType = "EMAIL_OTP"
	AuthFactorTypeSmsOtp   AuthFactorType = "SMS_OTP"
	AuthFactorTypeWebAuthn AuthFactorType = "WEB_AUTHN"
)

// Values returns all known values for AuthFactorType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthFactorType) Values() []AuthFactorType {
	return []AuthFactorType{
		"PASSWORD",
		"EMAIL_OTP",
		"SMS_OTP",
		"WEB_AUTHN",
	}
}

type AuthFlowType string

// Enum values for AuthFlowType
const (
	AuthFlowTypeUserSrpAuth           AuthFlowType = "USER_SRP_AUTH"
	AuthFlowTypeRefreshTokenAuth      AuthFlowType = "REFRESH_TOKEN_AUTH"
	AuthFlowTypeRefreshToken          AuthFlowType = "REFRESH_TOKEN"
	AuthFlowTypeCustomAuth            AuthFlowType = "CUSTOM_AUTH"
	AuthFlowTypeAdminNoSrpAuth        AuthFlowType = "ADMIN_NO_SRP_AUTH"
	AuthFlowTypeUserPasswordAuth      AuthFlowType = "USER_PASSWORD_AUTH"
	AuthFlowTypeAdminUserPasswordAuth AuthFlowType = "ADMIN_USER_PASSWORD_AUTH"
	AuthFlowTypeUserAuth              AuthFlowType = "USER_AUTH"
)

// Values returns all known values for AuthFlowType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthFlowType) Values() []AuthFlowType {
	return []AuthFlowType{
		"USER_SRP_AUTH",
		"REFRESH_TOKEN_AUTH",
		"REFRESH_TOKEN",
		"CUSTOM_AUTH",
		"ADMIN_NO_SRP_AUTH",
		"USER_PASSWORD_AUTH",
		"ADMIN_USER_PASSWORD_AUTH",
		"USER_AUTH",
	}
}

type ChallengeName string

// Enum values for ChallengeName
const (
	ChallengeNamePassword ChallengeName = "Password"
	ChallengeNameMfa      ChallengeName = "Mfa"
)

// Values returns all known values for ChallengeName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChallengeName) Values() []ChallengeName {
	return []ChallengeName{
		"Password",
		"Mfa",
	}
}

type ChallengeNameType string

// Enum values for ChallengeNameType
const (
	ChallengeNameTypeSmsMfa                 ChallengeNameType = "SMS_MFA"
	ChallengeNameTypeEmailOtp               ChallengeNameType = "EMAIL_OTP"
	ChallengeNameTypeSoftwareTokenMfa       ChallengeNameType = "SOFTWARE_TOKEN_MFA"
	ChallengeNameTypeSelectMfaType          ChallengeNameType = "SELECT_MFA_TYPE"
	ChallengeNameTypeMfaSetup               ChallengeNameType = "MFA_SETUP"
	ChallengeNameTypePasswordVerifier       ChallengeNameType = "PASSWORD_VERIFIER"
	ChallengeNameTypeCustomChallenge        ChallengeNameType = "CUSTOM_CHALLENGE"
	ChallengeNameTypeSelectChallenge        ChallengeNameType = "SELECT_CHALLENGE"
	ChallengeNameTypeDeviceSrpAuth          ChallengeNameType = "DEVICE_SRP_AUTH"
	ChallengeNameTypeDevicePasswordVerifier ChallengeNameType = "DEVICE_PASSWORD_VERIFIER"
	ChallengeNameTypeAdminNoSrpAuth         ChallengeNameType = "ADMIN_NO_SRP_AUTH"
	ChallengeNameTypeNewPasswordRequired    ChallengeNameType = "NEW_PASSWORD_REQUIRED"
	ChallengeNameTypeSmsOtp                 ChallengeNameType = "SMS_OTP"
	ChallengeNameTypePassword               ChallengeNameType = "PASSWORD"
	ChallengeNameTypeWebAuthn               ChallengeNameType = "WEB_AUTHN"
	ChallengeNameTypePasswordSrp            ChallengeNameType = "PASSWORD_SRP"
)

// Values returns all known values for ChallengeNameType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChallengeNameType) Values() []ChallengeNameType {
	return []ChallengeNameType{
		"SMS_MFA",
		"EMAIL_OTP",
		"SOFTWARE_TOKEN_MFA",
		"SELECT_MFA_TYPE",
		"MFA_SETUP",
		"PASSWORD_VERIFIER",
		"CUSTOM_CHALLENGE",
		"SELECT_CHALLENGE",
		"DEVICE_SRP_AUTH",
		"DEVICE_PASSWORD_VERIFIER",
		"ADMIN_NO_SRP_AUTH",
		"NEW_PASSWORD_REQUIRED",
		"SMS_OTP",
		"PASSWORD",
		"WEB_AUTHN",
		"PASSWORD_SRP",
	}
}

type ChallengeResponse string

// Enum values for ChallengeResponse
const (
	ChallengeResponseSuccess ChallengeResponse = "Success"
	ChallengeResponseFailure ChallengeResponse = "Failure"
)

// Values returns all known values for ChallengeResponse. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChallengeResponse) Values() []ChallengeResponse {
	return []ChallengeResponse{
		"Success",
		"Failure",
	}
}

type ColorSchemeModeType string

// Enum values for ColorSchemeModeType
const (
	ColorSchemeModeTypeLight   ColorSchemeModeType = "LIGHT"
	ColorSchemeModeTypeDark    ColorSchemeModeType = "DARK"
	ColorSchemeModeTypeDynamic ColorSchemeModeType = "DYNAMIC"
)

// Values returns all known values for ColorSchemeModeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ColorSchemeModeType) Values() []ColorSchemeModeType {
	return []ColorSchemeModeType{
		"LIGHT",
		"DARK",
		"DYNAMIC",
	}
}

type CompromisedCredentialsEventActionType string

// Enum values for CompromisedCredentialsEventActionType
const (
	CompromisedCredentialsEventActionTypeBlock    CompromisedCredentialsEventActionType = "BLOCK"
	CompromisedCredentialsEventActionTypeNoAction CompromisedCredentialsEventActionType = "NO_ACTION"
)

// Values returns all known values for CompromisedCredentialsEventActionType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CompromisedCredentialsEventActionType) Values() []CompromisedCredentialsEventActionType {
	return []CompromisedCredentialsEventActionType{
		"BLOCK",
		"NO_ACTION",
	}
}

type CustomEmailSenderLambdaVersionType string

// Enum values for CustomEmailSenderLambdaVersionType
const (
	CustomEmailSenderLambdaVersionTypeV10 CustomEmailSenderLambdaVersionType = "V1_0"
)

// Values returns all known values for CustomEmailSenderLambdaVersionType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CustomEmailSenderLambdaVersionType) Values() []CustomEmailSenderLambdaVersionType {
	return []CustomEmailSenderLambdaVersionType{
		"V1_0",
	}
}

type CustomSMSSenderLambdaVersionType string

// Enum values for CustomSMSSenderLambdaVersionType
const (
	CustomSMSSenderLambdaVersionTypeV10 CustomSMSSenderLambdaVersionType = "V1_0"
)

// Values returns all known values for CustomSMSSenderLambdaVersionType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CustomSMSSenderLambdaVersionType) Values() []CustomSMSSenderLambdaVersionType {
	return []CustomSMSSenderLambdaVersionType{
		"V1_0",
	}
}

type DefaultEmailOptionType string

// Enum values for DefaultEmailOptionType
const (
	DefaultEmailOptionTypeConfirmWithLink DefaultEmailOptionType = "CONFIRM_WITH_LINK"
	DefaultEmailOptionTypeConfirmWithCode DefaultEmailOptionType = "CONFIRM_WITH_CODE"
)

// Values returns all known values for DefaultEmailOptionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DefaultEmailOptionType) Values() []DefaultEmailOptionType {
	return []DefaultEmailOptionType{
		"CONFIRM_WITH_LINK",
		"CONFIRM_WITH_CODE",
	}
}

type DeletionProtectionType string

// Enum values for DeletionProtectionType
const (
	DeletionProtectionTypeActive   DeletionProtectionType = "ACTIVE"
	DeletionProtectionTypeInactive DeletionProtectionType = "INACTIVE"
)

// Values returns all known values for DeletionProtectionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeletionProtectionType) Values() []DeletionProtectionType {
	return []DeletionProtectionType{
		"ACTIVE",
		"INACTIVE",
	}
}

type DeliveryMediumType string

// Enum values for DeliveryMediumType
const (
	DeliveryMediumTypeSms   DeliveryMediumType = "SMS"
	DeliveryMediumTypeEmail DeliveryMediumType = "EMAIL"
)

// Values returns all known values for DeliveryMediumType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeliveryMediumType) Values() []DeliveryMediumType {
	return []DeliveryMediumType{
		"SMS",
		"EMAIL",
	}
}

type DeviceRememberedStatusType string

// Enum values for DeviceRememberedStatusType
const (
	DeviceRememberedStatusTypeRemembered    DeviceRememberedStatusType = "remembered"
	DeviceRememberedStatusTypeNotRemembered DeviceRememberedStatusType = "not_remembered"
)

// Values returns all known values for DeviceRememberedStatusType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceRememberedStatusType) Values() []DeviceRememberedStatusType {
	return []DeviceRememberedStatusType{
		"remembered",
		"not_remembered",
	}
}

type DomainStatusType string

// Enum values for DomainStatusType
const (
	DomainStatusTypeCreating DomainStatusType = "CREATING"
	DomainStatusTypeDeleting DomainStatusType = "DELETING"
	DomainStatusTypeUpdating DomainStatusType = "UPDATING"
	DomainStatusTypeActive   DomainStatusType = "ACTIVE"
	DomainStatusTypeFailed   DomainStatusType = "FAILED"
)

// Values returns all known values for DomainStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DomainStatusType) Values() []DomainStatusType {
	return []DomainStatusType{
		"CREATING",
		"DELETING",
		"UPDATING",
		"ACTIVE",
		"FAILED",
	}
}

type EmailSendingAccountType string

// Enum values for EmailSendingAccountType
const (
	EmailSendingAccountTypeCognitoDefault EmailSendingAccountType = "COGNITO_DEFAULT"
	EmailSendingAccountTypeDeveloper      EmailSendingAccountType = "DEVELOPER"
)

// Values returns all known values for EmailSendingAccountType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EmailSendingAccountType) Values() []EmailSendingAccountType {
	return []EmailSendingAccountType{
		"COGNITO_DEFAULT",
		"DEVELOPER",
	}
}

type EventFilterType string

// Enum values for EventFilterType
const (
	EventFilterTypeSignIn         EventFilterType = "SIGN_IN"
	EventFilterTypePasswordChange EventFilterType = "PASSWORD_CHANGE"
	EventFilterTypeSignUp         EventFilterType = "SIGN_UP"
)

// Values returns all known values for EventFilterType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventFilterType) Values() []EventFilterType {
	return []EventFilterType{
		"SIGN_IN",
		"PASSWORD_CHANGE",
		"SIGN_UP",
	}
}

type EventResponseType string

// Enum values for EventResponseType
const (
	EventResponseTypePass       EventResponseType = "Pass"
	EventResponseTypeFail       EventResponseType = "Fail"
	EventResponseTypeInProgress EventResponseType = "InProgress"
)

// Values returns all known values for EventResponseType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventResponseType) Values() []EventResponseType {
	return []EventResponseType{
		"Pass",
		"Fail",
		"InProgress",
	}
}

type EventSourceName string

// Enum values for EventSourceName
const (
	EventSourceNameUserNotification EventSourceName = "userNotification"
	EventSourceNameUserAuthEvents   EventSourceName = "userAuthEvents"
)

// Values returns all known values for EventSourceName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventSourceName) Values() []EventSourceName {
	return []EventSourceName{
		"userNotification",
		"userAuthEvents",
	}
}

type EventType string

// Enum values for EventType
const (
	EventTypeSignIn         EventType = "SignIn"
	EventTypeSignUp         EventType = "SignUp"
	EventTypeForgotPassword EventType = "ForgotPassword"
	EventTypePasswordChange EventType = "PasswordChange"
	EventTypeResendCode     EventType = "ResendCode"
)

// Values returns all known values for EventType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EventType) Values() []EventType {
	return []EventType{
		"SignIn",
		"SignUp",
		"ForgotPassword",
		"PasswordChange",
		"ResendCode",
	}
}

type ExplicitAuthFlowsType string

// Enum values for ExplicitAuthFlowsType
const (
	ExplicitAuthFlowsTypeAdminNoSrpAuth             ExplicitAuthFlowsType = "ADMIN_NO_SRP_AUTH"
	ExplicitAuthFlowsTypeCustomAuthFlowOnly         ExplicitAuthFlowsType = "CUSTOM_AUTH_FLOW_ONLY"
	ExplicitAuthFlowsTypeUserPasswordAuth           ExplicitAuthFlowsType = "USER_PASSWORD_AUTH"
	ExplicitAuthFlowsTypeAllowAdminUserPasswordAuth ExplicitAuthFlowsType = "ALLOW_ADMIN_USER_PASSWORD_AUTH"
	ExplicitAuthFlowsTypeAllowCustomAuth            ExplicitAuthFlowsType = "ALLOW_CUSTOM_AUTH"
	ExplicitAuthFlowsTypeAllowUserPasswordAuth      ExplicitAuthFlowsType = "ALLOW_USER_PASSWORD_AUTH"
	ExplicitAuthFlowsTypeAllowUserSrpAuth           ExplicitAuthFlowsType = "ALLOW_USER_SRP_AUTH"
	ExplicitAuthFlowsTypeAllowRefreshTokenAuth      ExplicitAuthFlowsType = "ALLOW_REFRESH_TOKEN_AUTH"
	ExplicitAuthFlowsTypeAllowUserAuth              ExplicitAuthFlowsType = "ALLOW_USER_AUTH"
)

// Values returns all known values for ExplicitAuthFlowsType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExplicitAuthFlowsType) Values() []ExplicitAuthFlowsType {
	return []ExplicitAuthFlowsType{
		"ADMIN_NO_SRP_AUTH",
		"CUSTOM_AUTH_FLOW_ONLY",
		"USER_PASSWORD_AUTH",
		"ALLOW_ADMIN_USER_PASSWORD_AUTH",
		"ALLOW_CUSTOM_AUTH",
		"ALLOW_USER_PASSWORD_AUTH",
		"ALLOW_USER_SRP_AUTH",
		"ALLOW_REFRESH_TOKEN_AUTH",
		"ALLOW_USER_AUTH",
	}
}

type FeatureType string

// Enum values for FeatureType
const (
	FeatureTypeEnabled  FeatureType = "ENABLED"
	FeatureTypeDisabled FeatureType = "DISABLED"
)

// Values returns all known values for FeatureType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FeatureType) Values() []FeatureType {
	return []FeatureType{
		"ENABLED",
		"DISABLED",
	}
}

type FeedbackValueType string

// Enum values for FeedbackValueType
const (
	FeedbackValueTypeValid   FeedbackValueType = "Valid"
	FeedbackValueTypeInvalid FeedbackValueType = "Invalid"
)

// Values returns all known values for FeedbackValueType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FeedbackValueType) Values() []FeedbackValueType {
	return []FeedbackValueType{
		"Valid",
		"Invalid",
	}
}

type IdentityProviderTypeType string

// Enum values for IdentityProviderTypeType
const (
	IdentityProviderTypeTypeSaml            IdentityProviderTypeType = "SAML"
	IdentityProviderTypeTypeFacebook        IdentityProviderTypeType = "Facebook"
	IdentityProviderTypeTypeGoogle          IdentityProviderTypeType = "Google"
	IdentityProviderTypeTypeLoginWithAmazon IdentityProviderTypeType = "LoginWithAmazon"
	IdentityProviderTypeTypeSignInWithApple IdentityProviderTypeType = "SignInWithApple"
	IdentityProviderTypeTypeOidc            IdentityProviderTypeType = "OIDC"
)

// Values returns all known values for IdentityProviderTypeType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IdentityProviderTypeType) Values() []IdentityProviderTypeType {
	return []IdentityProviderTypeType{
		"SAML",
		"Facebook",
		"Google",
		"LoginWithAmazon",
		"SignInWithApple",
		"OIDC",
	}
}

type LogLevel string

// Enum values for LogLevel
const (
	LogLevelError LogLevel = "ERROR"
	LogLevelInfo  LogLevel = "INFO"
)

// Values returns all known values for LogLevel. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LogLevel) Values() []LogLevel {
	return []LogLevel{
		"ERROR",
		"INFO",
	}
}

type MessageActionType string

// Enum values for MessageActionType
const (
	MessageActionTypeResend   MessageActionType = "RESEND"
	MessageActionTypeSuppress MessageActionType = "SUPPRESS"
)

// Values returns all known values for MessageActionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageActionType) Values() []MessageActionType {
	return []MessageActionType{
		"RESEND",
		"SUPPRESS",
	}
}

type OAuthFlowType string

// Enum values for OAuthFlowType
const (
	OAuthFlowTypeCode              OAuthFlowType = "code"
	OAuthFlowTypeImplicit          OAuthFlowType = "implicit"
	OAuthFlowTypeClientCredentials OAuthFlowType = "client_credentials"
)

// Values returns all known values for OAuthFlowType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OAuthFlowType) Values() []OAuthFlowType {
	return []OAuthFlowType{
		"code",
		"implicit",
		"client_credentials",
	}
}

type PreTokenGenerationLambdaVersionType string

// Enum values for PreTokenGenerationLambdaVersionType
const (
	PreTokenGenerationLambdaVersionTypeV10 PreTokenGenerationLambdaVersionType = "V1_0"
	PreTokenGenerationLambdaVersionTypeV20 PreTokenGenerationLambdaVersionType = "V2_0"
	PreTokenGenerationLambdaVersionTypeV30 PreTokenGenerationLambdaVersionType = "V3_0"
)

// Values returns all known values for PreTokenGenerationLambdaVersionType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PreTokenGenerationLambdaVersionType) Values() []PreTokenGenerationLambdaVersionType {
	return []PreTokenGenerationLambdaVersionType{
		"V1_0",
		"V2_0",
		"V3_0",
	}
}

type PreventUserExistenceErrorTypes string

// Enum values for PreventUserExistenceErrorTypes
const (
	PreventUserExistenceErrorTypesLegacy  PreventUserExistenceErrorTypes = "LEGACY"
	PreventUserExistenceErrorTypesEnabled PreventUserExistenceErrorTypes = "ENABLED"
)

// Values returns all known values for PreventUserExistenceErrorTypes. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PreventUserExistenceErrorTypes) Values() []PreventUserExistenceErrorTypes {
	return []PreventUserExistenceErrorTypes{
		"LEGACY",
		"ENABLED",
	}
}

type RecoveryOptionNameType string

// Enum values for RecoveryOptionNameType
const (
	RecoveryOptionNameTypeVerifiedEmail       RecoveryOptionNameType = "verified_email"
	RecoveryOptionNameTypeVerifiedPhoneNumber RecoveryOptionNameType = "verified_phone_number"
	RecoveryOptionNameTypeAdminOnly           RecoveryOptionNameType = "admin_only"
)

// Values returns all known values for RecoveryOptionNameType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecoveryOptionNameType) Values() []RecoveryOptionNameType {
	return []RecoveryOptionNameType{
		"verified_email",
		"verified_phone_number",
		"admin_only",
	}
}

type RiskDecisionType string

// Enum values for RiskDecisionType
const (
	RiskDecisionTypeNoRisk          RiskDecisionType = "NoRisk"
	RiskDecisionTypeAccountTakeover RiskDecisionType = "AccountTakeover"
	RiskDecisionTypeBlock           RiskDecisionType = "Block"
)

// Values returns all known values for RiskDecisionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RiskDecisionType) Values() []RiskDecisionType {
	return []RiskDecisionType{
		"NoRisk",
		"AccountTakeover",
		"Block",
	}
}

type RiskLevelType string

// Enum values for RiskLevelType
const (
	RiskLevelTypeLow    RiskLevelType = "Low"
	RiskLevelTypeMedium RiskLevelType = "Medium"
	RiskLevelTypeHigh   RiskLevelType = "High"
)

// Values returns all known values for RiskLevelType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RiskLevelType) Values() []RiskLevelType {
	return []RiskLevelType{
		"Low",
		"Medium",
		"High",
	}
}

type StatusType string

// Enum values for StatusType
const (
	StatusTypeEnabled  StatusType = "Enabled"
	StatusTypeDisabled StatusType = "Disabled"
)

// Values returns all known values for StatusType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StatusType) Values() []StatusType {
	return []StatusType{
		"Enabled",
		"Disabled",
	}
}

type TimeUnitsType string

// Enum values for TimeUnitsType
const (
	TimeUnitsTypeSeconds TimeUnitsType = "seconds"
	TimeUnitsTypeMinutes TimeUnitsType = "minutes"
	TimeUnitsTypeHours   TimeUnitsType = "hours"
	TimeUnitsTypeDays    TimeUnitsType = "days"
)

// Values returns all known values for TimeUnitsType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TimeUnitsType) Values() []TimeUnitsType {
	return []TimeUnitsType{
		"seconds",
		"minutes",
		"hours",
		"days",
	}
}

type UserImportJobStatusType string

// Enum values for UserImportJobStatusType
const (
	UserImportJobStatusTypeCreated    UserImportJobStatusType = "Created"
	UserImportJobStatusTypePending    UserImportJobStatusType = "Pending"
	UserImportJobStatusTypeInProgress UserImportJobStatusType = "InProgress"
	UserImportJobStatusTypeStopping   UserImportJobStatusType = "Stopping"
	UserImportJobStatusTypeExpired    UserImportJobStatusType = "Expired"
	UserImportJobStatusTypeStopped    UserImportJobStatusType = "Stopped"
	UserImportJobStatusTypeFailed     UserImportJobStatusType = "Failed"
	UserImportJobStatusTypeSucceeded  UserImportJobStatusType = "Succeeded"
)

// Values returns all known values for UserImportJobStatusType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UserImportJobStatusType) Values() []UserImportJobStatusType {
	return []UserImportJobStatusType{
		"Created",
		"Pending",
		"InProgress",
		"Stopping",
		"Expired",
		"Stopped",
		"Failed",
		"Succeeded",
	}
}

type UsernameAttributeType string

// Enum values for UsernameAttributeType
const (
	UsernameAttributeTypePhoneNumber UsernameAttributeType = "phone_number"
	UsernameAttributeTypeEmail       UsernameAttributeType = "email"
)

// Values returns all known values for UsernameAttributeType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UsernameAttributeType) Values() []UsernameAttributeType {
	return []UsernameAttributeType{
		"phone_number",
		"email",
	}
}

type UserPoolMfaType string

// Enum values for UserPoolMfaType
const (
	UserPoolMfaTypeOff      UserPoolMfaType = "OFF"
	UserPoolMfaTypeOn       UserPoolMfaType = "ON"
	UserPoolMfaTypeOptional UserPoolMfaType = "OPTIONAL"
)

// Values returns all known values for UserPoolMfaType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UserPoolMfaType) Values() []UserPoolMfaType {
	return []UserPoolMfaType{
		"OFF",
		"ON",
		"OPTIONAL",
	}
}

type UserPoolTierType string

// Enum values for UserPoolTierType
const (
	UserPoolTierTypeLite       UserPoolTierType = "LITE"
	UserPoolTierTypeEssentials UserPoolTierType = "ESSENTIALS"
	UserPoolTierTypePlus       UserPoolTierType = "PLUS"
)

// Values returns all known values for UserPoolTierType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UserPoolTierType) Values() []UserPoolTierType {
	return []UserPoolTierType{
		"LITE",
		"ESSENTIALS",
		"PLUS",
	}
}

type UserStatusType string

// Enum values for UserStatusType
const (
	UserStatusTypeUnconfirmed         UserStatusType = "UNCONFIRMED"
	UserStatusTypeConfirmed           UserStatusType = "CONFIRMED"
	UserStatusTypeArchived            UserStatusType = "ARCHIVED"
	UserStatusTypeCompromised         UserStatusType = "COMPROMISED"
	UserStatusTypeUnknown             UserStatusType = "UNKNOWN"
	UserStatusTypeResetRequired       UserStatusType = "RESET_REQUIRED"
	UserStatusTypeForceChangePassword UserStatusType = "FORCE_CHANGE_PASSWORD"
	UserStatusTypeExternalProvider    UserStatusType = "EXTERNAL_PROVIDER"
)

// Values returns all known values for UserStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UserStatusType) Values() []UserStatusType {
	return []UserStatusType{
		"UNCONFIRMED",
		"CONFIRMED",
		"ARCHIVED",
		"COMPROMISED",
		"UNKNOWN",
		"RESET_REQUIRED",
		"FORCE_CHANGE_PASSWORD",
		"EXTERNAL_PROVIDER",
	}
}

type UserVerificationType string

// Enum values for UserVerificationType
const (
	UserVerificationTypeRequired  UserVerificationType = "required"
	UserVerificationTypePreferred UserVerificationType = "preferred"
)

// Values returns all known values for UserVerificationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UserVerificationType) Values() []UserVerificationType {
	return []UserVerificationType{
		"required",
		"preferred",
	}
}

type VerifiedAttributeType string

// Enum values for VerifiedAttributeType
const (
	VerifiedAttributeTypePhoneNumber VerifiedAttributeType = "phone_number"
	VerifiedAttributeTypeEmail       VerifiedAttributeType = "email"
)

// Values returns all known values for VerifiedAttributeType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VerifiedAttributeType) Values() []VerifiedAttributeType {
	return []VerifiedAttributeType{
		"phone_number",
		"email",
	}
}

type VerifySoftwareTokenResponseType string

// Enum values for VerifySoftwareTokenResponseType
const (
	VerifySoftwareTokenResponseTypeSuccess VerifySoftwareTokenResponseType = "SUCCESS"
	VerifySoftwareTokenResponseTypeError   VerifySoftwareTokenResponseType = "ERROR"
)

// Values returns all known values for VerifySoftwareTokenResponseType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VerifySoftwareTokenResponseType) Values() []VerifySoftwareTokenResponseType {
	return []VerifySoftwareTokenResponseType{
		"SUCCESS",
		"ERROR",
	}
}
