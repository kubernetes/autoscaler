// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type DukptDerivationType string

// Enum values for DukptDerivationType
const (
	DukptDerivationTypeTdes2key DukptDerivationType = "TDES_2KEY"
	DukptDerivationTypeTdes3key DukptDerivationType = "TDES_3KEY"
	DukptDerivationTypeAes128   DukptDerivationType = "AES_128"
	DukptDerivationTypeAes192   DukptDerivationType = "AES_192"
	DukptDerivationTypeAes256   DukptDerivationType = "AES_256"
)

// Values returns all known values for DukptDerivationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DukptDerivationType) Values() []DukptDerivationType {
	return []DukptDerivationType{
		"TDES_2KEY",
		"TDES_3KEY",
		"AES_128",
		"AES_192",
		"AES_256",
	}
}

type DukptEncryptionMode string

// Enum values for DukptEncryptionMode
const (
	DukptEncryptionModeEcb DukptEncryptionMode = "ECB"
	DukptEncryptionModeCbc DukptEncryptionMode = "CBC"
)

// Values returns all known values for DukptEncryptionMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DukptEncryptionMode) Values() []DukptEncryptionMode {
	return []DukptEncryptionMode{
		"ECB",
		"CBC",
	}
}

type DukptKeyVariant string

// Enum values for DukptKeyVariant
const (
	DukptKeyVariantBidirectional DukptKeyVariant = "BIDIRECTIONAL"
	DukptKeyVariantRequest       DukptKeyVariant = "REQUEST"
	DukptKeyVariantResponse      DukptKeyVariant = "RESPONSE"
)

// Values returns all known values for DukptKeyVariant. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DukptKeyVariant) Values() []DukptKeyVariant {
	return []DukptKeyVariant{
		"BIDIRECTIONAL",
		"REQUEST",
		"RESPONSE",
	}
}

type EmvEncryptionMode string

// Enum values for EmvEncryptionMode
const (
	EmvEncryptionModeEcb EmvEncryptionMode = "ECB"
	EmvEncryptionModeCbc EmvEncryptionMode = "CBC"
)

// Values returns all known values for EmvEncryptionMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EmvEncryptionMode) Values() []EmvEncryptionMode {
	return []EmvEncryptionMode{
		"ECB",
		"CBC",
	}
}

type EmvMajorKeyDerivationMode string

// Enum values for EmvMajorKeyDerivationMode
const (
	EmvMajorKeyDerivationModeEmvOptionA EmvMajorKeyDerivationMode = "EMV_OPTION_A"
	EmvMajorKeyDerivationModeEmvOptionB EmvMajorKeyDerivationMode = "EMV_OPTION_B"
)

// Values returns all known values for EmvMajorKeyDerivationMode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EmvMajorKeyDerivationMode) Values() []EmvMajorKeyDerivationMode {
	return []EmvMajorKeyDerivationMode{
		"EMV_OPTION_A",
		"EMV_OPTION_B",
	}
}

type EncryptionMode string

// Enum values for EncryptionMode
const (
	EncryptionModeEcb    EncryptionMode = "ECB"
	EncryptionModeCbc    EncryptionMode = "CBC"
	EncryptionModeCfb    EncryptionMode = "CFB"
	EncryptionModeCfb1   EncryptionMode = "CFB1"
	EncryptionModeCfb8   EncryptionMode = "CFB8"
	EncryptionModeCfb64  EncryptionMode = "CFB64"
	EncryptionModeCfb128 EncryptionMode = "CFB128"
	EncryptionModeOfb    EncryptionMode = "OFB"
)

// Values returns all known values for EncryptionMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EncryptionMode) Values() []EncryptionMode {
	return []EncryptionMode{
		"ECB",
		"CBC",
		"CFB",
		"CFB1",
		"CFB8",
		"CFB64",
		"CFB128",
		"OFB",
	}
}

type KeyCheckValueAlgorithm string

// Enum values for KeyCheckValueAlgorithm
const (
	KeyCheckValueAlgorithmCmac     KeyCheckValueAlgorithm = "CMAC"
	KeyCheckValueAlgorithmAnsiX924 KeyCheckValueAlgorithm = "ANSI_X9_24"
)

// Values returns all known values for KeyCheckValueAlgorithm. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KeyCheckValueAlgorithm) Values() []KeyCheckValueAlgorithm {
	return []KeyCheckValueAlgorithm{
		"CMAC",
		"ANSI_X9_24",
	}
}

type KeyDerivationFunction string

// Enum values for KeyDerivationFunction
const (
	KeyDerivationFunctionNistSp800 KeyDerivationFunction = "NIST_SP800"
	KeyDerivationFunctionAnsiX963  KeyDerivationFunction = "ANSI_X963"
)

// Values returns all known values for KeyDerivationFunction. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KeyDerivationFunction) Values() []KeyDerivationFunction {
	return []KeyDerivationFunction{
		"NIST_SP800",
		"ANSI_X963",
	}
}

type KeyDerivationHashAlgorithm string

// Enum values for KeyDerivationHashAlgorithm
const (
	KeyDerivationHashAlgorithmSha256 KeyDerivationHashAlgorithm = "SHA_256"
	KeyDerivationHashAlgorithmSha384 KeyDerivationHashAlgorithm = "SHA_384"
	KeyDerivationHashAlgorithmSha512 KeyDerivationHashAlgorithm = "SHA_512"
)

// Values returns all known values for KeyDerivationHashAlgorithm. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KeyDerivationHashAlgorithm) Values() []KeyDerivationHashAlgorithm {
	return []KeyDerivationHashAlgorithm{
		"SHA_256",
		"SHA_384",
		"SHA_512",
	}
}

type MacAlgorithm string

// Enum values for MacAlgorithm
const (
	MacAlgorithmIso9797Algorithm1 MacAlgorithm = "ISO9797_ALGORITHM1"
	MacAlgorithmIso9797Algorithm3 MacAlgorithm = "ISO9797_ALGORITHM3"
	MacAlgorithmCmac              MacAlgorithm = "CMAC"
	MacAlgorithmHmacSha224        MacAlgorithm = "HMAC_SHA224"
	MacAlgorithmHmacSha256        MacAlgorithm = "HMAC_SHA256"
	MacAlgorithmHmacSha384        MacAlgorithm = "HMAC_SHA384"
	MacAlgorithmHmacSha512        MacAlgorithm = "HMAC_SHA512"
)

// Values returns all known values for MacAlgorithm. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MacAlgorithm) Values() []MacAlgorithm {
	return []MacAlgorithm{
		"ISO9797_ALGORITHM1",
		"ISO9797_ALGORITHM3",
		"CMAC",
		"HMAC_SHA224",
		"HMAC_SHA256",
		"HMAC_SHA384",
		"HMAC_SHA512",
	}
}

type MajorKeyDerivationMode string

// Enum values for MajorKeyDerivationMode
const (
	MajorKeyDerivationModeEmvOptionA MajorKeyDerivationMode = "EMV_OPTION_A"
	MajorKeyDerivationModeEmvOptionB MajorKeyDerivationMode = "EMV_OPTION_B"
)

// Values returns all known values for MajorKeyDerivationMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MajorKeyDerivationMode) Values() []MajorKeyDerivationMode {
	return []MajorKeyDerivationMode{
		"EMV_OPTION_A",
		"EMV_OPTION_B",
	}
}

type PaddingType string

// Enum values for PaddingType
const (
	PaddingTypePkcs1      PaddingType = "PKCS1"
	PaddingTypeOaepSha1   PaddingType = "OAEP_SHA1"
	PaddingTypeOaepSha256 PaddingType = "OAEP_SHA256"
	PaddingTypeOaepSha512 PaddingType = "OAEP_SHA512"
)

// Values returns all known values for PaddingType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PaddingType) Values() []PaddingType {
	return []PaddingType{
		"PKCS1",
		"OAEP_SHA1",
		"OAEP_SHA256",
		"OAEP_SHA512",
	}
}

type PinBlockFormatForEmvPinChange string

// Enum values for PinBlockFormatForEmvPinChange
const (
	PinBlockFormatForEmvPinChangeIsoFormat0 PinBlockFormatForEmvPinChange = "ISO_FORMAT_0"
	PinBlockFormatForEmvPinChangeIsoFormat1 PinBlockFormatForEmvPinChange = "ISO_FORMAT_1"
	PinBlockFormatForEmvPinChangeIsoFormat3 PinBlockFormatForEmvPinChange = "ISO_FORMAT_3"
)

// Values returns all known values for PinBlockFormatForEmvPinChange. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PinBlockFormatForEmvPinChange) Values() []PinBlockFormatForEmvPinChange {
	return []PinBlockFormatForEmvPinChange{
		"ISO_FORMAT_0",
		"ISO_FORMAT_1",
		"ISO_FORMAT_3",
	}
}

type PinBlockFormatForPinData string

// Enum values for PinBlockFormatForPinData
const (
	PinBlockFormatForPinDataIsoFormat0 PinBlockFormatForPinData = "ISO_FORMAT_0"
	PinBlockFormatForPinDataIsoFormat3 PinBlockFormatForPinData = "ISO_FORMAT_3"
	PinBlockFormatForPinDataIsoFormat4 PinBlockFormatForPinData = "ISO_FORMAT_4"
)

// Values returns all known values for PinBlockFormatForPinData. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PinBlockFormatForPinData) Values() []PinBlockFormatForPinData {
	return []PinBlockFormatForPinData{
		"ISO_FORMAT_0",
		"ISO_FORMAT_3",
		"ISO_FORMAT_4",
	}
}

type PinBlockLengthPosition string

// Enum values for PinBlockLengthPosition
const (
	PinBlockLengthPositionNone            PinBlockLengthPosition = "NONE"
	PinBlockLengthPositionFrontOfPinBlock PinBlockLengthPosition = "FRONT_OF_PIN_BLOCK"
)

// Values returns all known values for PinBlockLengthPosition. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PinBlockLengthPosition) Values() []PinBlockLengthPosition {
	return []PinBlockLengthPosition{
		"NONE",
		"FRONT_OF_PIN_BLOCK",
	}
}

type PinBlockPaddingType string

// Enum values for PinBlockPaddingType
const (
	PinBlockPaddingTypeNoPadding   PinBlockPaddingType = "NO_PADDING"
	PinBlockPaddingTypeIsoIec78164 PinBlockPaddingType = "ISO_IEC_7816_4"
)

// Values returns all known values for PinBlockPaddingType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PinBlockPaddingType) Values() []PinBlockPaddingType {
	return []PinBlockPaddingType{
		"NO_PADDING",
		"ISO_IEC_7816_4",
	}
}

type SessionKeyDerivationMode string

// Enum values for SessionKeyDerivationMode
const (
	SessionKeyDerivationModeEmvCommonSessionKey  SessionKeyDerivationMode = "EMV_COMMON_SESSION_KEY"
	SessionKeyDerivationModeEmv2000              SessionKeyDerivationMode = "EMV2000"
	SessionKeyDerivationModeAmex                 SessionKeyDerivationMode = "AMEX"
	SessionKeyDerivationModeMastercardSessionKey SessionKeyDerivationMode = "MASTERCARD_SESSION_KEY"
	SessionKeyDerivationModeVisa                 SessionKeyDerivationMode = "VISA"
)

// Values returns all known values for SessionKeyDerivationMode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SessionKeyDerivationMode) Values() []SessionKeyDerivationMode {
	return []SessionKeyDerivationMode{
		"EMV_COMMON_SESSION_KEY",
		"EMV2000",
		"AMEX",
		"MASTERCARD_SESSION_KEY",
		"VISA",
	}
}

type SymmetricKeyAlgorithm string

// Enum values for SymmetricKeyAlgorithm
const (
	SymmetricKeyAlgorithmTdes2key SymmetricKeyAlgorithm = "TDES_2KEY"
	SymmetricKeyAlgorithmTdes3key SymmetricKeyAlgorithm = "TDES_3KEY"
	SymmetricKeyAlgorithmAes128   SymmetricKeyAlgorithm = "AES_128"
	SymmetricKeyAlgorithmAes192   SymmetricKeyAlgorithm = "AES_192"
	SymmetricKeyAlgorithmAes256   SymmetricKeyAlgorithm = "AES_256"
)

// Values returns all known values for SymmetricKeyAlgorithm. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SymmetricKeyAlgorithm) Values() []SymmetricKeyAlgorithm {
	return []SymmetricKeyAlgorithm{
		"TDES_2KEY",
		"TDES_3KEY",
		"AES_128",
		"AES_192",
		"AES_256",
	}
}

type VerificationFailedReason string

// Enum values for VerificationFailedReason
const (
	VerificationFailedReasonInvalidMac                   VerificationFailedReason = "INVALID_MAC"
	VerificationFailedReasonInvalidPin                   VerificationFailedReason = "INVALID_PIN"
	VerificationFailedReasonInvalidValidationData        VerificationFailedReason = "INVALID_VALIDATION_DATA"
	VerificationFailedReasonInvalidAuthRequestCryptogram VerificationFailedReason = "INVALID_AUTH_REQUEST_CRYPTOGRAM"
)

// Values returns all known values for VerificationFailedReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VerificationFailedReason) Values() []VerificationFailedReason {
	return []VerificationFailedReason{
		"INVALID_MAC",
		"INVALID_PIN",
		"INVALID_VALIDATION_DATA",
		"INVALID_AUTH_REQUEST_CRYPTOGRAM",
	}
}
