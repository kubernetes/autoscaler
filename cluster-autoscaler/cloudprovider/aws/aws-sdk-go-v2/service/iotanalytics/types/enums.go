// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ChannelStatus string

// Enum values for ChannelStatus
const (
	ChannelStatusCreating ChannelStatus = "CREATING"
	ChannelStatusActive   ChannelStatus = "ACTIVE"
	ChannelStatusDeleting ChannelStatus = "DELETING"
)

// Values returns all known values for ChannelStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChannelStatus) Values() []ChannelStatus {
	return []ChannelStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
	}
}

type ComputeType string

// Enum values for ComputeType
const (
	ComputeTypeAcu1 ComputeType = "ACU_1"
	ComputeTypeAcu2 ComputeType = "ACU_2"
)

// Values returns all known values for ComputeType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ComputeType) Values() []ComputeType {
	return []ComputeType{
		"ACU_1",
		"ACU_2",
	}
}

type DatasetActionType string

// Enum values for DatasetActionType
const (
	DatasetActionTypeQuery     DatasetActionType = "QUERY"
	DatasetActionTypeContainer DatasetActionType = "CONTAINER"
)

// Values returns all known values for DatasetActionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatasetActionType) Values() []DatasetActionType {
	return []DatasetActionType{
		"QUERY",
		"CONTAINER",
	}
}

type DatasetContentState string

// Enum values for DatasetContentState
const (
	DatasetContentStateCreating  DatasetContentState = "CREATING"
	DatasetContentStateSucceeded DatasetContentState = "SUCCEEDED"
	DatasetContentStateFailed    DatasetContentState = "FAILED"
)

// Values returns all known values for DatasetContentState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatasetContentState) Values() []DatasetContentState {
	return []DatasetContentState{
		"CREATING",
		"SUCCEEDED",
		"FAILED",
	}
}

type DatasetStatus string

// Enum values for DatasetStatus
const (
	DatasetStatusCreating DatasetStatus = "CREATING"
	DatasetStatusActive   DatasetStatus = "ACTIVE"
	DatasetStatusDeleting DatasetStatus = "DELETING"
)

// Values returns all known values for DatasetStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatasetStatus) Values() []DatasetStatus {
	return []DatasetStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
	}
}

type DatastoreStatus string

// Enum values for DatastoreStatus
const (
	DatastoreStatusCreating DatastoreStatus = "CREATING"
	DatastoreStatusActive   DatastoreStatus = "ACTIVE"
	DatastoreStatusDeleting DatastoreStatus = "DELETING"
)

// Values returns all known values for DatastoreStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DatastoreStatus) Values() []DatastoreStatus {
	return []DatastoreStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
	}
}

type FileFormatType string

// Enum values for FileFormatType
const (
	FileFormatTypeJson    FileFormatType = "JSON"
	FileFormatTypeParquet FileFormatType = "PARQUET"
)

// Values returns all known values for FileFormatType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FileFormatType) Values() []FileFormatType {
	return []FileFormatType{
		"JSON",
		"PARQUET",
	}
}

type LoggingLevel string

// Enum values for LoggingLevel
const (
	LoggingLevelError LoggingLevel = "ERROR"
)

// Values returns all known values for LoggingLevel. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LoggingLevel) Values() []LoggingLevel {
	return []LoggingLevel{
		"ERROR",
	}
}

type ReprocessingStatus string

// Enum values for ReprocessingStatus
const (
	ReprocessingStatusRunning   ReprocessingStatus = "RUNNING"
	ReprocessingStatusSucceeded ReprocessingStatus = "SUCCEEDED"
	ReprocessingStatusCancelled ReprocessingStatus = "CANCELLED"
	ReprocessingStatusFailed    ReprocessingStatus = "FAILED"
)

// Values returns all known values for ReprocessingStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReprocessingStatus) Values() []ReprocessingStatus {
	return []ReprocessingStatus{
		"RUNNING",
		"SUCCEEDED",
		"CANCELLED",
		"FAILED",
	}
}
