// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AnalysisType string

// Enum values for AnalysisType
const (
	AnalysisTypeSecurity AnalysisType = "Security"
	AnalysisTypeAll      AnalysisType = "All"
)

// Values returns all known values for AnalysisType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalysisType) Values() []AnalysisType {
	return []AnalysisType{
		"Security",
		"All",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeDuplicateIdentifier ErrorCode = "DUPLICATE_IDENTIFIER"
	ErrorCodeItemDoesNotExist    ErrorCode = "ITEM_DOES_NOT_EXIST"
	ErrorCodeInternalError       ErrorCode = "INTERNAL_ERROR"
	ErrorCodeInvalidFindingId    ErrorCode = "INVALID_FINDING_ID"
	ErrorCodeInvalidScanName     ErrorCode = "INVALID_SCAN_NAME"
)

// Values returns all known values for ErrorCode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"DUPLICATE_IDENTIFIER",
		"ITEM_DOES_NOT_EXIST",
		"INTERNAL_ERROR",
		"INVALID_FINDING_ID",
		"INVALID_SCAN_NAME",
	}
}

type ScanState string

// Enum values for ScanState
const (
	ScanStateInProgress ScanState = "InProgress"
	ScanStateSuccessful ScanState = "Successful"
	ScanStateFailed     ScanState = "Failed"
)

// Values returns all known values for ScanState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScanState) Values() []ScanState {
	return []ScanState{
		"InProgress",
		"Successful",
		"Failed",
	}
}

type ScanType string

// Enum values for ScanType
const (
	ScanTypeStandard ScanType = "Standard"
	ScanTypeExpress  ScanType = "Express"
)

// Values returns all known values for ScanType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScanType) Values() []ScanType {
	return []ScanType{
		"Standard",
		"Express",
	}
}

type Severity string

// Enum values for Severity
const (
	SeverityCritical Severity = "Critical"
	SeverityHigh     Severity = "High"
	SeverityMedium   Severity = "Medium"
	SeverityLow      Severity = "Low"
	SeverityInfo     Severity = "Info"
)

// Values returns all known values for Severity. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Severity) Values() []Severity {
	return []Severity{
		"Critical",
		"High",
		"Medium",
		"Low",
		"Info",
	}
}

type Status string

// Enum values for Status
const (
	StatusClosed Status = "Closed"
	StatusOpen   Status = "Open"
	StatusAll    Status = "All"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"Closed",
		"Open",
		"All",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "unknownOperation"
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "cannotParse"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "fieldValidationFailed"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "other"
	ValidationExceptionReasonLambdaCodeShaMismatch ValidationExceptionReason = "lambdaCodeShaMisMatch"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"unknownOperation",
		"cannotParse",
		"fieldValidationFailed",
		"other",
		"lambdaCodeShaMisMatch",
	}
}
