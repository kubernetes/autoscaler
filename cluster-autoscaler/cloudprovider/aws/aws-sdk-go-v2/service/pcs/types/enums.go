// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccountingMode string

// Enum values for AccountingMode
const (
	AccountingModeStandard AccountingMode = "STANDARD"
	AccountingModeNone     AccountingMode = "NONE"
)

// Values returns all known values for AccountingMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AccountingMode) Values() []AccountingMode {
	return []AccountingMode{
		"STANDARD",
		"NONE",
	}
}

type ClusterStatus string

// Enum values for ClusterStatus
const (
	ClusterStatusCreating     ClusterStatus = "CREATING"
	ClusterStatusActive       ClusterStatus = "ACTIVE"
	ClusterStatusUpdating     ClusterStatus = "UPDATING"
	ClusterStatusDeleting     ClusterStatus = "DELETING"
	ClusterStatusCreateFailed ClusterStatus = "CREATE_FAILED"
	ClusterStatusDeleteFailed ClusterStatus = "DELETE_FAILED"
	ClusterStatusUpdateFailed ClusterStatus = "UPDATE_FAILED"
	ClusterStatusSuspending   ClusterStatus = "SUSPENDING"
	ClusterStatusSuspended    ClusterStatus = "SUSPENDED"
)

// Values returns all known values for ClusterStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClusterStatus) Values() []ClusterStatus {
	return []ClusterStatus{
		"CREATING",
		"ACTIVE",
		"UPDATING",
		"DELETING",
		"CREATE_FAILED",
		"DELETE_FAILED",
		"UPDATE_FAILED",
		"SUSPENDING",
		"SUSPENDED",
	}
}

type ComputeNodeGroupStatus string

// Enum values for ComputeNodeGroupStatus
const (
	ComputeNodeGroupStatusCreating     ComputeNodeGroupStatus = "CREATING"
	ComputeNodeGroupStatusActive       ComputeNodeGroupStatus = "ACTIVE"
	ComputeNodeGroupStatusUpdating     ComputeNodeGroupStatus = "UPDATING"
	ComputeNodeGroupStatusDeleting     ComputeNodeGroupStatus = "DELETING"
	ComputeNodeGroupStatusCreateFailed ComputeNodeGroupStatus = "CREATE_FAILED"
	ComputeNodeGroupStatusDeleteFailed ComputeNodeGroupStatus = "DELETE_FAILED"
	ComputeNodeGroupStatusUpdateFailed ComputeNodeGroupStatus = "UPDATE_FAILED"
	ComputeNodeGroupStatusDeleted      ComputeNodeGroupStatus = "DELETED"
	ComputeNodeGroupStatusSuspending   ComputeNodeGroupStatus = "SUSPENDING"
	ComputeNodeGroupStatusSuspended    ComputeNodeGroupStatus = "SUSPENDED"
)

// Values returns all known values for ComputeNodeGroupStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ComputeNodeGroupStatus) Values() []ComputeNodeGroupStatus {
	return []ComputeNodeGroupStatus{
		"CREATING",
		"ACTIVE",
		"UPDATING",
		"DELETING",
		"CREATE_FAILED",
		"DELETE_FAILED",
		"UPDATE_FAILED",
		"DELETED",
		"SUSPENDING",
		"SUSPENDED",
	}
}

type EndpointType string

// Enum values for EndpointType
const (
	EndpointTypeSlurmctld EndpointType = "SLURMCTLD"
	EndpointTypeSlurmdbd  EndpointType = "SLURMDBD"
)

// Values returns all known values for EndpointType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EndpointType) Values() []EndpointType {
	return []EndpointType{
		"SLURMCTLD",
		"SLURMDBD",
	}
}

type PurchaseOption string

// Enum values for PurchaseOption
const (
	PurchaseOptionOndemand PurchaseOption = "ONDEMAND"
	PurchaseOptionSpot     PurchaseOption = "SPOT"
)

// Values returns all known values for PurchaseOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PurchaseOption) Values() []PurchaseOption {
	return []PurchaseOption{
		"ONDEMAND",
		"SPOT",
	}
}

type QueueStatus string

// Enum values for QueueStatus
const (
	QueueStatusCreating     QueueStatus = "CREATING"
	QueueStatusActive       QueueStatus = "ACTIVE"
	QueueStatusUpdating     QueueStatus = "UPDATING"
	QueueStatusDeleting     QueueStatus = "DELETING"
	QueueStatusCreateFailed QueueStatus = "CREATE_FAILED"
	QueueStatusDeleteFailed QueueStatus = "DELETE_FAILED"
	QueueStatusUpdateFailed QueueStatus = "UPDATE_FAILED"
	QueueStatusSuspending   QueueStatus = "SUSPENDING"
	QueueStatusSuspended    QueueStatus = "SUSPENDED"
)

// Values returns all known values for QueueStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueueStatus) Values() []QueueStatus {
	return []QueueStatus{
		"CREATING",
		"ACTIVE",
		"UPDATING",
		"DELETING",
		"CREATE_FAILED",
		"DELETE_FAILED",
		"UPDATE_FAILED",
		"SUSPENDING",
		"SUSPENDED",
	}
}

type SchedulerType string

// Enum values for SchedulerType
const (
	SchedulerTypeSlurm SchedulerType = "SLURM"
)

// Values returns all known values for SchedulerType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SchedulerType) Values() []SchedulerType {
	return []SchedulerType{
		"SLURM",
	}
}

type Size string

// Enum values for Size
const (
	SizeSmall  Size = "SMALL"
	SizeMedium Size = "MEDIUM"
	SizeLarge  Size = "LARGE"
)

// Values returns all known values for Size. Note that this can be expanded in the
// future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Size) Values() []Size {
	return []Size{
		"SMALL",
		"MEDIUM",
		"LARGE",
	}
}

type SpotAllocationStrategy string

// Enum values for SpotAllocationStrategy
const (
	SpotAllocationStrategyLowestPrice            SpotAllocationStrategy = "lowest-price"
	SpotAllocationStrategyCapacityOptimized      SpotAllocationStrategy = "capacity-optimized"
	SpotAllocationStrategyPriceCapacityOptimized SpotAllocationStrategy = "price-capacity-optimized"
)

// Values returns all known values for SpotAllocationStrategy. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SpotAllocationStrategy) Values() []SpotAllocationStrategy {
	return []SpotAllocationStrategy{
		"lowest-price",
		"capacity-optimized",
		"price-capacity-optimized",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "unknownOperation"
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "cannotParse"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "fieldValidationFailed"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "other"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"unknownOperation",
		"cannotParse",
		"fieldValidationFailed",
		"other",
	}
}
