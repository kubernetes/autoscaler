// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type CodegenGenericDataFieldDataType string

// Enum values for CodegenGenericDataFieldDataType
const (
	CodegenGenericDataFieldDataTypeId           CodegenGenericDataFieldDataType = "ID"
	CodegenGenericDataFieldDataTypeString       CodegenGenericDataFieldDataType = "String"
	CodegenGenericDataFieldDataTypeInt          CodegenGenericDataFieldDataType = "Int"
	CodegenGenericDataFieldDataTypeFloat        CodegenGenericDataFieldDataType = "Float"
	CodegenGenericDataFieldDataTypeAwsDate      CodegenGenericDataFieldDataType = "AWSDate"
	CodegenGenericDataFieldDataTypeAwsTime      CodegenGenericDataFieldDataType = "AWSTime"
	CodegenGenericDataFieldDataTypeAwsDateTime  CodegenGenericDataFieldDataType = "AWSDateTime"
	CodegenGenericDataFieldDataTypeAwsTimestamp CodegenGenericDataFieldDataType = "AWSTimestamp"
	CodegenGenericDataFieldDataTypeAwsEmail     CodegenGenericDataFieldDataType = "AWSEmail"
	CodegenGenericDataFieldDataTypeAwsUrl       CodegenGenericDataFieldDataType = "AWSURL"
	CodegenGenericDataFieldDataTypeAwsIpAddress CodegenGenericDataFieldDataType = "AWSIPAddress"
	CodegenGenericDataFieldDataTypeBoolean      CodegenGenericDataFieldDataType = "Boolean"
	CodegenGenericDataFieldDataTypeAwsJson      CodegenGenericDataFieldDataType = "AWSJSON"
	CodegenGenericDataFieldDataTypeAwsPhone     CodegenGenericDataFieldDataType = "AWSPhone"
	CodegenGenericDataFieldDataTypeEnum         CodegenGenericDataFieldDataType = "Enum"
	CodegenGenericDataFieldDataTypeModel        CodegenGenericDataFieldDataType = "Model"
	CodegenGenericDataFieldDataTypeNonModel     CodegenGenericDataFieldDataType = "NonModel"
)

// Values returns all known values for CodegenGenericDataFieldDataType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CodegenGenericDataFieldDataType) Values() []CodegenGenericDataFieldDataType {
	return []CodegenGenericDataFieldDataType{
		"ID",
		"String",
		"Int",
		"Float",
		"AWSDate",
		"AWSTime",
		"AWSDateTime",
		"AWSTimestamp",
		"AWSEmail",
		"AWSURL",
		"AWSIPAddress",
		"Boolean",
		"AWSJSON",
		"AWSPhone",
		"Enum",
		"Model",
		"NonModel",
	}
}

type CodegenJobGenericDataSourceType string

// Enum values for CodegenJobGenericDataSourceType
const (
	CodegenJobGenericDataSourceTypeDataStore CodegenJobGenericDataSourceType = "DataStore"
)

// Values returns all known values for CodegenJobGenericDataSourceType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CodegenJobGenericDataSourceType) Values() []CodegenJobGenericDataSourceType {
	return []CodegenJobGenericDataSourceType{
		"DataStore",
	}
}

type CodegenJobStatus string

// Enum values for CodegenJobStatus
const (
	CodegenJobStatusInProgress CodegenJobStatus = "in_progress"
	CodegenJobStatusFailed     CodegenJobStatus = "failed"
	CodegenJobStatusSucceeded  CodegenJobStatus = "succeeded"
)

// Values returns all known values for CodegenJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CodegenJobStatus) Values() []CodegenJobStatus {
	return []CodegenJobStatus{
		"in_progress",
		"failed",
		"succeeded",
	}
}

type FixedPosition string

// Enum values for FixedPosition
const (
	FixedPositionFirst FixedPosition = "first"
)

// Values returns all known values for FixedPosition. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FixedPosition) Values() []FixedPosition {
	return []FixedPosition{
		"first",
	}
}

type FormActionType string

// Enum values for FormActionType
const (
	FormActionTypeCreate FormActionType = "create"
	FormActionTypeUpdate FormActionType = "update"
)

// Values returns all known values for FormActionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FormActionType) Values() []FormActionType {
	return []FormActionType{
		"create",
		"update",
	}
}

type FormButtonsPosition string

// Enum values for FormButtonsPosition
const (
	FormButtonsPositionTop          FormButtonsPosition = "top"
	FormButtonsPositionBottom       FormButtonsPosition = "bottom"
	FormButtonsPositionTopAndBottom FormButtonsPosition = "top_and_bottom"
)

// Values returns all known values for FormButtonsPosition. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FormButtonsPosition) Values() []FormButtonsPosition {
	return []FormButtonsPosition{
		"top",
		"bottom",
		"top_and_bottom",
	}
}

type FormDataSourceType string

// Enum values for FormDataSourceType
const (
	// Will use a provided Amplify DataStore enabled API
	FormDataSourceTypeDatastore FormDataSourceType = "DataStore"
	// Will use passed in hooks to use when creating a form from scratch
	FormDataSourceTypeCustom FormDataSourceType = "Custom"
)

// Values returns all known values for FormDataSourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FormDataSourceType) Values() []FormDataSourceType {
	return []FormDataSourceType{
		"DataStore",
		"Custom",
	}
}

type GenericDataRelationshipType string

// Enum values for GenericDataRelationshipType
const (
	GenericDataRelationshipTypeHasMany   GenericDataRelationshipType = "HAS_MANY"
	GenericDataRelationshipTypeHasOne    GenericDataRelationshipType = "HAS_ONE"
	GenericDataRelationshipTypeBelongsTo GenericDataRelationshipType = "BELONGS_TO"
)

// Values returns all known values for GenericDataRelationshipType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GenericDataRelationshipType) Values() []GenericDataRelationshipType {
	return []GenericDataRelationshipType{
		"HAS_MANY",
		"HAS_ONE",
		"BELONGS_TO",
	}
}

type JSModule string

// Enum values for JSModule
const (
	JSModuleEs2020 JSModule = "es2020"
	JSModuleEsnext JSModule = "esnext"
)

// Values returns all known values for JSModule. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JSModule) Values() []JSModule {
	return []JSModule{
		"es2020",
		"esnext",
	}
}

type JSScript string

// Enum values for JSScript
const (
	JSScriptJsx JSScript = "jsx"
	JSScriptTsx JSScript = "tsx"
	JSScriptJs  JSScript = "js"
)

// Values returns all known values for JSScript. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JSScript) Values() []JSScript {
	return []JSScript{
		"jsx",
		"tsx",
		"js",
	}
}

type JSTarget string

// Enum values for JSTarget
const (
	JSTargetEs2015 JSTarget = "es2015"
	JSTargetEs2020 JSTarget = "es2020"
)

// Values returns all known values for JSTarget. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JSTarget) Values() []JSTarget {
	return []JSTarget{
		"es2015",
		"es2020",
	}
}

type LabelDecorator string

// Enum values for LabelDecorator
const (
	LabelDecoratorRequired LabelDecorator = "required"
	LabelDecoratorOptional LabelDecorator = "optional"
	LabelDecoratorNone     LabelDecorator = "none"
)

// Values returns all known values for LabelDecorator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LabelDecorator) Values() []LabelDecorator {
	return []LabelDecorator{
		"required",
		"optional",
		"none",
	}
}

type SortDirection string

// Enum values for SortDirection
const (
	SortDirectionAsc  SortDirection = "ASC"
	SortDirectionDesc SortDirection = "DESC"
)

// Values returns all known values for SortDirection. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortDirection) Values() []SortDirection {
	return []SortDirection{
		"ASC",
		"DESC",
	}
}

type StorageAccessLevel string

// Enum values for StorageAccessLevel
const (
	StorageAccessLevelPublic    StorageAccessLevel = "public"
	StorageAccessLevelProtected StorageAccessLevel = "protected"
	StorageAccessLevelPrivate   StorageAccessLevel = "private"
)

// Values returns all known values for StorageAccessLevel. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StorageAccessLevel) Values() []StorageAccessLevel {
	return []StorageAccessLevel{
		"public",
		"protected",
		"private",
	}
}

type TokenProviders string

// Enum values for TokenProviders
const (
	// The figma token provider.
	TokenProvidersFigma TokenProviders = "figma"
)

// Values returns all known values for TokenProviders. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TokenProviders) Values() []TokenProviders {
	return []TokenProviders{
		"figma",
	}
}
