// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AddressRoleType string

// Enum values for AddressRoleType
const (
	AddressRoleTypeTaxAddress     AddressRoleType = "TaxAddress"
	AddressRoleTypeBillingAddress AddressRoleType = "BillingAddress"
	AddressRoleTypeContactAddress AddressRoleType = "ContactAddress"
)

// Values returns all known values for AddressRoleType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AddressRoleType) Values() []AddressRoleType {
	return []AddressRoleType{
		"TaxAddress",
		"BillingAddress",
		"ContactAddress",
	}
}

type EntityExemptionAccountStatus string

// Enum values for EntityExemptionAccountStatus
const (
	EntityExemptionAccountStatusNone    EntityExemptionAccountStatus = "None"
	EntityExemptionAccountStatusValid   EntityExemptionAccountStatus = "Valid"
	EntityExemptionAccountStatusExpired EntityExemptionAccountStatus = "Expired"
	EntityExemptionAccountStatusPending EntityExemptionAccountStatus = "Pending"
)

// Values returns all known values for EntityExemptionAccountStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EntityExemptionAccountStatus) Values() []EntityExemptionAccountStatus {
	return []EntityExemptionAccountStatus{
		"None",
		"Valid",
		"Expired",
		"Pending",
	}
}

type HeritageStatus string

// Enum values for HeritageStatus
const (
	HeritageStatusOptIn  HeritageStatus = "OptIn"
	HeritageStatusOptOut HeritageStatus = "OptOut"
)

// Values returns all known values for HeritageStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HeritageStatus) Values() []HeritageStatus {
	return []HeritageStatus{
		"OptIn",
		"OptOut",
	}
}

type IndonesiaTaxRegistrationNumberType string

// Enum values for IndonesiaTaxRegistrationNumberType
const (
	IndonesiaTaxRegistrationNumberTypeNik            IndonesiaTaxRegistrationNumberType = "NIK"
	IndonesiaTaxRegistrationNumberTypePassportNumber IndonesiaTaxRegistrationNumberType = "PassportNumber"
	IndonesiaTaxRegistrationNumberTypeNpwp           IndonesiaTaxRegistrationNumberType = "NPWP"
	IndonesiaTaxRegistrationNumberTypeNitku          IndonesiaTaxRegistrationNumberType = "NITKU"
)

// Values returns all known values for IndonesiaTaxRegistrationNumberType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IndonesiaTaxRegistrationNumberType) Values() []IndonesiaTaxRegistrationNumberType {
	return []IndonesiaTaxRegistrationNumberType{
		"NIK",
		"PassportNumber",
		"NPWP",
		"NITKU",
	}
}

type Industries string

// Enum values for Industries
const (
	IndustriesCirculatingOrg         Industries = "CirculatingOrg"
	IndustriesProfessionalOrg        Industries = "ProfessionalOrg"
	IndustriesBanks                  Industries = "Banks"
	IndustriesInsurance              Industries = "Insurance"
	IndustriesPensionAndBenefitFunds Industries = "PensionAndBenefitFunds"
	IndustriesDevelopmentAgencies    Industries = "DevelopmentAgencies"
)

// Values returns all known values for Industries. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Industries) Values() []Industries {
	return []Industries{
		"CirculatingOrg",
		"ProfessionalOrg",
		"Banks",
		"Insurance",
		"PensionAndBenefitFunds",
		"DevelopmentAgencies",
	}
}

type IsraelCustomerType string

// Enum values for IsraelCustomerType
const (
	IsraelCustomerTypeBusiness   IsraelCustomerType = "Business"
	IsraelCustomerTypeIndividual IsraelCustomerType = "Individual"
)

// Values returns all known values for IsraelCustomerType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IsraelCustomerType) Values() []IsraelCustomerType {
	return []IsraelCustomerType{
		"Business",
		"Individual",
	}
}

type IsraelDealerType string

// Enum values for IsraelDealerType
const (
	IsraelDealerTypeAuthorized    IsraelDealerType = "Authorized"
	IsraelDealerTypeNonAuthorized IsraelDealerType = "Non-authorized"
)

// Values returns all known values for IsraelDealerType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IsraelDealerType) Values() []IsraelDealerType {
	return []IsraelDealerType{
		"Authorized",
		"Non-authorized",
	}
}

type MalaysiaServiceTaxCode string

// Enum values for MalaysiaServiceTaxCode
const (
	MalaysiaServiceTaxCodeConsultancy                MalaysiaServiceTaxCode = "Consultancy"
	MalaysiaServiceTaxCodeDigitalSvcElectronicMedium MalaysiaServiceTaxCode = "Digital Service And Electronic Medium"
	MalaysiaServiceTaxCodeItServices                 MalaysiaServiceTaxCode = "IT Services"
	MalaysiaServiceTaxCodeTrainingOrCoaching         MalaysiaServiceTaxCode = "Training Or Coaching"
)

// Values returns all known values for MalaysiaServiceTaxCode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MalaysiaServiceTaxCode) Values() []MalaysiaServiceTaxCode {
	return []MalaysiaServiceTaxCode{
		"Consultancy",
		"Digital Service And Electronic Medium",
		"IT Services",
		"Training Or Coaching",
	}
}

type PersonType string

// Enum values for PersonType
const (
	PersonTypeLegalPerson    PersonType = "Legal Person"
	PersonTypePhysicalPerson PersonType = "Physical Person"
	PersonTypeBusiness       PersonType = "Business"
)

// Values returns all known values for PersonType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PersonType) Values() []PersonType {
	return []PersonType{
		"Legal Person",
		"Physical Person",
		"Business",
	}
}

type RegistrationType string

// Enum values for RegistrationType
const (
	RegistrationTypeIntraEu RegistrationType = "Intra-EU"
	RegistrationTypeLocal   RegistrationType = "Local"
)

// Values returns all known values for RegistrationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RegistrationType) Values() []RegistrationType {
	return []RegistrationType{
		"Intra-EU",
		"Local",
	}
}

type SaudiArabiaTaxRegistrationNumberType string

// Enum values for SaudiArabiaTaxRegistrationNumberType
const (
	SaudiArabiaTaxRegistrationNumberTypeTaxRegistrationNumber        SaudiArabiaTaxRegistrationNumberType = "TaxRegistrationNumber"
	SaudiArabiaTaxRegistrationNumberTypeTaxIdentificationNumber      SaudiArabiaTaxRegistrationNumberType = "TaxIdentificationNumber"
	SaudiArabiaTaxRegistrationNumberTypeCommercialRegistrationNumber SaudiArabiaTaxRegistrationNumberType = "CommercialRegistrationNumber"
)

// Values returns all known values for SaudiArabiaTaxRegistrationNumberType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SaudiArabiaTaxRegistrationNumberType) Values() []SaudiArabiaTaxRegistrationNumberType {
	return []SaudiArabiaTaxRegistrationNumberType{
		"TaxRegistrationNumber",
		"TaxIdentificationNumber",
		"CommercialRegistrationNumber",
	}
}

type Sector string

// Enum values for Sector
const (
	SectorBusiness           Sector = "Business"
	SectorIndividual         Sector = "Individual"
	SectorPublicInstitutions Sector = "Government"
)

// Values returns all known values for Sector. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Sector) Values() []Sector {
	return []Sector{
		"Business",
		"Individual",
		"Government",
	}
}

type SupplementalTaxRegistrationType string

// Enum values for SupplementalTaxRegistrationType
const (
	SupplementalTaxRegistrationTypeVat SupplementalTaxRegistrationType = "VAT"
)

// Values returns all known values for SupplementalTaxRegistrationType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SupplementalTaxRegistrationType) Values() []SupplementalTaxRegistrationType {
	return []SupplementalTaxRegistrationType{
		"VAT",
	}
}

type TaxRegistrationNumberType string

// Enum values for TaxRegistrationNumberType
const (
	TaxRegistrationNumberTypeTaxRegistrationNumber   TaxRegistrationNumberType = "TaxRegistrationNumber"
	TaxRegistrationNumberTypeLocalRegistrationNumber TaxRegistrationNumberType = "LocalRegistrationNumber"
)

// Values returns all known values for TaxRegistrationNumberType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TaxRegistrationNumberType) Values() []TaxRegistrationNumberType {
	return []TaxRegistrationNumberType{
		"TaxRegistrationNumber",
		"LocalRegistrationNumber",
	}
}

type TaxRegistrationStatus string

// Enum values for TaxRegistrationStatus
const (
	TaxRegistrationStatusVerified TaxRegistrationStatus = "Verified"
	TaxRegistrationStatusPending  TaxRegistrationStatus = "Pending"
	TaxRegistrationStatusDeleted  TaxRegistrationStatus = "Deleted"
	TaxRegistrationStatusRejected TaxRegistrationStatus = "Rejected"
)

// Values returns all known values for TaxRegistrationStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TaxRegistrationStatus) Values() []TaxRegistrationStatus {
	return []TaxRegistrationStatus{
		"Verified",
		"Pending",
		"Deleted",
		"Rejected",
	}
}

type TaxRegistrationType string

// Enum values for TaxRegistrationType
const (
	TaxRegistrationTypeVat  TaxRegistrationType = "VAT"
	TaxRegistrationTypeGst  TaxRegistrationType = "GST"
	TaxRegistrationTypeCpf  TaxRegistrationType = "CPF"
	TaxRegistrationTypeCnpj TaxRegistrationType = "CNPJ"
	TaxRegistrationTypeSst  TaxRegistrationType = "SST"
	TaxRegistrationTypeTin  TaxRegistrationType = "TIN"
	TaxRegistrationTypeNric TaxRegistrationType = "NRIC"
)

// Values returns all known values for TaxRegistrationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TaxRegistrationType) Values() []TaxRegistrationType {
	return []TaxRegistrationType{
		"VAT",
		"GST",
		"CPF",
		"CNPJ",
		"SST",
		"TIN",
		"NRIC",
	}
}

type UkraineTrnType string

// Enum values for UkraineTrnType
const (
	UkraineTrnTypeBusiness   UkraineTrnType = "Business"
	UkraineTrnTypeIndividual UkraineTrnType = "Individual"
)

// Values returns all known values for UkraineTrnType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UkraineTrnType) Values() []UkraineTrnType {
	return []UkraineTrnType{
		"Business",
		"Individual",
	}
}

type UzbekistanTaxRegistrationNumberType string

// Enum values for UzbekistanTaxRegistrationNumberType
const (
	UzbekistanTaxRegistrationNumberTypeBusiness   UzbekistanTaxRegistrationNumberType = "Business"
	UzbekistanTaxRegistrationNumberTypeIndividual UzbekistanTaxRegistrationNumberType = "Individual"
)

// Values returns all known values for UzbekistanTaxRegistrationNumberType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (UzbekistanTaxRegistrationNumberType) Values() []UzbekistanTaxRegistrationNumberType {
	return []UzbekistanTaxRegistrationNumberType{
		"Business",
		"Individual",
	}
}

type ValidationExceptionErrorCode string

// Enum values for ValidationExceptionErrorCode
const (
	ValidationExceptionErrorCodeMalformedToken        ValidationExceptionErrorCode = "MalformedToken"
	ValidationExceptionErrorCodeExpiredToken          ValidationExceptionErrorCode = "ExpiredToken"
	ValidationExceptionErrorCodeInvalidToken          ValidationExceptionErrorCode = "InvalidToken"
	ValidationExceptionErrorCodeFieldValidationFailed ValidationExceptionErrorCode = "FieldValidationFailed"
	ValidationExceptionErrorCodeMissingInput          ValidationExceptionErrorCode = "MissingInput"
)

// Values returns all known values for ValidationExceptionErrorCode. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionErrorCode) Values() []ValidationExceptionErrorCode {
	return []ValidationExceptionErrorCode{
		"MalformedToken",
		"ExpiredToken",
		"InvalidToken",
		"FieldValidationFailed",
		"MissingInput",
	}
}
