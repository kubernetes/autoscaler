// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type PermissionFeatureSet string

// Enum values for PermissionFeatureSet
const (
	PermissionFeatureSetCreatedFromPolicy   PermissionFeatureSet = "CREATED_FROM_POLICY"
	PermissionFeatureSetPromotingToStandard PermissionFeatureSet = "PROMOTING_TO_STANDARD"
	PermissionFeatureSetStandard            PermissionFeatureSet = "STANDARD"
)

// Values returns all known values for PermissionFeatureSet. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PermissionFeatureSet) Values() []PermissionFeatureSet {
	return []PermissionFeatureSet{
		"CREATED_FROM_POLICY",
		"PROMOTING_TO_STANDARD",
		"STANDARD",
	}
}

type PermissionStatus string

// Enum values for PermissionStatus
const (
	PermissionStatusAttachable   PermissionStatus = "ATTACHABLE"
	PermissionStatusUnattachable PermissionStatus = "UNATTACHABLE"
	PermissionStatusDeleting     PermissionStatus = "DELETING"
	PermissionStatusDeleted      PermissionStatus = "DELETED"
)

// Values returns all known values for PermissionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PermissionStatus) Values() []PermissionStatus {
	return []PermissionStatus{
		"ATTACHABLE",
		"UNATTACHABLE",
		"DELETING",
		"DELETED",
	}
}

type PermissionType string

// Enum values for PermissionType
const (
	PermissionTypeCustomerManaged PermissionType = "CUSTOMER_MANAGED"
	PermissionTypeAwsManaged      PermissionType = "AWS_MANAGED"
)

// Values returns all known values for PermissionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PermissionType) Values() []PermissionType {
	return []PermissionType{
		"CUSTOMER_MANAGED",
		"AWS_MANAGED",
	}
}

type PermissionTypeFilter string

// Enum values for PermissionTypeFilter
const (
	PermissionTypeFilterAll             PermissionTypeFilter = "ALL"
	PermissionTypeFilterAwsManaged      PermissionTypeFilter = "AWS_MANAGED"
	PermissionTypeFilterCustomerManaged PermissionTypeFilter = "CUSTOMER_MANAGED"
)

// Values returns all known values for PermissionTypeFilter. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PermissionTypeFilter) Values() []PermissionTypeFilter {
	return []PermissionTypeFilter{
		"ALL",
		"AWS_MANAGED",
		"CUSTOMER_MANAGED",
	}
}

type ReplacePermissionAssociationsWorkStatus string

// Enum values for ReplacePermissionAssociationsWorkStatus
const (
	ReplacePermissionAssociationsWorkStatusInProgress ReplacePermissionAssociationsWorkStatus = "IN_PROGRESS"
	ReplacePermissionAssociationsWorkStatusCompleted  ReplacePermissionAssociationsWorkStatus = "COMPLETED"
	ReplacePermissionAssociationsWorkStatusFailed     ReplacePermissionAssociationsWorkStatus = "FAILED"
)

// Values returns all known values for ReplacePermissionAssociationsWorkStatus.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReplacePermissionAssociationsWorkStatus) Values() []ReplacePermissionAssociationsWorkStatus {
	return []ReplacePermissionAssociationsWorkStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
	}
}

type ResourceOwner string

// Enum values for ResourceOwner
const (
	ResourceOwnerSelf          ResourceOwner = "SELF"
	ResourceOwnerOtherAccounts ResourceOwner = "OTHER-ACCOUNTS"
)

// Values returns all known values for ResourceOwner. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceOwner) Values() []ResourceOwner {
	return []ResourceOwner{
		"SELF",
		"OTHER-ACCOUNTS",
	}
}

type ResourceRegionScope string

// Enum values for ResourceRegionScope
const (
	ResourceRegionScopeRegional ResourceRegionScope = "REGIONAL"
	ResourceRegionScopeGlobal   ResourceRegionScope = "GLOBAL"
)

// Values returns all known values for ResourceRegionScope. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceRegionScope) Values() []ResourceRegionScope {
	return []ResourceRegionScope{
		"REGIONAL",
		"GLOBAL",
	}
}

type ResourceRegionScopeFilter string

// Enum values for ResourceRegionScopeFilter
const (
	ResourceRegionScopeFilterAll      ResourceRegionScopeFilter = "ALL"
	ResourceRegionScopeFilterRegional ResourceRegionScopeFilter = "REGIONAL"
	ResourceRegionScopeFilterGlobal   ResourceRegionScopeFilter = "GLOBAL"
)

// Values returns all known values for ResourceRegionScopeFilter. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceRegionScopeFilter) Values() []ResourceRegionScopeFilter {
	return []ResourceRegionScopeFilter{
		"ALL",
		"REGIONAL",
		"GLOBAL",
	}
}

type ResourceShareAssociationStatus string

// Enum values for ResourceShareAssociationStatus
const (
	ResourceShareAssociationStatusAssociating    ResourceShareAssociationStatus = "ASSOCIATING"
	ResourceShareAssociationStatusAssociated     ResourceShareAssociationStatus = "ASSOCIATED"
	ResourceShareAssociationStatusFailed         ResourceShareAssociationStatus = "FAILED"
	ResourceShareAssociationStatusDisassociating ResourceShareAssociationStatus = "DISASSOCIATING"
	ResourceShareAssociationStatusDisassociated  ResourceShareAssociationStatus = "DISASSOCIATED"
)

// Values returns all known values for ResourceShareAssociationStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceShareAssociationStatus) Values() []ResourceShareAssociationStatus {
	return []ResourceShareAssociationStatus{
		"ASSOCIATING",
		"ASSOCIATED",
		"FAILED",
		"DISASSOCIATING",
		"DISASSOCIATED",
	}
}

type ResourceShareAssociationType string

// Enum values for ResourceShareAssociationType
const (
	ResourceShareAssociationTypePrincipal ResourceShareAssociationType = "PRINCIPAL"
	ResourceShareAssociationTypeResource  ResourceShareAssociationType = "RESOURCE"
)

// Values returns all known values for ResourceShareAssociationType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceShareAssociationType) Values() []ResourceShareAssociationType {
	return []ResourceShareAssociationType{
		"PRINCIPAL",
		"RESOURCE",
	}
}

type ResourceShareFeatureSet string

// Enum values for ResourceShareFeatureSet
const (
	ResourceShareFeatureSetCreatedFromPolicy   ResourceShareFeatureSet = "CREATED_FROM_POLICY"
	ResourceShareFeatureSetPromotingToStandard ResourceShareFeatureSet = "PROMOTING_TO_STANDARD"
	ResourceShareFeatureSetStandard            ResourceShareFeatureSet = "STANDARD"
)

// Values returns all known values for ResourceShareFeatureSet. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceShareFeatureSet) Values() []ResourceShareFeatureSet {
	return []ResourceShareFeatureSet{
		"CREATED_FROM_POLICY",
		"PROMOTING_TO_STANDARD",
		"STANDARD",
	}
}

type ResourceShareInvitationStatus string

// Enum values for ResourceShareInvitationStatus
const (
	ResourceShareInvitationStatusPending  ResourceShareInvitationStatus = "PENDING"
	ResourceShareInvitationStatusAccepted ResourceShareInvitationStatus = "ACCEPTED"
	ResourceShareInvitationStatusRejected ResourceShareInvitationStatus = "REJECTED"
	ResourceShareInvitationStatusExpired  ResourceShareInvitationStatus = "EXPIRED"
)

// Values returns all known values for ResourceShareInvitationStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceShareInvitationStatus) Values() []ResourceShareInvitationStatus {
	return []ResourceShareInvitationStatus{
		"PENDING",
		"ACCEPTED",
		"REJECTED",
		"EXPIRED",
	}
}

type ResourceShareStatus string

// Enum values for ResourceShareStatus
const (
	ResourceShareStatusPending  ResourceShareStatus = "PENDING"
	ResourceShareStatusActive   ResourceShareStatus = "ACTIVE"
	ResourceShareStatusFailed   ResourceShareStatus = "FAILED"
	ResourceShareStatusDeleting ResourceShareStatus = "DELETING"
	ResourceShareStatusDeleted  ResourceShareStatus = "DELETED"
)

// Values returns all known values for ResourceShareStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceShareStatus) Values() []ResourceShareStatus {
	return []ResourceShareStatus{
		"PENDING",
		"ACTIVE",
		"FAILED",
		"DELETING",
		"DELETED",
	}
}

type ResourceStatus string

// Enum values for ResourceStatus
const (
	ResourceStatusAvailable                 ResourceStatus = "AVAILABLE"
	ResourceStatusZonalResourceInaccessible ResourceStatus = "ZONAL_RESOURCE_INACCESSIBLE"
	ResourceStatusLimitExceeded             ResourceStatus = "LIMIT_EXCEEDED"
	ResourceStatusUnavailable               ResourceStatus = "UNAVAILABLE"
	ResourceStatusPending                   ResourceStatus = "PENDING"
)

// Values returns all known values for ResourceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceStatus) Values() []ResourceStatus {
	return []ResourceStatus{
		"AVAILABLE",
		"ZONAL_RESOURCE_INACCESSIBLE",
		"LIMIT_EXCEEDED",
		"UNAVAILABLE",
		"PENDING",
	}
}
