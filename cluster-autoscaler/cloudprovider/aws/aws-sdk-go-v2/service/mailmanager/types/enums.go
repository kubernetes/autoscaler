// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AcceptAction string

// Enum values for AcceptAction
const (
	AcceptActionAllow AcceptAction = "ALLOW"
	AcceptActionDeny  AcceptAction = "DENY"
)

// Values returns all known values for AcceptAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AcceptAction) Values() []AcceptAction {
	return []AcceptAction{
		"ALLOW",
		"DENY",
	}
}

type ActionFailurePolicy string

// Enum values for ActionFailurePolicy
const (
	ActionFailurePolicyContinue ActionFailurePolicy = "CONTINUE"
	ActionFailurePolicyDrop     ActionFailurePolicy = "DROP"
)

// Values returns all known values for ActionFailurePolicy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActionFailurePolicy) Values() []ActionFailurePolicy {
	return []ActionFailurePolicy{
		"CONTINUE",
		"DROP",
	}
}

type ArchiveBooleanEmailAttribute string

// Enum values for ArchiveBooleanEmailAttribute
const (
	ArchiveBooleanEmailAttributeHasAttachments ArchiveBooleanEmailAttribute = "HAS_ATTACHMENTS"
)

// Values returns all known values for ArchiveBooleanEmailAttribute. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArchiveBooleanEmailAttribute) Values() []ArchiveBooleanEmailAttribute {
	return []ArchiveBooleanEmailAttribute{
		"HAS_ATTACHMENTS",
	}
}

type ArchiveBooleanOperator string

// Enum values for ArchiveBooleanOperator
const (
	ArchiveBooleanOperatorIsTrue  ArchiveBooleanOperator = "IS_TRUE"
	ArchiveBooleanOperatorIsFalse ArchiveBooleanOperator = "IS_FALSE"
)

// Values returns all known values for ArchiveBooleanOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArchiveBooleanOperator) Values() []ArchiveBooleanOperator {
	return []ArchiveBooleanOperator{
		"IS_TRUE",
		"IS_FALSE",
	}
}

type ArchiveState string

// Enum values for ArchiveState
const (
	ArchiveStateActive          ArchiveState = "ACTIVE"
	ArchiveStatePendingDeletion ArchiveState = "PENDING_DELETION"
)

// Values returns all known values for ArchiveState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArchiveState) Values() []ArchiveState {
	return []ArchiveState{
		"ACTIVE",
		"PENDING_DELETION",
	}
}

type ArchiveStringEmailAttribute string

// Enum values for ArchiveStringEmailAttribute
const (
	ArchiveStringEmailAttributeTo           ArchiveStringEmailAttribute = "TO"
	ArchiveStringEmailAttributeFrom         ArchiveStringEmailAttribute = "FROM"
	ArchiveStringEmailAttributeCc           ArchiveStringEmailAttribute = "CC"
	ArchiveStringEmailAttributeSubject      ArchiveStringEmailAttribute = "SUBJECT"
	ArchiveStringEmailAttributeEnvelopeTo   ArchiveStringEmailAttribute = "ENVELOPE_TO"
	ArchiveStringEmailAttributeEnvelopeFrom ArchiveStringEmailAttribute = "ENVELOPE_FROM"
)

// Values returns all known values for ArchiveStringEmailAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArchiveStringEmailAttribute) Values() []ArchiveStringEmailAttribute {
	return []ArchiveStringEmailAttribute{
		"TO",
		"FROM",
		"CC",
		"SUBJECT",
		"ENVELOPE_TO",
		"ENVELOPE_FROM",
	}
}

type ArchiveStringOperator string

// Enum values for ArchiveStringOperator
const (
	ArchiveStringOperatorContains ArchiveStringOperator = "CONTAINS"
)

// Values returns all known values for ArchiveStringOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArchiveStringOperator) Values() []ArchiveStringOperator {
	return []ArchiveStringOperator{
		"CONTAINS",
	}
}

type ExportState string

// Enum values for ExportState
const (
	ExportStateQueued        ExportState = "QUEUED"
	ExportStatePreprocessing ExportState = "PREPROCESSING"
	ExportStateProcessing    ExportState = "PROCESSING"
	ExportStateCompleted     ExportState = "COMPLETED"
	ExportStateFailed        ExportState = "FAILED"
	ExportStateCancelled     ExportState = "CANCELLED"
)

// Values returns all known values for ExportState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExportState) Values() []ExportState {
	return []ExportState{
		"QUEUED",
		"PREPROCESSING",
		"PROCESSING",
		"COMPLETED",
		"FAILED",
		"CANCELLED",
	}
}

type ImportDataType string

// Enum values for ImportDataType
const (
	ImportDataTypeCsv  ImportDataType = "CSV"
	ImportDataTypeJson ImportDataType = "JSON"
)

// Values returns all known values for ImportDataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportDataType) Values() []ImportDataType {
	return []ImportDataType{
		"CSV",
		"JSON",
	}
}

type ImportJobStatus string

// Enum values for ImportJobStatus
const (
	ImportJobStatusCreated    ImportJobStatus = "CREATED"
	ImportJobStatusProcessing ImportJobStatus = "PROCESSING"
	ImportJobStatusCompleted  ImportJobStatus = "COMPLETED"
	ImportJobStatusFailed     ImportJobStatus = "FAILED"
	ImportJobStatusStopped    ImportJobStatus = "STOPPED"
)

// Values returns all known values for ImportJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImportJobStatus) Values() []ImportJobStatus {
	return []ImportJobStatus{
		"CREATED",
		"PROCESSING",
		"COMPLETED",
		"FAILED",
		"STOPPED",
	}
}

type IngressAddressListEmailAttribute string

// Enum values for IngressAddressListEmailAttribute
const (
	IngressAddressListEmailAttributeRecipient IngressAddressListEmailAttribute = "RECIPIENT"
)

// Values returns all known values for IngressAddressListEmailAttribute. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressAddressListEmailAttribute) Values() []IngressAddressListEmailAttribute {
	return []IngressAddressListEmailAttribute{
		"RECIPIENT",
	}
}

type IngressBooleanOperator string

// Enum values for IngressBooleanOperator
const (
	IngressBooleanOperatorIsTrue  IngressBooleanOperator = "IS_TRUE"
	IngressBooleanOperatorIsFalse IngressBooleanOperator = "IS_FALSE"
)

// Values returns all known values for IngressBooleanOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressBooleanOperator) Values() []IngressBooleanOperator {
	return []IngressBooleanOperator{
		"IS_TRUE",
		"IS_FALSE",
	}
}

type IngressIpOperator string

// Enum values for IngressIpOperator
const (
	IngressIpOperatorCidrMatches    IngressIpOperator = "CIDR_MATCHES"
	IngressIpOperatorNotCidrMatches IngressIpOperator = "NOT_CIDR_MATCHES"
)

// Values returns all known values for IngressIpOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressIpOperator) Values() []IngressIpOperator {
	return []IngressIpOperator{
		"CIDR_MATCHES",
		"NOT_CIDR_MATCHES",
	}
}

type IngressIpv4Attribute string

// Enum values for IngressIpv4Attribute
const (
	IngressIpv4AttributeSenderIp IngressIpv4Attribute = "SENDER_IP"
)

// Values returns all known values for IngressIpv4Attribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressIpv4Attribute) Values() []IngressIpv4Attribute {
	return []IngressIpv4Attribute{
		"SENDER_IP",
	}
}

type IngressIpv6Attribute string

// Enum values for IngressIpv6Attribute
const (
	IngressIpv6AttributeSenderIpv6 IngressIpv6Attribute = "SENDER_IPV6"
)

// Values returns all known values for IngressIpv6Attribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressIpv6Attribute) Values() []IngressIpv6Attribute {
	return []IngressIpv6Attribute{
		"SENDER_IPV6",
	}
}

type IngressPointStatus string

// Enum values for IngressPointStatus
const (
	IngressPointStatusProvisioning   IngressPointStatus = "PROVISIONING"
	IngressPointStatusDeprovisioning IngressPointStatus = "DEPROVISIONING"
	IngressPointStatusUpdating       IngressPointStatus = "UPDATING"
	IngressPointStatusActive         IngressPointStatus = "ACTIVE"
	IngressPointStatusClosed         IngressPointStatus = "CLOSED"
	IngressPointStatusFailed         IngressPointStatus = "FAILED"
)

// Values returns all known values for IngressPointStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressPointStatus) Values() []IngressPointStatus {
	return []IngressPointStatus{
		"PROVISIONING",
		"DEPROVISIONING",
		"UPDATING",
		"ACTIVE",
		"CLOSED",
		"FAILED",
	}
}

type IngressPointStatusToUpdate string

// Enum values for IngressPointStatusToUpdate
const (
	IngressPointStatusToUpdateActive IngressPointStatusToUpdate = "ACTIVE"
	IngressPointStatusToUpdateClosed IngressPointStatusToUpdate = "CLOSED"
)

// Values returns all known values for IngressPointStatusToUpdate. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressPointStatusToUpdate) Values() []IngressPointStatusToUpdate {
	return []IngressPointStatusToUpdate{
		"ACTIVE",
		"CLOSED",
	}
}

type IngressPointType string

// Enum values for IngressPointType
const (
	IngressPointTypeOpen IngressPointType = "OPEN"
	IngressPointTypeAuth IngressPointType = "AUTH"
)

// Values returns all known values for IngressPointType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressPointType) Values() []IngressPointType {
	return []IngressPointType{
		"OPEN",
		"AUTH",
	}
}

type IngressStringEmailAttribute string

// Enum values for IngressStringEmailAttribute
const (
	IngressStringEmailAttributeRecipient IngressStringEmailAttribute = "RECIPIENT"
)

// Values returns all known values for IngressStringEmailAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressStringEmailAttribute) Values() []IngressStringEmailAttribute {
	return []IngressStringEmailAttribute{
		"RECIPIENT",
	}
}

type IngressStringOperator string

// Enum values for IngressStringOperator
const (
	IngressStringOperatorEquals     IngressStringOperator = "EQUALS"
	IngressStringOperatorNotEquals  IngressStringOperator = "NOT_EQUALS"
	IngressStringOperatorStartsWith IngressStringOperator = "STARTS_WITH"
	IngressStringOperatorEndsWith   IngressStringOperator = "ENDS_WITH"
	IngressStringOperatorContains   IngressStringOperator = "CONTAINS"
)

// Values returns all known values for IngressStringOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressStringOperator) Values() []IngressStringOperator {
	return []IngressStringOperator{
		"EQUALS",
		"NOT_EQUALS",
		"STARTS_WITH",
		"ENDS_WITH",
		"CONTAINS",
	}
}

type IngressTlsAttribute string

// Enum values for IngressTlsAttribute
const (
	IngressTlsAttributeTlsProtocol IngressTlsAttribute = "TLS_PROTOCOL"
)

// Values returns all known values for IngressTlsAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressTlsAttribute) Values() []IngressTlsAttribute {
	return []IngressTlsAttribute{
		"TLS_PROTOCOL",
	}
}

type IngressTlsProtocolAttribute string

// Enum values for IngressTlsProtocolAttribute
const (
	IngressTlsProtocolAttributeTls12 IngressTlsProtocolAttribute = "TLS1_2"
	IngressTlsProtocolAttributeTls13 IngressTlsProtocolAttribute = "TLS1_3"
)

// Values returns all known values for IngressTlsProtocolAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressTlsProtocolAttribute) Values() []IngressTlsProtocolAttribute {
	return []IngressTlsProtocolAttribute{
		"TLS1_2",
		"TLS1_3",
	}
}

type IngressTlsProtocolOperator string

// Enum values for IngressTlsProtocolOperator
const (
	IngressTlsProtocolOperatorMinimumTlsVersion IngressTlsProtocolOperator = "MINIMUM_TLS_VERSION"
	IngressTlsProtocolOperatorIs                IngressTlsProtocolOperator = "IS"
)

// Values returns all known values for IngressTlsProtocolOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IngressTlsProtocolOperator) Values() []IngressTlsProtocolOperator {
	return []IngressTlsProtocolOperator{
		"MINIMUM_TLS_VERSION",
		"IS",
	}
}

type IpType string

// Enum values for IpType
const (
	IpTypeIpv4      IpType = "IPV4"
	IpTypeDualStack IpType = "DUAL_STACK"
)

// Values returns all known values for IpType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IpType) Values() []IpType {
	return []IpType{
		"IPV4",
		"DUAL_STACK",
	}
}

type MailFrom string

// Enum values for MailFrom
const (
	MailFromReplace  MailFrom = "REPLACE"
	MailFromPreserve MailFrom = "PRESERVE"
)

// Values returns all known values for MailFrom. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MailFrom) Values() []MailFrom {
	return []MailFrom{
		"REPLACE",
		"PRESERVE",
	}
}

type RetentionPeriod string

// Enum values for RetentionPeriod
const (
	RetentionPeriodThreeMonths    RetentionPeriod = "THREE_MONTHS"
	RetentionPeriodSixMonths      RetentionPeriod = "SIX_MONTHS"
	RetentionPeriodNineMonths     RetentionPeriod = "NINE_MONTHS"
	RetentionPeriodOneYear        RetentionPeriod = "ONE_YEAR"
	RetentionPeriodEighteenMonths RetentionPeriod = "EIGHTEEN_MONTHS"
	RetentionPeriodTwoYears       RetentionPeriod = "TWO_YEARS"
	RetentionPeriodThirtyMonths   RetentionPeriod = "THIRTY_MONTHS"
	RetentionPeriodThreeYears     RetentionPeriod = "THREE_YEARS"
	RetentionPeriodFourYears      RetentionPeriod = "FOUR_YEARS"
	RetentionPeriodFiveYears      RetentionPeriod = "FIVE_YEARS"
	RetentionPeriodSixYears       RetentionPeriod = "SIX_YEARS"
	RetentionPeriodSevenYears     RetentionPeriod = "SEVEN_YEARS"
	RetentionPeriodEightYears     RetentionPeriod = "EIGHT_YEARS"
	RetentionPeriodNineYears      RetentionPeriod = "NINE_YEARS"
	RetentionPeriodTenYears       RetentionPeriod = "TEN_YEARS"
	RetentionPeriodPermanent      RetentionPeriod = "PERMANENT"
)

// Values returns all known values for RetentionPeriod. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RetentionPeriod) Values() []RetentionPeriod {
	return []RetentionPeriod{
		"THREE_MONTHS",
		"SIX_MONTHS",
		"NINE_MONTHS",
		"ONE_YEAR",
		"EIGHTEEN_MONTHS",
		"TWO_YEARS",
		"THIRTY_MONTHS",
		"THREE_YEARS",
		"FOUR_YEARS",
		"FIVE_YEARS",
		"SIX_YEARS",
		"SEVEN_YEARS",
		"EIGHT_YEARS",
		"NINE_YEARS",
		"TEN_YEARS",
		"PERMANENT",
	}
}

type RuleAddressListEmailAttribute string

// Enum values for RuleAddressListEmailAttribute
const (
	RuleAddressListEmailAttributeRecipient RuleAddressListEmailAttribute = "RECIPIENT"
	RuleAddressListEmailAttributeMailFrom  RuleAddressListEmailAttribute = "MAIL_FROM"
	RuleAddressListEmailAttributeSender    RuleAddressListEmailAttribute = "SENDER"
	RuleAddressListEmailAttributeFrom      RuleAddressListEmailAttribute = "FROM"
	RuleAddressListEmailAttributeTo        RuleAddressListEmailAttribute = "TO"
	RuleAddressListEmailAttributeCc        RuleAddressListEmailAttribute = "CC"
)

// Values returns all known values for RuleAddressListEmailAttribute. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleAddressListEmailAttribute) Values() []RuleAddressListEmailAttribute {
	return []RuleAddressListEmailAttribute{
		"RECIPIENT",
		"MAIL_FROM",
		"SENDER",
		"FROM",
		"TO",
		"CC",
	}
}

type RuleBooleanEmailAttribute string

// Enum values for RuleBooleanEmailAttribute
const (
	RuleBooleanEmailAttributeReadReceiptRequested RuleBooleanEmailAttribute = "READ_RECEIPT_REQUESTED"
	RuleBooleanEmailAttributeTls                  RuleBooleanEmailAttribute = "TLS"
	RuleBooleanEmailAttributeTlsWrapped           RuleBooleanEmailAttribute = "TLS_WRAPPED"
)

// Values returns all known values for RuleBooleanEmailAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleBooleanEmailAttribute) Values() []RuleBooleanEmailAttribute {
	return []RuleBooleanEmailAttribute{
		"READ_RECEIPT_REQUESTED",
		"TLS",
		"TLS_WRAPPED",
	}
}

type RuleBooleanOperator string

// Enum values for RuleBooleanOperator
const (
	RuleBooleanOperatorIsTrue  RuleBooleanOperator = "IS_TRUE"
	RuleBooleanOperatorIsFalse RuleBooleanOperator = "IS_FALSE"
)

// Values returns all known values for RuleBooleanOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleBooleanOperator) Values() []RuleBooleanOperator {
	return []RuleBooleanOperator{
		"IS_TRUE",
		"IS_FALSE",
	}
}

type RuleDmarcOperator string

// Enum values for RuleDmarcOperator
const (
	RuleDmarcOperatorEquals    RuleDmarcOperator = "EQUALS"
	RuleDmarcOperatorNotEquals RuleDmarcOperator = "NOT_EQUALS"
)

// Values returns all known values for RuleDmarcOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleDmarcOperator) Values() []RuleDmarcOperator {
	return []RuleDmarcOperator{
		"EQUALS",
		"NOT_EQUALS",
	}
}

type RuleDmarcPolicy string

// Enum values for RuleDmarcPolicy
const (
	RuleDmarcPolicyNone       RuleDmarcPolicy = "NONE"
	RuleDmarcPolicyQuarantine RuleDmarcPolicy = "QUARANTINE"
	RuleDmarcPolicyReject     RuleDmarcPolicy = "REJECT"
)

// Values returns all known values for RuleDmarcPolicy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleDmarcPolicy) Values() []RuleDmarcPolicy {
	return []RuleDmarcPolicy{
		"NONE",
		"QUARANTINE",
		"REJECT",
	}
}

type RuleIpEmailAttribute string

// Enum values for RuleIpEmailAttribute
const (
	RuleIpEmailAttributeSourceIp RuleIpEmailAttribute = "SOURCE_IP"
)

// Values returns all known values for RuleIpEmailAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleIpEmailAttribute) Values() []RuleIpEmailAttribute {
	return []RuleIpEmailAttribute{
		"SOURCE_IP",
	}
}

type RuleIpOperator string

// Enum values for RuleIpOperator
const (
	RuleIpOperatorCidrMatches    RuleIpOperator = "CIDR_MATCHES"
	RuleIpOperatorNotCidrMatches RuleIpOperator = "NOT_CIDR_MATCHES"
)

// Values returns all known values for RuleIpOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleIpOperator) Values() []RuleIpOperator {
	return []RuleIpOperator{
		"CIDR_MATCHES",
		"NOT_CIDR_MATCHES",
	}
}

type RuleNumberEmailAttribute string

// Enum values for RuleNumberEmailAttribute
const (
	RuleNumberEmailAttributeMessageSize RuleNumberEmailAttribute = "MESSAGE_SIZE"
)

// Values returns all known values for RuleNumberEmailAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleNumberEmailAttribute) Values() []RuleNumberEmailAttribute {
	return []RuleNumberEmailAttribute{
		"MESSAGE_SIZE",
	}
}

type RuleNumberOperator string

// Enum values for RuleNumberOperator
const (
	RuleNumberOperatorEquals             RuleNumberOperator = "EQUALS"
	RuleNumberOperatorNotEquals          RuleNumberOperator = "NOT_EQUALS"
	RuleNumberOperatorLessThan           RuleNumberOperator = "LESS_THAN"
	RuleNumberOperatorGreaterThan        RuleNumberOperator = "GREATER_THAN"
	RuleNumberOperatorLessThanOrEqual    RuleNumberOperator = "LESS_THAN_OR_EQUAL"
	RuleNumberOperatorGreaterThanOrEqual RuleNumberOperator = "GREATER_THAN_OR_EQUAL"
)

// Values returns all known values for RuleNumberOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleNumberOperator) Values() []RuleNumberOperator {
	return []RuleNumberOperator{
		"EQUALS",
		"NOT_EQUALS",
		"LESS_THAN",
		"GREATER_THAN",
		"LESS_THAN_OR_EQUAL",
		"GREATER_THAN_OR_EQUAL",
	}
}

type RuleStringEmailAttribute string

// Enum values for RuleStringEmailAttribute
const (
	RuleStringEmailAttributeMailFrom  RuleStringEmailAttribute = "MAIL_FROM"
	RuleStringEmailAttributeHelo      RuleStringEmailAttribute = "HELO"
	RuleStringEmailAttributeRecipient RuleStringEmailAttribute = "RECIPIENT"
	RuleStringEmailAttributeSender    RuleStringEmailAttribute = "SENDER"
	RuleStringEmailAttributeFrom      RuleStringEmailAttribute = "FROM"
	RuleStringEmailAttributeSubject   RuleStringEmailAttribute = "SUBJECT"
	RuleStringEmailAttributeTo        RuleStringEmailAttribute = "TO"
	RuleStringEmailAttributeCc        RuleStringEmailAttribute = "CC"
)

// Values returns all known values for RuleStringEmailAttribute. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleStringEmailAttribute) Values() []RuleStringEmailAttribute {
	return []RuleStringEmailAttribute{
		"MAIL_FROM",
		"HELO",
		"RECIPIENT",
		"SENDER",
		"FROM",
		"SUBJECT",
		"TO",
		"CC",
	}
}

type RuleStringOperator string

// Enum values for RuleStringOperator
const (
	RuleStringOperatorEquals     RuleStringOperator = "EQUALS"
	RuleStringOperatorNotEquals  RuleStringOperator = "NOT_EQUALS"
	RuleStringOperatorStartsWith RuleStringOperator = "STARTS_WITH"
	RuleStringOperatorEndsWith   RuleStringOperator = "ENDS_WITH"
	RuleStringOperatorContains   RuleStringOperator = "CONTAINS"
)

// Values returns all known values for RuleStringOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleStringOperator) Values() []RuleStringOperator {
	return []RuleStringOperator{
		"EQUALS",
		"NOT_EQUALS",
		"STARTS_WITH",
		"ENDS_WITH",
		"CONTAINS",
	}
}

type RuleVerdict string

// Enum values for RuleVerdict
const (
	RuleVerdictPass             RuleVerdict = "PASS"
	RuleVerdictFail             RuleVerdict = "FAIL"
	RuleVerdictGray             RuleVerdict = "GRAY"
	RuleVerdictProcessingFailed RuleVerdict = "PROCESSING_FAILED"
)

// Values returns all known values for RuleVerdict. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleVerdict) Values() []RuleVerdict {
	return []RuleVerdict{
		"PASS",
		"FAIL",
		"GRAY",
		"PROCESSING_FAILED",
	}
}

type RuleVerdictAttribute string

// Enum values for RuleVerdictAttribute
const (
	RuleVerdictAttributeSpf  RuleVerdictAttribute = "SPF"
	RuleVerdictAttributeDkim RuleVerdictAttribute = "DKIM"
)

// Values returns all known values for RuleVerdictAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleVerdictAttribute) Values() []RuleVerdictAttribute {
	return []RuleVerdictAttribute{
		"SPF",
		"DKIM",
	}
}

type RuleVerdictOperator string

// Enum values for RuleVerdictOperator
const (
	RuleVerdictOperatorEquals    RuleVerdictOperator = "EQUALS"
	RuleVerdictOperatorNotEquals RuleVerdictOperator = "NOT_EQUALS"
)

// Values returns all known values for RuleVerdictOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleVerdictOperator) Values() []RuleVerdictOperator {
	return []RuleVerdictOperator{
		"EQUALS",
		"NOT_EQUALS",
	}
}

type SearchState string

// Enum values for SearchState
const (
	SearchStateQueued    SearchState = "QUEUED"
	SearchStateRunning   SearchState = "RUNNING"
	SearchStateCompleted SearchState = "COMPLETED"
	SearchStateFailed    SearchState = "FAILED"
	SearchStateCancelled SearchState = "CANCELLED"
)

// Values returns all known values for SearchState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SearchState) Values() []SearchState {
	return []SearchState{
		"QUEUED",
		"RUNNING",
		"COMPLETED",
		"FAILED",
		"CANCELLED",
	}
}

type SnsNotificationEncoding string

// Enum values for SnsNotificationEncoding
const (
	SnsNotificationEncodingUtf8   SnsNotificationEncoding = "UTF-8"
	SnsNotificationEncodingBase64 SnsNotificationEncoding = "BASE64"
)

// Values returns all known values for SnsNotificationEncoding. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SnsNotificationEncoding) Values() []SnsNotificationEncoding {
	return []SnsNotificationEncoding{
		"UTF-8",
		"BASE64",
	}
}

type SnsNotificationPayloadType string

// Enum values for SnsNotificationPayloadType
const (
	SnsNotificationPayloadTypeHeaders SnsNotificationPayloadType = "HEADERS"
	SnsNotificationPayloadTypeContent SnsNotificationPayloadType = "CONTENT"
)

// Values returns all known values for SnsNotificationPayloadType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SnsNotificationPayloadType) Values() []SnsNotificationPayloadType {
	return []SnsNotificationPayloadType{
		"HEADERS",
		"CONTENT",
	}
}
