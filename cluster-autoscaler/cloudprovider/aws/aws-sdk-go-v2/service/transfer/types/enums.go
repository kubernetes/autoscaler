// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AgreementStatusType string

// Enum values for AgreementStatusType
const (
	AgreementStatusTypeActive   AgreementStatusType = "ACTIVE"
	AgreementStatusTypeInactive AgreementStatusType = "INACTIVE"
)

// Values returns all known values for AgreementStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AgreementStatusType) Values() []AgreementStatusType {
	return []AgreementStatusType{
		"ACTIVE",
		"INACTIVE",
	}
}

type As2Transport string

// Enum values for As2Transport
const (
	As2TransportHttp As2Transport = "HTTP"
)

// Values returns all known values for As2Transport. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (As2Transport) Values() []As2Transport {
	return []As2Transport{
		"HTTP",
	}
}

type CertificateStatusType string

// Enum values for CertificateStatusType
const (
	CertificateStatusTypeActive          CertificateStatusType = "ACTIVE"
	CertificateStatusTypePendingRotation CertificateStatusType = "PENDING_ROTATION"
	CertificateStatusTypeInactive        CertificateStatusType = "INACTIVE"
)

// Values returns all known values for CertificateStatusType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CertificateStatusType) Values() []CertificateStatusType {
	return []CertificateStatusType{
		"ACTIVE",
		"PENDING_ROTATION",
		"INACTIVE",
	}
}

type CertificateType string

// Enum values for CertificateType
const (
	CertificateTypeCertificate               CertificateType = "CERTIFICATE"
	CertificateTypeCertificateWithPrivateKey CertificateType = "CERTIFICATE_WITH_PRIVATE_KEY"
)

// Values returns all known values for CertificateType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CertificateType) Values() []CertificateType {
	return []CertificateType{
		"CERTIFICATE",
		"CERTIFICATE_WITH_PRIVATE_KEY",
	}
}

type CertificateUsageType string

// Enum values for CertificateUsageType
const (
	CertificateUsageTypeSigning    CertificateUsageType = "SIGNING"
	CertificateUsageTypeEncryption CertificateUsageType = "ENCRYPTION"
	CertificateUsageTypeTls        CertificateUsageType = "TLS"
)

// Values returns all known values for CertificateUsageType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CertificateUsageType) Values() []CertificateUsageType {
	return []CertificateUsageType{
		"SIGNING",
		"ENCRYPTION",
		"TLS",
	}
}

type CompressionEnum string

// Enum values for CompressionEnum
const (
	CompressionEnumZlib     CompressionEnum = "ZLIB"
	CompressionEnumDisabled CompressionEnum = "DISABLED"
)

// Values returns all known values for CompressionEnum. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CompressionEnum) Values() []CompressionEnum {
	return []CompressionEnum{
		"ZLIB",
		"DISABLED",
	}
}

type CustomStepStatus string

// Enum values for CustomStepStatus
const (
	CustomStepStatusSuccess CustomStepStatus = "SUCCESS"
	CustomStepStatusFailure CustomStepStatus = "FAILURE"
)

// Values returns all known values for CustomStepStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CustomStepStatus) Values() []CustomStepStatus {
	return []CustomStepStatus{
		"SUCCESS",
		"FAILURE",
	}
}

type DirectoryListingOptimization string

// Enum values for DirectoryListingOptimization
const (
	DirectoryListingOptimizationEnabled  DirectoryListingOptimization = "ENABLED"
	DirectoryListingOptimizationDisabled DirectoryListingOptimization = "DISABLED"
)

// Values returns all known values for DirectoryListingOptimization. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DirectoryListingOptimization) Values() []DirectoryListingOptimization {
	return []DirectoryListingOptimization{
		"ENABLED",
		"DISABLED",
	}
}

type Domain string

// Enum values for Domain
const (
	DomainS3  Domain = "S3"
	DomainEfs Domain = "EFS"
)

// Values returns all known values for Domain. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Domain) Values() []Domain {
	return []Domain{
		"S3",
		"EFS",
	}
}

type EncryptionAlg string

// Enum values for EncryptionAlg
const (
	EncryptionAlgAes128Cbc  EncryptionAlg = "AES128_CBC"
	EncryptionAlgAes192Cbc  EncryptionAlg = "AES192_CBC"
	EncryptionAlgAes256Cbc  EncryptionAlg = "AES256_CBC"
	EncryptionAlgDesEde3Cbc EncryptionAlg = "DES_EDE3_CBC"
	EncryptionAlgNone       EncryptionAlg = "NONE"
)

// Values returns all known values for EncryptionAlg. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EncryptionAlg) Values() []EncryptionAlg {
	return []EncryptionAlg{
		"AES128_CBC",
		"AES192_CBC",
		"AES256_CBC",
		"DES_EDE3_CBC",
		"NONE",
	}
}

type EncryptionType string

// Enum values for EncryptionType
const (
	EncryptionTypePgp EncryptionType = "PGP"
)

// Values returns all known values for EncryptionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EncryptionType) Values() []EncryptionType {
	return []EncryptionType{
		"PGP",
	}
}

type EndpointType string

// Enum values for EndpointType
const (
	EndpointTypePublic      EndpointType = "PUBLIC"
	EndpointTypeVpc         EndpointType = "VPC"
	EndpointTypeVpcEndpoint EndpointType = "VPC_ENDPOINT"
)

// Values returns all known values for EndpointType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EndpointType) Values() []EndpointType {
	return []EndpointType{
		"PUBLIC",
		"VPC",
		"VPC_ENDPOINT",
	}
}

type EnforceMessageSigningType string

// Enum values for EnforceMessageSigningType
const (
	EnforceMessageSigningTypeEnabled  EnforceMessageSigningType = "ENABLED"
	EnforceMessageSigningTypeDisabled EnforceMessageSigningType = "DISABLED"
)

// Values returns all known values for EnforceMessageSigningType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EnforceMessageSigningType) Values() []EnforceMessageSigningType {
	return []EnforceMessageSigningType{
		"ENABLED",
		"DISABLED",
	}
}

type ExecutionErrorType string

// Enum values for ExecutionErrorType
const (
	ExecutionErrorTypePermissionDenied    ExecutionErrorType = "PERMISSION_DENIED"
	ExecutionErrorTypeCustomStepFailed    ExecutionErrorType = "CUSTOM_STEP_FAILED"
	ExecutionErrorTypeThrottled           ExecutionErrorType = "THROTTLED"
	ExecutionErrorTypeAlreadyExists       ExecutionErrorType = "ALREADY_EXISTS"
	ExecutionErrorTypeNotFound            ExecutionErrorType = "NOT_FOUND"
	ExecutionErrorTypeBadRequest          ExecutionErrorType = "BAD_REQUEST"
	ExecutionErrorTypeTimeout             ExecutionErrorType = "TIMEOUT"
	ExecutionErrorTypeInternalServerError ExecutionErrorType = "INTERNAL_SERVER_ERROR"
)

// Values returns all known values for ExecutionErrorType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionErrorType) Values() []ExecutionErrorType {
	return []ExecutionErrorType{
		"PERMISSION_DENIED",
		"CUSTOM_STEP_FAILED",
		"THROTTLED",
		"ALREADY_EXISTS",
		"NOT_FOUND",
		"BAD_REQUEST",
		"TIMEOUT",
		"INTERNAL_SERVER_ERROR",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusInProgress        ExecutionStatus = "IN_PROGRESS"
	ExecutionStatusCompleted         ExecutionStatus = "COMPLETED"
	ExecutionStatusException         ExecutionStatus = "EXCEPTION"
	ExecutionStatusHandlingException ExecutionStatus = "HANDLING_EXCEPTION"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"EXCEPTION",
		"HANDLING_EXCEPTION",
	}
}

type HomeDirectoryType string

// Enum values for HomeDirectoryType
const (
	HomeDirectoryTypePath    HomeDirectoryType = "PATH"
	HomeDirectoryTypeLogical HomeDirectoryType = "LOGICAL"
)

// Values returns all known values for HomeDirectoryType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HomeDirectoryType) Values() []HomeDirectoryType {
	return []HomeDirectoryType{
		"PATH",
		"LOGICAL",
	}
}

type IdentityProviderType string

// Enum values for IdentityProviderType
const (
	IdentityProviderTypeServiceManaged      IdentityProviderType = "SERVICE_MANAGED"
	IdentityProviderTypeApiGateway          IdentityProviderType = "API_GATEWAY"
	IdentityProviderTypeAwsDirectoryService IdentityProviderType = "AWS_DIRECTORY_SERVICE"
	IdentityProviderTypeAwsLambda           IdentityProviderType = "AWS_LAMBDA"
)

// Values returns all known values for IdentityProviderType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IdentityProviderType) Values() []IdentityProviderType {
	return []IdentityProviderType{
		"SERVICE_MANAGED",
		"API_GATEWAY",
		"AWS_DIRECTORY_SERVICE",
		"AWS_LAMBDA",
	}
}

type MapType string

// Enum values for MapType
const (
	MapTypeFile      MapType = "FILE"
	MapTypeDirectory MapType = "DIRECTORY"
)

// Values returns all known values for MapType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MapType) Values() []MapType {
	return []MapType{
		"FILE",
		"DIRECTORY",
	}
}

type MdnResponse string

// Enum values for MdnResponse
const (
	MdnResponseSync MdnResponse = "SYNC"
	MdnResponseNone MdnResponse = "NONE"
)

// Values returns all known values for MdnResponse. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MdnResponse) Values() []MdnResponse {
	return []MdnResponse{
		"SYNC",
		"NONE",
	}
}

type MdnSigningAlg string

// Enum values for MdnSigningAlg
const (
	MdnSigningAlgSha256  MdnSigningAlg = "SHA256"
	MdnSigningAlgSha384  MdnSigningAlg = "SHA384"
	MdnSigningAlgSha512  MdnSigningAlg = "SHA512"
	MdnSigningAlgSha1    MdnSigningAlg = "SHA1"
	MdnSigningAlgNone    MdnSigningAlg = "NONE"
	MdnSigningAlgDefault MdnSigningAlg = "DEFAULT"
)

// Values returns all known values for MdnSigningAlg. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MdnSigningAlg) Values() []MdnSigningAlg {
	return []MdnSigningAlg{
		"SHA256",
		"SHA384",
		"SHA512",
		"SHA1",
		"NONE",
		"DEFAULT",
	}
}

type OverwriteExisting string

// Enum values for OverwriteExisting
const (
	OverwriteExistingTrue  OverwriteExisting = "TRUE"
	OverwriteExistingFalse OverwriteExisting = "FALSE"
)

// Values returns all known values for OverwriteExisting. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OverwriteExisting) Values() []OverwriteExisting {
	return []OverwriteExisting{
		"TRUE",
		"FALSE",
	}
}

type PreserveContentType string

// Enum values for PreserveContentType
const (
	PreserveContentTypeEnabled  PreserveContentType = "ENABLED"
	PreserveContentTypeDisabled PreserveContentType = "DISABLED"
)

// Values returns all known values for PreserveContentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PreserveContentType) Values() []PreserveContentType {
	return []PreserveContentType{
		"ENABLED",
		"DISABLED",
	}
}

type PreserveFilenameType string

// Enum values for PreserveFilenameType
const (
	PreserveFilenameTypeEnabled  PreserveFilenameType = "ENABLED"
	PreserveFilenameTypeDisabled PreserveFilenameType = "DISABLED"
)

// Values returns all known values for PreserveFilenameType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PreserveFilenameType) Values() []PreserveFilenameType {
	return []PreserveFilenameType{
		"ENABLED",
		"DISABLED",
	}
}

type ProfileType string

// Enum values for ProfileType
const (
	ProfileTypeLocal   ProfileType = "LOCAL"
	ProfileTypePartner ProfileType = "PARTNER"
)

// Values returns all known values for ProfileType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProfileType) Values() []ProfileType {
	return []ProfileType{
		"LOCAL",
		"PARTNER",
	}
}

type Protocol string

// Enum values for Protocol
const (
	ProtocolSftp Protocol = "SFTP"
	ProtocolFtp  Protocol = "FTP"
	ProtocolFtps Protocol = "FTPS"
	ProtocolAs2  Protocol = "AS2"
)

// Values returns all known values for Protocol. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Protocol) Values() []Protocol {
	return []Protocol{
		"SFTP",
		"FTP",
		"FTPS",
		"AS2",
	}
}

type SecurityPolicyProtocol string

// Enum values for SecurityPolicyProtocol
const (
	SecurityPolicyProtocolSftp SecurityPolicyProtocol = "SFTP"
	SecurityPolicyProtocolFtps SecurityPolicyProtocol = "FTPS"
)

// Values returns all known values for SecurityPolicyProtocol. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SecurityPolicyProtocol) Values() []SecurityPolicyProtocol {
	return []SecurityPolicyProtocol{
		"SFTP",
		"FTPS",
	}
}

type SecurityPolicyResourceType string

// Enum values for SecurityPolicyResourceType
const (
	SecurityPolicyResourceTypeServer    SecurityPolicyResourceType = "SERVER"
	SecurityPolicyResourceTypeConnector SecurityPolicyResourceType = "CONNECTOR"
)

// Values returns all known values for SecurityPolicyResourceType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SecurityPolicyResourceType) Values() []SecurityPolicyResourceType {
	return []SecurityPolicyResourceType{
		"SERVER",
		"CONNECTOR",
	}
}

type SetStatOption string

// Enum values for SetStatOption
const (
	SetStatOptionDefault    SetStatOption = "DEFAULT"
	SetStatOptionEnableNoOp SetStatOption = "ENABLE_NO_OP"
)

// Values returns all known values for SetStatOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SetStatOption) Values() []SetStatOption {
	return []SetStatOption{
		"DEFAULT",
		"ENABLE_NO_OP",
	}
}

type SftpAuthenticationMethods string

// Enum values for SftpAuthenticationMethods
const (
	SftpAuthenticationMethodsPassword             SftpAuthenticationMethods = "PASSWORD"
	SftpAuthenticationMethodsPublicKey            SftpAuthenticationMethods = "PUBLIC_KEY"
	SftpAuthenticationMethodsPublicKeyOrPassword  SftpAuthenticationMethods = "PUBLIC_KEY_OR_PASSWORD"
	SftpAuthenticationMethodsPublicKeyAndPassword SftpAuthenticationMethods = "PUBLIC_KEY_AND_PASSWORD"
)

// Values returns all known values for SftpAuthenticationMethods. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SftpAuthenticationMethods) Values() []SftpAuthenticationMethods {
	return []SftpAuthenticationMethods{
		"PASSWORD",
		"PUBLIC_KEY",
		"PUBLIC_KEY_OR_PASSWORD",
		"PUBLIC_KEY_AND_PASSWORD",
	}
}

type SigningAlg string

// Enum values for SigningAlg
const (
	SigningAlgSha256 SigningAlg = "SHA256"
	SigningAlgSha384 SigningAlg = "SHA384"
	SigningAlgSha512 SigningAlg = "SHA512"
	SigningAlgSha1   SigningAlg = "SHA1"
	SigningAlgNone   SigningAlg = "NONE"
)

// Values returns all known values for SigningAlg. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SigningAlg) Values() []SigningAlg {
	return []SigningAlg{
		"SHA256",
		"SHA384",
		"SHA512",
		"SHA1",
		"NONE",
	}
}

type State string

// Enum values for State
const (
	StateOffline     State = "OFFLINE"
	StateOnline      State = "ONLINE"
	StateStarting    State = "STARTING"
	StateStopping    State = "STOPPING"
	StateStartFailed State = "START_FAILED"
	StateStopFailed  State = "STOP_FAILED"
)

// Values returns all known values for State. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (State) Values() []State {
	return []State{
		"OFFLINE",
		"ONLINE",
		"STARTING",
		"STOPPING",
		"START_FAILED",
		"STOP_FAILED",
	}
}

type TlsSessionResumptionMode string

// Enum values for TlsSessionResumptionMode
const (
	TlsSessionResumptionModeDisabled TlsSessionResumptionMode = "DISABLED"
	TlsSessionResumptionModeEnabled  TlsSessionResumptionMode = "ENABLED"
	TlsSessionResumptionModeEnforced TlsSessionResumptionMode = "ENFORCED"
)

// Values returns all known values for TlsSessionResumptionMode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TlsSessionResumptionMode) Values() []TlsSessionResumptionMode {
	return []TlsSessionResumptionMode{
		"DISABLED",
		"ENABLED",
		"ENFORCED",
	}
}

type TransferTableStatus string

// Enum values for TransferTableStatus
const (
	TransferTableStatusQueued     TransferTableStatus = "QUEUED"
	TransferTableStatusInProgress TransferTableStatus = "IN_PROGRESS"
	TransferTableStatusCompleted  TransferTableStatus = "COMPLETED"
	TransferTableStatusFailed     TransferTableStatus = "FAILED"
)

// Values returns all known values for TransferTableStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TransferTableStatus) Values() []TransferTableStatus {
	return []TransferTableStatus{
		"QUEUED",
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
	}
}

type WebAppEndpointPolicy string

// Enum values for WebAppEndpointPolicy
const (
	WebAppEndpointPolicyFips     WebAppEndpointPolicy = "FIPS"
	WebAppEndpointPolicyStandard WebAppEndpointPolicy = "STANDARD"
)

// Values returns all known values for WebAppEndpointPolicy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WebAppEndpointPolicy) Values() []WebAppEndpointPolicy {
	return []WebAppEndpointPolicy{
		"FIPS",
		"STANDARD",
	}
}

type WorkflowStepType string

// Enum values for WorkflowStepType
const (
	WorkflowStepTypeCopy    WorkflowStepType = "COPY"
	WorkflowStepTypeCustom  WorkflowStepType = "CUSTOM"
	WorkflowStepTypeTag     WorkflowStepType = "TAG"
	WorkflowStepTypeDelete  WorkflowStepType = "DELETE"
	WorkflowStepTypeDecrypt WorkflowStepType = "DECRYPT"
)

// Values returns all known values for WorkflowStepType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowStepType) Values() []WorkflowStepType {
	return []WorkflowStepType{
		"COPY",
		"CUSTOM",
		"TAG",
		"DELETE",
		"DECRYPT",
	}
}
