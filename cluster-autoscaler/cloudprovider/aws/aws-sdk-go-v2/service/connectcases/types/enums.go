// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AuditEventType string

// Enum values for AuditEventType
const (
	AuditEventTypeCaseCreated        AuditEventType = "Case.Created"
	AuditEventTypeCaseUpdated        AuditEventType = "Case.Updated"
	AuditEventTypeRelatedItemCreated AuditEventType = "RelatedItem.Created"
)

// Values returns all known values for AuditEventType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuditEventType) Values() []AuditEventType {
	return []AuditEventType{
		"Case.Created",
		"Case.Updated",
		"RelatedItem.Created",
	}
}

type CommentBodyTextType string

// Enum values for CommentBodyTextType
const (
	CommentBodyTextTypePlaintext CommentBodyTextType = "Text/Plain"
)

// Values returns all known values for CommentBodyTextType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CommentBodyTextType) Values() []CommentBodyTextType {
	return []CommentBodyTextType{
		"Text/Plain",
	}
}

type DomainStatus string

// Enum values for DomainStatus
const (
	DomainStatusActive             DomainStatus = "Active"
	DomainStatusCreationInProgress DomainStatus = "CreationInProgress"
	DomainStatusCreationFailed     DomainStatus = "CreationFailed"
)

// Values returns all known values for DomainStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DomainStatus) Values() []DomainStatus {
	return []DomainStatus{
		"Active",
		"CreationInProgress",
		"CreationFailed",
	}
}

type FieldNamespace string

// Enum values for FieldNamespace
const (
	FieldNamespaceSystem FieldNamespace = "System"
	FieldNamespaceCustom FieldNamespace = "Custom"
)

// Values returns all known values for FieldNamespace. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FieldNamespace) Values() []FieldNamespace {
	return []FieldNamespace{
		"System",
		"Custom",
	}
}

type FieldType string

// Enum values for FieldType
const (
	FieldTypeText         FieldType = "Text"
	FieldTypeNumber       FieldType = "Number"
	FieldTypeBoolean      FieldType = "Boolean"
	FieldTypeDateTime     FieldType = "DateTime"
	FieldTypeSingleSelect FieldType = "SingleSelect"
	FieldTypeUrl          FieldType = "Url"
	FieldTypeUser         FieldType = "User"
)

// Values returns all known values for FieldType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FieldType) Values() []FieldType {
	return []FieldType{
		"Text",
		"Number",
		"Boolean",
		"DateTime",
		"SingleSelect",
		"Url",
		"User",
	}
}

type Order string

// Enum values for Order
const (
	OrderAscending  Order = "Asc"
	OrderDescending Order = "Desc"
)

// Values returns all known values for Order. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Order) Values() []Order {
	return []Order{
		"Asc",
		"Desc",
	}
}

type RelatedItemType string

// Enum values for RelatedItemType
const (
	RelatedItemTypeContact RelatedItemType = "Contact"
	RelatedItemTypeComment RelatedItemType = "Comment"
	RelatedItemTypeFile    RelatedItemType = "File"
	RelatedItemTypeSla     RelatedItemType = "Sla"
)

// Values returns all known values for RelatedItemType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RelatedItemType) Values() []RelatedItemType {
	return []RelatedItemType{
		"Contact",
		"Comment",
		"File",
		"Sla",
	}
}

type RuleType string

// Enum values for RuleType
const (
	RuleTypeRequired RuleType = "Required"
)

// Values returns all known values for RuleType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleType) Values() []RuleType {
	return []RuleType{
		"Required",
	}
}

type SlaStatus string

// Enum values for SlaStatus
const (
	SlaStatusActive  SlaStatus = "Active"
	SlaStatusOverdue SlaStatus = "Overdue"
	SlaStatusMet     SlaStatus = "Met"
	SlaStatusNotMet  SlaStatus = "NotMet"
)

// Values returns all known values for SlaStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlaStatus) Values() []SlaStatus {
	return []SlaStatus{
		"Active",
		"Overdue",
		"Met",
		"NotMet",
	}
}

type SlaType string

// Enum values for SlaType
const (
	SlaTypeCaseField SlaType = "CaseField"
)

// Values returns all known values for SlaType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlaType) Values() []SlaType {
	return []SlaType{
		"CaseField",
	}
}

type TemplateStatus string

// Enum values for TemplateStatus
const (
	TemplateStatusActive   TemplateStatus = "Active"
	TemplateStatusInactive TemplateStatus = "Inactive"
)

// Values returns all known values for TemplateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TemplateStatus) Values() []TemplateStatus {
	return []TemplateStatus{
		"Active",
		"Inactive",
	}
}
