// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccessLevelFilterKey string

// Enum values for AccessLevelFilterKey
const (
	AccessLevelFilterKeyAccount AccessLevelFilterKey = "Account"
	AccessLevelFilterKeyRole    AccessLevelFilterKey = "Role"
	AccessLevelFilterKeyUser    AccessLevelFilterKey = "User"
)

// Values returns all known values for AccessLevelFilterKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AccessLevelFilterKey) Values() []AccessLevelFilterKey {
	return []AccessLevelFilterKey{
		"Account",
		"Role",
		"User",
	}
}

type AccessStatus string

// Enum values for AccessStatus
const (
	AccessStatusEnabled     AccessStatus = "ENABLED"
	AccessStatusUnderChange AccessStatus = "UNDER_CHANGE"
	AccessStatusDisabled    AccessStatus = "DISABLED"
)

// Values returns all known values for AccessStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AccessStatus) Values() []AccessStatus {
	return []AccessStatus{
		"ENABLED",
		"UNDER_CHANGE",
		"DISABLED",
	}
}

type ChangeAction string

// Enum values for ChangeAction
const (
	ChangeActionAdd    ChangeAction = "ADD"
	ChangeActionModify ChangeAction = "MODIFY"
	ChangeActionRemove ChangeAction = "REMOVE"
)

// Values returns all known values for ChangeAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChangeAction) Values() []ChangeAction {
	return []ChangeAction{
		"ADD",
		"MODIFY",
		"REMOVE",
	}
}

type CopyOption string

// Enum values for CopyOption
const (
	CopyOptionCopyTags CopyOption = "CopyTags"
)

// Values returns all known values for CopyOption. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CopyOption) Values() []CopyOption {
	return []CopyOption{
		"CopyTags",
	}
}

type CopyProductStatus string

// Enum values for CopyProductStatus
const (
	CopyProductStatusSucceeded  CopyProductStatus = "SUCCEEDED"
	CopyProductStatusInProgress CopyProductStatus = "IN_PROGRESS"
	CopyProductStatusFailed     CopyProductStatus = "FAILED"
)

// Values returns all known values for CopyProductStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CopyProductStatus) Values() []CopyProductStatus {
	return []CopyProductStatus{
		"SUCCEEDED",
		"IN_PROGRESS",
		"FAILED",
	}
}

type DescribePortfolioShareType string

// Enum values for DescribePortfolioShareType
const (
	DescribePortfolioShareTypeAccount                   DescribePortfolioShareType = "ACCOUNT"
	DescribePortfolioShareTypeOrganization              DescribePortfolioShareType = "ORGANIZATION"
	DescribePortfolioShareTypeOrganizationalUnit        DescribePortfolioShareType = "ORGANIZATIONAL_UNIT"
	DescribePortfolioShareTypeOrganizationMemberAccount DescribePortfolioShareType = "ORGANIZATION_MEMBER_ACCOUNT"
)

// Values returns all known values for DescribePortfolioShareType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DescribePortfolioShareType) Values() []DescribePortfolioShareType {
	return []DescribePortfolioShareType{
		"ACCOUNT",
		"ORGANIZATION",
		"ORGANIZATIONAL_UNIT",
		"ORGANIZATION_MEMBER_ACCOUNT",
	}
}

type EngineWorkflowStatus string

// Enum values for EngineWorkflowStatus
const (
	EngineWorkflowStatusSucceeded EngineWorkflowStatus = "SUCCEEDED"
	EngineWorkflowStatusFailed    EngineWorkflowStatus = "FAILED"
)

// Values returns all known values for EngineWorkflowStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EngineWorkflowStatus) Values() []EngineWorkflowStatus {
	return []EngineWorkflowStatus{
		"SUCCEEDED",
		"FAILED",
	}
}

type EvaluationType string

// Enum values for EvaluationType
const (
	EvaluationTypeStatic  EvaluationType = "STATIC"
	EvaluationTypeDynamic EvaluationType = "DYNAMIC"
)

// Values returns all known values for EvaluationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EvaluationType) Values() []EvaluationType {
	return []EvaluationType{
		"STATIC",
		"DYNAMIC",
	}
}

type LastSyncStatus string

// Enum values for LastSyncStatus
const (
	LastSyncStatusSucceeded LastSyncStatus = "SUCCEEDED"
	LastSyncStatusFailed    LastSyncStatus = "FAILED"
)

// Values returns all known values for LastSyncStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LastSyncStatus) Values() []LastSyncStatus {
	return []LastSyncStatus{
		"SUCCEEDED",
		"FAILED",
	}
}

type OrganizationNodeType string

// Enum values for OrganizationNodeType
const (
	OrganizationNodeTypeOrganization       OrganizationNodeType = "ORGANIZATION"
	OrganizationNodeTypeOrganizationalUnit OrganizationNodeType = "ORGANIZATIONAL_UNIT"
	OrganizationNodeTypeAccount            OrganizationNodeType = "ACCOUNT"
)

// Values returns all known values for OrganizationNodeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OrganizationNodeType) Values() []OrganizationNodeType {
	return []OrganizationNodeType{
		"ORGANIZATION",
		"ORGANIZATIONAL_UNIT",
		"ACCOUNT",
	}
}

type PortfolioShareType string

// Enum values for PortfolioShareType
const (
	PortfolioShareTypeImported          PortfolioShareType = "IMPORTED"
	PortfolioShareTypeAwsServicecatalog PortfolioShareType = "AWS_SERVICECATALOG"
	PortfolioShareTypeAwsOrganizations  PortfolioShareType = "AWS_ORGANIZATIONS"
)

// Values returns all known values for PortfolioShareType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PortfolioShareType) Values() []PortfolioShareType {
	return []PortfolioShareType{
		"IMPORTED",
		"AWS_SERVICECATALOG",
		"AWS_ORGANIZATIONS",
	}
}

type PrincipalType string

// Enum values for PrincipalType
const (
	PrincipalTypeIam        PrincipalType = "IAM"
	PrincipalTypeIamPattern PrincipalType = "IAM_PATTERN"
)

// Values returns all known values for PrincipalType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PrincipalType) Values() []PrincipalType {
	return []PrincipalType{
		"IAM",
		"IAM_PATTERN",
	}
}

type ProductSource string

// Enum values for ProductSource
const (
	ProductSourceAccount ProductSource = "ACCOUNT"
)

// Values returns all known values for ProductSource. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProductSource) Values() []ProductSource {
	return []ProductSource{
		"ACCOUNT",
	}
}

type ProductType string

// Enum values for ProductType
const (
	ProductTypeCloudFormationTemplate ProductType = "CLOUD_FORMATION_TEMPLATE"
	ProductTypeMarketplace            ProductType = "MARKETPLACE"
	ProductTypeTerraformOpenSource    ProductType = "TERRAFORM_OPEN_SOURCE"
	ProductTypeTerraformCloud         ProductType = "TERRAFORM_CLOUD"
	ProductTypeExternal               ProductType = "EXTERNAL"
)

// Values returns all known values for ProductType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProductType) Values() []ProductType {
	return []ProductType{
		"CLOUD_FORMATION_TEMPLATE",
		"MARKETPLACE",
		"TERRAFORM_OPEN_SOURCE",
		"TERRAFORM_CLOUD",
		"EXTERNAL",
	}
}

type ProductViewFilterBy string

// Enum values for ProductViewFilterBy
const (
	ProductViewFilterByFullTextSearch  ProductViewFilterBy = "FullTextSearch"
	ProductViewFilterByOwner           ProductViewFilterBy = "Owner"
	ProductViewFilterByProductType     ProductViewFilterBy = "ProductType"
	ProductViewFilterBySourceProductId ProductViewFilterBy = "SourceProductId"
)

// Values returns all known values for ProductViewFilterBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProductViewFilterBy) Values() []ProductViewFilterBy {
	return []ProductViewFilterBy{
		"FullTextSearch",
		"Owner",
		"ProductType",
		"SourceProductId",
	}
}

type ProductViewSortBy string

// Enum values for ProductViewSortBy
const (
	ProductViewSortByTitle        ProductViewSortBy = "Title"
	ProductViewSortByVersionCount ProductViewSortBy = "VersionCount"
	ProductViewSortByCreationDate ProductViewSortBy = "CreationDate"
)

// Values returns all known values for ProductViewSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProductViewSortBy) Values() []ProductViewSortBy {
	return []ProductViewSortBy{
		"Title",
		"VersionCount",
		"CreationDate",
	}
}

type PropertyKey string

// Enum values for PropertyKey
const (
	PropertyKeyOwner      PropertyKey = "OWNER"
	PropertyKeyLaunchRole PropertyKey = "LAUNCH_ROLE"
)

// Values returns all known values for PropertyKey. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PropertyKey) Values() []PropertyKey {
	return []PropertyKey{
		"OWNER",
		"LAUNCH_ROLE",
	}
}

type ProvisionedProductPlanStatus string

// Enum values for ProvisionedProductPlanStatus
const (
	ProvisionedProductPlanStatusCreateInProgress  ProvisionedProductPlanStatus = "CREATE_IN_PROGRESS"
	ProvisionedProductPlanStatusCreateSuccess     ProvisionedProductPlanStatus = "CREATE_SUCCESS"
	ProvisionedProductPlanStatusCreateFailed      ProvisionedProductPlanStatus = "CREATE_FAILED"
	ProvisionedProductPlanStatusExecuteInProgress ProvisionedProductPlanStatus = "EXECUTE_IN_PROGRESS"
	ProvisionedProductPlanStatusExecuteSuccess    ProvisionedProductPlanStatus = "EXECUTE_SUCCESS"
	ProvisionedProductPlanStatusExecuteFailed     ProvisionedProductPlanStatus = "EXECUTE_FAILED"
)

// Values returns all known values for ProvisionedProductPlanStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProvisionedProductPlanStatus) Values() []ProvisionedProductPlanStatus {
	return []ProvisionedProductPlanStatus{
		"CREATE_IN_PROGRESS",
		"CREATE_SUCCESS",
		"CREATE_FAILED",
		"EXECUTE_IN_PROGRESS",
		"EXECUTE_SUCCESS",
		"EXECUTE_FAILED",
	}
}

type ProvisionedProductPlanType string

// Enum values for ProvisionedProductPlanType
const (
	ProvisionedProductPlanTypeCloudformation ProvisionedProductPlanType = "CLOUDFORMATION"
)

// Values returns all known values for ProvisionedProductPlanType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProvisionedProductPlanType) Values() []ProvisionedProductPlanType {
	return []ProvisionedProductPlanType{
		"CLOUDFORMATION",
	}
}

type ProvisionedProductStatus string

// Enum values for ProvisionedProductStatus
const (
	ProvisionedProductStatusAvailable      ProvisionedProductStatus = "AVAILABLE"
	ProvisionedProductStatusUnderChange    ProvisionedProductStatus = "UNDER_CHANGE"
	ProvisionedProductStatusTainted        ProvisionedProductStatus = "TAINTED"
	ProvisionedProductStatusError          ProvisionedProductStatus = "ERROR"
	ProvisionedProductStatusPlanInProgress ProvisionedProductStatus = "PLAN_IN_PROGRESS"
)

// Values returns all known values for ProvisionedProductStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProvisionedProductStatus) Values() []ProvisionedProductStatus {
	return []ProvisionedProductStatus{
		"AVAILABLE",
		"UNDER_CHANGE",
		"TAINTED",
		"ERROR",
		"PLAN_IN_PROGRESS",
	}
}

type ProvisionedProductViewFilterBy string

// Enum values for ProvisionedProductViewFilterBy
const (
	ProvisionedProductViewFilterBySearchQuery ProvisionedProductViewFilterBy = "SearchQuery"
)

// Values returns all known values for ProvisionedProductViewFilterBy. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProvisionedProductViewFilterBy) Values() []ProvisionedProductViewFilterBy {
	return []ProvisionedProductViewFilterBy{
		"SearchQuery",
	}
}

type ProvisioningArtifactGuidance string

// Enum values for ProvisioningArtifactGuidance
const (
	ProvisioningArtifactGuidanceDefault    ProvisioningArtifactGuidance = "DEFAULT"
	ProvisioningArtifactGuidanceDeprecated ProvisioningArtifactGuidance = "DEPRECATED"
)

// Values returns all known values for ProvisioningArtifactGuidance. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProvisioningArtifactGuidance) Values() []ProvisioningArtifactGuidance {
	return []ProvisioningArtifactGuidance{
		"DEFAULT",
		"DEPRECATED",
	}
}

type ProvisioningArtifactPropertyName string

// Enum values for ProvisioningArtifactPropertyName
const (
	ProvisioningArtifactPropertyNameId ProvisioningArtifactPropertyName = "Id"
)

// Values returns all known values for ProvisioningArtifactPropertyName. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProvisioningArtifactPropertyName) Values() []ProvisioningArtifactPropertyName {
	return []ProvisioningArtifactPropertyName{
		"Id",
	}
}

type ProvisioningArtifactType string

// Enum values for ProvisioningArtifactType
const (
	ProvisioningArtifactTypeCloudFormationTemplate ProvisioningArtifactType = "CLOUD_FORMATION_TEMPLATE"
	ProvisioningArtifactTypeMarketplaceAmi         ProvisioningArtifactType = "MARKETPLACE_AMI"
	ProvisioningArtifactTypeMarketplaceCar         ProvisioningArtifactType = "MARKETPLACE_CAR"
	ProvisioningArtifactTypeTerraformOpenSource    ProvisioningArtifactType = "TERRAFORM_OPEN_SOURCE"
	ProvisioningArtifactTypeTerraformCloud         ProvisioningArtifactType = "TERRAFORM_CLOUD"
	ProvisioningArtifactTypeExternal               ProvisioningArtifactType = "EXTERNAL"
)

// Values returns all known values for ProvisioningArtifactType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProvisioningArtifactType) Values() []ProvisioningArtifactType {
	return []ProvisioningArtifactType{
		"CLOUD_FORMATION_TEMPLATE",
		"MARKETPLACE_AMI",
		"MARKETPLACE_CAR",
		"TERRAFORM_OPEN_SOURCE",
		"TERRAFORM_CLOUD",
		"EXTERNAL",
	}
}

type RecordStatus string

// Enum values for RecordStatus
const (
	RecordStatusCreated           RecordStatus = "CREATED"
	RecordStatusInProgress        RecordStatus = "IN_PROGRESS"
	RecordStatusInProgressInError RecordStatus = "IN_PROGRESS_IN_ERROR"
	RecordStatusSucceeded         RecordStatus = "SUCCEEDED"
	RecordStatusFailed            RecordStatus = "FAILED"
)

// Values returns all known values for RecordStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecordStatus) Values() []RecordStatus {
	return []RecordStatus{
		"CREATED",
		"IN_PROGRESS",
		"IN_PROGRESS_IN_ERROR",
		"SUCCEEDED",
		"FAILED",
	}
}

type Replacement string

// Enum values for Replacement
const (
	ReplacementTrue        Replacement = "TRUE"
	ReplacementFalse       Replacement = "FALSE"
	ReplacementConditional Replacement = "CONDITIONAL"
)

// Values returns all known values for Replacement. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Replacement) Values() []Replacement {
	return []Replacement{
		"TRUE",
		"FALSE",
		"CONDITIONAL",
	}
}

type RequiresRecreation string

// Enum values for RequiresRecreation
const (
	RequiresRecreationNever         RequiresRecreation = "NEVER"
	RequiresRecreationConditionally RequiresRecreation = "CONDITIONALLY"
	RequiresRecreationAlways        RequiresRecreation = "ALWAYS"
)

// Values returns all known values for RequiresRecreation. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RequiresRecreation) Values() []RequiresRecreation {
	return []RequiresRecreation{
		"NEVER",
		"CONDITIONALLY",
		"ALWAYS",
	}
}

type ResourceAttribute string

// Enum values for ResourceAttribute
const (
	ResourceAttributeProperties     ResourceAttribute = "PROPERTIES"
	ResourceAttributeMetadata       ResourceAttribute = "METADATA"
	ResourceAttributeCreationpolicy ResourceAttribute = "CREATIONPOLICY"
	ResourceAttributeUpdatepolicy   ResourceAttribute = "UPDATEPOLICY"
	ResourceAttributeDeletionpolicy ResourceAttribute = "DELETIONPOLICY"
	ResourceAttributeTags           ResourceAttribute = "TAGS"
)

// Values returns all known values for ResourceAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceAttribute) Values() []ResourceAttribute {
	return []ResourceAttribute{
		"PROPERTIES",
		"METADATA",
		"CREATIONPOLICY",
		"UPDATEPOLICY",
		"DELETIONPOLICY",
		"TAGS",
	}
}

type ServiceActionAssociationErrorCode string

// Enum values for ServiceActionAssociationErrorCode
const (
	ServiceActionAssociationErrorCodeDuplicateResourceException ServiceActionAssociationErrorCode = "DUPLICATE_RESOURCE"
	ServiceActionAssociationErrorCodeInternalFailure            ServiceActionAssociationErrorCode = "INTERNAL_FAILURE"
	ServiceActionAssociationErrorCodeLimitExceededException     ServiceActionAssociationErrorCode = "LIMIT_EXCEEDED"
	ServiceActionAssociationErrorCodeResourceNotFoundException  ServiceActionAssociationErrorCode = "RESOURCE_NOT_FOUND"
	ServiceActionAssociationErrorCodeThrottlingException        ServiceActionAssociationErrorCode = "THROTTLING"
	ServiceActionAssociationErrorCodeInvalidParameterException  ServiceActionAssociationErrorCode = "INVALID_PARAMETER"
)

// Values returns all known values for ServiceActionAssociationErrorCode. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceActionAssociationErrorCode) Values() []ServiceActionAssociationErrorCode {
	return []ServiceActionAssociationErrorCode{
		"DUPLICATE_RESOURCE",
		"INTERNAL_FAILURE",
		"LIMIT_EXCEEDED",
		"RESOURCE_NOT_FOUND",
		"THROTTLING",
		"INVALID_PARAMETER",
	}
}

type ServiceActionDefinitionKey string

// Enum values for ServiceActionDefinitionKey
const (
	ServiceActionDefinitionKeyName       ServiceActionDefinitionKey = "Name"
	ServiceActionDefinitionKeyVersion    ServiceActionDefinitionKey = "Version"
	ServiceActionDefinitionKeyAssumeRole ServiceActionDefinitionKey = "AssumeRole"
	ServiceActionDefinitionKeyParameters ServiceActionDefinitionKey = "Parameters"
)

// Values returns all known values for ServiceActionDefinitionKey. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceActionDefinitionKey) Values() []ServiceActionDefinitionKey {
	return []ServiceActionDefinitionKey{
		"Name",
		"Version",
		"AssumeRole",
		"Parameters",
	}
}

type ServiceActionDefinitionType string

// Enum values for ServiceActionDefinitionType
const (
	ServiceActionDefinitionTypeSsmAutomation ServiceActionDefinitionType = "SSM_AUTOMATION"
)

// Values returns all known values for ServiceActionDefinitionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceActionDefinitionType) Values() []ServiceActionDefinitionType {
	return []ServiceActionDefinitionType{
		"SSM_AUTOMATION",
	}
}

type ShareStatus string

// Enum values for ShareStatus
const (
	ShareStatusNotStarted          ShareStatus = "NOT_STARTED"
	ShareStatusInProgress          ShareStatus = "IN_PROGRESS"
	ShareStatusCompleted           ShareStatus = "COMPLETED"
	ShareStatusCompletedWithErrors ShareStatus = "COMPLETED_WITH_ERRORS"
	ShareStatusError               ShareStatus = "ERROR"
)

// Values returns all known values for ShareStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ShareStatus) Values() []ShareStatus {
	return []ShareStatus{
		"NOT_STARTED",
		"IN_PROGRESS",
		"COMPLETED",
		"COMPLETED_WITH_ERRORS",
		"ERROR",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "ASCENDING"
	SortOrderDescending SortOrder = "DESCENDING"
)

// Values returns all known values for SortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"ASCENDING",
		"DESCENDING",
	}
}

type SourceType string

// Enum values for SourceType
const (
	SourceTypeCodestar SourceType = "CODESTAR"
)

// Values returns all known values for SourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SourceType) Values() []SourceType {
	return []SourceType{
		"CODESTAR",
	}
}

type StackInstanceStatus string

// Enum values for StackInstanceStatus
const (
	StackInstanceStatusCurrent    StackInstanceStatus = "CURRENT"
	StackInstanceStatusOutdated   StackInstanceStatus = "OUTDATED"
	StackInstanceStatusInoperable StackInstanceStatus = "INOPERABLE"
)

// Values returns all known values for StackInstanceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StackInstanceStatus) Values() []StackInstanceStatus {
	return []StackInstanceStatus{
		"CURRENT",
		"OUTDATED",
		"INOPERABLE",
	}
}

type StackSetOperationType string

// Enum values for StackSetOperationType
const (
	StackSetOperationTypeCreate StackSetOperationType = "CREATE"
	StackSetOperationTypeUpdate StackSetOperationType = "UPDATE"
	StackSetOperationTypeDelete StackSetOperationType = "DELETE"
)

// Values returns all known values for StackSetOperationType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StackSetOperationType) Values() []StackSetOperationType {
	return []StackSetOperationType{
		"CREATE",
		"UPDATE",
		"DELETE",
	}
}

type Status string

// Enum values for Status
const (
	StatusAvailable Status = "AVAILABLE"
	StatusCreating  Status = "CREATING"
	StatusFailed    Status = "FAILED"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"AVAILABLE",
		"CREATING",
		"FAILED",
	}
}
