// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActionPayloadFieldType string

// Enum values for ActionPayloadFieldType
const (
	ActionPayloadFieldTypeString  ActionPayloadFieldType = "STRING"
	ActionPayloadFieldTypeNumber  ActionPayloadFieldType = "NUMBER"
	ActionPayloadFieldTypeArray   ActionPayloadFieldType = "ARRAY"
	ActionPayloadFieldTypeBoolean ActionPayloadFieldType = "BOOLEAN"
)

// Values returns all known values for ActionPayloadFieldType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActionPayloadFieldType) Values() []ActionPayloadFieldType {
	return []ActionPayloadFieldType{
		"STRING",
		"NUMBER",
		"ARRAY",
		"BOOLEAN",
	}
}

type APISchemaType string

// Enum values for APISchemaType
const (
	APISchemaTypeOpenApiV3 APISchemaType = "OPEN_API_V3"
)

// Values returns all known values for APISchemaType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (APISchemaType) Values() []APISchemaType {
	return []APISchemaType{
		"OPEN_API_V3",
	}
}

type ApplicationStatus string

// Enum values for ApplicationStatus
const (
	ApplicationStatusCreating ApplicationStatus = "CREATING"
	ApplicationStatusActive   ApplicationStatus = "ACTIVE"
	ApplicationStatusDeleting ApplicationStatus = "DELETING"
	ApplicationStatusFailed   ApplicationStatus = "FAILED"
	ApplicationStatusUpdating ApplicationStatus = "UPDATING"
)

// Values returns all known values for ApplicationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ApplicationStatus) Values() []ApplicationStatus {
	return []ApplicationStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
		"UPDATING",
	}
}

type AttachmentsControlMode string

// Enum values for AttachmentsControlMode
const (
	AttachmentsControlModeEnabled  AttachmentsControlMode = "ENABLED"
	AttachmentsControlModeDisabled AttachmentsControlMode = "DISABLED"
)

// Values returns all known values for AttachmentsControlMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AttachmentsControlMode) Values() []AttachmentsControlMode {
	return []AttachmentsControlMode{
		"ENABLED",
		"DISABLED",
	}
}

type AttachmentStatus string

// Enum values for AttachmentStatus
const (
	AttachmentStatusFailed  AttachmentStatus = "FAILED"
	AttachmentStatusSuccess AttachmentStatus = "SUCCESS"
)

// Values returns all known values for AttachmentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AttachmentStatus) Values() []AttachmentStatus {
	return []AttachmentStatus{
		"FAILED",
		"SUCCESS",
	}
}

type AttributeType string

// Enum values for AttributeType
const (
	AttributeTypeString     AttributeType = "STRING"
	AttributeTypeStringList AttributeType = "STRING_LIST"
	AttributeTypeNumber     AttributeType = "NUMBER"
	AttributeTypeDate       AttributeType = "DATE"
)

// Values returns all known values for AttributeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AttributeType) Values() []AttributeType {
	return []AttributeType{
		"STRING",
		"STRING_LIST",
		"NUMBER",
		"DATE",
	}
}

type AttributeValueOperator string

// Enum values for AttributeValueOperator
const (
	AttributeValueOperatorDelete AttributeValueOperator = "DELETE"
)

// Values returns all known values for AttributeValueOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AttributeValueOperator) Values() []AttributeValueOperator {
	return []AttributeValueOperator{
		"DELETE",
	}
}

type AudioExtractionStatus string

// Enum values for AudioExtractionStatus
const (
	AudioExtractionStatusEnabled  AudioExtractionStatus = "ENABLED"
	AudioExtractionStatusDisabled AudioExtractionStatus = "DISABLED"
)

// Values returns all known values for AudioExtractionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AudioExtractionStatus) Values() []AudioExtractionStatus {
	return []AudioExtractionStatus{
		"ENABLED",
		"DISABLED",
	}
}

type AudioExtractionType string

// Enum values for AudioExtractionType
const (
	AudioExtractionTypeTranscript AudioExtractionType = "TRANSCRIPT"
	AudioExtractionTypeSummary    AudioExtractionType = "SUMMARY"
)

// Values returns all known values for AudioExtractionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AudioExtractionType) Values() []AudioExtractionType {
	return []AudioExtractionType{
		"TRANSCRIPT",
		"SUMMARY",
	}
}

type AutoSubscriptionStatus string

// Enum values for AutoSubscriptionStatus
const (
	AutoSubscriptionStatusEnabled  AutoSubscriptionStatus = "ENABLED"
	AutoSubscriptionStatusDisabled AutoSubscriptionStatus = "DISABLED"
)

// Values returns all known values for AutoSubscriptionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AutoSubscriptionStatus) Values() []AutoSubscriptionStatus {
	return []AutoSubscriptionStatus{
		"ENABLED",
		"DISABLED",
	}
}

type BrowserExtension string

// Enum values for BrowserExtension
const (
	BrowserExtensionFirefox BrowserExtension = "FIREFOX"
	BrowserExtensionChrome  BrowserExtension = "CHROME"
)

// Values returns all known values for BrowserExtension. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BrowserExtension) Values() []BrowserExtension {
	return []BrowserExtension{
		"FIREFOX",
		"CHROME",
	}
}

type ChatMode string

// Enum values for ChatMode
const (
	ChatModeRetrievalMode ChatMode = "RETRIEVAL_MODE"
	ChatModeCreatorMode   ChatMode = "CREATOR_MODE"
	ChatModePluginMode    ChatMode = "PLUGIN_MODE"
)

// Values returns all known values for ChatMode. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ChatMode) Values() []ChatMode {
	return []ChatMode{
		"RETRIEVAL_MODE",
		"CREATOR_MODE",
		"PLUGIN_MODE",
	}
}

type ContentType string

// Enum values for ContentType
const (
	ContentTypePdf       ContentType = "PDF"
	ContentTypeHtml      ContentType = "HTML"
	ContentTypeMsWord    ContentType = "MS_WORD"
	ContentTypePlainText ContentType = "PLAIN_TEXT"
	ContentTypePpt       ContentType = "PPT"
	ContentTypeRtf       ContentType = "RTF"
	ContentTypeXml       ContentType = "XML"
	ContentTypeXslt      ContentType = "XSLT"
	ContentTypeMsExcel   ContentType = "MS_EXCEL"
	ContentTypeCsv       ContentType = "CSV"
	ContentTypeJson      ContentType = "JSON"
	ContentTypeMd        ContentType = "MD"
)

// Values returns all known values for ContentType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContentType) Values() []ContentType {
	return []ContentType{
		"PDF",
		"HTML",
		"MS_WORD",
		"PLAIN_TEXT",
		"PPT",
		"RTF",
		"XML",
		"XSLT",
		"MS_EXCEL",
		"CSV",
		"JSON",
		"MD",
	}
}

type CreatorModeControl string

// Enum values for CreatorModeControl
const (
	CreatorModeControlEnabled  CreatorModeControl = "ENABLED"
	CreatorModeControlDisabled CreatorModeControl = "DISABLED"
)

// Values returns all known values for CreatorModeControl. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CreatorModeControl) Values() []CreatorModeControl {
	return []CreatorModeControl{
		"ENABLED",
		"DISABLED",
	}
}

type DataSourceStatus string

// Enum values for DataSourceStatus
const (
	DataSourceStatusPendingCreation DataSourceStatus = "PENDING_CREATION"
	DataSourceStatusCreating        DataSourceStatus = "CREATING"
	DataSourceStatusActive          DataSourceStatus = "ACTIVE"
	DataSourceStatusDeleting        DataSourceStatus = "DELETING"
	DataSourceStatusFailed          DataSourceStatus = "FAILED"
	DataSourceStatusUpdating        DataSourceStatus = "UPDATING"
)

// Values returns all known values for DataSourceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataSourceStatus) Values() []DataSourceStatus {
	return []DataSourceStatus{
		"PENDING_CREATION",
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
		"UPDATING",
	}
}

type DataSourceSyncJobStatus string

// Enum values for DataSourceSyncJobStatus
const (
	DataSourceSyncJobStatusFailed          DataSourceSyncJobStatus = "FAILED"
	DataSourceSyncJobStatusSucceeded       DataSourceSyncJobStatus = "SUCCEEDED"
	DataSourceSyncJobStatusSyncing         DataSourceSyncJobStatus = "SYNCING"
	DataSourceSyncJobStatusIncomplete      DataSourceSyncJobStatus = "INCOMPLETE"
	DataSourceSyncJobStatusStopping        DataSourceSyncJobStatus = "STOPPING"
	DataSourceSyncJobStatusAborted         DataSourceSyncJobStatus = "ABORTED"
	DataSourceSyncJobStatusSyncingIndexing DataSourceSyncJobStatus = "SYNCING_INDEXING"
)

// Values returns all known values for DataSourceSyncJobStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DataSourceSyncJobStatus) Values() []DataSourceSyncJobStatus {
	return []DataSourceSyncJobStatus{
		"FAILED",
		"SUCCEEDED",
		"SYNCING",
		"INCOMPLETE",
		"STOPPING",
		"ABORTED",
		"SYNCING_INDEXING",
	}
}

type DocumentAttributeBoostingLevel string

// Enum values for DocumentAttributeBoostingLevel
const (
	DocumentAttributeBoostingLevelNone     DocumentAttributeBoostingLevel = "NONE"
	DocumentAttributeBoostingLevelLow      DocumentAttributeBoostingLevel = "LOW"
	DocumentAttributeBoostingLevelMedium   DocumentAttributeBoostingLevel = "MEDIUM"
	DocumentAttributeBoostingLevelHigh     DocumentAttributeBoostingLevel = "HIGH"
	DocumentAttributeBoostingLevelVeryHigh DocumentAttributeBoostingLevel = "VERY_HIGH"
)

// Values returns all known values for DocumentAttributeBoostingLevel. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DocumentAttributeBoostingLevel) Values() []DocumentAttributeBoostingLevel {
	return []DocumentAttributeBoostingLevel{
		"NONE",
		"LOW",
		"MEDIUM",
		"HIGH",
		"VERY_HIGH",
	}
}

type DocumentContentOperator string

// Enum values for DocumentContentOperator
const (
	DocumentContentOperatorDelete DocumentContentOperator = "DELETE"
)

// Values returns all known values for DocumentContentOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DocumentContentOperator) Values() []DocumentContentOperator {
	return []DocumentContentOperator{
		"DELETE",
	}
}

type DocumentEnrichmentConditionOperator string

// Enum values for DocumentEnrichmentConditionOperator
const (
	DocumentEnrichmentConditionOperatorGreaterThan         DocumentEnrichmentConditionOperator = "GREATER_THAN"
	DocumentEnrichmentConditionOperatorGreaterThanOrEquals DocumentEnrichmentConditionOperator = "GREATER_THAN_OR_EQUALS"
	DocumentEnrichmentConditionOperatorLessThan            DocumentEnrichmentConditionOperator = "LESS_THAN"
	DocumentEnrichmentConditionOperatorLessThanOrEquals    DocumentEnrichmentConditionOperator = "LESS_THAN_OR_EQUALS"
	DocumentEnrichmentConditionOperatorEquals              DocumentEnrichmentConditionOperator = "EQUALS"
	DocumentEnrichmentConditionOperatorNotEquals           DocumentEnrichmentConditionOperator = "NOT_EQUALS"
	DocumentEnrichmentConditionOperatorContains            DocumentEnrichmentConditionOperator = "CONTAINS"
	DocumentEnrichmentConditionOperatorNotContains         DocumentEnrichmentConditionOperator = "NOT_CONTAINS"
	DocumentEnrichmentConditionOperatorExists              DocumentEnrichmentConditionOperator = "EXISTS"
	DocumentEnrichmentConditionOperatorNotExists           DocumentEnrichmentConditionOperator = "NOT_EXISTS"
	DocumentEnrichmentConditionOperatorBeginsWith          DocumentEnrichmentConditionOperator = "BEGINS_WITH"
)

// Values returns all known values for DocumentEnrichmentConditionOperator. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DocumentEnrichmentConditionOperator) Values() []DocumentEnrichmentConditionOperator {
	return []DocumentEnrichmentConditionOperator{
		"GREATER_THAN",
		"GREATER_THAN_OR_EQUALS",
		"LESS_THAN",
		"LESS_THAN_OR_EQUALS",
		"EQUALS",
		"NOT_EQUALS",
		"CONTAINS",
		"NOT_CONTAINS",
		"EXISTS",
		"NOT_EXISTS",
		"BEGINS_WITH",
	}
}

type DocumentStatus string

// Enum values for DocumentStatus
const (
	DocumentStatusReceived              DocumentStatus = "RECEIVED"
	DocumentStatusProcessing            DocumentStatus = "PROCESSING"
	DocumentStatusIndexed               DocumentStatus = "INDEXED"
	DocumentStatusUpdated               DocumentStatus = "UPDATED"
	DocumentStatusFailed                DocumentStatus = "FAILED"
	DocumentStatusDeleting              DocumentStatus = "DELETING"
	DocumentStatusDeleted               DocumentStatus = "DELETED"
	DocumentStatusDocumentFailedToIndex DocumentStatus = "DOCUMENT_FAILED_TO_INDEX"
)

// Values returns all known values for DocumentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DocumentStatus) Values() []DocumentStatus {
	return []DocumentStatus{
		"RECEIVED",
		"PROCESSING",
		"INDEXED",
		"UPDATED",
		"FAILED",
		"DELETING",
		"DELETED",
		"DOCUMENT_FAILED_TO_INDEX",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeInternalError    ErrorCode = "InternalError"
	ErrorCodeInvalidRequest   ErrorCode = "InvalidRequest"
	ErrorCodeResourceInactive ErrorCode = "ResourceInactive"
	ErrorCodeResourceNotFound ErrorCode = "ResourceNotFound"
)

// Values returns all known values for ErrorCode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"InternalError",
		"InvalidRequest",
		"ResourceInactive",
		"ResourceNotFound",
	}
}

type GroupStatus string

// Enum values for GroupStatus
const (
	GroupStatusFailed     GroupStatus = "FAILED"
	GroupStatusSucceeded  GroupStatus = "SUCCEEDED"
	GroupStatusProcessing GroupStatus = "PROCESSING"
	GroupStatusDeleting   GroupStatus = "DELETING"
	GroupStatusDeleted    GroupStatus = "DELETED"
)

// Values returns all known values for GroupStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GroupStatus) Values() []GroupStatus {
	return []GroupStatus{
		"FAILED",
		"SUCCEEDED",
		"PROCESSING",
		"DELETING",
		"DELETED",
	}
}

type HallucinationReductionControl string

// Enum values for HallucinationReductionControl
const (
	HallucinationReductionControlEnabled  HallucinationReductionControl = "ENABLED"
	HallucinationReductionControlDisabled HallucinationReductionControl = "DISABLED"
)

// Values returns all known values for HallucinationReductionControl. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HallucinationReductionControl) Values() []HallucinationReductionControl {
	return []HallucinationReductionControl{
		"ENABLED",
		"DISABLED",
	}
}

type IdentityType string

// Enum values for IdentityType
const (
	IdentityTypeAwsIamIdpSaml    IdentityType = "AWS_IAM_IDP_SAML"
	IdentityTypeAwsIamIdpOidc    IdentityType = "AWS_IAM_IDP_OIDC"
	IdentityTypeAwsIamIdc        IdentityType = "AWS_IAM_IDC"
	IdentityTypeAwsQuicksightIdp IdentityType = "AWS_QUICKSIGHT_IDP"
	IdentityTypeAnonymous        IdentityType = "ANONYMOUS"
)

// Values returns all known values for IdentityType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IdentityType) Values() []IdentityType {
	return []IdentityType{
		"AWS_IAM_IDP_SAML",
		"AWS_IAM_IDP_OIDC",
		"AWS_IAM_IDC",
		"AWS_QUICKSIGHT_IDP",
		"ANONYMOUS",
	}
}

type ImageExtractionStatus string

// Enum values for ImageExtractionStatus
const (
	ImageExtractionStatusEnabled  ImageExtractionStatus = "ENABLED"
	ImageExtractionStatusDisabled ImageExtractionStatus = "DISABLED"
)

// Values returns all known values for ImageExtractionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ImageExtractionStatus) Values() []ImageExtractionStatus {
	return []ImageExtractionStatus{
		"ENABLED",
		"DISABLED",
	}
}

type IndexStatus string

// Enum values for IndexStatus
const (
	IndexStatusCreating IndexStatus = "CREATING"
	IndexStatusActive   IndexStatus = "ACTIVE"
	IndexStatusDeleting IndexStatus = "DELETING"
	IndexStatusFailed   IndexStatus = "FAILED"
	IndexStatusUpdating IndexStatus = "UPDATING"
)

// Values returns all known values for IndexStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IndexStatus) Values() []IndexStatus {
	return []IndexStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
		"UPDATING",
	}
}

type IndexType string

// Enum values for IndexType
const (
	IndexTypeEnterprise IndexType = "ENTERPRISE"
	IndexTypeStarter    IndexType = "STARTER"
)

// Values returns all known values for IndexType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IndexType) Values() []IndexType {
	return []IndexType{
		"ENTERPRISE",
		"STARTER",
	}
}

type MemberRelation string

// Enum values for MemberRelation
const (
	MemberRelationAnd MemberRelation = "AND"
	MemberRelationOr  MemberRelation = "OR"
)

// Values returns all known values for MemberRelation. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MemberRelation) Values() []MemberRelation {
	return []MemberRelation{
		"AND",
		"OR",
	}
}

type MembershipType string

// Enum values for MembershipType
const (
	MembershipTypeIndex      MembershipType = "INDEX"
	MembershipTypeDatasource MembershipType = "DATASOURCE"
)

// Values returns all known values for MembershipType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MembershipType) Values() []MembershipType {
	return []MembershipType{
		"INDEX",
		"DATASOURCE",
	}
}

type MessageType string

// Enum values for MessageType
const (
	MessageTypeUser   MessageType = "USER"
	MessageTypeSystem MessageType = "SYSTEM"
)

// Values returns all known values for MessageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageType) Values() []MessageType {
	return []MessageType{
		"USER",
		"SYSTEM",
	}
}

type MessageUsefulness string

// Enum values for MessageUsefulness
const (
	MessageUsefulnessUseful    MessageUsefulness = "USEFUL"
	MessageUsefulnessNotUseful MessageUsefulness = "NOT_USEFUL"
)

// Values returns all known values for MessageUsefulness. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageUsefulness) Values() []MessageUsefulness {
	return []MessageUsefulness{
		"USEFUL",
		"NOT_USEFUL",
	}
}

type MessageUsefulnessReason string

// Enum values for MessageUsefulnessReason
const (
	MessageUsefulnessReasonNotFactuallyCorrect       MessageUsefulnessReason = "NOT_FACTUALLY_CORRECT"
	MessageUsefulnessReasonHarmfulOrUnsafe           MessageUsefulnessReason = "HARMFUL_OR_UNSAFE"
	MessageUsefulnessReasonIncorrectOrMissingSources MessageUsefulnessReason = "INCORRECT_OR_MISSING_SOURCES"
	MessageUsefulnessReasonNotHelpful                MessageUsefulnessReason = "NOT_HELPFUL"
	MessageUsefulnessReasonFactuallyCorrect          MessageUsefulnessReason = "FACTUALLY_CORRECT"
	MessageUsefulnessReasonComplete                  MessageUsefulnessReason = "COMPLETE"
	MessageUsefulnessReasonRelevantSources           MessageUsefulnessReason = "RELEVANT_SOURCES"
	MessageUsefulnessReasonHelpful                   MessageUsefulnessReason = "HELPFUL"
	MessageUsefulnessReasonNotBasedOnDocuments       MessageUsefulnessReason = "NOT_BASED_ON_DOCUMENTS"
	MessageUsefulnessReasonNotComplete               MessageUsefulnessReason = "NOT_COMPLETE"
	MessageUsefulnessReasonNotConcise                MessageUsefulnessReason = "NOT_CONCISE"
	MessageUsefulnessReasonOther                     MessageUsefulnessReason = "OTHER"
)

// Values returns all known values for MessageUsefulnessReason. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MessageUsefulnessReason) Values() []MessageUsefulnessReason {
	return []MessageUsefulnessReason{
		"NOT_FACTUALLY_CORRECT",
		"HARMFUL_OR_UNSAFE",
		"INCORRECT_OR_MISSING_SOURCES",
		"NOT_HELPFUL",
		"FACTUALLY_CORRECT",
		"COMPLETE",
		"RELEVANT_SOURCES",
		"HELPFUL",
		"NOT_BASED_ON_DOCUMENTS",
		"NOT_COMPLETE",
		"NOT_CONCISE",
		"OTHER",
	}
}

type NumberAttributeBoostingType string

// Enum values for NumberAttributeBoostingType
const (
	NumberAttributeBoostingTypePrioritizeLargerValues  NumberAttributeBoostingType = "PRIORITIZE_LARGER_VALUES"
	NumberAttributeBoostingTypePrioritizeSmallerValues NumberAttributeBoostingType = "PRIORITIZE_SMALLER_VALUES"
)

// Values returns all known values for NumberAttributeBoostingType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NumberAttributeBoostingType) Values() []NumberAttributeBoostingType {
	return []NumberAttributeBoostingType{
		"PRIORITIZE_LARGER_VALUES",
		"PRIORITIZE_SMALLER_VALUES",
	}
}

type OrchestrationControl string

// Enum values for OrchestrationControl
const (
	OrchestrationControlEnabled  OrchestrationControl = "ENABLED"
	OrchestrationControlDisabled OrchestrationControl = "DISABLED"
)

// Values returns all known values for OrchestrationControl. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OrchestrationControl) Values() []OrchestrationControl {
	return []OrchestrationControl{
		"ENABLED",
		"DISABLED",
	}
}

type PersonalizationControlMode string

// Enum values for PersonalizationControlMode
const (
	PersonalizationControlModeEnabled  PersonalizationControlMode = "ENABLED"
	PersonalizationControlModeDisabled PersonalizationControlMode = "DISABLED"
)

// Values returns all known values for PersonalizationControlMode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PersonalizationControlMode) Values() []PersonalizationControlMode {
	return []PersonalizationControlMode{
		"ENABLED",
		"DISABLED",
	}
}

type PluginBuildStatus string

// Enum values for PluginBuildStatus
const (
	PluginBuildStatusReady            PluginBuildStatus = "READY"
	PluginBuildStatusCreateInProgress PluginBuildStatus = "CREATE_IN_PROGRESS"
	PluginBuildStatusCreateFailed     PluginBuildStatus = "CREATE_FAILED"
	PluginBuildStatusUpdateInProgress PluginBuildStatus = "UPDATE_IN_PROGRESS"
	PluginBuildStatusUpdateFailed     PluginBuildStatus = "UPDATE_FAILED"
	PluginBuildStatusDeleteInProgress PluginBuildStatus = "DELETE_IN_PROGRESS"
	PluginBuildStatusDeleteFailed     PluginBuildStatus = "DELETE_FAILED"
)

// Values returns all known values for PluginBuildStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PluginBuildStatus) Values() []PluginBuildStatus {
	return []PluginBuildStatus{
		"READY",
		"CREATE_IN_PROGRESS",
		"CREATE_FAILED",
		"UPDATE_IN_PROGRESS",
		"UPDATE_FAILED",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
	}
}

type PluginState string

// Enum values for PluginState
const (
	PluginStateEnabled  PluginState = "ENABLED"
	PluginStateDisabled PluginState = "DISABLED"
)

// Values returns all known values for PluginState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PluginState) Values() []PluginState {
	return []PluginState{
		"ENABLED",
		"DISABLED",
	}
}

type PluginType string

// Enum values for PluginType
const (
	PluginTypeServiceNow            PluginType = "SERVICE_NOW"
	PluginTypeSalesforce            PluginType = "SALESFORCE"
	PluginTypeJira                  PluginType = "JIRA"
	PluginTypeZendesk               PluginType = "ZENDESK"
	PluginTypeCustom                PluginType = "CUSTOM"
	PluginTypeQuicksight            PluginType = "QUICKSIGHT"
	PluginTypeServicenowNowPlatform PluginType = "SERVICENOW_NOW_PLATFORM"
	PluginTypeJiraCloud             PluginType = "JIRA_CLOUD"
	PluginTypeSalesforceCrm         PluginType = "SALESFORCE_CRM"
	PluginTypeZendeskSuite          PluginType = "ZENDESK_SUITE"
	PluginTypeAtlassianConfluence   PluginType = "ATLASSIAN_CONFLUENCE"
	PluginTypeGoogleCalendar        PluginType = "GOOGLE_CALENDAR"
	PluginTypeMicrosoftTeams        PluginType = "MICROSOFT_TEAMS"
	PluginTypeMicrosoftExchange     PluginType = "MICROSOFT_EXCHANGE"
	PluginTypePagerdutyAdvance      PluginType = "PAGERDUTY_ADVANCE"
	PluginTypeSmartsheet            PluginType = "SMARTSHEET"
	PluginTypeAsana                 PluginType = "ASANA"
)

// Values returns all known values for PluginType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PluginType) Values() []PluginType {
	return []PluginType{
		"SERVICE_NOW",
		"SALESFORCE",
		"JIRA",
		"ZENDESK",
		"CUSTOM",
		"QUICKSIGHT",
		"SERVICENOW_NOW_PLATFORM",
		"JIRA_CLOUD",
		"SALESFORCE_CRM",
		"ZENDESK_SUITE",
		"ATLASSIAN_CONFLUENCE",
		"GOOGLE_CALENDAR",
		"MICROSOFT_TEAMS",
		"MICROSOFT_EXCHANGE",
		"PAGERDUTY_ADVANCE",
		"SMARTSHEET",
		"ASANA",
	}
}

type PluginTypeCategory string

// Enum values for PluginTypeCategory
const (
	PluginTypeCategoryCrm                 PluginTypeCategory = "Customer relationship management (CRM)"
	PluginTypeCategoryProjectManagement   PluginTypeCategory = "Project management"
	PluginTypeCategoryCommunication       PluginTypeCategory = "Communication"
	PluginTypeCategoryProductivity        PluginTypeCategory = "Productivity"
	PluginTypeCategoryTicketingManagement PluginTypeCategory = "Ticketing and incident management"
)

// Values returns all known values for PluginTypeCategory. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PluginTypeCategory) Values() []PluginTypeCategory {
	return []PluginTypeCategory{
		"Customer relationship management (CRM)",
		"Project management",
		"Communication",
		"Productivity",
		"Ticketing and incident management",
	}
}

type QAppsControlMode string

// Enum values for QAppsControlMode
const (
	QAppsControlModeEnabled  QAppsControlMode = "ENABLED"
	QAppsControlModeDisabled QAppsControlMode = "DISABLED"
)

// Values returns all known values for QAppsControlMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QAppsControlMode) Values() []QAppsControlMode {
	return []QAppsControlMode{
		"ENABLED",
		"DISABLED",
	}
}

type ReadAccessType string

// Enum values for ReadAccessType
const (
	ReadAccessTypeAllow ReadAccessType = "ALLOW"
	ReadAccessTypeDeny  ReadAccessType = "DENY"
)

// Values returns all known values for ReadAccessType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReadAccessType) Values() []ReadAccessType {
	return []ReadAccessType{
		"ALLOW",
		"DENY",
	}
}

type ResponseScope string

// Enum values for ResponseScope
const (
	ResponseScopeEnterpriseContentOnly    ResponseScope = "ENTERPRISE_CONTENT_ONLY"
	ResponseScopeExtendedKnowledgeEnabled ResponseScope = "EXTENDED_KNOWLEDGE_ENABLED"
)

// Values returns all known values for ResponseScope. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResponseScope) Values() []ResponseScope {
	return []ResponseScope{
		"ENTERPRISE_CONTENT_ONLY",
		"EXTENDED_KNOWLEDGE_ENABLED",
	}
}

type RetrieverStatus string

// Enum values for RetrieverStatus
const (
	RetrieverStatusCreating RetrieverStatus = "CREATING"
	RetrieverStatusActive   RetrieverStatus = "ACTIVE"
	RetrieverStatusFailed   RetrieverStatus = "FAILED"
)

// Values returns all known values for RetrieverStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RetrieverStatus) Values() []RetrieverStatus {
	return []RetrieverStatus{
		"CREATING",
		"ACTIVE",
		"FAILED",
	}
}

type RetrieverType string

// Enum values for RetrieverType
const (
	RetrieverTypeNativeIndex RetrieverType = "NATIVE_INDEX"
	RetrieverTypeKendraIndex RetrieverType = "KENDRA_INDEX"
)

// Values returns all known values for RetrieverType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RetrieverType) Values() []RetrieverType {
	return []RetrieverType{
		"NATIVE_INDEX",
		"KENDRA_INDEX",
	}
}

type RuleType string

// Enum values for RuleType
const (
	RuleTypeContentBlockerRule   RuleType = "CONTENT_BLOCKER_RULE"
	RuleTypeContentRetrievalRule RuleType = "CONTENT_RETRIEVAL_RULE"
)

// Values returns all known values for RuleType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RuleType) Values() []RuleType {
	return []RuleType{
		"CONTENT_BLOCKER_RULE",
		"CONTENT_RETRIEVAL_RULE",
	}
}

type ScoreConfidence string

// Enum values for ScoreConfidence
const (
	ScoreConfidenceVeryHigh     ScoreConfidence = "VERY_HIGH"
	ScoreConfidenceHigh         ScoreConfidence = "HIGH"
	ScoreConfidenceMedium       ScoreConfidence = "MEDIUM"
	ScoreConfidenceLow          ScoreConfidence = "LOW"
	ScoreConfidenceNotAvailable ScoreConfidence = "NOT_AVAILABLE"
)

// Values returns all known values for ScoreConfidence. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScoreConfidence) Values() []ScoreConfidence {
	return []ScoreConfidence{
		"VERY_HIGH",
		"HIGH",
		"MEDIUM",
		"LOW",
		"NOT_AVAILABLE",
	}
}

type Status string

// Enum values for Status
const (
	StatusEnabled  Status = "ENABLED"
	StatusDisabled Status = "DISABLED"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"ENABLED",
		"DISABLED",
	}
}

type StringAttributeValueBoostingLevel string

// Enum values for StringAttributeValueBoostingLevel
const (
	StringAttributeValueBoostingLevelLow      StringAttributeValueBoostingLevel = "LOW"
	StringAttributeValueBoostingLevelMedium   StringAttributeValueBoostingLevel = "MEDIUM"
	StringAttributeValueBoostingLevelHigh     StringAttributeValueBoostingLevel = "HIGH"
	StringAttributeValueBoostingLevelVeryHigh StringAttributeValueBoostingLevel = "VERY_HIGH"
)

// Values returns all known values for StringAttributeValueBoostingLevel. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (StringAttributeValueBoostingLevel) Values() []StringAttributeValueBoostingLevel {
	return []StringAttributeValueBoostingLevel{
		"LOW",
		"MEDIUM",
		"HIGH",
		"VERY_HIGH",
	}
}

type SubscriptionType string

// Enum values for SubscriptionType
const (
	SubscriptionTypeQLite     SubscriptionType = "Q_LITE"
	SubscriptionTypeQBusiness SubscriptionType = "Q_BUSINESS"
)

// Values returns all known values for SubscriptionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SubscriptionType) Values() []SubscriptionType {
	return []SubscriptionType{
		"Q_LITE",
		"Q_BUSINESS",
	}
}

type SystemMessageType string

// Enum values for SystemMessageType
const (
	SystemMessageTypeResponse         SystemMessageType = "RESPONSE"
	SystemMessageTypeGroundedResponse SystemMessageType = "GROUNDED_RESPONSE"
)

// Values returns all known values for SystemMessageType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SystemMessageType) Values() []SystemMessageType {
	return []SystemMessageType{
		"RESPONSE",
		"GROUNDED_RESPONSE",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "CANNOT_PARSE"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "FIELD_VALIDATION_FAILED"
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "UNKNOWN_OPERATION"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"CANNOT_PARSE",
		"FIELD_VALIDATION_FAILED",
		"UNKNOWN_OPERATION",
	}
}

type VideoExtractionStatus string

// Enum values for VideoExtractionStatus
const (
	VideoExtractionStatusEnabled  VideoExtractionStatus = "ENABLED"
	VideoExtractionStatusDisabled VideoExtractionStatus = "DISABLED"
)

// Values returns all known values for VideoExtractionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VideoExtractionStatus) Values() []VideoExtractionStatus {
	return []VideoExtractionStatus{
		"ENABLED",
		"DISABLED",
	}
}

type VideoExtractionType string

// Enum values for VideoExtractionType
const (
	VideoExtractionTypeTranscript VideoExtractionType = "TRANSCRIPT"
	VideoExtractionTypeSummary    VideoExtractionType = "SUMMARY"
)

// Values returns all known values for VideoExtractionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VideoExtractionType) Values() []VideoExtractionType {
	return []VideoExtractionType{
		"TRANSCRIPT",
		"SUMMARY",
	}
}

type WebExperienceSamplePromptsControlMode string

// Enum values for WebExperienceSamplePromptsControlMode
const (
	WebExperienceSamplePromptsControlModeEnabled  WebExperienceSamplePromptsControlMode = "ENABLED"
	WebExperienceSamplePromptsControlModeDisabled WebExperienceSamplePromptsControlMode = "DISABLED"
)

// Values returns all known values for WebExperienceSamplePromptsControlMode. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WebExperienceSamplePromptsControlMode) Values() []WebExperienceSamplePromptsControlMode {
	return []WebExperienceSamplePromptsControlMode{
		"ENABLED",
		"DISABLED",
	}
}

type WebExperienceStatus string

// Enum values for WebExperienceStatus
const (
	WebExperienceStatusCreating          WebExperienceStatus = "CREATING"
	WebExperienceStatusActive            WebExperienceStatus = "ACTIVE"
	WebExperienceStatusDeleting          WebExperienceStatus = "DELETING"
	WebExperienceStatusFailed            WebExperienceStatus = "FAILED"
	WebExperienceStatusPendingAuthConfig WebExperienceStatus = "PENDING_AUTH_CONFIG"
)

// Values returns all known values for WebExperienceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (WebExperienceStatus) Values() []WebExperienceStatus {
	return []WebExperienceStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
		"PENDING_AUTH_CONFIG",
	}
}
