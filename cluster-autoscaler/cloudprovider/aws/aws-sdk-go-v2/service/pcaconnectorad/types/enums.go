// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccessRight string

// Enum values for AccessRight
const (
	AccessRightAllow AccessRight = "ALLOW"
	AccessRightDeny  AccessRight = "DENY"
)

// Values returns all known values for AccessRight. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AccessRight) Values() []AccessRight {
	return []AccessRight{
		"ALLOW",
		"DENY",
	}
}

type ApplicationPolicyType string

// Enum values for ApplicationPolicyType
const (
	ApplicationPolicyTypeAllApplicationPolicies                     ApplicationPolicyType = "ALL_APPLICATION_POLICIES"
	ApplicationPolicyTypeAnyPurpose                                 ApplicationPolicyType = "ANY_PURPOSE"
	ApplicationPolicyTypeAttestationIdentityKeyCertificate          ApplicationPolicyType = "ATTESTATION_IDENTITY_KEY_CERTIFICATE"
	ApplicationPolicyTypeCertificateRequestAgent                    ApplicationPolicyType = "CERTIFICATE_REQUEST_AGENT"
	ApplicationPolicyTypeClientAuthentication                       ApplicationPolicyType = "CLIENT_AUTHENTICATION"
	ApplicationPolicyTypeCodeSigning                                ApplicationPolicyType = "CODE_SIGNING"
	ApplicationPolicyTypeCtlUsage                                   ApplicationPolicyType = "CTL_USAGE"
	ApplicationPolicyTypeDigitalRights                              ApplicationPolicyType = "DIGITAL_RIGHTS"
	ApplicationPolicyTypeDirectoryServiceEmailReplication           ApplicationPolicyType = "DIRECTORY_SERVICE_EMAIL_REPLICATION"
	ApplicationPolicyTypeDisallowedList                             ApplicationPolicyType = "DISALLOWED_LIST"
	ApplicationPolicyTypeDnsServerTrust                             ApplicationPolicyType = "DNS_SERVER_TRUST"
	ApplicationPolicyTypeDocumentEncryption                         ApplicationPolicyType = "DOCUMENT_ENCRYPTION"
	ApplicationPolicyTypeDocumentSigning                            ApplicationPolicyType = "DOCUMENT_SIGNING"
	ApplicationPolicyTypeDynamicCodeGenerator                       ApplicationPolicyType = "DYNAMIC_CODE_GENERATOR"
	ApplicationPolicyTypeEarlyLaunchAntimalwareDriver               ApplicationPolicyType = "EARLY_LAUNCH_ANTIMALWARE_DRIVER"
	ApplicationPolicyTypeEmbeddedWindowsSystemComponentVerification ApplicationPolicyType = "EMBEDDED_WINDOWS_SYSTEM_COMPONENT_VERIFICATION"
	ApplicationPolicyTypeEnclave                                    ApplicationPolicyType = "ENCLAVE"
	ApplicationPolicyTypeEncryptingFileSystem                       ApplicationPolicyType = "ENCRYPTING_FILE_SYSTEM"
	ApplicationPolicyTypeEndorsementKeyCertificate                  ApplicationPolicyType = "ENDORSEMENT_KEY_CERTIFICATE"
	ApplicationPolicyTypeFileRecovery                               ApplicationPolicyType = "FILE_RECOVERY"
	ApplicationPolicyTypeHalExtension                               ApplicationPolicyType = "HAL_EXTENSION"
	ApplicationPolicyTypeIpSecurityEndSystem                        ApplicationPolicyType = "IP_SECURITY_END_SYSTEM"
	ApplicationPolicyTypeIpSecurityIkeIntermediate                  ApplicationPolicyType = "IP_SECURITY_IKE_INTERMEDIATE"
	ApplicationPolicyTypeIpSecurityTunnelTermination                ApplicationPolicyType = "IP_SECURITY_TUNNEL_TERMINATION"
	ApplicationPolicyTypeIpSecurityUser                             ApplicationPolicyType = "IP_SECURITY_USER"
	ApplicationPolicyTypeIsolatedUserMode                           ApplicationPolicyType = "ISOLATED_USER_MODE"
	ApplicationPolicyTypeKdcAuthentication                          ApplicationPolicyType = "KDC_AUTHENTICATION"
	ApplicationPolicyTypeKernelModeCodeSigning                      ApplicationPolicyType = "KERNEL_MODE_CODE_SIGNING"
	ApplicationPolicyTypeKeyPackLicenses                            ApplicationPolicyType = "KEY_PACK_LICENSES"
	ApplicationPolicyTypeKeyRecovery                                ApplicationPolicyType = "KEY_RECOVERY"
	ApplicationPolicyTypeKeyRecoveryAgent                           ApplicationPolicyType = "KEY_RECOVERY_AGENT"
	ApplicationPolicyTypeLicenseServerVerification                  ApplicationPolicyType = "LICENSE_SERVER_VERIFICATION"
	ApplicationPolicyTypeLifetimeSigning                            ApplicationPolicyType = "LIFETIME_SIGNING"
	ApplicationPolicyTypeMicrosoftPublisher                         ApplicationPolicyType = "MICROSOFT_PUBLISHER"
	ApplicationPolicyTypeMicrosoftTimeStamping                      ApplicationPolicyType = "MICROSOFT_TIME_STAMPING"
	ApplicationPolicyTypeMicrosoftTrustListSigning                  ApplicationPolicyType = "MICROSOFT_TRUST_LIST_SIGNING"
	ApplicationPolicyTypeOcspSigning                                ApplicationPolicyType = "OCSP_SIGNING"
	ApplicationPolicyTypeOemWindowsSystemComponentVerification      ApplicationPolicyType = "OEM_WINDOWS_SYSTEM_COMPONENT_VERIFICATION"
	ApplicationPolicyTypePlatformCertificate                        ApplicationPolicyType = "PLATFORM_CERTIFICATE"
	ApplicationPolicyTypePreviewBuildSigning                        ApplicationPolicyType = "PREVIEW_BUILD_SIGNING"
	ApplicationPolicyTypePrivateKeyArchival                         ApplicationPolicyType = "PRIVATE_KEY_ARCHIVAL"
	ApplicationPolicyTypeProtectedProcessLightVerification          ApplicationPolicyType = "PROTECTED_PROCESS_LIGHT_VERIFICATION"
	ApplicationPolicyTypeProtectedProcessVerification               ApplicationPolicyType = "PROTECTED_PROCESS_VERIFICATION"
	ApplicationPolicyTypeQualifiedSubordination                     ApplicationPolicyType = "QUALIFIED_SUBORDINATION"
	ApplicationPolicyTypeRevokedListSigner                          ApplicationPolicyType = "REVOKED_LIST_SIGNER"
	ApplicationPolicyTypeRootProgramAutoUpdateCaRevocation          ApplicationPolicyType = "ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION"
	ApplicationPolicyTypeRootProgramAutoUpdateEndRevocation         ApplicationPolicyType = "ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION"
	ApplicationPolicyTypeRootProgramNoOscpFailoverToCrl             ApplicationPolicyType = "ROOT_PROGRAM_NO_OSCP_FAILOVER_TO_CRL"
	ApplicationPolicyTypeRootListSigner                             ApplicationPolicyType = "ROOT_LIST_SIGNER"
	ApplicationPolicyTypeSecureEmail                                ApplicationPolicyType = "SECURE_EMAIL"
	ApplicationPolicyTypeServerAuthentication                       ApplicationPolicyType = "SERVER_AUTHENTICATION"
	ApplicationPolicyTypeSmartCardLogin                             ApplicationPolicyType = "SMART_CARD_LOGIN"
	ApplicationPolicyTypeSpcEncryptedDigestRetryCount               ApplicationPolicyType = "SPC_ENCRYPTED_DIGEST_RETRY_COUNT"
	ApplicationPolicyTypeSpcRelaxedPeMarkerCheck                    ApplicationPolicyType = "SPC_RELAXED_PE_MARKER_CHECK"
	ApplicationPolicyTypeTimeStamping                               ApplicationPolicyType = "TIME_STAMPING"
	ApplicationPolicyTypeWindowsHardwareDriverAttestedVerification  ApplicationPolicyType = "WINDOWS_HARDWARE_DRIVER_ATTESTED_VERIFICATION"
	ApplicationPolicyTypeWindowsHardwareDriverExtendedVerification  ApplicationPolicyType = "WINDOWS_HARDWARE_DRIVER_EXTENDED_VERIFICATION"
	ApplicationPolicyTypeWindowsHardwareDriverVerification          ApplicationPolicyType = "WINDOWS_HARDWARE_DRIVER_VERIFICATION"
	ApplicationPolicyTypeWindowsHelloRecoveryKeyEncryption          ApplicationPolicyType = "WINDOWS_HELLO_RECOVERY_KEY_ENCRYPTION"
	ApplicationPolicyTypeWindowsKitsComponent                       ApplicationPolicyType = "WINDOWS_KITS_COMPONENT"
	ApplicationPolicyTypeWindowsRtVerification                      ApplicationPolicyType = "WINDOWS_RT_VERIFICATION"
	ApplicationPolicyTypeWindowsSoftwareExtensionVerification       ApplicationPolicyType = "WINDOWS_SOFTWARE_EXTENSION_VERIFICATION"
	ApplicationPolicyTypeWindowsStore                               ApplicationPolicyType = "WINDOWS_STORE"
	ApplicationPolicyTypeWindowsSystemComponentVerification         ApplicationPolicyType = "WINDOWS_SYSTEM_COMPONENT_VERIFICATION"
	ApplicationPolicyTypeWindowsTcbComponent                        ApplicationPolicyType = "WINDOWS_TCB_COMPONENT"
	ApplicationPolicyTypeWindowsThirdPartyApplicationComponent      ApplicationPolicyType = "WINDOWS_THIRD_PARTY_APPLICATION_COMPONENT"
	ApplicationPolicyTypeWindowsUpdate                              ApplicationPolicyType = "WINDOWS_UPDATE"
)

// Values returns all known values for ApplicationPolicyType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ApplicationPolicyType) Values() []ApplicationPolicyType {
	return []ApplicationPolicyType{
		"ALL_APPLICATION_POLICIES",
		"ANY_PURPOSE",
		"ATTESTATION_IDENTITY_KEY_CERTIFICATE",
		"CERTIFICATE_REQUEST_AGENT",
		"CLIENT_AUTHENTICATION",
		"CODE_SIGNING",
		"CTL_USAGE",
		"DIGITAL_RIGHTS",
		"DIRECTORY_SERVICE_EMAIL_REPLICATION",
		"DISALLOWED_LIST",
		"DNS_SERVER_TRUST",
		"DOCUMENT_ENCRYPTION",
		"DOCUMENT_SIGNING",
		"DYNAMIC_CODE_GENERATOR",
		"EARLY_LAUNCH_ANTIMALWARE_DRIVER",
		"EMBEDDED_WINDOWS_SYSTEM_COMPONENT_VERIFICATION",
		"ENCLAVE",
		"ENCRYPTING_FILE_SYSTEM",
		"ENDORSEMENT_KEY_CERTIFICATE",
		"FILE_RECOVERY",
		"HAL_EXTENSION",
		"IP_SECURITY_END_SYSTEM",
		"IP_SECURITY_IKE_INTERMEDIATE",
		"IP_SECURITY_TUNNEL_TERMINATION",
		"IP_SECURITY_USER",
		"ISOLATED_USER_MODE",
		"KDC_AUTHENTICATION",
		"KERNEL_MODE_CODE_SIGNING",
		"KEY_PACK_LICENSES",
		"KEY_RECOVERY",
		"KEY_RECOVERY_AGENT",
		"LICENSE_SERVER_VERIFICATION",
		"LIFETIME_SIGNING",
		"MICROSOFT_PUBLISHER",
		"MICROSOFT_TIME_STAMPING",
		"MICROSOFT_TRUST_LIST_SIGNING",
		"OCSP_SIGNING",
		"OEM_WINDOWS_SYSTEM_COMPONENT_VERIFICATION",
		"PLATFORM_CERTIFICATE",
		"PREVIEW_BUILD_SIGNING",
		"PRIVATE_KEY_ARCHIVAL",
		"PROTECTED_PROCESS_LIGHT_VERIFICATION",
		"PROTECTED_PROCESS_VERIFICATION",
		"QUALIFIED_SUBORDINATION",
		"REVOKED_LIST_SIGNER",
		"ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION",
		"ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION",
		"ROOT_PROGRAM_NO_OSCP_FAILOVER_TO_CRL",
		"ROOT_LIST_SIGNER",
		"SECURE_EMAIL",
		"SERVER_AUTHENTICATION",
		"SMART_CARD_LOGIN",
		"SPC_ENCRYPTED_DIGEST_RETRY_COUNT",
		"SPC_RELAXED_PE_MARKER_CHECK",
		"TIME_STAMPING",
		"WINDOWS_HARDWARE_DRIVER_ATTESTED_VERIFICATION",
		"WINDOWS_HARDWARE_DRIVER_EXTENDED_VERIFICATION",
		"WINDOWS_HARDWARE_DRIVER_VERIFICATION",
		"WINDOWS_HELLO_RECOVERY_KEY_ENCRYPTION",
		"WINDOWS_KITS_COMPONENT",
		"WINDOWS_RT_VERIFICATION",
		"WINDOWS_SOFTWARE_EXTENSION_VERIFICATION",
		"WINDOWS_STORE",
		"WINDOWS_SYSTEM_COMPONENT_VERIFICATION",
		"WINDOWS_TCB_COMPONENT",
		"WINDOWS_THIRD_PARTY_APPLICATION_COMPONENT",
		"WINDOWS_UPDATE",
	}
}

type ClientCompatibilityV2 string

// Enum values for ClientCompatibilityV2
const (
	ClientCompatibilityV2WindowsServer2003   ClientCompatibilityV2 = "WINDOWS_SERVER_2003"
	ClientCompatibilityV2WindowsServer2008   ClientCompatibilityV2 = "WINDOWS_SERVER_2008"
	ClientCompatibilityV2WindowsServer2008R2 ClientCompatibilityV2 = "WINDOWS_SERVER_2008_R2"
	ClientCompatibilityV2WindowsServer2012   ClientCompatibilityV2 = "WINDOWS_SERVER_2012"
	ClientCompatibilityV2WindowsServer2012R2 ClientCompatibilityV2 = "WINDOWS_SERVER_2012_R2"
	ClientCompatibilityV2WindowsServer2016   ClientCompatibilityV2 = "WINDOWS_SERVER_2016"
)

// Values returns all known values for ClientCompatibilityV2. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClientCompatibilityV2) Values() []ClientCompatibilityV2 {
	return []ClientCompatibilityV2{
		"WINDOWS_SERVER_2003",
		"WINDOWS_SERVER_2008",
		"WINDOWS_SERVER_2008_R2",
		"WINDOWS_SERVER_2012",
		"WINDOWS_SERVER_2012_R2",
		"WINDOWS_SERVER_2016",
	}
}

type ClientCompatibilityV3 string

// Enum values for ClientCompatibilityV3
const (
	ClientCompatibilityV3WindowsServer2008   ClientCompatibilityV3 = "WINDOWS_SERVER_2008"
	ClientCompatibilityV3WindowsServer2008R2 ClientCompatibilityV3 = "WINDOWS_SERVER_2008_R2"
	ClientCompatibilityV3WindowsServer2012   ClientCompatibilityV3 = "WINDOWS_SERVER_2012"
	ClientCompatibilityV3WindowsServer2012R2 ClientCompatibilityV3 = "WINDOWS_SERVER_2012_R2"
	ClientCompatibilityV3WindowsServer2016   ClientCompatibilityV3 = "WINDOWS_SERVER_2016"
)

// Values returns all known values for ClientCompatibilityV3. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClientCompatibilityV3) Values() []ClientCompatibilityV3 {
	return []ClientCompatibilityV3{
		"WINDOWS_SERVER_2008",
		"WINDOWS_SERVER_2008_R2",
		"WINDOWS_SERVER_2012",
		"WINDOWS_SERVER_2012_R2",
		"WINDOWS_SERVER_2016",
	}
}

type ClientCompatibilityV4 string

// Enum values for ClientCompatibilityV4
const (
	ClientCompatibilityV4WindowsServer2012   ClientCompatibilityV4 = "WINDOWS_SERVER_2012"
	ClientCompatibilityV4WindowsServer2012R2 ClientCompatibilityV4 = "WINDOWS_SERVER_2012_R2"
	ClientCompatibilityV4WindowsServer2016   ClientCompatibilityV4 = "WINDOWS_SERVER_2016"
)

// Values returns all known values for ClientCompatibilityV4. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ClientCompatibilityV4) Values() []ClientCompatibilityV4 {
	return []ClientCompatibilityV4{
		"WINDOWS_SERVER_2012",
		"WINDOWS_SERVER_2012_R2",
		"WINDOWS_SERVER_2016",
	}
}

type ConnectorStatus string

// Enum values for ConnectorStatus
const (
	ConnectorStatusCreating ConnectorStatus = "CREATING"
	ConnectorStatusActive   ConnectorStatus = "ACTIVE"
	ConnectorStatusDeleting ConnectorStatus = "DELETING"
	ConnectorStatusFailed   ConnectorStatus = "FAILED"
)

// Values returns all known values for ConnectorStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectorStatus) Values() []ConnectorStatus {
	return []ConnectorStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
	}
}

type ConnectorStatusReason string

// Enum values for ConnectorStatusReason
const (
	ConnectorStatusReasonCaCertificateRegistrationFailed ConnectorStatusReason = "CA_CERTIFICATE_REGISTRATION_FAILED"
	ConnectorStatusReasonDirectoryAccessDenied           ConnectorStatusReason = "DIRECTORY_ACCESS_DENIED"
	ConnectorStatusReasonInternalFailure                 ConnectorStatusReason = "INTERNAL_FAILURE"
	ConnectorStatusReasonInsufficientFreeAddresses       ConnectorStatusReason = "INSUFFICIENT_FREE_ADDRESSES"
	ConnectorStatusReasonInvalidSubnetIpProtocol         ConnectorStatusReason = "INVALID_SUBNET_IP_PROTOCOL"
	ConnectorStatusReasonPrivatecaAccessDenied           ConnectorStatusReason = "PRIVATECA_ACCESS_DENIED"
	ConnectorStatusReasonPrivatecaResourceNotFound       ConnectorStatusReason = "PRIVATECA_RESOURCE_NOT_FOUND"
	ConnectorStatusReasonSecurityGroupNotInVpc           ConnectorStatusReason = "SECURITY_GROUP_NOT_IN_VPC"
	ConnectorStatusReasonVpcAccessDenied                 ConnectorStatusReason = "VPC_ACCESS_DENIED"
	ConnectorStatusReasonVpcEndpointLimitExceeded        ConnectorStatusReason = "VPC_ENDPOINT_LIMIT_EXCEEDED"
	ConnectorStatusReasonVpcResourceNotFound             ConnectorStatusReason = "VPC_RESOURCE_NOT_FOUND"
)

// Values returns all known values for ConnectorStatusReason. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConnectorStatusReason) Values() []ConnectorStatusReason {
	return []ConnectorStatusReason{
		"CA_CERTIFICATE_REGISTRATION_FAILED",
		"DIRECTORY_ACCESS_DENIED",
		"INTERNAL_FAILURE",
		"INSUFFICIENT_FREE_ADDRESSES",
		"INVALID_SUBNET_IP_PROTOCOL",
		"PRIVATECA_ACCESS_DENIED",
		"PRIVATECA_RESOURCE_NOT_FOUND",
		"SECURITY_GROUP_NOT_IN_VPC",
		"VPC_ACCESS_DENIED",
		"VPC_ENDPOINT_LIMIT_EXCEEDED",
		"VPC_RESOURCE_NOT_FOUND",
	}
}

type DirectoryRegistrationStatus string

// Enum values for DirectoryRegistrationStatus
const (
	DirectoryRegistrationStatusCreating DirectoryRegistrationStatus = "CREATING"
	DirectoryRegistrationStatusActive   DirectoryRegistrationStatus = "ACTIVE"
	DirectoryRegistrationStatusDeleting DirectoryRegistrationStatus = "DELETING"
	DirectoryRegistrationStatusFailed   DirectoryRegistrationStatus = "FAILED"
)

// Values returns all known values for DirectoryRegistrationStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DirectoryRegistrationStatus) Values() []DirectoryRegistrationStatus {
	return []DirectoryRegistrationStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
	}
}

type DirectoryRegistrationStatusReason string

// Enum values for DirectoryRegistrationStatusReason
const (
	DirectoryRegistrationStatusReasonDirectoryAccessDenied     DirectoryRegistrationStatusReason = "DIRECTORY_ACCESS_DENIED"
	DirectoryRegistrationStatusReasonDirectoryResourceNotFound DirectoryRegistrationStatusReason = "DIRECTORY_RESOURCE_NOT_FOUND"
	DirectoryRegistrationStatusReasonDirectoryNotActive        DirectoryRegistrationStatusReason = "DIRECTORY_NOT_ACTIVE"
	DirectoryRegistrationStatusReasonDirectoryNotReachable     DirectoryRegistrationStatusReason = "DIRECTORY_NOT_REACHABLE"
	DirectoryRegistrationStatusReasonDirectoryTypeNotSupported DirectoryRegistrationStatusReason = "DIRECTORY_TYPE_NOT_SUPPORTED"
	DirectoryRegistrationStatusReasonInternalFailure           DirectoryRegistrationStatusReason = "INTERNAL_FAILURE"
)

// Values returns all known values for DirectoryRegistrationStatusReason. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DirectoryRegistrationStatusReason) Values() []DirectoryRegistrationStatusReason {
	return []DirectoryRegistrationStatusReason{
		"DIRECTORY_ACCESS_DENIED",
		"DIRECTORY_RESOURCE_NOT_FOUND",
		"DIRECTORY_NOT_ACTIVE",
		"DIRECTORY_NOT_REACHABLE",
		"DIRECTORY_TYPE_NOT_SUPPORTED",
		"INTERNAL_FAILURE",
	}
}

type HashAlgorithm string

// Enum values for HashAlgorithm
const (
	HashAlgorithmSha256 HashAlgorithm = "SHA256"
	HashAlgorithmSha384 HashAlgorithm = "SHA384"
	HashAlgorithmSha512 HashAlgorithm = "SHA512"
)

// Values returns all known values for HashAlgorithm. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HashAlgorithm) Values() []HashAlgorithm {
	return []HashAlgorithm{
		"SHA256",
		"SHA384",
		"SHA512",
	}
}

type IpAddressType string

// Enum values for IpAddressType
const (
	IpAddressTypeIpv4      IpAddressType = "IPV4"
	IpAddressTypeDualstack IpAddressType = "DUALSTACK"
)

// Values returns all known values for IpAddressType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (IpAddressType) Values() []IpAddressType {
	return []IpAddressType{
		"IPV4",
		"DUALSTACK",
	}
}

type KeySpec string

// Enum values for KeySpec
const (
	KeySpecKeyExchange KeySpec = "KEY_EXCHANGE"
	KeySpecSignature   KeySpec = "SIGNATURE"
)

// Values returns all known values for KeySpec. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KeySpec) Values() []KeySpec {
	return []KeySpec{
		"KEY_EXCHANGE",
		"SIGNATURE",
	}
}

type KeyUsagePropertyType string

// Enum values for KeyUsagePropertyType
const (
	KeyUsagePropertyTypeAll KeyUsagePropertyType = "ALL"
)

// Values returns all known values for KeyUsagePropertyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KeyUsagePropertyType) Values() []KeyUsagePropertyType {
	return []KeyUsagePropertyType{
		"ALL",
	}
}

type PrivateKeyAlgorithm string

// Enum values for PrivateKeyAlgorithm
const (
	PrivateKeyAlgorithmRsa      PrivateKeyAlgorithm = "RSA"
	PrivateKeyAlgorithmEcdhP256 PrivateKeyAlgorithm = "ECDH_P256"
	PrivateKeyAlgorithmEcdhP384 PrivateKeyAlgorithm = "ECDH_P384"
	PrivateKeyAlgorithmEcdhP521 PrivateKeyAlgorithm = "ECDH_P521"
)

// Values returns all known values for PrivateKeyAlgorithm. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PrivateKeyAlgorithm) Values() []PrivateKeyAlgorithm {
	return []PrivateKeyAlgorithm{
		"RSA",
		"ECDH_P256",
		"ECDH_P384",
		"ECDH_P521",
	}
}

type ServicePrincipalNameStatus string

// Enum values for ServicePrincipalNameStatus
const (
	ServicePrincipalNameStatusCreating ServicePrincipalNameStatus = "CREATING"
	ServicePrincipalNameStatusActive   ServicePrincipalNameStatus = "ACTIVE"
	ServicePrincipalNameStatusDeleting ServicePrincipalNameStatus = "DELETING"
	ServicePrincipalNameStatusFailed   ServicePrincipalNameStatus = "FAILED"
)

// Values returns all known values for ServicePrincipalNameStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServicePrincipalNameStatus) Values() []ServicePrincipalNameStatus {
	return []ServicePrincipalNameStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
	}
}

type ServicePrincipalNameStatusReason string

// Enum values for ServicePrincipalNameStatusReason
const (
	ServicePrincipalNameStatusReasonDirectoryAccessDenied        ServicePrincipalNameStatusReason = "DIRECTORY_ACCESS_DENIED"
	ServicePrincipalNameStatusReasonDirectoryNotReachable        ServicePrincipalNameStatusReason = "DIRECTORY_NOT_REACHABLE"
	ServicePrincipalNameStatusReasonDirectoryResourceNotFound    ServicePrincipalNameStatusReason = "DIRECTORY_RESOURCE_NOT_FOUND"
	ServicePrincipalNameStatusReasonSpnExistsOnDifferentAdObject ServicePrincipalNameStatusReason = "SPN_EXISTS_ON_DIFFERENT_AD_OBJECT"
	ServicePrincipalNameStatusReasonSpnLimitExceeded             ServicePrincipalNameStatusReason = "SPN_LIMIT_EXCEEDED"
	ServicePrincipalNameStatusReasonInternalFailure              ServicePrincipalNameStatusReason = "INTERNAL_FAILURE"
)

// Values returns all known values for ServicePrincipalNameStatusReason. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServicePrincipalNameStatusReason) Values() []ServicePrincipalNameStatusReason {
	return []ServicePrincipalNameStatusReason{
		"DIRECTORY_ACCESS_DENIED",
		"DIRECTORY_NOT_REACHABLE",
		"DIRECTORY_RESOURCE_NOT_FOUND",
		"SPN_EXISTS_ON_DIFFERENT_AD_OBJECT",
		"SPN_LIMIT_EXCEEDED",
		"INTERNAL_FAILURE",
	}
}

type TemplateStatus string

// Enum values for TemplateStatus
const (
	TemplateStatusActive   TemplateStatus = "ACTIVE"
	TemplateStatusDeleting TemplateStatus = "DELETING"
)

// Values returns all known values for TemplateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TemplateStatus) Values() []TemplateStatus {
	return []TemplateStatus{
		"ACTIVE",
		"DELETING",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "FIELD_VALIDATION_FAILED"
	ValidationExceptionReasonInvalidCaSubject      ValidationExceptionReason = "INVALID_CA_SUBJECT"
	ValidationExceptionReasonInvalidPermission     ValidationExceptionReason = "INVALID_PERMISSION"
	ValidationExceptionReasonInvalidState          ValidationExceptionReason = "INVALID_STATE"
	ValidationExceptionReasonMismatchedConnector   ValidationExceptionReason = "MISMATCHED_CONNECTOR"
	ValidationExceptionReasonMismatchedVpc         ValidationExceptionReason = "MISMATCHED_VPC"
	ValidationExceptionReasonNoClientToken         ValidationExceptionReason = "NO_CLIENT_TOKEN"
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "UNKNOWN_OPERATION"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "OTHER"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"FIELD_VALIDATION_FAILED",
		"INVALID_CA_SUBJECT",
		"INVALID_PERMISSION",
		"INVALID_STATE",
		"MISMATCHED_CONNECTOR",
		"MISMATCHED_VPC",
		"NO_CLIENT_TOKEN",
		"UNKNOWN_OPERATION",
		"OTHER",
	}
}

type ValidityPeriodType string

// Enum values for ValidityPeriodType
const (
	ValidityPeriodTypeHours  ValidityPeriodType = "HOURS"
	ValidityPeriodTypeDays   ValidityPeriodType = "DAYS"
	ValidityPeriodTypeWeeks  ValidityPeriodType = "WEEKS"
	ValidityPeriodTypeMonths ValidityPeriodType = "MONTHS"
	ValidityPeriodTypeYears  ValidityPeriodType = "YEARS"
)

// Values returns all known values for ValidityPeriodType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidityPeriodType) Values() []ValidityPeriodType {
	return []ValidityPeriodType{
		"HOURS",
		"DAYS",
		"WEEKS",
		"MONTHS",
		"YEARS",
	}
}
