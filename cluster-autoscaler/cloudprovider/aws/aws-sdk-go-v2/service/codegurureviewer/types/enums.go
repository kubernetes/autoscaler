// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AnalysisType string

// Enum values for AnalysisType
const (
	AnalysisTypeSecurity    AnalysisType = "Security"
	AnalysisTypeCodeQuality AnalysisType = "CodeQuality"
)

// Values returns all known values for AnalysisType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalysisType) Values() []AnalysisType {
	return []AnalysisType{
		"Security",
		"CodeQuality",
	}
}

type ConfigFileState string

// Enum values for ConfigFileState
const (
	ConfigFileStatePresent           ConfigFileState = "Present"
	ConfigFileStateAbsent            ConfigFileState = "Absent"
	ConfigFileStatePresentWithErrors ConfigFileState = "PresentWithErrors"
)

// Values returns all known values for ConfigFileState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfigFileState) Values() []ConfigFileState {
	return []ConfigFileState{
		"Present",
		"Absent",
		"PresentWithErrors",
	}
}

type EncryptionOption string

// Enum values for EncryptionOption
const (
	EncryptionOptionAoCmk EncryptionOption = "AWS_OWNED_CMK"
	EncryptionOptionCmCmk EncryptionOption = "CUSTOMER_MANAGED_CMK"
)

// Values returns all known values for EncryptionOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EncryptionOption) Values() []EncryptionOption {
	return []EncryptionOption{
		"AWS_OWNED_CMK",
		"CUSTOMER_MANAGED_CMK",
	}
}

type JobState string

// Enum values for JobState
const (
	JobStateCompleted JobState = "Completed"
	JobStatePending   JobState = "Pending"
	JobStateFailed    JobState = "Failed"
	JobStateDeleting  JobState = "Deleting"
)

// Values returns all known values for JobState. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (JobState) Values() []JobState {
	return []JobState{
		"Completed",
		"Pending",
		"Failed",
		"Deleting",
	}
}

type ProviderType string

// Enum values for ProviderType
const (
	ProviderTypeCodeCommit             ProviderType = "CodeCommit"
	ProviderTypeGitHub                 ProviderType = "GitHub"
	ProviderTypeBitbucket              ProviderType = "Bitbucket"
	ProviderTypeGitHubEnterpriseServer ProviderType = "GitHubEnterpriseServer"
	ProviderTypeS3Bucket               ProviderType = "S3Bucket"
)

// Values returns all known values for ProviderType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProviderType) Values() []ProviderType {
	return []ProviderType{
		"CodeCommit",
		"GitHub",
		"Bitbucket",
		"GitHubEnterpriseServer",
		"S3Bucket",
	}
}

type Reaction string

// Enum values for Reaction
const (
	ReactionThumbsUp   Reaction = "ThumbsUp"
	ReactionThumbsDown Reaction = "ThumbsDown"
)

// Values returns all known values for Reaction. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Reaction) Values() []Reaction {
	return []Reaction{
		"ThumbsUp",
		"ThumbsDown",
	}
}

type RecommendationCategory string

// Enum values for RecommendationCategory
const (
	RecommendationCategoryAwsBestPractices        RecommendationCategory = "AWSBestPractices"
	RecommendationCategoryAwsCloudformationIssues RecommendationCategory = "AWSCloudFormationIssues"
	RecommendationCategoryDuplicateCode           RecommendationCategory = "DuplicateCode"
	RecommendationCategoryCodeMaintenanceIssues   RecommendationCategory = "CodeMaintenanceIssues"
	RecommendationCategoryConcurrencyIssues       RecommendationCategory = "ConcurrencyIssues"
	RecommendationCategoryInputValidations        RecommendationCategory = "InputValidations"
	RecommendationCategoryPythonBestPractices     RecommendationCategory = "PythonBestPractices"
	RecommendationCategoryJavaBestPractices       RecommendationCategory = "JavaBestPractices"
	RecommendationCategoryResourceLeaks           RecommendationCategory = "ResourceLeaks"
	RecommendationCategorySecurityIssues          RecommendationCategory = "SecurityIssues"
	RecommendationCategoryCodeInconsistencies     RecommendationCategory = "CodeInconsistencies"
)

// Values returns all known values for RecommendationCategory. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RecommendationCategory) Values() []RecommendationCategory {
	return []RecommendationCategory{
		"AWSBestPractices",
		"AWSCloudFormationIssues",
		"DuplicateCode",
		"CodeMaintenanceIssues",
		"ConcurrencyIssues",
		"InputValidations",
		"PythonBestPractices",
		"JavaBestPractices",
		"ResourceLeaks",
		"SecurityIssues",
		"CodeInconsistencies",
	}
}

type RepositoryAssociationState string

// Enum values for RepositoryAssociationState
const (
	RepositoryAssociationStateAssociated     RepositoryAssociationState = "Associated"
	RepositoryAssociationStateAssociating    RepositoryAssociationState = "Associating"
	RepositoryAssociationStateFailed         RepositoryAssociationState = "Failed"
	RepositoryAssociationStateDisassociating RepositoryAssociationState = "Disassociating"
	RepositoryAssociationStateDisassociated  RepositoryAssociationState = "Disassociated"
)

// Values returns all known values for RepositoryAssociationState. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RepositoryAssociationState) Values() []RepositoryAssociationState {
	return []RepositoryAssociationState{
		"Associated",
		"Associating",
		"Failed",
		"Disassociating",
		"Disassociated",
	}
}

type Severity string

// Enum values for Severity
const (
	SeverityInfo     Severity = "Info"
	SeverityLow      Severity = "Low"
	SeverityMedium   Severity = "Medium"
	SeverityHigh     Severity = "High"
	SeverityCritical Severity = "Critical"
)

// Values returns all known values for Severity. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Severity) Values() []Severity {
	return []Severity{
		"Info",
		"Low",
		"Medium",
		"High",
		"Critical",
	}
}

type Type string

// Enum values for Type
const (
	TypePullRequest        Type = "PullRequest"
	TypeRepositoryAnalysis Type = "RepositoryAnalysis"
)

// Values returns all known values for Type. Note that this can be expanded in the
// future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Type) Values() []Type {
	return []Type{
		"PullRequest",
		"RepositoryAnalysis",
	}
}

type VendorName string

// Enum values for VendorName
const (
	VendorNameGithub   VendorName = "GitHub"
	VendorNameGitlab   VendorName = "GitLab"
	VendorNameNativeS3 VendorName = "NativeS3"
)

// Values returns all known values for VendorName. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VendorName) Values() []VendorName {
	return []VendorName{
		"GitHub",
		"GitLab",
		"NativeS3",
	}
}
