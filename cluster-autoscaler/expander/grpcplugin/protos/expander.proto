/*
   Copyright 2021 The Kubernetes Authors.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

syntax = "proto3";

package grpcplugin;
import "k8s.io/api/core/v1/generated.proto";
option go_package = "expander/grpcplugin/protos";



// Interface for Expander
service Expander {

  rpc BestOptions (BestOptionsRequest)
    returns (BestOptionsResponse) {}
}

message BestOptionsRequest {
  repeated Option options = 1;
  // key is node id from options
  // Deprecated: Writers cannot set this field in Kubernetes 1.35 and higher, and should set this field and nodeBytesMap. Readers should prefer nodeBytesMap if set.
  map<string, k8s.io.api.core.v1.Node> nodeMap = 2 [deprecated = true];

  // key is node id from options.
  // values are proto-serialized v1.Node objects.
  map<string, bytes> nodeBytesMap = 3;
}
message BestOptionsResponse {
  repeated Option options = 1;
}
message Option {
  // only need the ID of node to uniquely identify the nodeGroup, used in the nodeInfo map.
  string nodeGroupId = 1;
  int32 nodeCount = 2;
  string debug = 3;

  // Deprecated: Writers cannot set this field in Kubernetes 1.35 and higher, and should set this field and podBytes. Readers should prefer podBytes if set.
  repeated k8s.io.api.core.v1.Pod pod = 4 [deprecated = true];

  // proto-serialized v1.Pod object
  repeated bytes podBytes = 5;
}
